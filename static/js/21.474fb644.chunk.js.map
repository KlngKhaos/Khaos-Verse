{"version":3,"sources":["config/constants/gallery/gallery.ts","config/constants/gallery/types.ts","views/Configurator/utils/constant.ts","views/Configurator/components/UI/Loader/index.tsx","components/Modal/Spacer.tsx","components/Modal/ModalActions.tsx","components/Modal/ModalInput.tsx","state/gallery/hooks.ts","views/Configurator/components/THREE/Controls/index.tsx","views/Configurator/store/store.js","views/Configurator/components/ViewerSolo.tsx","views/Configurator/components/THREE/Model/index.tsx","utils/galleryHelpers.ts","views/Configurator/components/BackSelectorSolo.tsx","hooks/useApproveConfirmTransactionToBuyGladiator.ts","views/Gallery/components/QuickStartDropDowns.tsx","views/Gallery/components/QuickStart.tsx","views/Gallery/components/Configurator3DNftModal.tsx","views/Gallery/components/GalleryModelCard/NftCard/Preview.tsx","views/Gallery/components/GalleryModelCard/NftCard/Attributes.tsx","views/Gallery/components/GalleryModelCard/NftCard/Weapons.tsx","views/Gallery/components/GalleryModelCard/NftCard/Abilities.tsx","views/Gallery/components/GalleryModelCard/NftCard/index.tsx","views/Gallery/components/GalleryModelCard/GalleryModelCard.tsx","views/Gallery/components/FilterCard/PriceFilter.tsx","views/Gallery/components/FilterCard/RarityFilter.tsx","views/Gallery/components/FilterCard/AttributesFilter.tsx","views/Gallery/components/FilterCard/WeaponMasteryFilter.tsx","views/Gallery/components/FilterCard/AbilitiesFilter.tsx","views/Gallery/components/FilterCard/index.tsx","views/Gallery/Gallery.tsx","views/PoolTour3D/store/index.js"],"names":["GalleryNfts","name","glTF","glTFPath","glTFScale","x","y","z","glTFAnimationIndex","glTFRotation","Math","PI","glTFPosition","glTFRootNode","bodyElements","Shield_Default_OBJ_0","Object_79","Object_80","Object_81","Object_82","description","rarity","supply","size","sizeMeasure","SizeMeasure","METER","weight","weightMeasure","WeightMeasure","LBS","initialLifeCycle","lifeCycle","LifeCycle","SLAVE","price","periodInMinutes","finalLifeCycle","GLADIATOR","token","NftToken","NRT","minTimeInSeconds","listingType","ListingType","CORE","orderBy","limitSupply","bestTerrain","staminaFillCoast","attributes","strength","endurance","agility","precision","intelligance","willpower","weapons","oneHand","twoHand","shield","ranged","dual","polearms","abilities","leadership","coach","cook","medical","smith","torture","Object_7","M_LRG_BlackKnightmo_Hat_Commando_BlackKnight_0","Object_176","default__0","Object_14","warrior_warrior_0","sword_warrior_0","shield_warrior_0","Plane008_0","NftType","ambientLightProps","intensity","cameraProps","fov","position","pointLightProps","decay","shadowMapSize","controlsProps","maxPolarAngle","minPolarAngle","target","maxDistance","minDistance","BackPaths","Loader","width","height","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","attributeName","type","repeatCount","dur","values","keyTimes","StyledSpacer","styled","div","props","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledTokenInput","input","isWarning","shadows","warning","inset","text","StyledInput","Input","mediaQueries","xs","sm","StyledErrorMessage","Text","ModalInput","max","symbol","onChange","onSelectMax","value","addLiquidityUrl","inputTitle","decimals","t","useTranslation","isBalanceZero","style","justifyContent","pl","fontSize","balance","balanceUnits","parseUnits","formatBigNumber","displayBalance","alignItems","pattern","inputMode","step","min","placeholder","scale","onClick","mr","color","bold","href","external","useGetGallery","account","useWeb3React","dispatch","useAppDispatch","useSelector","state","gallery","isInitialized","isLoading","data","identifiers","Object","keys","useEffect","fetchWalletGalleryNfts","models","nftsInWallet","filter","nft","includes","extend","OrbitControls","Controls","useThree","camera","gl","invalidate","ref","useRef","undefined","current","update","addEventListener","args","domElement","useCountStore","create","set","get","buyFlag","updateBuyFlag","isRecording","updateIsRecording","buyStatus","model","json","image","gif","updateBuyStatus","old","jsonHash","setJsonHash","picHash","setPicHash","clearHashes","setNft","joinBattleNftJSON","updateJoinBattleNFTJSON","home2","capturerOptions","verbose","display","framerate","quality","format","timeLimit","frameLimit","autoSaveTime","workersPath","capturer","CCapture","Model","setModel","setCurName","curSpeed","nodes","animations","showToast","group","scene","actions","useState","THREE","mixer","useStore","savePicToIPFS","blob","FormData","append","metadata","JSON","stringify","axios","post","process","headers","pinata_api_key","pinata_secret_api_key","then","response","IpfsHash","hash","pinataMetadata","pinataContent","pick","merge","external_url","dataForDb","temp","localStorage","getItem","parse","push","setItem","catch","err","saveNFTJSONToIPFS","idle","clipAction","play","forEach","clip","uncacheClip","rotation","quaternion","w","zoom","setSize","setTimeout","reset","render","toBlob","save","stop","useFrame","start","capture","getClientRects","_","delta","positionX","positionY","positionZ","scaleX","scaleY","scaleZ","rotationX","rotationY","rotationZ","dispose","object","isSkinnedMesh","castShadow","geometry","material","skeleton","morphTargetDictionary","morphTargetInfluences","e","stopPropagation","uuid","isMesh","StyledViewer","StyledCanvasWrapper","StyledElementWrapper","StyledElement","ViewerSolo","curName","curBack","home","ShowModel","hideBackground","noCameraControl","useLoader","GLTFLoader","imageURL","ShowElements","backgroundImage","borderWidth","Dome","texture","attach","side","GroundPlane","wrapS","wrapT","repeat","anisotropy","receiveShadow","enableKeys","fallback","isArchivedGalleryNft","inactive","StyledBackSelector","StyledBackImage1","StyledBackImage2","StyledBackImage3","ColorPicker","HexColorPicker","BackSelectorSolo","setBack","setColor","curColor","mb","initialState","approvalState","confirmState","approvalStateSGTU","confirmStateSGTU","reducer","resetColors","removeItem","useApproveConfirmTransaction","onDismiss","onApprove","onConfirm","onApproveSGTU","onConfirmSGTU","onRequiresApproval","onRequiresApprovalSGTU","onSuccess","noop","onSuccessSGTU","onApproveSuccess","onApproveSuccessSGTU","useStore2","setMyGladiators","setSchoolGladiators","setUsersGladiators","useReducer","handlePreApprove","handlePreApproveSGTU","useToast","toastError","toastSuccess","result","isApproving","isApproved","isApprovingFailed","isApprovingSGTU","isApprovingFailedSGTU","isApprovedSGTU","isConfirming","isConfirmed","isConfirmingFailed","isConfirmingSGTU","isConfirmedSGTU","isConfirmedFailedSGTU","handleApprove","a","tx","wait","receipt","status","handleConfirm","tokenId","logs","id","parseInt","customization3DJson","ipfsJson","addGladiatorsToDB","gladiatorAsdded","handlePriorConfirm","handleApproveSGTU","handleConfirmSGTU","topics","handlePriorConfirmSGTU","StyledHistory","card","background","LabelWrapper","ExpandableText","NewFlex","Flex","QuickStartDropDowns","title","isExpanded","setIsExpanded","p","expanded","prev","QuickStart","StyledMain","NewModal","Modal","NewViewerSolo","NewButton","Button","QuickStartPane","isQuickStart","MainModalContent","MainContentViewer","Configurator3DNftModal","history","toastInfo","finalNft","buyType","setBuyType","modal","setModal","setCurColor","setCurBack","setColors","loaded","setLoaded","profileContract","useProfileContract","getUserStatus","setCurrentName","GLTFExporter","content","minimumNrtRequired","toString","minimumNrtRequiredSGTU","nrtContract","useNrt","gladiatorNftContract","useGladiatorNft","callWithGasPrice","useCallWithGasPrice","click","setClick","allowance","address","gte","MaxUint256","Error","buyAction","num","spinnerIcon","spin","minWidth","back","col","anim","variant","marginTop","backgroundColor","borderColor","endIcon","src","alt","marginRight","loading","Container","StyledImage","img","Preview","isOwned","userData","previewImageSrc","previewImage","ipfs","rel","FooterInner","Box","NewCardFooter","CardFooter","IconImage","LabelText","Attributes","handleAttributesFilter","flexDirection","Weapons","Abilities","InfoRow","Header","Grid","attrs","GridPrice","Wrapper","Info","NftCard","canClaim","tokenIds","refresh","onClaim","useHistory","remainingSupply","setRemainingSupply","isOpen","useProfile","profile","walletOwnsNft","ChevronUpIcon","ChevronDownIcon","useModal","onPresentConfigurator3DNftModal","initialCostFormatted","toLocaleString","maximumFractionDigits","initialCostExplained","finalCostFormatted","finalCostExplained","getGladiatorSupply","gladiator","resp","Number","gladiatorSupply","_hex","gladiatorCount","isActive","COMMUNITY","PARTNER","outline","ml","mt","StyledCard","Card","GalleryModelCard","cardBorder","nftModel","removed","cakePrice","isPromotedFarm","isPromoted","PriceFilter","handleMinNRTsQuery","handleMaxNRTsQuery","handleCurrency","minInputRef","maxInputRef","pt","px","Select","options","label","onOptionChange","RarityFilter","handleChangeRarity","clearFilterStates","checked","userSelect","AttributesFilter","handleChangeAttributes","textTransform","WeaponMasteryFilter","handleChangeWeapons","AbilitiesFilter","handleChangeAbilities","FilterCardCard","NewCardHeader","CardHeader","NewHeading","Heading","ControlContainer","FilterContainer","FilterCard","handleChangeQuery","handleSortOptionChange","freshwaterOnly","setFreshwaterOnly","saltwaterOnly","setSaltwaterOnly","handleChangeCharacteristics","useTheme","SearchInput","md","MainCharacter","StyledHeader","PageHeader","Left","Right","GalleryBackground","PageSection","GallerySearch","Gallery","nrtPriceUsd","useNrtBusdPrice","path","useRouteMatch","pathname","useLocation","userDataLoaded","usePriceCakeBusd","query","setQuery","minNRTs","setMinNRTs","maxNRTs","setMaxNRTs","currency","setCurrency","characteristicsInitialState","minWeight","maxWeight","minSize","maxSize","minSupply","maxSupply","characteristics","setCharacteristics","attributeInitialState","minStrength","maxStrength","minEndurance","maxEndurance","minAgility","maxAgility","minPrecision","maxPrecision","minIntelligence","maxIntelligence","minWillPower","maxWillPower","setAttributes","weaponsInitialState","minOneHand","maxOneHand","minTwoHand","maxTwoHand","minShield","maxShield","minRanged","maxRanged","minDual","maxDual","minPolearms","maxPolearms","setWeapons","abilitiesInitialState","minLeadership","maxLeadership","minCoach","maxCoach","minCook","maxCook","minMedical","maxMedical","minSmith","maxSmith","minTorture","maxTorture","setAbilities","rarityInitialState","setRarity","useUserFarmsViewMode","sortOption","setSortOption","useIntersectionObserver","observerRef","isIntersecting","chosenNftModelsLength","useCurrentFarmAuction","isArchived","currentAuction","bidders","connectedBidder","refreshBidders","usePollFarmsWithUserData","useUserFarmStakedOnly","stakedOnly","useUserGalleryFreshwaterOnly","useUserGallerySaltwaterOnly","activeFarms","archivedFarms","stakedOnlyFarms","farm","BigNumber","stakedBalance","isGreaterThan","freshwaterOnlyFarms","saltwaterOnlyFarms","stakedArchivedFarms","galleryList","useCallback","modelsToDisplay","modelsToDisplayWithAPR","console","log","lowercaseQuery","latinise","toLowerCase","galleryPriceFiltering","nrtPriceUsdDisplay","toFixed","galleryCharacteristicsFiltering","galleryAttributesFiltering","galleryWeaponsFiltering","galleryAbilitiesFiltering","galleryRarityFiltering","numberOfFarmsVisible","setNumberOfFarmsVisible","chosenNftModelsMemoized","useMemo","chosenNftModels","fresh","salt","union","nftModels","sortFarms","slice","farmsCurrentlyVisible","as","my","innerProps","margin","index","concaveDivider","dividerPosition","clipFill","light","dark","event","option","test","exact","Loading","showStatics","updateShowStatics","currentStatics","updateCurrentStatics","currentHoverModel","updateCurrentHoverModel","myGladiators","schoolGladiators","usersGladiators","userNftHashes","settingUserNFTHashes","schoolNftHashes","settingSchoolNFTHashes","nftHashes","settingNFTHashes","totalSupplies","setTotalSupplies"],"mappings":"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","file":"static/js/21.474fb644.chunk.js","sourcesContent":["import { GalleryNft, SizeMeasure, WeightMeasure, LifeCycle, NftToken, ListingType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\nconst GalleryNfts: GalleryNft[] = [\n  {\n    name: 'Fuse Warrior',\n    glTF: 'fuse_warrior',\n    glTFPath: '/gallery/fuse_warrior/scene.gltf',\n    glTFScale: {\n      x: 0.05,\n      y: 0.05,\n      z: 0.05\n    },\n    glTFAnimationIndex: 1,\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      Shield_Default_OBJ_0: '/gallery/fuse_warrior/elements/OBJ_0.png',\n      Object_79: '/gallery/fuse_warrior/elements/obj79.png',\n      Object_80: '/gallery/fuse_warrior/elements/obj80.png',\n      Object_81: '/gallery/fuse_warrior/elements/obj81.png',\n      Object_82: '/gallery/fuse_warrior/elements/obj82.png'\n    },\n    description: '',\n    rarity: 1,\n    supply: null,\n    size: 6.05,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2400,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 500,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 2,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 150,\n    attributes: {\n      strength: 4,\n      endurance: 5,\n      agility: 10,\n      precision: 6,\n      intelligance: 7,\n      willpower: 8\n    },\n    weapons: {\n      oneHand: 9,\n      twoHand: 4,\n      shield: 5,\n      ranged: 10,\n      dual: 6,\n      polearms: 7\n    },\n    abilities: {\n      leadership: 8,\n      coach: 9,\n      cook: 4,\n      medical: 5,\n      smith: 10,\n      torture: 6\n    },\n  },\n  {\n    name: 'Ol Veteran',\n    glTF: 'ol_veteran',\n    glTFPath: '/gallery/ol_veteran/scene.gltf',\n    glTFScale: {\n      x: 0.05,\n      y: 0.05,\n      z: 0.05\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      Object_7: '/gallery/ol_veteran/elements/body.png'\n    },\n    description: '',\n    rarity: 1,\n    supply: null,\n    size: 6.05,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2400,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 500,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 2,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 150,\n    attributes: {\n      strength: 4,\n      endurance: 5,\n      agility: 10,\n      precision: 6,\n      intelligance: 7,\n      willpower: 8\n    },\n    weapons: {\n      oneHand: 9,\n      twoHand: 4,\n      shield: 5,\n      ranged: 10,\n      dual: 6,\n      polearms: 7\n    },\n    abilities: {\n      leadership: 8,\n      coach: 9,\n      cook: 4,\n      medical: 5,\n      smith: 10,\n      torture: 6\n    },\n  },\n  {\n    name: 'Knight Battle',\n    glTF: 'knight_battle',\n    glTFPath: '/gallery/knight_battle/scene.gltf',\n    glTFScale: {\n      x: 0.06,\n      y: 0.06,\n      z: 0.06\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: 0,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      M_LRG_BlackKnightmo_Hat_Commando_BlackKnight_0: '/gallery/knight_battle/elements/head.png',\n      Object_176: '/gallery/knight_battle/elements/body.png'\n    },\n    description: '',\n    rarity: 1,\n    supply: null,\n    size: 6.05,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2400,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 500,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 2,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 150,\n    attributes: {\n      strength: 4,\n      endurance: 5,\n      agility: 10,\n      precision: 6,\n      intelligance: 7,\n      willpower: 8\n    },\n    weapons: {\n      oneHand: 9,\n      twoHand: 4,\n      shield: 5,\n      ranged: 10,\n      dual: 6,\n      polearms: 7\n    },\n    abilities: {\n      leadership: 8,\n      coach: 9,\n      cook: 4,\n      medical: 5,\n      smith: 10,\n      torture: 6\n    },\n  },\n  {\n    name: 'Gladiator Aware',\n    glTF: 'gladiator-aware',\n    glTFPath: '/gallery/gladiator-aware/scene.gltf',\n    glTFScale: {\n      x: 0.05,\n      y: 0.05,\n      z: 0.05\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      'Shield_Shield#Mat0_0': '/gallery/gladiator-aware/elements/shield.png',\n      'Weapon_Weapon#Mat0_0': '/gallery/gladiator-aware/elements/weapon.png',\n      'MHead_MHead#Mat0_0': '/gallery/gladiator-aware/elements/head.png',\n      'MArmor_MArmor#Mat0_0': '/gallery/gladiator-aware/elements/armor.png',\n      'MBody_MBody#Mat0_0': '/gallery/gladiator-aware/elements/arms.png',\n      'MBoots_MBoots#Mat0_0': '/gallery/gladiator-aware/elements/boots.png',\n      'MGauntlets_MGauntlets#Mat0_0': '/gallery/gladiator-aware/elements/gauntlets.png'\n    },\n    description: '',\n    rarity: 4,\n    supply: null,\n    size: 6.01,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2200,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 350,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 875\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 5,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 90,\n    attributes: {\n      strength: 7,\n      endurance: 8,\n      agility: 5,\n      precision: 10,\n      intelligance: 9,\n      willpower: 4\n    },\n    weapons: {\n      oneHand: 6,\n      twoHand: 7,\n      shield: 8,\n      ranged: 5,\n      dual: 10,\n      polearms: 9\n    },\n    abilities: {\n      leadership: 4,\n      coach: 6,\n      cook: 7,\n      medical: 8,\n      smith: 5,\n      torture: 10\n    },\n  },\n  {\n    name: 'Heimjil',\n    glTF: 'heimjil',\n    glTFPath: '/gallery/heimjil/scene.gltf',\n    glTFScale: {\n      x: 0.1,\n      y: 0.1,\n      z: 0.1\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    }\n    , glTFRootNode: \"_rootJoint\"\n    , bodyElements: {\n      \"SK_Dual_Blade_Axe5_M_Dual_Blade_Axe5_0\": \"/gallery/heimjil/elements/weapon.png\",\n      \"6\": \"/gallery/heimjil/elements/armor.png\",\n      \"5\": \"/gallery/heimjil/elements/boots.png\",\n      \"0\": \"/gallery/heimjil/elements/body.png\",\n    }\n    , description: \"\"\n    , rarity: 3\n    , supply: null\n    , size: 6.15\n    , sizeMeasure: SizeMeasure.METER\n    , weight: 2300\n    , weightMeasure: WeightMeasure.LBS\n    , initialLifeCycle: {\n\n      lifeCycle: LifeCycle.SLAVE,\n      price: 100,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 8,\n    bestTerrain: 'Desert',\n    staminaFillCoast: 30,\n    attributes: {\n      strength: 10,\n      endurance: 9,\n      agility: 8,\n      precision: 7,\n      intelligance: 6,\n      willpower: 5\n    },\n    weapons: {\n      oneHand: 4,\n      twoHand: 10,\n      shield: 9,\n      ranged: 8,\n      dual: 7,\n      polearms: 6\n    },\n    abilities: {\n      leadership: 5,\n      coach: 4,\n      cook: 10,\n      medical: 9,\n      smith: 8,\n      torture: 7\n    },\n  },\n  {\n    name: 'Hero Warrior',\n    glTF: 'hero_warrior',\n    glTFPath: '/gallery/hero_warrior/scene.gltf',\n    glTFScale: {\n      x: 0.25,\n      y: 0.25,\n      z: 0.25\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      default__0: '/gallery/hero_warrior/elements/body.png'\n    },\n    description: '',\n    rarity: 3,\n    supply: null,\n    size: 6.09,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2100,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 400,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1000\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 4,\n    bestTerrain: 'Mountains',\n    staminaFillCoast: 110,\n    attributes: {\n      strength: 6,\n      endurance: 7,\n      agility: 4,\n      precision: 5,\n      intelligance: 8,\n      willpower: 9\n    },\n    weapons: {\n      oneHand: 10,\n      twoHand: 6,\n      shield: 7,\n      ranged: 4,\n      dual: 5,\n      polearms: 8\n    },\n    abilities: {\n      leadership: 9,\n      coach: 10,\n      cook: 6,\n      medical: 7,\n      smith: 4,\n      torture: 5\n    },\n  },\n  {\n    name: 'Taunt Battlecry',\n    glTF: 'standing_taunt_battlecry',\n    glTFPath: '/gallery/standing_taunt_battlecry/scene.gltf',\n    glTFScale: {\n      x: 0.06,\n      y: 0.06,\n      z: 0.06\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      // Object_9: '/gallery/standing_taunt_battlecry/elements/obj9.png',\n      // Object_10: '/gallery/standing_taunt_battlecry/elements/obj10.png',\n      // Object_12: '/gallery/standing_taunt_battlecry/elements/obj12.png',\n      // Object_14: '/gallery/standing_taunt_battlecry/elements/obj14.png',\n      Object_14: '/gallery/standing_taunt_battlecry/elements/preview.png',\n    },\n    description: '',\n    rarity: 1,\n    supply: null,\n    size: 6.05,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2400,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 500,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 2,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 150,\n    attributes: {\n      strength: 4,\n      endurance: 5,\n      agility: 10,\n      precision: 6,\n      intelligance: 7,\n      willpower: 8\n    },\n    weapons: {\n      oneHand: 9,\n      twoHand: 4,\n      shield: 5,\n      ranged: 10,\n      dual: 6,\n      polearms: 7\n    },\n    abilities: {\n      leadership: 8,\n      coach: 9,\n      cook: 4,\n      medical: 5,\n      smith: 10,\n      torture: 6\n    },\n  },\n  {\n    name: 'Fantasy Warrior',\n    glTF: 'fantasy_warrior',\n    glTFPath: '/gallery/fantasy_warrior/scene.gltf',\n    glTFScale: {\n      x: 4,\n      y: 4,\n      z: 4\n    },\n    glTFRotation: {\n      x: Math.PI / 2,\n      y: -Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      warrior_warrior_0: '/gallery/fantasy_warrior/elements/body.png',\n      sword_warrior_0: '/gallery/fantasy_warrior/elements/weapon.png',\n      shield_warrior_0: '/gallery/fantasy_warrior/elements/shield.png'\n    },\n    description: '',\n    rarity: 6,\n    supply: null,\n    size: 6.14,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2700,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 200,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 500,\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 7,\n    bestTerrain: 'Mountain',\n    staminaFillCoast: 50,\n    attributes: {\n      strength: 9,\n      endurance: 10,\n      agility: 7,\n      precision: 8,\n      intelligance: 4,\n      willpower: 6\n    },\n    weapons: {\n      oneHand: 5,\n      twoHand: 9,\n      shield: 10,\n      ranged: 7,\n      dual: 8,\n      polearms: 4\n    },\n    abilities: {\n      leadership: 6,\n      coach: 5,\n      cook: 9,\n      medical: 10,\n      smith: 7,\n      torture: 8\n    },\n  },\n  {\n    name: 'Third Legion Legionnaire',\n    glTF: 'third_legion_legionnaire',\n    glTFPath: '/gallery/third_legion_legionnaire/scene.gltf',\n    glTFScale: {\n      x: 0.04,\n      y: 0.04,\n      z: 0.04\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: 0,\n      z: Math.PI / 3\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      Plane008_0: '/gallery/third_legion_legionnaire/elements/body.png'\n    },\n    description: '',\n    rarity: 1,\n    supply: null,\n    size: 6.05,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2400,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 500,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 2,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 150,\n    attributes: {\n      strength: 4,\n      endurance: 5,\n      agility: 10,\n      precision: 6,\n      intelligance: 7,\n      willpower: 8\n    },\n    weapons: {\n      oneHand: 9,\n      twoHand: 4,\n      shield: 5,\n      ranged: 10,\n      dual: 6,\n      polearms: 7\n    },\n    abilities: {\n      leadership: 8,\n      coach: 9,\n      cook: 4,\n      medical: 5,\n      smith: 10,\n      torture: 6\n    },\n  },\n]\n\nexport default GalleryNfts\n","export enum SizeMeasure {\n  CM = \"centimeters\",\n  METER = \"meters\"\n}\n\nexport enum WeightMeasure {\n  GRAMS = \"grams\",\n  LBS = \"lbs\",\n  TONS = \"tons\",\n}\n\nexport enum LifeCycle {\n  SLAVE = \"slave\",\n  GLADIATOR = \"gladiator\"\n}\n\nexport type LifeCyclePricing = {\n  lifeCycle: LifeCycle,\n  price: number,\n  periodInMinutes?: number\n}\n\nexport enum NftToken {\n  NRT = \"NRT\",\n  DENA = \"DENA\",\n}\n\nexport enum ListingType {\n  CORE,\n  COMMUNITY,\n  PARTNER\n}\n\nexport interface GltfXyz {\n  x: number\n  y: number\n  z: number\n}\n\nexport type GalleryNft = {\n  name: string\n  orderBy: number\n  description: string\n  glTF: string\n  glTFRootNode?: string\n  glTFPath: string\n  glTFPosition?: GltfXyz\n  glTFScale?: GltfXyz\n  glTFRotation?: GltfXyz\n  glTFAnimationIndex?: number\n  bodyElements: any\n  rarity: number | string\n  supply: number | string\n  size: number | string\n  sizeMeasure: SizeMeasure\n  weight: number | string\n  weightMeasure: WeightMeasure\n  initialLifeCycle: LifeCyclePricing\n  finalLifeCycle: LifeCyclePricing\n  token: NftToken\n  minTimeInSeconds: number | string\n  inactive?: boolean\n  isPromoted?: boolean\n  listingType?: ListingType\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n    ipfs: string\n  }\n  limitSupply: number\n  bestTerrain: string\n  staminaFillCoast: number\n  attributes?: {\n    strength: number\n    endurance: number\n    agility: number\n    precision: number\n    intelligance: number\n    willpower: number\n  }\n  weapons?: {\n    oneHand: number\n    twoHand: number\n    shield: number\n    ranged: number\n    dual: number\n    polearms: number\n  }\n  abilities?: {\n    leadership: number\n    coach: number\n    cook: number\n    medical: number\n    smith: number\n    torture: number\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n","export const ambientLightProps = { intensity: 0.55 };\nexport const cameraProps = { fov: 20, position: [40, 0, 0] };\nexport const pixelRatio = 1;\nexport const pointLightProps = { decay: 2, position: [10, 20, 15], shadowMapSize: 512 };\n\nexport const controlsProps = { maxPolarAngle: 2 *Math.PI, minPolarAngle: 0, target: [0, 0, 0], maxDistance: 130, minDistance: 10 };\n\nexport const modelProps = { position: [0, 1, 8] };\n\nexport const groundProps = { posiiton: [0, 0, 0], rotation: [-Math.PI / 2, 0, 0] };\n\nexport const BackPaths = [\n    \"/images/gallery/arena1.jpg\",\n    \"/images/gallery/arena2.jpg\",\n    \"/images/gallery/arena3.jpg\"\n];","import React from 'react';\nimport { Html } from '@react-three/drei';\n\nconst Loader: () => JSX.Element = () => (\n  <Html>\n    <svg width='100' height='100'>\n      <circle\n        cx='50'\n        cy='50'\n        fill='none'\n        stroke='#262323'\n        strokeWidth='5'\n        r='40'\n        strokeDasharray='164.93361431346415 56.97787143782138'\n      >\n        <animateTransform\n          attributeName='transform'\n          type='rotate'\n          repeatCount='indefinite'\n          dur='1s'\n          values='0 50 50;360 50 50'\n          keyTimes='0;1'\n        />\n      </circle>\n    </svg>\n  </Html>\n);\n\nexport default Loader;\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\nimport Spacer from './Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    display: flex;\n    flex-direction: column !important;\n  }\n  @media (min-width: 480px) and (max-width: 786px) {\n    display: flex;\n    flex-direction: column !important;\n  }\n  @media (min-width: 786px) and (max-width: 1224px) {\n    display: flex;\n    flex-direction: column !important;\n  }\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  width: 100%;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { formatBigNumber } from 'utils/formatBalance'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  decimals?: number\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n  border: none;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  decimals = 18,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n\n    const balanceUnits = parseUnits(balance, decimals)\n    return formatBigNumber(balanceUnits, decimals, decimals)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport GalleryNfts from 'config/constants/gallery/gallery'\nimport { State } from '../types'\nimport { fetchWalletGalleryNfts } from './index'\n\nexport const useGetGallery = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.gallery)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletGalleryNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    data,\n    models: GalleryNfts,\n    nftsInWallet: GalleryNfts.filter((nft) => identifiers.includes(nft.glTF)),\n  }\n}\n","import React, { useEffect, useRef } from 'react';\nimport { extend, useThree, ReactThreeFiber } from '@react-three/fiber';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      orbitControls: ReactThreeFiber.Object3DNode<\n        OrbitControls,\n        typeof OrbitControls\n      >;\n    }\n  }\n}\n\nextend({ OrbitControls });\n\nconst Controls: (props: any) => JSX.Element = (props) => {\n  const { camera, gl, invalidate } = useThree();\n  const ref = useRef<OrbitControls | undefined>(undefined);\n\n  useEffect(() => {\n    ref.current?.update();\n    ref.current?.addEventListener('change', invalidate);\n  });\n\n  return <orbitControls ref={ref} args={[camera, gl.domElement]} {...props} />;\n};\n\nexport default Controls;\n","import create from 'zustand';\n\nexport const useCountStore = create((set, get) => ({\n\tbuyFlag: false,\n\tupdateBuyFlag: (value) =>  {\n\t\tset({ buyFlag: value });\n\t},\n\tisRecording: 0,\n\tupdateIsRecording: (value) => {\n\t\tset({ isRecording: value });\n\t},\n\tbuyStatus: {\n\t\tmodel: true,\n\t\tjson: false,\n\t\timage: false,\n\t\tgif: true,\n\t},\n\tupdateBuyStatus: ( value ) => {\n\t\tconst old = get().buyStatus;\n\t\tset({ buyStatus: { ...old, ...value } });\n\t},\n\tjsonHash: \"\",\n\tsetJsonHash: (value) => {\n\t\tset({jsonHash: value})\n\t},\n\tpicHash: \"\",\n\tsetPicHash: (value) => {\n\t\tset({picHash: value})\n\t},\n\tclearHashes: () => {\n\t\tset({jsonHash: \"\"})\n\t\tset({picHash: \"\"})\n\t},\n\tnft: null,\n\tsetNft: (data) => {\n\t\tset({nft: data})\n\t},\n\tjoinBattleNftJSON: null,\n\tupdateJoinBattleNFTJSON: data => {\n\t\t// console.log(\"function is Callingggggggg\", data)\n\t\tset({joinBattleNftJSON: data})\n\t}\n}))\n\nexport default useCountStore;","import React, { Suspense } from 'react';\nimport { Canvas, useLoader } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three'\nimport styled from 'styled-components'\nimport { GalleryNft } from 'config/constants/gallery/types'\nimport Controls from './THREE/Controls';\nimport Model from './THREE/Model';\nimport Loader from './UI/Loader';\n\nimport {\n    ambientLightProps,\n    cameraProps,\n    controlsProps,\n    pointLightProps,\n    BackPaths\n} from '../utils/constant';\n\n\nlet home2;\n\nconst StyledViewer = styled.div`\n    ${!home2 ? \"80%\" : \"100%\"};\n    padding: 5px;\n    text-align: center;\n`\nconst StyledCanvasWrapper = styled.div`\n    height: ${!home2 ? \"600px\" : \"478px\"};\n    background-color: transparent;\n    width: ${!home2 ? \"100%\" : \"500px\"};\n`\n\nconst StyledElementWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    text-align: center;\n    justify-content: center;\n    overflow: auto;\n`\nconst StyledElement = styled.div`\n    width: 150px;\n    background-size: contain;\n    background-repeat: no-repeat;\n    height: 100px;\n    border: 0px solid #f1416c;\n    margin-top: 10px;\n    margin-left: 15px;\n\n    &:hover {\n        cursor: pointer;\n        border: 5px solid #b84969;\n    }\n`\n\ntype ChildProps = {\n    setModel?: any,\n    nft: any | null,\n    curColor: string,\n    curName: string,\n    setCurName?: (arg0: string) => void,\n    curSpeed: any,\n    curBack: any,\n    colors: any,\n    showToast?: any,\n    home?: any,\n    hideBackground?: any,\n    noCameraControl?: any,\n}\n\nconst ViewerSolo: React.FC<ChildProps> = ({ nft, curName, setCurName, curSpeed, curBack, colors, setModel, showToast, home, hideBackground, noCameraControl }) => {\n    const ShowModel = () => {\n        const model = useLoader(GLTFLoader, nft.glTFPath);\n        const { nodes, animations } = model;\n        React.useEffect(() => {\n            if (home) {\n                home2 = home\n                // console.log(home2);\n            }\n            // eslint-disable-next-line\n        }, [home])\n        return (\n            <Model\n                data={{\n                    'setModel': setModel,\n                    'setColor': () => true,\n                    'setCurName': setCurName,\n                    'curSpeed': curSpeed,\n                    'animations': animations,\n                    'nodes': nodes,\n                    'colors': colors,\n                    'nft': nft,\n                    'showToast': showToast,\n                }}\n            />\n        );\n    }\n    const imageURL = (name) => `url(${nft.bodyElements[name]})`\n    const ShowElements = () => {\n        if (nft.bodyElements)\n            return (\n                <>\n                    {\n                        Object.keys(nft.bodyElements).map((name) => {\n                            return <StyledElement\n                                onClick={() => { setCurName(name) }}\n                                key={name}\n                                style={{ backgroundImage: imageURL(name), borderWidth: name === curName ? 5 : 0 }} />\n                        })\n                    }\n                </>\n            );\n        return null;\n    }\n\n    const Dome = () => {\n        const texture = useLoader(THREE.TextureLoader, BackPaths[curBack])\n        return (\n            <mesh>\n                <sphereBufferGeometry attach=\"geometry\" args={[50, 100, 100]} />\n                <meshBasicMaterial attach=\"material\" map={texture} side={THREE.BackSide} />\n            </mesh>\n        )\n    }\n\n    const GroundPlane = () => {\n        const texture = useLoader(THREE.TextureLoader, '/images/gallery/textures/1.jpg');\n        texture.wrapS = THREE.RepeatWrapping;\n        texture.wrapT = THREE.RepeatWrapping;\n        texture.repeat.set(64, 64);\n        texture.anisotropy = 16;\n\n        return (\n            <mesh receiveShadow rotation={[Math.PI / 2, 0, 0]} position={[0, -4, 0]}>\n                <planeBufferGeometry attach=\"geometry\" args={[500, 500]} />\n                <meshPhongMaterial attach=\"material\" map={texture} side={THREE.DoubleSide} />\n            </mesh>\n        );\n    }\n\n    return (\n        <StyledViewer style={{ width: \"100%\" }}>\n            <StyledCanvasWrapper>\n                <Canvas camera={cameraProps} shadows>\n                    <fog attach=\"fog\" args={[\"white\", 90, 150]} />\n\n                    <ambientLight intensity={ambientLightProps.intensity} />\n                    <pointLight\n                        position={pointLightProps.position}\n                        castShadow\n                        decay={pointLightProps.decay}\n                        shadow-mapSize-height={pointLightProps.shadowMapSize}\n                        shadow-mapSize-width={pointLightProps.shadowMapSize}\n                    />\n                    {!home && <Controls\n                        maxPolarAngle={Math.PI / 2}\n                        minPolarAngle={controlsProps.minPolarAngle}\n                        maxDistance={controlsProps.maxDistance}\n                        minDistance={controlsProps.minDistance}\n                        target={controlsProps.target}\n                        enableKeys\n                    />}\n                    <Suspense fallback={<Loader />}>\n                        {!home && <Dome />}\n                        {!home && <GroundPlane />}\n                        <ShowModel />\n                    </Suspense>\n                </Canvas>\n            </StyledCanvasWrapper>\n            <StyledElementWrapper>\n                {!home && <ShowElements />}\n            </StyledElementWrapper>\n        </StyledViewer>\n    )\n}\n\nexport default ViewerSolo","import React, { useEffect, useRef, useState } from 'react';\nimport { MeshProps, useFrame, useThree } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport useStore from '../../../store/store';\nimport CCapture from 'ccapture.js-npmfixed/src/CCapture';\nimport { pick, merge } from 'lodash';\nimport axios from 'axios';\n\ninterface ModelProps extends MeshProps {\n  data: {\n    setColor: (col: any) => void;\n    setCurName: (name: any) => void;\n    curSpeed: any;\n    nodes: any;\n    colors: any;\n    animations: any;\n    nft?: any;\n    setModel: any;\n    showToast: any;\n  };\n}\n\ninterface actions {\n  current: {\n    idle: {\n      play: () => void,\n      reset: () => void,\n    };\n  };\n}\n\nconst capturerOptions = {\n  verbose: false,\n  display: true,\n  framerate: 24,\n  quality: 99,\n  format: 'gif',\n  timeLimit: 10, // seconds recording.\n  frameLimit: 250, // max no of frames\n  autoSaveTime: 0,\n  workersPath: '/'\n}\n\nvar capturer = new CCapture( capturerOptions );\n\nconst Model: (props: ModelProps) => JSX.Element | null = (props) => {\n  const {\n    data: { setModel, setCurName, curSpeed, nodes, colors, animations, nft, showToast },\n  } = props;\n  const group = useRef()\n\n  const { gl, scene, camera } = useThree()\n\n  const actions: actions = useRef();\n\n  const [mixer] = useState(() => new THREE.AnimationMixer(group));\n\n  const {buyFlag, updateBuyFlag} = useStore(state => state);\n  const buyStatus = useStore( state => state.buyStatus );\n  const updateBuyStatus = useStore( state => state.updateBuyStatus );\n  const setNft = useStore(state => state.setNft)\n  const isRecording = useStore(state => state.isRecording);\n  const updateIsRecording = useStore(state => state.updateIsRecording);\n\n  const {jsonHash, setJsonHash, picHash, setPicHash} = useStore(state => state)\n\n  const exportPNG = () => {\n    camera.position.x = 40;\n    camera.position.y = 2.44;\n    camera.position.z = 2.44;\n\n    camera.rotation.x = -6.16;\n    camera.rotation.y = 1.57;\n    camera.rotation.z = 0;\n\n    camera.quaternion.x = -2.16;\n    camera.quaternion.y = 0.70;\n    camera.quaternion.z = 2.16;\n    camera.quaternion.w = 0.7;\n\n    camera.zoom = 1;\n\n    gl.setSize(1920, 1080, false);\n\n    setTimeout(() => {\n      if( animations.length ) {\n        actions.current = {\n          idle: mixer.clipAction(animations[nft.glTFAnimationIndex || 0], group.current),\n        };\n        actions.current.idle.reset();\n      }\n\n      gl.render(scene, camera);\n\n      gl.domElement.toBlob(\n        function (blob: any) {\n          // console.log(\"going to deploy savePicToIPFS\")\n            savePicToIPFS(blob, 'HDImage');\n\n            // var a = document.createElement(\"a\");\n            // document.body.appendChild(a);\n\n            // var url  = window.URL.createObjectURL(blob);\n\n            // a.href = url;\n            // a.download = 'screenshot';\n            // a.click();\n\n            // window.URL.revokeObjectURL(url);\n        },\n        'image/png',\n        1.0\n      )\n    })\n  }\n\n  const exportGIF = () => {\n    updateIsRecording(isRecording + 1);\n  }\n\n  const saveNFTJSONToIPFS = (hash) => {\n    const pinataApiKey = process.env.REACT_APP_pinataApiKey;\n    const pinataSecretApiKey = process.env.REACT_APP_pinataSecretApiKey;\n    const url = process.env.REACT_APP_pinJSONPostURL;\n// console.log(\"bhaaaaaaaaaaaiiiiiiiiiiii in saveNFTJSONToIPFS\")\n    const data = {\n      pinataMetadata: {\n        name: 'NFT Info JSON',\n      },\n      pinataContent: {\n        attributes: [\n          pick(merge({}, nft, {colors}), ['colors', 'name', 'glTF', 'glTFPath', 'description', 'rarity', 'supply', 'attributes', 'weapons', 'abilities', 'token']),\n        ],\n        name: nft.name || 'NFT Info JSON',\n        description: 'NFT Info JSON',\n        image: `ipfs://${hash}`,\n        external_url: \"https://testnet.gladiators.finance/\", \n      }\n    }\n    const dataForDb = {\n      nft: {\n        ...nft,\n        colors\n      }\n    }\nsetNft(dataForDb)\n    axios.post(url, data, {\n      headers: {\n        pinata_api_key: pinataApiKey,\n        pinata_secret_api_key: pinataSecretApiKey\n      }\n    }).then((response) => {\n      let temp = localStorage.getItem('myNfts') ? JSON.parse( localStorage.getItem('myNfts') ) : [];\n      temp.push( response.data.IpfsHash );\n      localStorage.setItem( 'myNfts', JSON.stringify(temp) );\n      updateBuyStatus({ ...buyStatus, json: true });\n      setJsonHash(response.data.IpfsHash)\n\n    }).catch((err) => {\n      showToast('error', 'Your purchase was not successful at this moment, please try again');\n    })\n  }\n\n  const savePicToIPFS = (blob, name) => {\n    const pinataApiKey : string = (process.env.REACT_APP_pinataApiKey as string);\n    const pinataSecretApiKey : string = (process.env.REACT_APP_pinataSecretApiKey as string);\n    const url : string = (process.env.REACT_APP_pinFilePostURL as string);\n    const data = new FormData();\n    data.append('file', blob);\n    \n    const metadata = JSON.stringify({\n      name: name,\n    });\n    data.append('pinataMetadata', metadata);\n\n    axios.post(url, data, {\n      headers: {\n        'Access-Control-Allow-Origin':'https://localhost:3000',\n        'Content-Type': `multipart/form-data; boundary=`,\n        pinata_api_key: pinataApiKey,\n        pinata_secret_api_key: pinataSecretApiKey\n      }\n    }).then((response) => {\n      if( name === 'HDImage' ){\n        updateBuyStatus({ image: true });\n        setPicHash(response.data.IpfsHash);\n        // console.log(\"going to deploy JSON\")\n        saveNFTJSONToIPFS(response.data.IpfsHash)\n      }\n      // else if( name === 'Gif Image' ){\n      updateBuyStatus({ gif: true });\n      // }\n    }).catch((err) => {\n      showToast('error', 'Your purchase was not successful at this moment, please try again');\n    })\n  }\n\n  useEffect(() => {\n    if( animations.length ) {\n      actions.current = {\n        idle: mixer.clipAction(animations[nft.glTFAnimationIndex || 0], group.current),\n      };\n      actions.current.idle.play();\n    }\n\n    return () => animations.forEach((clip) => mixer.uncacheClip(clip))\n\n  }, [animations, mixer]);\n\n  useEffect(() => {\n    if( buyFlag) {\n      // console.log(\"buyFlagbuyFlagbuyFlag\", buyFlag)\n      const scene = group.current;\n      setModel(scene, animations);\n      exportPNG();\n      updateBuyFlag(false)\n      // exportGIF();\n    }\n  }, [buyFlag]);\n\n  useEffect(() => {\n    if( isRecording === 48 ) {\n      capturer.save((blob) => {\n        savePicToIPFS(blob, 'Gif Image');\n\n        capturer.stop();\n        capturer = new CCapture( capturerOptions );\n      });\n    }\n  }, [ isRecording ])\n\n  useFrame((state) => {\n    if( isRecording === 1 ) {\n      capturer.start();\n    }\n\n    if( isRecording >= 1 ) {\n      state.gl.setSize(480, 320, false);\n      state.gl.render(scene, camera);\n\n      capturer.capture(state.gl.domElement)\n      updateIsRecording(isRecording + 1);\n\n      if( isRecording === 48 ) {\n        updateIsRecording(0);\n        capturer.stop();\n\n        state.gl.setSize(state.gl.domElement.getClientRects()[0].width, state.gl.domElement.getClientRects()[0].height, false);\n      }\n    }\n  });\n\n  useFrame((_, delta) => mixer.update(delta * curSpeed));\n  const positionX = nft.glTFPosition?.x || 0;\n  const positionY = nft.glTFPosition?.y || 0;\n  const positionZ = nft.glTFPosition?.z || 0;\n  \n  const scaleX = nft.glTFScale?.x || 1;\n  const scaleY = nft.glTFScale?.y || 1;\n  const scaleZ = nft.glTFScale?.z || 1;\n\n  const rotationX = nft.glTFRotation?.x || -Math.PI / 2;\n  const rotationY = nft.glTFRotation?.y || 0;\n  const rotationZ = nft.glTFRotation?.z || 0;\n  \n  return (\n    <group position={[positionX, positionY, positionZ]}>\n      <group ref={group} dispose={null} scale={[scaleX, scaleY, scaleZ]}>\n        <group rotation={[rotationX, rotationY, rotationZ]}>\n          <group >\n            { nodes[nft.glTFRootNode || 'Armature_rootJoint'] ? \n              <primitive object={nodes[nft.glTFRootNode || 'Armature_rootJoint']} /> : null\n            }\n            {\n              Object.keys(nodes).map((name) => {\n                // console.log(`isSkin [${nodes[name].isSkinnedMesh}] name [${name}], uuid [${nodes[name].uuid}], color [${colors[name]}]`)\n                return nodes[name].isSkinnedMesh ? (\n                  <skinnedMesh\n                    castShadow\n                    key={nodes[name].uuid}\n                    geometry={nodes[name].geometry}\n                    material={nodes[name].material}\n                    skeleton={nodes[name].skeleton}\n                    morphTargetDictionary={nodes[name].morphTargetDictionary}\n                    morphTargetInfluences={nodes[name].morphTargetInfluences}\n                    material-color={colors[name] ? colors[name] : '#ffffff'}\n                    onClick={(e) => { setCurName(name); e.stopPropagation() }}\n                  />\n                ) : nodes[name].isMesh ? (\n                  <mesh\n                    castShadow\n                    key={nodes[name].uuid}\n                    material={nodes[name].material}\n                    material-color={colors[name] ? colors[name] : '#ffffff'}\n                    onClick={(e) => { setCurName(name); e.stopPropagation() }}\n                  />\n                ) : null;\n              })\n            }\n            </group>\n        </group>\n      </group>\n    </group>\n  );\n};\n\nexport default Model;\n","import { GalleryNft } from 'config/constants/gallery/types'\n\nconst isArchivedGalleryNft = (nft: GalleryNft) => nft.inactive\n\nexport default isArchivedGalleryNft\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { HexColorPicker } from \"react-colorful\";\n\nimport {\n    BackPaths\n} from '../utils/constant';\n\ntype ChildProps = {\n    curBack: any,\n    setBack: (arg0: any) => void,\n    setColor?: (arg0: string) => void,\n    curColor?: string,\n}\n\nconst StyledBackSelector = styled.div`\n        width: 20%;\n        padding: 10px;\n        text-align: center;\n\n        @media (min-width: 320px) and (max-width: 480px) {\n            padding: 0;\n          }\n    \n        @media (min-width: 480px) and (max-width: 786px) {\n            \n          }\n    `\nconst StyledBackImage1 = styled.div`\n    width: 90%;\n    margin-left: 5%;\n    background-image: url(${BackPaths[0]});\n    background-size: cover;\n    height: 130px;\n    margin-bottom: 10px;\n    margin-top: 10px;\n    border: 0px solid #f1416c;\n    border-radius: 10px;\n\n    &:hover {\n        cursor: pointer;\n        border: 5px solid #b84969;\n    }\n    @media (min-width: 320px) and (max-width: 480px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 75px;\n      }\n\n    @media (min-width: 480px) and (max-width: 786px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 100px;\n      }\n      @media (min-width: 786px) and (max-width: 1224px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 150px;\n      }\n`\nconst StyledBackImage2 = styled.div`\n    width: 90%;\n    margin-left: 5%;\n    background-image: url(${BackPaths[1]});\n    background-size: cover;\n    height: 130px;\n    margin-bottom: 10px;\n    border: 0px solid #f1416c;\n    border-radius: 10px;\n\n    &:hover {\n        cursor: pointer;\n        border: 5px solid #b84969;\n        border-width: 5px;\n        height: 75px;\n    }\n\n    @media (min-width: 320px) and (max-width: 480px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 75px;\n      }\n\n    @media (min-width: 480px) and (max-width: 786px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 100px;\n      }\n      @media (min-width: 786px) and (max-width: 1224px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 150px;\n      }\n`\nconst StyledBackImage3 = styled.div`\n    width: 90%;\n    margin-left: 5%;\n    background-image: url(${BackPaths[2]});\n    background-size: cover;\n    height: 130px;\n    border: 0px solid #f1416c;\n    border-radius: 10px;\n    margin-bottom: 10%;\n\n    &:hover {\n        cursor: pointer;\n        border: 5px solid #b84969;\n    }\n\n    @media (min-width: 320px) and (max-width: 480px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 75px;\n      }\n\n    @media (min-width: 480px) and (max-width: 786px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 100px;\n      }\n    @media (min-width: 786px) and (max-width: 1224px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 150px;\n      }\n`\nconst ColorPicker = styled(HexColorPicker)`\n    margin-left: 50%;\n    transform: translate3d(-50%, 0, 0);\n    @media (min-width: 320px) and (max-width: 480px) {\n        width: 65px !important;\n        height: 75px!important;\n      }\n      @media (min-width: 480px) and (max-width: 786px) {\n        width: 100px !important;\n        height: 100px!important;\n      }\n      @media (min-width: 786px) and (max-width: 1224px) {\n        width: 150px !important;\n        height: 150px!important;\n      }\n`\n\nconst BackSelectorSolo: React.FC<ChildProps> = ({ curBack, setBack, setColor, curColor }) => {\n    const { t } = useTranslation()\n    const handleChangeComplete = (color) => {\n        setColor(color);\n    };\n\n    return (\n        <StyledBackSelector>\n            {/* <Text mb=\"10px\" fontSize=\"20px\">\n                { t('Select Background') }\n            </Text> */}\n\n            <StyledBackImage1\n                style={{ borderWidth: curBack === 0 || curBack === '0' ? 5 : 0 }}\n                onClick={() => { setBack(0) }}>\n                {/* first Back */}\n            </StyledBackImage1>\n            <StyledBackImage2\n                style={{ borderWidth: curBack === 1 || curBack === '1' ? 5 : 0 }}\n                onClick={() => { setBack(1) }}>\n                {/* second Back */}\n            </StyledBackImage2>\n            <StyledBackImage3\n                style={{ borderWidth: curBack === 2 || curBack === '2' ? 5 : 0 }}\n                onClick={() => { setBack(2) }}>\n                {/* third Back */}\n            </StyledBackImage3>\n\n            <ColorPicker\n                color={curColor}\n                onChange={handleChangeComplete}\n            />\n            <Text mb=\"10px\" fontSize=\"20px\">\n                {t(curColor)}\n            </Text>\n\n        </StyledBackSelector>\n    )\n}\n\nexport default BackSelectorSolo","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport useStore from '../views/Configurator/store/store';\nimport {addGladiatorsToDB} from \"../state/nftMarket/helpers\"\nimport useStore2 from \"../views/PoolTour3D/store\"\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail' | 'fail2'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'requires_approval_to_user' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt' }\n  | { type: 'approve_error' }\n  | { type: 'approve_error2' }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt' }\n  | { type: 'confirm_error' }\n  | { type: 'confirm_error2' }\n  | { type: 'approve_sending_to_user' }\n  | { type: 'approve_receipt_to_user' }\n  | { type: 'approve_error_to_user' }\n  | { type: 'approve_error2_to_user' }\n  | { type: 'confirm_sending_to_user' }\n  | { type: 'confirm_receipt_to_user' }\n  | { type: 'confirm_error_to_user' }\n  | { type: 'confirm_error2_to_user' }\n  | { type: 'approve_idle' }\n  | { type: 'approve_idle_to_user' }\n\ninterface State {\n  approvalState: LoadingState\n  confirmState: LoadingState\n  approvalStateSGTU: LoadingState\n  confirmStateSGTU: LoadingState\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  confirmState: 'idle',\n  approvalStateSGTU: \"idle\",\n  confirmStateSGTU: \"idle\"\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'requires_approval_to_user':\n      return {\n        ...state,\n        approvalStateSGTU: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_idle':\n      return {\n        ...state,\n        approvalState: 'idle',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n      }\n    case 'approve_error2':\n      return {\n        ...state,\n        approvalState: 'fail2',\n      }\n    case 'approve_sending_to_user':\n      return {\n        ...state,\n        approvalStateSGTU: 'loading',\n      }\n    case 'approve_receipt_to_user':\n      return {\n        ...state,\n        approvalStateSGTU: 'success',\n      }\n    case 'approve_idle_to_user':\n      return {\n        ...state,\n        approvalStateSGTU: 'idle',\n      }\n    case 'approve_error_to_user':\n      return {\n        ...state,\n        approvalStateSGTU: 'fail',\n      }\n    case 'approve_error2_to_user':\n      return {\n        ...state,\n        approvalStateSGTU: 'fail2',\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n      }\n    case 'confirm_error2':\n      return {\n        ...state,\n        confirmState: 'fail2',\n      }\n    case 'confirm_sending_to_user':\n      return {\n        ...state,\n        confirmStateSGTU: 'loading',\n      }\n    case 'confirm_receipt_to_user':\n      return {\n        ...state,\n        confirmStateSGTU: 'success',\n      }\n    case 'confirm_error_to_user':\n      return {\n        ...state,\n        confirmStateSGTU: 'fail',\n      }\n    case 'confirm_error2_to_user':\n      return {\n        ...state,\n        confirmStateSGTU: 'fail2',\n      }\n    default:\n      return state\n  }\n}\n\ninterface OnSuccessProps {\n  state: State\n  receipt: ethers.providers.TransactionReceipt\n}\n\ninterface ApproveConfirmTransaction {\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\n  onApproveSGTU?: () => Promise<ethers.providers.TransactionResponse> // onApproveSendGladiatorToUser\n  onConfirm?: () => Promise<ethers.providers.TransactionResponse>\n  onConfirmSGTU?: () => Promise<ethers.providers.TransactionResponse>  // onConfirmSendGladiatorToUser\n  onRequiresApproval?: () => Promise<boolean>\n  onRequiresApprovalSGTU?: () => Promise<boolean>\n  onSuccess?: ({ state, receipt }: OnSuccessProps) => void\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\n  onSuccessSGTU?: ({ state, receipt }: OnSuccessProps) => void\n  onApproveSuccessSGTU?: ({ state, receipt }: OnSuccessProps) => void\n  onDismiss?: any\n}\n\n\n// const [curColor, setCurColor] = useState(localStorage.getItem('con_curColor') ? localStorage.getItem('con_curColor') : '#ffffff');\n// const [curName, setCurName] = useState(localStorage.getItem('con_curName') ? localStorage.getItem('con_curName') : 'None selected.');\n// const [curSpeed, setCurSpeed] = useState(localStorage.getItem('con_curSpeed') ? localStorage.getItem('con_curSpeed') : 1);\n// const [curBack, setCurBack] = useState(localStorage.getItem('con_curBack') ? localStorage.getItem('con_curBack') : 0);\n// const [colors, setColors] = useState(JSON.parse(localStorage.getItem('con_colors')) ? JSON.parse(localStorage.getItem('con_colors')) : {});\n\nconst resetColors = () => {\n  const resetting= {0:\"#fdfdfd\"}\n  localStorage.removeItem('con_curColor')\n  localStorage.removeItem('con_curName')\n  localStorage.removeItem('con_curSpeed')\n  localStorage.removeItem('con_curBack')\n  localStorage.removeItem('con_colors')\n}\nconst useApproveConfirmTransaction = ({\n  onDismiss,\n  onApprove,\n  onConfirm,\n  onApproveSGTU,\n  onConfirmSGTU,\n  onRequiresApproval,\n  onRequiresApprovalSGTU,\n  onSuccess = noop,\n  onSuccessSGTU = noop,\n  onApproveSuccess = noop,\n  onApproveSuccessSGTU = noop,\n}: ApproveConfirmTransaction) => {\n  const {nft, setNft} = useStore(state => state)\n  const {setMyGladiators, setSchoolGladiators, setUsersGladiators} = useStore2(state => state)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const handlePreApproveSGTU = useRef(onRequiresApprovalSGTU)\n  const { toastError, toastSuccess } = useToast()\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n  useEffect(() => {\n    if (account && handlePreApproveSGTU.current) {\n      handlePreApproveSGTU.current().then((result) => {\n          if (result) {\n          dispatch({ type: 'requires_approval_to_user' })\n        }\n      })\n    }\n  }, [account, handlePreApproveSGTU, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isApprovingFailed: state.approvalState === 'fail',\n\n    isApprovingSGTU: state.approvalStateSGTU === 'loading',\n    isApprovingFailedSGTU: state.approvalStateSGTU === 'fail',\n    isApprovedSGTU: state.approvalStateSGTU === 'success',\n\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    isConfirmingFailed: state.confirmState === \"fail2\",\n\n    isConfirmingSGTU: state.confirmStateSGTU === 'loading',\n    isConfirmedSGTU: state.confirmStateSGTU === 'success',\n    isConfirmedFailedSGTU: state.confirmStateSGTU === 'fail2',\n    handleApprove: async () => {\n      try {\n        dispatch({ type: 'approve_sending' })\n        const tx = await onApprove()\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt' })\n          dispatch({ type: 'approve_receipt_to_user' })\n          toastSuccess(t('success'), t('Gladiator is approved successfully and ready to buy'))\n          //this has to be the last thing to run otherwhise state issues\n          onApproveSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error' })\n        toastError(t('Error'), t('You have rejected the transaction'))\n      }\n    },\n    handleConfirm: async () => {\n      try {\n        dispatch({ type: 'confirm_sending' })\n        const tx = await onConfirm()\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          const tokenId = receipt.logs[receipt.logs.length - 1].data\n          const id = parseInt(tokenId, 16);\n          const data = {\n            tokenId: id,\n            customization3DJson: {},\n            ipfsJson: nft\n          }\n          const gladiatorAsdded = await addGladiatorsToDB(data)\n          // console.log(\"dataaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\", data)\n\n          if(id == gladiatorAsdded.tokenId){\n            setSchoolGladiators(null)\n            setMyGladiators(null)\n            setNft(null)\n            dispatch({ type: 'confirm_receipt' })\n            dispatch({ type: 'approve_idle' })\n            dispatch({ type: 'confirm_error2_to_user' })\n            resetColors()\n            toastSuccess(t('success'), t('Gladiator is Bought successfully and sent to school'))\n            //this has to be the last thing to run otherwhise state issues\n            onSuccess({ state, receipt })\n          }\n        }\n      } catch (error) {\n        // console.log(\"eeeeeerrrrrrrrrrooooooor11111111111\", error)\n        dispatch({ type: 'approve_receipt' })\n        dispatch({ type: 'approve_receipt_to_user' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handlePriorConfirm: async () => {\n        dispatch({ type: 'confirm_sending' })\n    },\n    handleApproveSGTU: async () => {\n      try {\n        dispatch({ type: 'approve_sending_to_user' })\n        const tx = await onApproveSGTU()\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt_to_user' })\n          dispatch({ type: 'approve_receipt' })\n          toastSuccess(t('success'), t('Gladiator is approved successfully and ready to buy'))\n          //this has to be the last thing to run otherwhise state issues\n          onApproveSuccessSGTU({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error_to_user' })\n        toastError(t('Error'), t('You have rejected the transaction' ))\n      }\n    },\n    handleConfirmSGTU: async () => {\n      try {\n        dispatch({ type: 'confirm_sending_to_user' })\n        const tx = await onConfirmSGTU()\n        const receipt = await tx.wait()\n\n        if (receipt.status) {\n          const tokenId = receipt.logs[receipt.logs.length - 1].topics[receipt.logs[receipt.logs.length - 1].topics.length - 1]\n          const id = parseInt(tokenId, 16);\n          const data = {\n            tokenId: id,\n            customization3DJson: {},\n            ipfsJson: nft\n          }\n// console.log(\"dataaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\", data)\n          const gladiatorAsdded = await addGladiatorsToDB(data)\n\n          if(id == gladiatorAsdded.tokenId){\n            setNft(null)\n            setMyGladiators(null)\n            setUsersGladiators(null)\n            dispatch({ type: 'confirm_receipt_to_user' })\n            dispatch({ type: 'approve_idle_to_user' })\n            dispatch({ type: 'confirm_error2' })\n            resetColors()\n            toastSuccess(t('success'), t('Gladiator is Bought successfully and sent to battle'))\n\n            //this has to be the last thing to run otherwhise state issues\n            onSuccessSGTU({ state, receipt })\n          }\n        }\n      } catch (error) {\n        // console.log(\"eeeeeerrrrrrrrrrooooooor222222222\", error)\n\n        dispatch({ type: 'approve_receipt' })\n        dispatch({ type: 'approve_receipt_to_user' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handlePriorConfirmSGTU: async () => {\n        dispatch({ type: 'confirm_sending_to_user' })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import React, { useState } from 'react'\nimport { Flex, Text, ExpandableLabel } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst StyledHistory = styled.div`\n  background-color: ${({ theme }) => theme.card.background};\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\nconst LabelWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px 24px;\n`\nconst ExpandableText = styled.div`\n  color:  #D9AB3A;\n  width: 100%;\n  text-align: left;\n`\nconst NewFlex = styled(Flex)`\n  & > button {\n      width: 100% !important;\n      padding: 0px 0pc !important;\n  }\n`\ninterface QuickStartDropDownsProps {\n    title: string;\n    description: string;\n}\n\nconst QuickStartDropDowns: React.FC<QuickStartDropDownsProps> = ({ title, description }) => {\n    const { t } = useTranslation()\n    const [isExpanded, setIsExpanded] = useState(false)\n\n    return (\n        <StyledHistory>\n            <NewFlex p=\"8px\" alignItems=\"center\" justifyContent=\"space-betwen\" width=\"100%\">\n                <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n                    <ExpandableText>\n                        {title}\n                    </ExpandableText>\n                </ExpandableLabel>\n            </NewFlex>\n            {isExpanded && (\n                <LabelWrapper>\n                    <Text>{description}</Text>\n                </LabelWrapper>\n            )}\n        </StyledHistory>\n    )\n}\n\nexport default QuickStartDropDowns\n","import React from 'react'\nimport styled from 'styled-components'\nimport QuickStartDropDowns from './QuickStartDropDowns'\n\nconst StyledHistory = styled.div`\n  background-color: ${({ theme }) => theme.card.background};\n  display: flex;\n  flex-direction: column;\n//   height: 100%;\n  justify-content: start\n`\n\nconst QuickStart = () => {\n\n    return (\n        <StyledHistory>\n            <QuickStartDropDowns title=\"Personalize Gladiator body\" description=\"Tips how to personilized Gladiator body\" />\n            <QuickStartDropDowns title=\"Personalize Colors\" description=\"Tips how to personilized Gladiator colors\" />\n            <QuickStartDropDowns title=\"Personalize Arena\" description=\"Tips how to personilized Gladiator colors\" />\n            <QuickStartDropDowns title=\"Send to School\" description=\"Tips how to personilized Gladiator colors\" />\n            <QuickStartDropDowns title=\"Gladiator Ready\" description=\"Tips how to personilized Gladiator colors\" />\n            <QuickStartDropDowns title=\"More Help\" description=\"Tips how to personilized Gladiator colors\" />\n        </StyledHistory>\n    )\n}\n\nexport default QuickStart\n","import React, { useState, useEffect } from 'react'\nimport { Button, Modal, AutoRenewIcon, Flex } from '@pancakeswap/uikit'\nimport { ModalActions } from 'components/Modal'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport BackSelectorSolo from 'views/Configurator/components/BackSelectorSolo'\nimport ViewerSolo from 'views/Configurator/components/ViewerSolo'\nimport { GalleryNft } from 'config/constants/gallery/types'\nimport { GLTFExporter } from 'three/examples/jsm/exporters/GLTFExporter'\nimport axios from 'axios'\nimport useToast from 'hooks/useToast'\n\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransactionToBuyGladiator'\nimport { useCake, useGladiatorNft, useNrt } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { parseUnits } from '@ethersproject/units'\nimport pinataSdk from '@pinata/sdk'\nimport useStore from '../../Configurator/store/store'\nimport { MaxUint256 } from '@ethersproject/constants'\nimport { useProfileContract } from 'hooks/useContract'\nimport { addGladiatorsToDB } from \"../../../state/nftMarket/helpers\"\nimport QuickStart from './QuickStart'\n\n\ninterface Configurator3DNftModalProps {\n  nft: GalleryNft\n  onDismiss?: () => void\n  history?: any\n}\n\nconst StyledMain = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  @media (min-width: 320px) and (max-width: 480px) {\n    width: 325px !important;\n    align-items: start;\n  }\n  @media (min-width: 480px) and (max-width: 786px) {\n    width: 86% !important;\n    align-items: start;\n  }\n  @media (min-width: 786px) and (max-width: 1224px) {\n    width: 85% !important;\n  }\n`\nconst NewModal = styled(Modal)`\n  @media (min-width: 320px) and (max-width: 480px) {\n    width: 100%;\n    min-width: 100% !important;\n  }\n  @media (min-width: 480px) and (max-width: 786px) {\n    width: 100%;\n    min-width: 100% !important;\n  }\n  @media (min-width: 786px) and (max-width: 1224px) {\n    width: 100%;\n    min-width: 100% !important;\n  }\n`\nconst NewViewerSolo = styled(ViewerSolo)`\n  @media (min-width: 320px) and (max-width: 480px) {\n    width: 375px !important;\n  }\n`\nconst NewButton = styled(Button)`\n  @media (min-width: 320px) and (max-width: 390px) {\n    height: 75px !important;\n  }\n  @media (min-width: 390px) and (max-width: 425px) {\n    height: 65px !important;\n  }\n  @media (min-width: 425px) and (max-width: 515px) {\n    height: 55px !important;\n  }\n`\nconst QuickStartPane = styled.div<{ isQuickStart: boolean }>`\n  flex: none;\n  overflow: hidden;\n  transition: width 200ms ease-in-out;\n  width: ${({ isQuickStart }) => (isQuickStart ? '330px' : 0)};\n  height: ${({ isQuickStart }) => (isQuickStart ? 'auto' : 0)};\n  margin-left: 20px;\n`\nconst MainModalContent = styled.div`\n  display: flex;\n  flex-direction: row;\n`\nconst MainContentViewer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Configurator3DNftModal: React.FC<Configurator3DNftModalProps> = ({ onDismiss, nft, history }) => {\n\n  localStorage.setItem(\"NFT\", JSON.stringify(nft))\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { toastInfo, toastSuccess, toastError } = useToast()\n  const updateBuyFlag = useStore((state) => state.updateBuyFlag)\n  const buyFlag = useStore((state) => state.buyFlag)\n  const { picHash, jsonHash, clearHashes, nft: finalNft } = useStore((state) => state)\n  const [buyType, setBuyType] = useState<number>(0)\n  const [modal, setModal] = useState(true);\n  // if buyType === 0, it will call handleConfirm\n  // if buyType === 1, it will call handleConfirmSGTU\n  // console.log(\"picHashpicHashpicHashpicHashpicHashpicHashpicHash\", picHash)\n  // console.log(\"jsonHashjsonHashjsonHashjsonHashjsonHashjsonHash\", jsonHash)\n\n  const resetColors = () => {\n    const resetting = { 0: \"#fdfdfd\" }\n    localStorage.removeItem('con_curColor')\n    localStorage.removeItem('con_curName')\n    localStorage.removeItem('con_curSpeed')\n    localStorage.removeItem('con_curBack')\n    localStorage.removeItem('con_colors')\n    setModal(false);\n    setTimeout(() => {\n      setModal(true)\n      localStorage.removeItem(\"NFT\")\n    }, 1000);\n\n  }\n  const buyStatus = useStore((state) => state.buyStatus)\n  const updateBuyStatus = useStore((state) => state.updateBuyStatus)\n\n  const [curColor, setCurColor] = useState(\n    localStorage.getItem('con_curColor') ? localStorage.getItem('con_curColor') : '#ffffff',\n  )\n  const [curName, setCurName] = useState(\n    localStorage.getItem('con_curName') ? localStorage.getItem('con_curName') : 'None selected.',\n  )\n  const [curSpeed, setCurSpeed] = useState(\n    localStorage.getItem('con_curSpeed') ? localStorage.getItem('con_curSpeed') : 1,\n  )\n  const [curBack, setCurBack] = useState(localStorage.getItem('con_curBack') ? localStorage.getItem('con_curBack') : 0)\n  const [colors, setColors] = useState(\n    JSON.parse(localStorage.getItem('con_colors')) ? JSON.parse(localStorage.getItem('con_colors')) : {},\n  )\n  const [loaded, setLoaded] = useState(false)\n\n  const isButtonEnable = buyStatus.model && buyStatus.json && buyStatus.image && buyStatus.gif\n\n  useEffect(() => {\n    if (loaded && buyStatus.model && buyStatus.json && buyStatus.image && buyStatus.gif) {\n      toastSuccess(t('Success!'), t('You have successfully purchased the NFT.'))\n      onDismiss()\n    }\n    setLoaded(true)\n    // eslint-disable-next-line\n  }, [buyStatus])\n\n  const profileContract = useProfileContract()\n  const getUserStatus = async () => {\n    const data = await profileContract.getUserStatus(account)\n    if (!data) {\n      onDismiss()\n      history.push('/create-profile')\n    }\n  }\n\n  useEffect(() => {\n    getUserStatus()\n  }, [])\n  const setCurrentColor = (col) => {\n    setCurColor(col)\n    localStorage.setItem('con_curColor', col)\n\n    const temp = { ...colors }\n    temp[curName] = col\n    setColors(temp)\n    localStorage.setItem('con_colors', JSON.stringify(colors))\n  }\n\n  const setCurrentName = (name) => {\n    setCurName(name)\n    setCurColor(colors[name] ? colors[name] : '#ffffff')\n\n    localStorage.setItem('con_curName', name)\n  }\n\n  const setCurrentBack = (back) => {\n    setCurBack(back)\n    localStorage.setItem('con_curBack', back)\n  }\n\n  const exporter = new GLTFExporter()\n\n  const exportModel = (scene, animation) => {\n    const link = document.createElement('a')\n    link.style.display = 'none'\n    document.body.appendChild(link)\n\n    exporter.parse(\n      scene,\n      (gltf) => {\n        const output = JSON.stringify(gltf, null, 2)\n\n        const blob = new Blob([output], { type: 'text/plain' })\n        const data = new FormData()\n        data.append('file', blob)\n\n        const metadata = JSON.stringify({\n          name: 'GLTF model',\n        })\n        data.append('pinataMetadata', metadata)\n\n        const pinataApiKey = process.env.REACT_APP_pinataApiKey\n        const pinataSecretApiKey = process.env.REACT_APP_pinataSecretApiKey\n        const url = process.env.REACT_APP_pinFilePostURL\n\n        axios\n          .post(url, data, {\n            headers: {\n              'Content-Type': `multipart/form-data; boundary=`,\n              pinata_api_key: pinataApiKey,\n              pinata_secret_api_key: pinataSecretApiKey,\n            },\n          })\n          .then((response) => {\n            updateBuyStatus({ model: true })\n          })\n          .catch((err) => {\n            showToast('error', 'Your purchase was not successful at this moment, please try again')\n            onDismiss()\n          })\n      },\n      { trs: true, forceIndices: true, includeCustomExtensions: true, animations: animation },\n    )\n  }\n\n  const setModel = (scene, anim) => {\n    if (buyFlag) {\n      const model = scene\n      const animation = anim\n\n      // exportModel(model, animation)\n\n      updateBuyFlag(false)\n    }\n  }\n\n  const showToast = (type, content) => {\n    if (type === 'success') {\n      toastSuccess(t('Success!'), t(content))\n    } else if (type === 'error') {\n      toastError(t('Sorry'), t(content))\n    }\n  }\n\n  // Enable and Buy Gladiator\n\n  const minimumNrtRequired = parseUnits(nft.initialLifeCycle.price.toString())\n  const allowance = minimumNrtRequired\n  const minimumNrtRequiredSGTU = parseUnits(nft.finalLifeCycle.price.toString())\n  const allowanceSGTU = minimumNrtRequiredSGTU\n  const nrtContract = useNrt()\n  const gladiatorNftContract = useGladiatorNft()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const [click, setClick] = useState(false)\n\n  const handleClick = () => {\n    setClick(!click)\n  }\n\n  const {\n    isApproving,\n    isApproved,\n    isApprovingFailed,\n\n    handleApprove,\n    isConfirmed,\n    isConfirming,\n    isConfirmingFailed,\n\n    handleConfirm,\n    handlePriorConfirm,\n    isApprovedSGTU,\n    isApprovingSGTU,\n    isApprovingFailedSGTU,\n\n    isConfirmedSGTU,\n    isConfirmingSGTU,\n    isConfirmedFailedSGTU,\n\n    handleApproveSGTU,\n    handleConfirmSGTU,\n    handlePriorConfirmSGTU,\n  } = useApproveConfirmTransaction({\n    onDismiss: onDismiss,\n    onRequiresApproval: async () => {\n      // TODO: Move this to a helper, this check will be probably be used many times\n      try {\n        const response = await nrtContract.allowance(account, gladiatorNftContract.address)\n        // console.log(\"responseeeeeeeeeeeeeeeeeeeeeeeeeeee===================\", response)\n        return response.gte(minimumNrtRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onRequiresApprovalSGTU: async () => {\n      // TODO: Move this to a helper, this check will be probably be used many times\n      try {\n        const response = await nrtContract.allowance(account, gladiatorNftContract.address)\n        return response.gte(minimumNrtRequiredSGTU)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return callWithGasPrice(nrtContract, 'approve', [gladiatorNftContract.address, MaxUint256.toString()])\n    },\n    onApproveSuccess: () => {\n      toastSuccess(t('Enabled'), t('Gladiator is approved successfully and ready to buy'))\n    },\n    onConfirm: async () => {\n      try {\n        // const pinata = pinataSdk(\n        //   process.env.REACT_APP_pinataApiKey,\n        //   process.env.REACT_APP_pinataSecretApiKey,\n        // )\n        // const deployed = await pinata.pinJSONToIPFS({...nft, curColor,  curName, curSpeed, curBack, colors}) //\n        const data = await callWithGasPrice(gladiatorNftContract, 'buyGladiator', [\n          nft.name, // id of gladiator\n          1, // price of gladiator\n          '0x0000000000000000000000000000000000000000', // URI\n          `ipfs://${jsonHash}`,\n        ])\n        // console.log(\"dataaaaaaaaaaaaaaaaaaaaa\", data)\n        return data\n      } catch (error: any) {\n        throw new Error(error)\n      }\n    },\n    onApproveSGTU: () => {\n      return callWithGasPrice(nrtContract, 'approve', [gladiatorNftContract.address, MaxUint256.toString()])\n    },\n    onConfirmSGTU: async () => {\n      try {\n        // const pinata = pinataSdk(\n        //   process.env.REACT_APP_pinataApiKey,\n        //   process.env.REACT_APP_pinataSecretApiKey,\n        // )\n        // const deployed = await pinata.pinJSONToIPFS({...nft, curColor,  curName, curSpeed, curBack, colors})\n        const data = await callWithGasPrice(gladiatorNftContract, 'buyGladiator', [\n          nft.name,\n          2,\n          '0x0000000000000000000000000000000000000000',\n          `ipfs://${jsonHash}`,\n        ])\n        return data\n      } catch (error: any) {\n        throw new Error(error)\n      }\n    },\n    onSuccess: () => {\n      toastSuccess(t('success'), t('Gladiator is Bought successfully and sent to school'))\n    },\n  })\n  const buyAction = (num) => {\n    if (!account) {\n      toastInfo(t('Unable to find wallet'), t('Please connect the wallet first'))\n    } else {\n      setBuyType(num)\n      if (num === 0) {\n        handlePriorConfirm()\n      } else if (num === 1) {\n        handlePriorConfirmSGTU()\n      }\n      updateBuyFlag(true)\n      updateBuyStatus({\n        model: false,\n        json: false,\n        image: false,\n        gif: false,\n      })\n    }\n  }\n  useEffect(() => {\n    if (isConfirmed) {\n      onDismiss()\n      setTimeout(() => {\n        history.push('/school')\n      }, 6000)\n    }\n    if (isConfirmedSGTU) {\n      onDismiss()\n      setTimeout(() => {\n        history.push('/mygladiators')\n      }, 6000)\n    }\n  }, [isConfirmed, isConfirmedSGTU, isApproved, isApprovedSGTU])\n\n  useEffect(() => {\n    if (jsonHash && buyStatus.json) {\n      // console.log(\"jsonHashjsonHashjsonHashjsonHashjsonHash nnnnnnnnnnnnn\", jsonHash)\n      if (buyType === 0) {\n        handleConfirm()\n      } else if (buyType === 1) {\n        handleConfirmSGTU()\n      }\n    }\n  }, [jsonHash])\n\n  useEffect(() => {\n    return () => {\n      clearHashes()\n    }\n  }, [])\n  useEffect(() => { }, [finalNft])\n  const spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n  // console.log(\"curBackcurBackcurBackcurBackcurBackcurBackcurBackcurBack\", curBack)\n\n  useEffect(() => {\n\n    return () => {\n      resetColors()\n    }\n  }, [])\n\n\n  return (<>\n    {modal && <NewModal title={nft.name} onDismiss={onDismiss} minWidth=\"1200px\">\n      <MainModalContent>\n        <MainContentViewer>\n          <StyledMain>\n            <BackSelectorSolo curBack={curBack} setBack={setCurrentBack} curColor={curColor} setColor={setCurrentColor} />\n            <NewViewerSolo\n              setModel={setModel}\n              nft={nft}\n              curColor={curColor}\n              curName={curName}\n              setCurName={(name) => setCurrentName(name)}\n              curSpeed={curSpeed}\n              curBack={curBack}\n              colors={colors}\n              showToast={showToast}\n            />\n          </StyledMain>\n          <Flex justifyContent=\"end\">\n            <Button isLoading={\n              (!isApprovingFailed ? (isApproving || isConfirming ? true : false) : !isApprovingFailed) ||\n              (!isApprovingFailedSGTU ? (isApprovingSGTU || isConfirmingSGTU ? true : false) : !isApprovingFailedSGTU)\n            } variant=\"secondary\" scale=\"sm\" onClick={resetColors} style={{ marginTop: '10px' }}>\n              {t('Reset')}\n            </Button>\n            <div style={{ width: '24px', height: '24px' }}>{ }</div>\n            <Button\n              isLoading={\n                (!isApprovingFailed ? (isApproving || isConfirming ? true : false) : !isApprovingFailed) ||\n                (!isApprovingFailedSGTU ? (isApprovingSGTU || isConfirmingSGTU ? true : false) : !isApprovingFailedSGTU)\n              }\n              variant=\"secondary\"\n              scale=\"sm\"\n              onClick={handleClick}\n              style={{ marginTop: '10px', backgroundColor: 'green', color: 'white', borderColor: 'green' }}\n            >\n              {t('Quick Start')}\n            </Button>\n          </Flex>\n          <ModalActions>\n            {/* buy Action */}\n            {/* <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={ !isButtonEnable }>\n          {t('Close')}\n        </Button>\n        <Button onClick={buyAction} width=\"100%\" disabled={ !isButtonEnable }>\n          { isButtonEnable ? t('Buy') : t('Buying')} */}\n            <NewButton isLoading={\n              (!isApprovingFailed ? (isApproving || isConfirming ? true : false) : !isApprovingFailed) ||\n              (!isApprovingFailedSGTU ? (isApprovingSGTU || isConfirmingSGTU ? true : false) : !isApprovingFailedSGTU)\n            } variant=\"secondary\" onClick={onDismiss} width=\"100%\" style={{ marginTop: '10px' }}>\n              {t('Close')}\n            </NewButton>\n            <NewButton\n              endIcon={!isApprovingFailed ? (isConfirming || isApproving ? spinnerIcon : undefined) : undefined}\n              isLoading={\n                (!isApprovingFailed ? (isApproving || isConfirming ? true : false) : !isApprovingFailed) ||\n                (!isApprovingFailedSGTU ? (isApprovingSGTU || isConfirmingSGTU ? true : false) : !isApprovingFailedSGTU)\n              }\n              onClick={!isApproved ? handleApprove : () => buyAction(0)}\n              width=\"100%\"\n              style={{ marginTop: '10px' }}\n            >\n              <img\n                src=\"/images/gallery/going-to-school.png\"\n                alt=\"Ready for Battle\"\n                width=\"36px\"\n                style={{ marginRight: '5px' }}\n                loading=\"lazy\"\n              />\n              {!isApproved\n                ? t(\n                  `Approve ${nft.initialLifeCycle.price} NRT Gladiator Stays in Battle School, You will be rewarded with DENA while in School`,\n                )\n                : t(\n                  `Buy ${nft.initialLifeCycle.price} NRT Gladiator Stays in Battle School, You will be rewarded with DENA while in School`,\n                )}\n              {/* \n          {!isApproved\n            ? t(\n                `Enable ${nft.initialLifeCycle.price} NRT Gladiator Stays in Battle School, You will be rewarded with DENA while in School`,\n              )\n            : t(\n                `Buy ${nft.initialLifeCycle.price} NRT Gladiator Stays in Battle School, You will be rewarded with DENA while in School`,\n              )} */}\n            </NewButton>\n            <NewButton\n              variant=\"secondary\"\n              endIcon={!isApprovingFailedSGTU ? (isConfirmingSGTU || isApprovingSGTU ? spinnerIcon : undefined) : undefined}\n              isLoading={\n                (!isApprovingFailed ? (isApproving || isConfirming ? true : false) : !isApprovingFailed) ||\n                (!isApprovingFailedSGTU ? (isApprovingSGTU || isConfirmingSGTU ? true : false) : !isApprovingFailedSGTU)\n              }\n              onClick={!isApprovedSGTU ? handleApproveSGTU : () => buyAction(1)}\n              width=\"100%\"\n              style={{ marginTop: '10px', backgroundColor: 'green', color: 'white', borderColor: 'green' }}\n            >\n              <img\n                src=\"/images/gallery/ready-to-battle.png\"\n                alt=\"Ready for Battle\"\n                width=\"36px\"\n                style={{ marginRight: '10px' }}\n              />\n              {!isApprovedSGTU\n                ? t(`Approve ${nft.finalLifeCycle.price} NRT Skip School, Gladiator is ready for battle`)\n                : t(`Buy ${nft.finalLifeCycle.price} NRT Skip School, Gladiator is ready for battle`)}\n            </NewButton>\n          </ModalActions>\n        </MainContentViewer>\n        <QuickStartPane isQuickStart={click}>\n          <QuickStart />\n        </QuickStartPane>\n      </MainModalContent>\n    </NewModal>\n    }\n  </>\n  )\n}\n\nexport default Configurator3DNftModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { GalleryNft } from 'config/constants/gallery/types'\n\ninterface PreviewProps {\n  nft: GalleryNft\n  isOwned?: boolean\n}\n\nconst Container = styled.div`\n  background-color: #000;\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  padding-bottom: 100%;\n`\n\nconst StyledImage = styled.img`\n  transition: opacity 1s linear;\n  object-fit: scale-down;\n  border-radius: 24px 24px 0 0;\n  max-height: 100%;\n  max-width: 100%;\n  width: auto;\n  height: auto;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n`\n\nconst Preview: React.FC<PreviewProps> = ({ nft, isOwned = false }) => {\n  const { glTF, name, userData } = nft\n  const previewImageSrc = `/gallery/${glTF}/preview.png`\n\n  const previewImage = <StyledImage src={previewImageSrc} alt={name} />\n\n  return (\n    <Container>\n      {isOwned ? (\n        <a href={userData.ipfs} target=\"_blank\" rel=\"noreferrer noopener\">\n          {/* {previewImage} */}\n        </a>\n      ) : (\n        previewImage\n      )}\n    </Container>\n  )\n}\n\nexport default Preview\n","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\nimport { GalleryNft } from 'config/constants/gallery/types'\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\nconst LabelWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px 0px;\n`\nconst ExpandableText = styled.div`\n  color:  #D9AB3A;\n`\nconst NewCardFooter = styled(CardFooter)`\n//   border-top: none !important;\n`\nconst IconImage = styled.div`\n  width: 24px;\n  margin-right: 8px;\n`\nconst LabelText = styled.div`\n  display: flex;\n`\n\ninterface AttributesProps {\n    handleAttributesFilter?: (e: React.ChangeEvent<HTMLInputElement>) => void\n    attributes: GalleryNft[\"attributes\"]\n}\n\nconst Attributes: React.FC<AttributesProps> = ({ handleAttributesFilter, attributes }) => {\n    const [isExpanded, setIsExpanded] = useState(false)\n    const { t } = useTranslation()\n    const minInputRef = useRef<HTMLInputElement | null>(null)\n    const maxInputRef = useRef<HTMLInputElement | null>(null)\n    // const { topLeaderboard, status } = auction\n\n    // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n\n    return (\n        <NewCardFooter p=\"0\">\n            {isExpanded && (\n                <FooterInner>\n                    <Flex p=\"24px\" flexDirection=\"column\">\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/strength.png\" alt=\"strength\" />\n                                </IconImage>\n                                <Text>{t('Strength')}</Text>\n                            </LabelText>\n                            <Text>{attributes.strength}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/endurance.png\" alt=\"Endurance\" />\n                                </IconImage>\n                                <Text>{t('Endurance')}</Text>\n                            </LabelText>\n                            <Text>{attributes.endurance}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/agility.png\" alt=\"Agility\" />\n                                </IconImage>\n                                <Text>{t('Agility')}</Text>\n                            </LabelText>\n                            <Text>{attributes.agility}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/precision.png\" alt=\"Precision\" />\n                                </IconImage>\n                                <Text>{t('Precision')}</Text>\n                            </LabelText>\n                            <Text>{attributes.precision}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/intelligence.png\" alt=\"Intelligance\" />\n                                </IconImage>\n                                <Text>{t('Intelligance')}</Text>\n                            </LabelText>\n                            <Text>{attributes.intelligance}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/willpower.png\" alt=\"Willpower\" />\n                                </IconImage>\n                                <Text>{t('Willpower')}</Text>\n                            </LabelText>\n                            <Text>{attributes.willpower}</Text>\n                        </LabelWrapper>\n                    </Flex>\n                </FooterInner>\n            )}\n            <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n                <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n                    <ExpandableText>\n                        {isExpanded ? t('Hide Attributes') : t('Attributes')}\n                    </ExpandableText>\n                </ExpandableLabel>\n            </Flex>\n        </NewCardFooter>\n    )\n}\n\nexport default Attributes","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\nimport { GalleryNft } from 'config/constants/gallery/types'\n\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\nconst LabelWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px 0px;\n`\nconst ExpandableText = styled.div`\n  color:  #D9AB3A;\n`\nconst NewCardFooter = styled(CardFooter)`\n//   border-top: none !important;\n`\nconst IconImage = styled.div`\n  width: 24px;\n  margin-right: 8px;\n`\nconst LabelText = styled.div`\n  display: flex;\n`\n\ninterface WeaponsProps {\n    handleAttributesFilter?: (e: React.ChangeEvent<HTMLInputElement>) => void\n    attributes: GalleryNft[\"weapons\"]\n}\n\nconst Weapons: React.FC<WeaponsProps> = ({ handleAttributesFilter, attributes }) => {\n    const [isExpanded, setIsExpanded] = useState(false)\n    const { t } = useTranslation()\n    const minInputRef = useRef<HTMLInputElement | null>(null)\n    const maxInputRef = useRef<HTMLInputElement | null>(null)\n    // const { topLeaderboard, status } = auction\n\n    // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n\n    return (\n        <NewCardFooter p=\"0\">\n            {isExpanded && (\n                <FooterInner>\n                    <Flex p=\"24px\" flexDirection=\"column\">\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/one-handed.png\" alt=\"One-hand\" />\n                                </IconImage>\n                                <Text>{t('One-hand')}</Text>\n                            </LabelText>\n                            <Text>{attributes.oneHand}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/two-handed.png\" alt=\"Two-hand\" />\n                                </IconImage>\n                                <Text>{t('Two-hand')}</Text>\n                            </LabelText>\n                            <Text>{attributes.twoHand}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/shield.png\" alt=\"Shield\" />\n                                </IconImage>\n                                <Text>{t('Shield')}</Text>\n                            </LabelText>\n                            <Text>{attributes.shield}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/ranged.png\" alt=\"Ranged\" />\n                                </IconImage>\n                                <Text>{t('Ranged')}</Text>\n                            </LabelText>\n                            <Text>{attributes.ranged}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/dual.png\" alt=\"Dual\" />\n                                </IconImage>\n                                <Text>{t('Dual')}</Text>\n                            </LabelText>\n                            <Text>{attributes.dual}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/polearms.png\" alt=\"Polearms\" />\n                                </IconImage>\n                                <Text>{t('Polearms')}</Text>\n                            </LabelText>\n                            <Text>{attributes.polearms}</Text>\n                        </LabelWrapper>\n                    </Flex>\n                </FooterInner>\n            )}\n            <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n                <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n                    <ExpandableText>\n                        {isExpanded ? t('Hide Weapons') : t('Weapons')}\n                    </ExpandableText>\n                </ExpandableLabel>\n            </Flex>\n        </NewCardFooter>\n    )\n}\n\nexport default Weapons","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\nimport { GalleryNft } from 'config/constants/gallery/types'\n\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\nconst LabelWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px 0px;\n`\nconst ExpandableText = styled.div`\n  color:  #D9AB3A;\n`\nconst NewCardFooter = styled(CardFooter)`\n//   border-top: none !important;\n`\nconst IconImage = styled.div`\n  width: 24px;\n  margin-right: 8px;\n`\nconst LabelText = styled.div`\n  display: flex;\n`\n\ninterface AbilitiesProps {\n    handleAttributesFilter?: (e: React.ChangeEvent<HTMLInputElement>) => void\n    attributes: GalleryNft[\"abilities\"]\n}\n\nconst Abilities: React.FC<AbilitiesProps> = ({ handleAttributesFilter, attributes }) => {\n    const [isExpanded, setIsExpanded] = useState(false)\n    const { t } = useTranslation()\n    const minInputRef = useRef<HTMLInputElement | null>(null)\n    const maxInputRef = useRef<HTMLInputElement | null>(null)\n    // const { topLeaderboard, status } = auction\n\n    // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n\n    return (\n        <NewCardFooter p=\"0\">\n            {isExpanded && (\n                <FooterInner>\n                    <Flex p=\"24px\" flexDirection=\"column\">\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/leadership.png\" alt=\"Leadership\" />\n                                </IconImage>\n                                <Text>{t('Leadership')}</Text>\n                            </LabelText>\n                            <Text>{attributes.leadership}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/coach.png\" alt=\"Coach\" />\n                                </IconImage>\n                                <Text>{t('Coach')}</Text>\n                            </LabelText>\n                            <Text>{attributes.coach}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/cook.png\" alt=\"Cook\" />\n                                </IconImage>\n                                <Text>{t('Cook')}</Text>\n                            </LabelText>\n                            <Text>{attributes.cook}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/medical.png\" alt=\"Medical\" />\n                                </IconImage>\n                                <Text>{t('Medical')}</Text>\n                            </LabelText>\n                            <Text>{attributes.medical}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/smith.png\" alt=\"Smith\" />\n                                </IconImage>\n                                <Text>{t('Smith')}</Text>\n                            </LabelText>\n                            <Text>{attributes.smith}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/torture.png\" alt=\"Torture\" />\n                                </IconImage>\n                                <Text>{t('Torture')}</Text>\n                            </LabelText>\n                            <Text>{attributes.torture}</Text>\n                        </LabelWrapper>\n                    </Flex>\n                </FooterInner>\n            )}\n            <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n                <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n                    <ExpandableText>\n                        {isExpanded ? t('Hide Abilities') : t('Abilities')}\n                    </ExpandableText>\n                </ExpandableLabel>\n            </Flex>\n        </NewCardFooter>\n    )\n}\n\nexport default Abilities","import React, { Suspense, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport { ethers } from 'ethers'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  Skeleton,\n  Text,\n  Button,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  useTooltip,\n  CardFooter,\n  useModal,\n  Box,\n  Flex,\n  ArrowForwardIcon,\n} from '@pancakeswap/uikit'\nimport { CommunityTag, CoreTag, PartnerTag } from 'components/Tags'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { GalleryNft, ListingType } from 'config/constants/gallery/types'\nimport Loader from 'views/Configurator/components/UI/Loader'\nimport { useGladiatorNft } from 'hooks/useContract'\nimport { parseUnits } from '@ethersproject/units'\n\n// import InfoRow from '../InfoRow'\n// import TransferNftModal from '../TransferNftModal'\n// import ClaimNftModal from '../ClaimNftModal'\n// import View3DNftModal from '../../View3DNftModal'\nimport Configurator3DNftModal from '../../Configurator3DNftModal'\n// import LifeCycleModal from './LifeCycleModal'\n\nimport DetailsSection from './DetailsSection'\nimport Preview from './Preview'\nimport Attributes from './Attributes'\nimport Weapons from './Weapons'\nimport Abilities from './Abilities'\nimport { useHistory } from 'react-router-dom'\n\nexport interface NftCardProps {\n  nft: GalleryNft\n  canClaim?: boolean\n  tokenIds?: number[]\n  onClaim?: () => Promise<ethers.providers.TransactionResponse>\n  refresh: () => void\n}\n\nconst InfoRow = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Header = styled(InfoRow)`\n  min-height: 28px;\n`\n\nconst DetailsButton = styled(Button).attrs({ variant: 'text' })`\n  height: auto;\n  padding: 16px 24px;\n\n  &:hover:not(:disabled):not(:active) {\n    background-color: transparent;\n  }\n\n  &:focus:not(:active) {\n    box-shadow: none;\n  }\n`\n\nconst InfoBlock = styled.div`\n  padding: 24px;\n`\n\nconst Grid = styled(Box)`\n  display: grid;\n  grid-template-columns: 75fr 2fr;\n  cursor: pointer;\n`\n\nconst GridPrice = styled.div`\n  display: grid;\n  grid-gap: 16px 8px;\n  margin-top: 24px;\n  grid-template-columns: repeat(2, auto);\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 16px;\n  }\n`\n\nconst LifeCycleGrid = styled(Box)`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr) auto;\n  cursor: pointer;\n`\nconst Wrapper = styled.div``\nconst Info = styled(Box)`\n  font-size: 10px;\n`\nconst NftCard: React.FC<NftCardProps> = ({ nft, canClaim = false, tokenIds = [], onClaim, refresh }) => {\n  const history = useHistory()\n  const [remainingSupply, setRemainingSupply] = useState<number>(0)\n  const [isOpen, setIsOpen] = useState(false)\n  const { t } = useTranslation()\n  const { profile } = useProfile()\n  const { name, description, supply } = nft\n  const walletOwnsNft = tokenIds.length > 0\n  const Icon = isOpen ? ChevronUpIcon : ChevronDownIcon\n\n  const handleClick = async () => {\n    setIsOpen(!isOpen)\n  }\n\n  const handleSuccess = () => {\n    refresh()\n  }\n\n  // const { targetRef, tooltip, tooltipVisible } = useTooltip(\n  //   t('Initial stage'),\n  //   { placement: 'top-end', tooltipOffset: [20, 10] },\n  // )\n\n  // const [onPresentTransferModal] = useModal(\n  //   <TransferNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />,\n  // )\nconst [modal, setModal]=useState(true)\n  // const [onPresentLifeCycleModal] = useModal(<LifeCycleModal nft={nft} onDismiss={handleSuccess} />)\n\n  // const [onPresentView3DNftModal] = useModal(<View3DNftModal nft={nft} onDismiss={handleSuccess} />)\n\n  const [onPresentConfigurator3DNftModal] = useModal(\n    <Configurator3DNftModal nft={nft} onDismiss={handleSuccess} history={history} />,\n  )\n  const sizeFormatted = `${nft.size.toLocaleString(undefined, { maximumFractionDigits: 0 })} ${nft.sizeMeasure}`\n  const weightFormatted = `${nft.weight.toLocaleString(undefined, { maximumFractionDigits: 0 })} ${nft.weightMeasure}`\n  const initialCostFormatted = `${nft.initialLifeCycle.price.toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n  const initialCostExplained = `${t('School time: ')}${nft.initialLifeCycle.periodInMinutes / 60}h`\n  const finalCostFormatted = `${nft.finalLifeCycle.price.toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n  const finalCostExplained = `${t('Gladiator Ready')}`\n  const gladiatorNftContract = useGladiatorNft()\n\n  const getGladiatorSupply = async () => {\n    const resp = await gladiatorNftContract.gladiator(nft.name)\n    // console.log(\"parseUnitsparseUnits\", parseInt(resp.gladiatorCount._hex.toString(), 16));\n    // console.log(\"parseUnitsparseUnits\", parseInt(resp.gladiatorSupply._hex.toString(), 16));\n    setRemainingSupply(\n      Number(parseInt(resp.gladiatorSupply._hex.toString(), 16) - parseInt(resp.gladiatorCount._hex.toString(), 16)),\n    )\n\n    // console.log(nft.name, resp.gladiatorCount, resp.gladiatorSupply)\n  }\n\n  useEffect(() => {\n    getGladiatorSupply()\n  }, [nft, useGladiatorNft])\n  useEffect(() => {\n    if (remainingSupply) {\n      nft.supply = remainingSupply\n    }\n  }, [remainingSupply])\n  //   useEffect(() => {\n  //     (async () => {\n  // const {data} = await axios.get(\"https://gateway.pinata.cloud/ipfs/QmZHnVZTjGjY3fdSPrJHHqwdgitbtvx9ZBiW9RrhZn2ruT\")\n  // console.log(\"datadatadatadatadatadata\", data);\n  //     })()\n  //   }, [])\n\n  return (\n    <Card isActive={walletOwnsNft} key={nft.glTF} style={{ background: '#d9ab3a' }}>\n      <Preview nft={nft} isOwned={walletOwnsNft} />\n      <CardBody>\n        <Header>\n          <Heading>\n            <Grid>\n              <Flex>{name}</Flex>\n              <Flex>\n                {nft.listingType === ListingType.COMMUNITY ? (\n                  <CommunityTag />\n                ) : nft.listingType === ListingType.PARTNER ? (\n                  <PartnerTag />\n                ) : (\n                  <CoreTag />\n                )}\n              </Flex>\n              {/* <Flex onClick={onPresentView3DNftModal}>\n                <Tag ml=\"5px\" mt=\"5px\" variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />}>\n                  {t('View 3D')}\n                </Tag>\n              </Flex> */}\n            </Grid>\n          </Heading>\n          {walletOwnsNft && (\n            <Tag outline variant=\"secondary\">\n              {t('In Wallet')}\n            </Tag>\n          )}\n\n          {/* {profile?.nft?.identifier === identifier && (\n            <Tag outline variant=\"success\">\n              {t('Profile Pic')}\n            </Tag>\n          )} */}\n        </Header>\n\n        <Wrapper>\n          <Flex justifyContent=\"space-between\">\n            <Text>{t('Rarity')}:</Text>\n            <Text>{nft.rarity}</Text>\n          </Flex>\n          <Flex justifyContent=\"space-between\">\n            <Text>{t('Supply')}:</Text>\n            <Text>{nft.supply}</Text>\n          </Flex>\n          {/* <Flex justifyContent=\"space-between\">\n          <Text>{t('Size')}:</Text>\n          {sizeFormatted ? <Text>{sizeFormatted}</Text> : <Skeleton width={75} height={25} />}\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Weight')}:</Text>\n          {weightFormatted ? <Text>{weightFormatted}</Text> : <Skeleton width={75} height={25} />}\n        </Flex>  */}\n        </Wrapper>\n\n        <GridPrice>\n          <Flex>\n            <img src=\"/nrtlogo.png\" width=\"32px\" height=\"32px\" alt=\"\" />\n            <Box>\n              <Flex>\n                <Heading ml=\"10px\">{initialCostFormatted}</Heading>\n                {nft.token}\n              </Flex>\n              <Info ml=\"10px\">{initialCostExplained}</Info>\n            </Box>\n          </Flex>\n\n          <Flex justifyContent=\"right\">\n            <img src=\"/nrtlogo.png\" width=\"32px\" height=\"32px\" alt=\"\" />\n            <Box>\n              <Flex>\n                <Heading ml=\"10px\">{finalCostFormatted}</Heading>\n                {nft.token}\n              </Flex>\n              <Info ml=\"10px\">{finalCostExplained}</Info>\n            </Box>\n          </Flex>\n        </GridPrice>\n\n        {/* <Tag outline variant=\"secondary\">\n            {t('In Wallet')}\n          </Tag>\n          <Tag outline variant=\"success\">\n            {t('In Wallet')}\n          </Tag> */}\n\n        <Suspense fallback={<Loader />}>\n          <Button width=\"100%\" mt=\"24px\" onClick={onPresentConfigurator3DNftModal}>\n            {t('Personalize & Buy')}\n          </Button>\n        </Suspense>\n\n        {/* {canClaim && (\n          <Button width=\"100%\" mt=\"24px\" onClick={onPresentClaimModal}>\n            {t('Claim this NFT')}\n          </Button>\n        )} */}\n        {/* {walletOwnsNft && (\n          <Button width=\"100%\" variant=\"secondary\" mt=\"24px\" onClick={onPresentTransferModal}>\n            {t('Transfer')}\n          </Button>\n        )} */}\n      </CardBody>\n      <Attributes attributes={nft.attributes} />\n      <Weapons attributes={nft.weapons} />\n      <Abilities attributes={nft.abilities} />\n      {/* <CardFooter p=\"0\">\n        <DetailsButton width=\"100%\" endIcon={<Icon width=\"24px\" color=\"primary\" />} onClick={handleClick}>\n          {t('Details')}\n        </DetailsButton>\n        {isOpen && (\n          <InfoBlock>\n            <DetailsSection nftModel={nft} />\n          </InfoBlock>\n        )}\n      </CardFooter> */}\n    </Card>\n  )\n}\n\nexport default NftCard\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Card, Flex } from '@pancakeswap/uikit'\nimport { GalleryNft } from 'config/constants/gallery/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { fetchWalletGalleryNfts } from 'state/gallery'\nimport { useAppDispatch } from 'state'\nimport NftCard from './NftCard'\n\nconst StyledCard = styled(Card)`\n  align-self: baseline;\n`\n\nconst FarmCardInnerContainer = styled(Flex)`\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n`\n\nconst ExpandingWrapper = styled.div`\n  padding: 24px;\n  border-top: 2px solid ${({ theme }) => theme.colors.cardBorder};\n  overflow: hidden;\n`\n\ninterface GalleryModelCardProps {\n  nftModel: GalleryNft\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst GalleryModelCard: React.FC<GalleryModelCardProps> = ({ nftModel, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n\n  const isPromotedFarm = nftModel.isPromoted\n  const handleRefresh = () => {\n    dispatch(fetchWalletGalleryNfts(account))\n  }\n\n  return (\n    <>\n      \n      <StyledCard isActive={isPromotedFarm} style={{ background: '#d9ab3a' }}>\n        <div key={nftModel.name}>\n          <NftCard nft={nftModel} refresh={handleRefresh} />\n        </div>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default GalleryModelCard\n","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Input, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\nimport Select, { OptionProps } from 'components/Select/Select'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\n\nconst ExpandableText = styled.div`\n  color: #d9ab3a;\n`\n\ninterface PriceFilterProps {\n  handlePriceFilter?: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleMinNRTsQuery?: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleMaxNRTsQuery?: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleCurrency?:(e:string)=>void\n}\n\nconst PriceFilter: React.FC<PriceFilterProps> = ({ handleMinNRTsQuery, handleMaxNRTsQuery,handleCurrency }) => {\n  const [isExpanded, setIsExpanded] = useState(true)\n  const { t } = useTranslation()\n  const minInputRef = useRef<HTMLInputElement | null>(null)\n  const maxInputRef = useRef<HTMLInputElement | null>(null)\n  // const { topLeaderboard, status } = auction\n\n  // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n  return (\n    <CardFooter p=\"0\">\n      {isExpanded && (\n        <FooterInner>\n          <Flex p=\"16px\" flexDirection=\"column\">\n            <Flex width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Select\n                options={[\n                  {\n                    label: t('NFT Royal Token (NRT)'),\n                    value: 'ow',\n                  },\n                  {\n                    label: t('United States Dollar (USD)'),\n                    value: 'usd',\n                  },\n\n                  // {\n                  // label: t('Denarius (DENA)'),\n                  // value: 'aqua',\n                  // },\n                  // {\n                  //   label: t('Earned'),\n                  //   value: 'earned',\n                  // },\n                  // {\n                  // label: t('Etherium (ETH)'),\n                  // value: 'eth',\n                  // },\n                ]}\n                onOptionChange={(e) => handleCurrency(e.value)}\n              />\n            </Flex>\n            <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Input\n                ref={minInputRef}\n                type=\"text\"\n                inputMode=\"decimal\"\n                pattern=\"\\d*\"\n                scale=\"sm\"\n                placeholder=\"Min\"\n                // name=\"minNRT\"\n                onChange={(e) => {\n                  handleMinNRTsQuery(e)\n                }}\n              />\n              <Flex pt=\"8px\" px=\"5px\">\n                {t('to')}\n              </Flex>\n              <Input\n                ref={maxInputRef}\n                type=\"text\"\n                inputMode=\"decimal\"\n                pattern=\"\\d*\"\n                scale=\"sm\"\n                placeholder=\"Max\"\n                onChange={(e) => handleMaxNRTsQuery(e)}\n              />\n            </Flex>\n          </Flex>\n        </FooterInner>\n      )}\n      <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n          <ExpandableText>{isExpanded ? t('Hide Price') : t('Price')}</ExpandableText>\n        </ExpandableLabel>\n      </Flex>\n    </CardFooter>\n  )\n}\n\nexport default PriceFilter\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Box, CardFooter, ExpandableLabel, Checkbox } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\n\nconst ExpandableText = styled.div`\n  color: #d9ab3a;\n`\ninterface RarityI {\n  1: Boolean\n  2: Boolean\n  3: Boolean\n  4: Boolean\n  5: Boolean\n  6: Boolean\n}\ntype ValueI = 'ability' | 'weapon' | 'attributes' | 'characteristics' | 'rarity'\n\ninterface RarityFilterProps {\n  handleChangeRarity: (e: React.ChangeEvent<HTMLInputElement>) => void\n  rarity: RarityI\n  clearFilterStates: (value: ValueI) => void\n}\n\nconst RarityFilter: React.FC<RarityFilterProps> = ({ handleChangeRarity, rarity, clearFilterStates }) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  // const { topLeaderboard, status } = auction\n\n  // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n  return (\n    <CardFooter p=\"0\">\n      {isExpanded && (\n        <FooterInner>\n          <Flex p=\"16px\" flexDirection=\"column\">\n            <Flex width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Checkbox\n                name=\"Common\"\n                type=\"checkbox\"\n                value=\"1\"\n                checked={rarity[1] ? true : false}\n                onChange={(e) => handleChangeRarity(e)}\n                scale=\"sm\"\n              />\n              <Text ml=\"10px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('Recruit')}\n              </Text>\n              <Text ml=\"83px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('( level 1 )')}\n              </Text>\n            </Flex>\n            <Flex width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Checkbox\n                name=\"Uncommon\"\n                type=\"checkbox\"\n                value=\"2\"\n                checked={rarity[2] ? true : false}\n                onChange={(e) => handleChangeRarity(e)}\n                scale=\"sm\"\n              />\n              <Text ml=\"10px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('False Gladiator')}\n              </Text>\n              <Text ml=\"25px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('( level 2 )')}\n              </Text>\n            </Flex>\n            <Flex width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Checkbox\n                name=\"Rare\"\n                type=\"checkbox\"\n                value=\"3\"\n                checked={rarity[3] ? true : false}\n                onChange={(e) => handleChangeRarity(e)}\n                scale=\"sm\"\n              />\n              <Text ml=\"10px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('Gladiator')}\n              </Text>\n              <Text ml=\"66px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('( level 3 )')}\n              </Text>\n            </Flex>\n            <Flex width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Checkbox\n                name=\"SuperRare\"\n                type=\"checkbox\"\n                value=\"4\"\n                checked={rarity[4] ? true : false}\n                onChange={(e) => handleChangeRarity(e)}\n                scale=\"sm\"\n              />\n              <Text ml=\"10px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('Veteran Gladiator')}\n              </Text>\n              <Text ml=\"6px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('( level 4 )')}\n              </Text>\n            </Flex>\n            <Flex width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Checkbox\n                name=\"Deep\"\n                type=\"checkbox\"\n                value=\"5\"\n                checked={rarity[5] ? true : false}\n                onChange={(e) => handleChangeRarity(e)}\n                scale=\"sm\"\n              />\n              <Text ml=\"10px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('Champion')}\n              </Text>\n              <Text ml=\"60px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('( level 5 )')}\n              </Text>\n            </Flex>\n            <Flex width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Checkbox\n                name=\"SuperDeep\"\n                type=\"checkbox\"\n                value=\"6\"\n                checked={rarity[6] ? true : false}\n                onChange={(e) => handleChangeRarity(e)}\n                scale=\"sm\"\n              />\n              <Text ml=\"10px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('Doctore')}\n              </Text>\n              <Text ml=\"76px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('( level 6 )')}\n              </Text>\n            </Flex>\n          </Flex>\n        </FooterInner>\n      )}\n      <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n        <ExpandableLabel\n          expanded={isExpanded}\n          onClick={() => {\n            if (isExpanded) {\n              clearFilterStates('rarity')\n            }\n            setIsExpanded((prev) => !prev)\n          }}\n        >\n          <ExpandableText>{isExpanded ? t('Hide Rarity') : t('Rarity')}</ExpandableText>\n        </ExpandableLabel>\n      </Flex>\n    </CardFooter>\n  )\n}\n\nexport default RarityFilter\n","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\nconst LabelWrapper = styled.div``\nconst ExpandableText = styled.div`\n  color: #d9ab3a;\n`\nconst IconImage = styled.div`\n  width: 24px;\n  margin-right: 8px;\n`\nconst LabelText = styled.div`\n  margin-top: 5px;\n  display: flex;\n`\ntype ValueI = 'ability' | 'weapon' | 'attributes' | 'characteristics' | 'rarity'\n\ninterface AttributesFilterProps {\n  handleChangeAttributes: (e: React.ChangeEvent<HTMLInputElement>) => void\n  clearFilterStates: (value: ValueI) => void\n}\n\nconst AttributesFilter: React.FC<AttributesFilterProps> = ({ handleChangeAttributes, clearFilterStates }) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const minInputRef = useRef<HTMLInputElement | null>(null)\n  const maxInputRef = useRef<HTMLInputElement | null>(null)\n  // const { topLeaderboard, status } = auction\n\n  // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n  return (\n    <CardFooter p=\"0\">\n      {isExpanded && (\n        <FooterInner>\n          <Flex p=\"16px\" flexDirection=\"column\">\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/strength.png\" alt=\"strength\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Strength')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  \n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minStrength\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n\n                {/* <input type=\"number\" onChange={(e) => handleChangeAttributes(e)} \n                  ref={minInputRef}\n                  /> */}\n\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxStrength\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/endurance.png\" alt=\"Endurance\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Endurance')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minEndurance\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxEndurance\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/agility.png\" alt=\"Agility\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Agility')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minAgility\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxAgility\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/precision.png\" alt=\"Precision\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Precision')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minPrecision\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxPrecision\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/intelligence.png\" alt=\"Intelligance\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Intelligance')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minIntelligence\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxIntelligence\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/willpower.png\" alt=\"Willpower\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Willpower')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minWillPower\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxWillPower\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n          </Flex>\n        </FooterInner>\n      )}\n      <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n        <ExpandableLabel\n          expanded={isExpanded}\n          onClick={() => {\n            if (isExpanded) {\n              clearFilterStates('attributes')\n            }\n            setIsExpanded((prev) => !prev)\n          }}\n        >\n          <ExpandableText>{isExpanded ? t('Hide Attributes') : t('Attributes')}</ExpandableText>\n        </ExpandableLabel>\n      </Flex>\n    </CardFooter>\n  )\n}\n\nexport default AttributesFilter\n","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\nconst LabelWrapper = styled.div``\nconst ExpandableText = styled.div`\n  color: #d9ab3a;\n`\nconst IconImage = styled.div`\n  width: 24px;\n  margin-right: 8px;\n`\nconst LabelText = styled.div`\n  margin-top: 5px;\n  display: flex;\n`\ntype ValueI = 'ability' | 'weapon' | 'attributes' | 'characteristics' | 'rarity'\n\ninterface WeaponMasteryFilterProps {\n  handleChangeWeapons: (e: React.ChangeEvent<HTMLInputElement>) => void\n  clearFilterStates: (value: ValueI) => void\n}\n\nconst WeaponMasteryFilter: React.FC<WeaponMasteryFilterProps> = ({ handleChangeWeapons, clearFilterStates }) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const minInputRef = useRef<HTMLInputElement | null>(null)\n  const maxInputRef = useRef<HTMLInputElement | null>(null)\n  // const { topLeaderboard, status } = auction\n\n  // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n  return (\n    <CardFooter p=\"0\">\n      {isExpanded && (\n        <FooterInner>\n          <Flex p=\"16px\" flexDirection=\"column\">\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/one-handed.png\" alt=\"One-hand\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('One-hand')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minOneHand\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxOneHand\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/two-handed.png\" alt=\"Two-hand\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Two-hand')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minTwoHand\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxTwoHand\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/shield.png\" alt=\"Shield\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Shield')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minShield\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxShield\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/ranged.png\" alt=\"Ranged\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Ranged')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minRanged\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxRanged\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/dual.png\" alt=\"Dual\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Dual')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minDual\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxDual\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/polearms.png\" alt=\"Polearms\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Polearms')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minPolearms\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxPolearms\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n          </Flex>\n        </FooterInner>\n      )}\n      <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n        <ExpandableLabel\n          expanded={isExpanded}\n          onClick={() => {\n            if (isExpanded) {\n              clearFilterStates('weapon')\n            }\n            setIsExpanded((prev) => !prev)\n          }}\n        >\n          <ExpandableText>{isExpanded ? t('Hide Weapon Mastery') : t('Weapon Mastery')}</ExpandableText>\n        </ExpandableLabel>\n      </Flex>\n    </CardFooter>\n  )\n}\n\nexport default WeaponMasteryFilter\n","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\nconst LabelWrapper = styled.div``\nconst ExpandableText = styled.div`\n  color: #d9ab3a;\n`\nconst IconImage = styled.div`\n  width: 24px;\n  margin-right: 8px;\n`\nconst LabelText = styled.div`\n  margin-top:5px;\n  display: flex;\n`\n\ntype ValueI = 'ability' | 'weapon' | 'attributes' | 'characteristics' | 'rarity'\n\ninterface AbilitiesFilterProps {\n  handleChangeAbilities: (e: React.ChangeEvent<HTMLInputElement>) => void\n  clearFilterStates: (value: ValueI) => void\n}\n\nconst AbilitiesFilter: React.FC<AbilitiesFilterProps> = ({ handleChangeAbilities, clearFilterStates }) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const minInputRef = useRef<HTMLInputElement | null>(null)\n  const maxInputRef = useRef<HTMLInputElement | null>(null)\n  // const { topLeaderboard, status } = auction\n\n  // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n  return (\n    <CardFooter p=\"0\">\n      {isExpanded && (\n        <FooterInner>\n          <Flex p=\"16px\" flexDirection=\"column\">\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/leadership.png\" alt=\"Leadership\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Leadership')}</Text>\n              </LabelText>\n\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minLeadership\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxLeadership\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/coach.png\" alt=\"Coach\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Coach')}</Text>\n              </LabelText>\n\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minCoach\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxCoach\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/cook.png\" alt=\"Cook\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Cook')}</Text>\n              </LabelText>\n\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minCook\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxCook\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/medical.png\" alt=\"Medical\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Medical')}</Text>\n              </LabelText>\n\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minMedical\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxMedical\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/smith.png\" alt=\"Smith\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Smith')}</Text>\n              </LabelText>\n\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minSmith\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxSmith\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/torture.png\" alt=\"Torture\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Torture')}</Text>\n              </LabelText>\n\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minTorture\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxTorture\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n          </Flex>\n        </FooterInner>\n      )}\n      <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n        <ExpandableLabel\n          expanded={isExpanded}\n          onClick={() => {\n            if (isExpanded) {\n              clearFilterStates('ability')\n            }\n            setIsExpanded((prev) => !prev)\n          }}\n        >\n          <ExpandableText>{isExpanded ? t('Hide Abilities') : t('Abilities')}</ExpandableText>\n        </ExpandableLabel>\n      </Flex>\n    </CardFooter>\n  )\n}\n\nexport default AbilitiesFilter\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  Text,\n  Heading,\n  Card,\n  CardHeader,\n  CardBody,\n  Flex,\n  Spinner,\n  Skeleton,\n  Tag,\n  Button,\n  Toggle,\n  useModal,\n} from '@pancakeswap/uikit'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus, ConnectedBidder } from 'config/constants/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\n// import PlaceBidModal from '../PlaceBidModal'\nimport AuctionSchedule from './AuctionSchedule'\nimport CannotBidMessage from './CannotBidMessage'\nimport PriceFilter from './PriceFilter'\nimport RarityFilter from './RarityFilter'\nimport CharacteristicsFilter from './CharacteristicsFilter'\nimport useTheme from '../../../../hooks/useTheme'\nimport AttributesFilter from './AttributesFilter'\nimport WeaponMasteryFilter from './WeaponMasteryFilter'\nimport AbilitiesFilter from './AbilitiesFilter'\n\nconst FilterCardCard = styled(Card)`\n  flex: 1;\n  background-color: #d9ab3a;\n`\n\nconst NewCardHeader = styled(CardHeader)`\n  background: linear-gradient(166.77deg, #d9ab3a 100%, #d9ab3a 100%);\n`\n\nconst NewHeading = styled(Heading)`\n  color: #000;\n  text-align: center;\n  font-size: 24px;\n`\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin-bottom: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 20px;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 5px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  margin-bottom: 10px;\n\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n  z-index: 12;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\ninterface RarityI {\n  1: Boolean\n  2: Boolean\n  3: Boolean\n  4: Boolean\n  5: Boolean\n  6: Boolean\n}\ntype ValueI = 'ability' | 'weapon' | 'attributes' | 'characteristics' | 'rarity'\n\ninterface FilterCardProps {\n  handleCurrency: (e: string) => void\n  handleChangeQuery: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleMinNRTsQuery: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleMaxNRTsQuery: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleChangeAttributes: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleChangeWeapons: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleChangeCharacteristics: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleChangeAbilities: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleChangeRarity: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleSortOptionChange: (option: OptionProps) => void\n  clearFilterStates: (value: ValueI) => void\n  rarity: RarityI\n  freshwaterOnly: boolean\n  saltwaterOnly: boolean\n  setFreshwaterOnly: (a: boolean) => void\n  setSaltwaterOnly: (a: boolean) => void\n}\n\nconst FilterCard: React.FC<FilterCardProps> = ({\n  handleChangeQuery,\n  handleSortOptionChange,\n  freshwaterOnly,\n  setFreshwaterOnly,\n  saltwaterOnly,\n  setSaltwaterOnly,\n  handleMinNRTsQuery,\n  handleMaxNRTsQuery,\n  handleChangeCharacteristics,\n  handleChangeAttributes,\n  handleChangeWeapons,\n  handleChangeAbilities,\n  handleChangeRarity,\n  clearFilterStates,\n  handleCurrency,\n  rarity,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  return (\n    <FilterCardCard mb={['24px', null, null, '0']}>\n      <NewCardHeader>\n        <NewHeading>{t('Filter')}</NewHeading>\n      </NewCardHeader>\n      <CardBody>\n        <ControlContainer>\n          {/* <ViewControls>\n            <ToggleWrapper>\n              <Toggle checked={freshwaterOnly} onChange={() => setFreshwaterOnly(!freshwaterOnly)} scale=\"sm\"/>  */}\n          {/* <Toggle checked scale=\"sm\" /> */}\n          {/* <Text> {t('Core Arenas')}</Text>\n            </ToggleWrapper>\n            <ToggleWrapper>\n              <Toggle checked={saltwaterOnly} onChange={() => setSaltwaterOnly(!saltwaterOnly)} scale=\"sm\" /> */}\n          {/* <Toggle checked scale=\"sm\" /> */}\n          {/* <Text> {t('Community Arenas')}</Text>\n            </ToggleWrapper>\n          </ViewControls> */}\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\n              <SearchInput onChange={handleChangeQuery} placeholder=\"Search Gallery\" />\n            </LabelWrapper>\n          </FilterContainer>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\n              <Select\n                z-index=\"auto\"\n                options={[\n                  {\n                    label: t('Hot'),\n                    value: 'hot',\n                  },\n                  {\n                    label: t('Rarity'),\n                    value: 'rarity',\n                  },\n                  {\n                    label: t('Supply'),\n                    value: 'supply',\n                  },\n                  // {\n                  //   label: t('Earned'),\n                  //   value: 'earned',\n                  // },\n                  {\n                    label: t('School Price'),\n                    value: 'school price',\n                  },\n                  {\n                    label: t('Gladiator Ready'),\n                    value: 'gladiator ready',\n                  },\n                ]}\n                onOptionChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n      </CardBody>\n      <PriceFilter handleCurrency={handleCurrency} handleMinNRTsQuery={handleMinNRTsQuery} handleMaxNRTsQuery={handleMaxNRTsQuery} />\n\n      <RarityFilter rarity={rarity} handleChangeRarity={handleChangeRarity} clearFilterStates={clearFilterStates} />\n      {/* <CharacteristicsFilter  \n      handleChangeCharacteristics={ handleChangeCharacteristics}\n      clearFilterStates={clearFilterStates}\n      /> */}\n\n      <AttributesFilter handleChangeAttributes={handleChangeAttributes} clearFilterStates={clearFilterStates} />\n\n      <WeaponMasteryFilter handleChangeWeapons={handleChangeWeapons} clearFilterStates={clearFilterStates} />\n\n      <AbilitiesFilter handleChangeAbilities={handleChangeAbilities} clearFilterStates={clearFilterStates} />\n    </FilterCardCard>\n  )\n}\n\nexport default FilterCard\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\nimport { Route, useRouteMatch, useLocation, NavLink } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text, Button, ArrowForwardIcon, Flex } from '@pancakeswap/uikit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/Layout/Flex'\nimport PageSection from 'components/PageSection'\nimport useTheme from 'hooks/useTheme'\nimport { usePollFarmsWithUserData, usePriceCakeBusd } from 'state/farms/hooks'\nimport { useGetGallery } from 'state/gallery/hooks'\nimport { GalleryNft, NftToken } from 'config/constants/gallery/types'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport { DeserializedFarm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy, union } from 'lodash'\nimport isArchivedGalleryNft from 'utils/galleryHelpers'\nimport { latinise } from 'utils/latinise'\nimport {\n  useUserFarmStakedOnly,\n  useUserFarmsViewMode,\n  useUserGalleryFreshwaterOnly,\n  useUserGallerySaltwaterOnly,\n} from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport Loading from 'components/Loading'\nimport { useCurrentFarmAuction } from 'views/FarmAuction/hooks/useCurrentFarmAuction'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport GalleryModelCard from './components/GalleryModelCard/GalleryModelCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema } from './components/types'\nimport FilterCard from './components/FilterCard'\nimport { useProfileContract } from 'hooks/useContract'\nimport { useHistory } from 'react-router-dom'\nimport { useNrtBusdPrice } from 'hooks/useBUSDPrice'\n\nconst FilterContainer = styled(Flex)`\n  width: 100%;\n  align-items: flex-start;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    gap: 24px;\n  }\n`\n\nconst StyledImage = styled.img`\n  margin-top: 58px;\n  width: 170px;\n  height: auto;\n`\n\nconst MainCharacter = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`\n\nconst StyledHeader = styled(PageHeader)`\n  max-height: max-content;\n  margin-bottom: -85px;\n  padding-bottom: 40px;\n  overflow: hidden;\n  ${({ theme }) => theme.mediaQueries.md} {\n    max-height: 600px;\n  }\n`\n\nconst Left = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n`\n\nconst Right = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  flex: 0.5;\n  & img {\n    height: 50%;\n    width: 50%;\n    max-height: 325px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & img {\n      height: auto;\n      width: auto;\n    }\n  }\n`\n\nconst GalleryBackground = styled(PageSection)`\n  background-image: url(/images/decorations/BG.png);\n  background-position: center;\n  background-attachment: fixed;\n  object-fit: cover;\n`\nconst NewHeading = styled(Heading)`\n  color: #d9ab3a;\n`\nconst GallerySearch = styled.div`\n  color: white;\n  font-size: 30px;\n  text-align: center;\n  position: relative;\n  top: 250px;\n  width: 100%;\n  height: 100%;\n`\n\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst Gallery: React.FC = () => {\n  const nrtPriceUsd = useNrtBusdPrice()\n  const history = useHistory()\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { models, isInitialized: userDataLoaded } = useGetGallery()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState('')\n  //Price States\n  const [minNRTs, setMinNRTs] = useState(null)\n  const [maxNRTs, setMaxNRTs] = useState(null)\n  const [currency, setCurrency] = useState('ow')\n  // characteristics states\n  const characteristicsInitialState = {\n    minWeight: '',\n    maxWeight: '',\n    minSize: '',\n    maxSize: '',\n    minSupply: '',\n    maxSupply: '',\n  }\n  const [characteristics, setCharacteristics] = useState(characteristicsInitialState)\n\n  // Attributes states\n  interface AttributesI {\n    minStrength: Number\n    maxStrength: Number\n    minEndurance: Number\n    maxEndurance: Number\n    minAgility: Number\n    maxAgility: Number\n    minPrecision: Number\n    maxPrecision: Number\n    minIntelligence: Number\n    maxIntelligence: Number\n    minWillPower: Number\n    maxWillPower: Number\n  }\n  const attributeInitialState = {\n    minStrength: 0,\n    maxStrength: 0,\n    minEndurance: 0,\n    maxEndurance: 0,\n    minAgility: 0,\n    maxAgility: 0,\n    minPrecision: 0,\n    maxPrecision: 0,\n    minIntelligence: 0,\n    maxIntelligence: 0,\n    minWillPower: 0,\n    maxWillPower: 0,\n  }\n  const [attributes, setAttributes] = useState<AttributesI>(attributeInitialState)\n\n  // Weapon State\n  interface WeaponsI {\n    minOneHand: Number\n    maxOneHand: Number\n    minTwoHand: Number\n    maxTwoHand: Number\n    minShield: Number\n    maxShield: Number\n    minRanged: Number\n    maxRanged: Number\n    minDual: Number\n    maxDual: Number\n    minPolearms: Number\n    maxPolearms: Number\n  }\n  const weaponsInitialState = {\n    minOneHand: 0,\n    maxOneHand: 0,\n    minTwoHand: 0,\n    maxTwoHand: 0,\n    minShield: 0,\n    maxShield: 0,\n    minRanged: 0,\n    maxRanged: 0,\n    minDual: 0,\n    maxDual: 0,\n    minPolearms: 0,\n    maxPolearms: 0,\n  }\n  const [weapons, setWeapons] = useState<WeaponsI>(weaponsInitialState)\n\n  // abilities state\n  interface AbilitiesI {\n    minLeadership: Number\n    maxLeadership: Number\n    minCoach: Number\n    maxCoach: Number\n    minCook: Number\n    maxCook: Number\n    minMedical: Number\n    maxMedical: Number\n    minSmith: Number\n    maxSmith: Number\n    minTorture: Number\n    maxTorture: Number\n  }\n  const abilitiesInitialState = {\n    minLeadership: 0,\n    maxLeadership: 0,\n    minCoach: 0,\n    maxCoach: 0,\n    minCook: 0,\n    maxCook: 0,\n    minMedical: 0,\n    maxMedical: 0,\n    minSmith: 0,\n    maxSmith: 0,\n    minTorture: 0,\n    maxTorture: 0,\n  }\n  const [abilities, setAbilities] = useState<AbilitiesI>(abilitiesInitialState)\n\n  const rarityInitialState = {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n  }\n  // Rarity State\n  const [rarity, setRarity] = useState(rarityInitialState)\n\n  const [viewMode, setViewMode] = useUserFarmsViewMode()\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const chosenNftModelsLength = useRef(0)\n  const { currentAuction, bidders, connectedBidder, refreshBidders } = useCurrentFarmAuction(account)\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n\n  usePollFarmsWithUserData(isArchived)\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\n  const [freshwaterOnly, setFreshwaterOnly] = useUserGalleryFreshwaterOnly(isActive)\n  const [saltwaterOnly, setSaltwaterOnly] = useUserGallerySaltwaterOnly(isActive)\n\n  const activeFarms = models.filter((nft) => !isArchivedGalleryNft(nft))\n  const archivedFarms = models.filter((nft) => isArchivedGalleryNft(nft))\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const freshwaterOnlyFarms = activeFarms.filter((farm) => farm.token === NftToken.NRT)\n\n  const saltwaterOnlyFarms = activeFarms.filter((farm) => farm.token === NftToken.NRT)\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const galleryList = useCallback(\n    (modelsToDisplay: GalleryNft[]): GalleryNft[] => {\n      // let modelsToDisplayWithAPR: GalleryNft[] = modelsToDisplay.map((nft) => {\n      //   // if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\n      //   //   return farm\n      //   // }\n      //   // const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\n      //   // const { cakeRewardsApr, lpRewardsApr } = isActive\n      //   //   ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\n      //   //   : { cakeRewardsApr: 0, lpRewardsApr: 0 }\n\n      //   // return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\n      //   return { ...nft }\n      // })\n      // console.log(\"modelsToDisplayWithAPR\",modelsToDisplay)\n\n\n      let modelsToDisplayWithAPR = modelsToDisplay\n      if (query) {\n        console.log(\"query\", query)\n        const lowercaseQuery = latinise(query.toLowerCase())\n        modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter((nft: GalleryNft) => {\n\n          return latinise(nft.name.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n      return modelsToDisplayWithAPR\n    },\n    [query],\n  )\n  const galleryPriceFiltering = useCallback(\n    (modelsToDisplay: GalleryNft[]): GalleryNft[] => {\n      // let modelsToDisplayWithAPR: GalleryNft[] = modelsToDisplay.map((nft) => {\n      //   // if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\n      //   //   return farm\n      //   // }\n      //   // const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\n      //   // const { cakeRewardsApr, lpRewardsApr } = isActive\n      //   //   ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\n      //   //   : { cakeRewardsApr: 0, lpRewardsApr: 0 }\n\n      //   // return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\n      //   return { ...nft }\n      // })\n\n      let modelsToDisplayWithAPR = modelsToDisplay\n      if (minNRTs && maxNRTs) {\n        const nrtPriceUsdDisplay = nrtPriceUsd ? Number(nrtPriceUsd.toFixed(3)) : 0\n        if (currency === 'usd') {\n          modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter((nft: GalleryNft) => {\n            return (\n              nft.initialLifeCycle.price >= nrtPriceUsdDisplay * Number(minNRTs) &&\n              nft.finalLifeCycle.price <= nrtPriceUsdDisplay * Number(maxNRTs)\n            )\n          })\n        } else {\n          modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter((nft: GalleryNft) => {\n            return nft.initialLifeCycle.price >= Number(minNRTs) && nft.finalLifeCycle.price <= Number(maxNRTs)\n          })\n        }\n      }\n      return modelsToDisplayWithAPR\n    },\n    [minNRTs, maxNRTs],\n  )\n  const galleryCharacteristicsFiltering = useCallback(\n    (modelsToDisplay: GalleryNft[]): GalleryNft[] => {\n      let modelsToDisplayWithAPR = modelsToDisplay\n      const { minSize, minSupply, minWeight, maxSize, maxSupply, maxWeight } = characteristics\n      // minSize && minSupply&& minWeight&& maxSize&& maxSupply&& maxWeight\n      if (minSize && minSupply && minWeight && maxSize && maxSupply && maxWeight) {\n        // console.log(minSize, minSupply, minWeight, maxSize, maxSupply, maxWeight)\n        // const lowercaseQuery = latinise(query.toLowerCase())\n        modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter(\n          (nft: GalleryNft) =>\n            nft.size >= minSize &&\n            nft.size <= maxSize &&\n            nft.supply >= minSupply &&\n            nft.supply <= maxSupply &&\n            nft.weight >= minWeight &&\n            nft.weight <= maxWeight,\n        )\n        // console.log(\"modelsToDisplayWithAPRmodelsToDisplayWithAPR\", modelsToDisplayWithAPR)\n      }\n      return modelsToDisplayWithAPR\n    },\n    [characteristics],\n  )\n  const galleryAttributesFiltering = useCallback(\n    (modelsToDisplay: GalleryNft[]): GalleryNft[] => {\n      let modelsToDisplayWithAPR = modelsToDisplay\n      const {\n        minAgility,\n        minEndurance,\n        minIntelligence,\n        minPrecision,\n        minStrength,\n        minWillPower,\n        maxIntelligence,\n        maxPrecision,\n        maxAgility,\n        maxEndurance,\n        maxStrength,\n        maxWillPower,\n      } = attributes\n\n      if (\n        (minAgility >= 0 &&\n          minEndurance >= 0 &&\n          minIntelligence >= 0 &&\n          minPrecision >= 0 &&\n          minStrength >= 0 &&\n          minWillPower >= 0 &&\n          maxIntelligence) ||\n        maxPrecision ||\n        maxAgility ||\n        maxEndurance ||\n        maxStrength ||\n        maxWillPower\n      ) {\n        // console.log(\n        //   minAgility,\n        //   minEndurance,\n        //   minIntelligence,\n        //   minPrecision,\n        //   minStrength,\n        //   minWillPower,\n        //   maxIntelligence,\n        //   maxPrecision,\n        //   maxAgility,\n        //   maxEndurance,\n        //   maxStrength,\n        //   maxWillPower\n        // )\n        // const lowercaseQuery = latinise(query.toLowerCase())\n        modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter(\n          (nft: GalleryNft) =>\n            (nft.attributes.agility >= minAgility && nft.attributes.agility <= maxAgility) ||\n            (nft.attributes.endurance >= minEndurance && nft.attributes.endurance <= maxEndurance) ||\n            (nft.attributes.intelligance >= minIntelligence && nft.attributes.intelligance <= maxIntelligence) ||\n            (nft.attributes.precision >= minPrecision && nft.attributes.precision <= maxPrecision) ||\n            (nft.attributes.strength >= minStrength && nft.attributes.strength <= maxStrength) ||\n            (nft.attributes.willpower >= minWillPower && nft.attributes.willpower <= maxWillPower),\n        )\n        // console.log(\"modelsToDisplayWithAPRmodelsToDisplayWithAPR\", modelsToDisplayWithAPR)\n      }\n      return modelsToDisplayWithAPR\n    },\n    [attributes],\n  )\n\n  const galleryWeaponsFiltering = useCallback(\n    (modelsToDisplay: GalleryNft[]): GalleryNft[] => {\n      let modelsToDisplayWithAPR = modelsToDisplay\n      const {\n        minOneHand,\n        minDual,\n        minTwoHand,\n        minPolearms,\n        minRanged,\n        minShield,\n        maxDual,\n        maxOneHand,\n        maxPolearms,\n        maxRanged,\n        maxShield,\n        maxTwoHand,\n      } = weapons\n\n      if (\n        (minOneHand >= 0 &&\n          minDual >= 0 &&\n          minTwoHand >= 0 &&\n          minPolearms >= 0 &&\n          minRanged >= 0 &&\n          minShield >= 0 &&\n          maxDual) ||\n        maxOneHand ||\n        maxPolearms ||\n        maxRanged ||\n        maxShield ||\n        maxTwoHand\n      ) {\n        modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter(\n          (nft: GalleryNft) =>\n            (nft.weapons.oneHand >= minOneHand && nft.weapons.oneHand <= maxOneHand) ||\n            (nft.weapons.dual >= minDual && nft.weapons.dual <= maxDual) ||\n            (nft.weapons.twoHand >= minTwoHand && nft.weapons.twoHand <= maxTwoHand) ||\n            (nft.weapons.polearms >= minPolearms && nft.weapons.polearms <= maxPolearms) ||\n            (nft.weapons.ranged >= minRanged && nft.weapons.ranged <= maxRanged) ||\n            (nft.weapons.shield >= minShield && nft.weapons.shield <= maxShield),\n        )\n        // console.log(\"modelsToDisplayWithAPRmodelsToDisplayWithAPR\", modelsToDisplayWithAPR)\n      }\n      return modelsToDisplayWithAPR\n    },\n    [weapons],\n  )\n\n  const galleryAbilitiesFiltering = useCallback(\n    (modelsToDisplay: GalleryNft[]): GalleryNft[] => {\n      let modelsToDisplayWithAPR = modelsToDisplay\n      const {\n        minLeadership,\n        minCoach,\n        minCook,\n        minMedical,\n        minSmith,\n        minTorture,\n        maxCoach,\n        maxLeadership,\n        maxMedical,\n        maxSmith,\n        maxTorture,\n        maxCook,\n      } = abilities\n\n      if (\n        (minLeadership >= 0 &&\n          minCoach >= 0 &&\n          minCook >= 0 &&\n          minMedical >= 0 &&\n          minSmith >= 0 &&\n          minTorture >= 0 &&\n          maxCoach) ||\n        maxLeadership ||\n        maxMedical ||\n        maxSmith ||\n        maxTorture ||\n        maxCook\n      ) {\n        modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter(\n          (nft: GalleryNft) =>\n            (nft.abilities.leadership >= minLeadership && nft.abilities.leadership <= maxLeadership) ||\n            (nft.abilities.coach >= minCoach && nft.abilities.coach <= maxCoach) ||\n            (nft.abilities.cook >= minCook && nft.abilities.cook <= maxCook) ||\n            (nft.abilities.medical >= minMedical && nft.abilities.medical <= maxMedical) ||\n            (nft.abilities.smith >= minSmith && nft.abilities.smith <= maxSmith) ||\n            (nft.abilities.torture >= minTorture && nft.abilities.torture <= maxTorture),\n        )\n        // console.log(\"modelsToDisplayWithAPRmodelsToDisplayWithAPR\", modelsToDisplayWithAPR)\n      }\n      return modelsToDisplayWithAPR\n    },\n    [abilities],\n  )\n\n  const galleryRarityFiltering = useCallback(\n    (modelsToDisplay: GalleryNft[]): GalleryNft[] => {\n      let modelsToDisplayWithAPR = modelsToDisplay\n\n      if (rarity[1] || rarity[2] || rarity[3] || rarity[4] || rarity[5] || rarity[6]) {\n        modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter(\n          (nft: GalleryNft) =>\n            (rarity[1] && nft.rarity === 1) ||\n            (rarity[2] && nft.rarity === 2) ||\n            (rarity[3] && nft.rarity === 3) ||\n            (rarity[4] && nft.rarity === 4) ||\n            (rarity[5] && nft.rarity === 5) ||\n            (rarity[6] && nft.rarity === 6),\n        )\n        // console.log(\"modelsToDisplayWithAPRmodelsToDisplayWithAPR\", modelsToDisplayWithAPR)\n      }\n      return modelsToDisplayWithAPR\n    },\n    [rarity],\n  )\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"gallery filter onchange\")\n    setQuery(event.target.value)\n  }\n\n  // price filter handlers\n  const handleMinNRTsQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    // console.log(\"setMinNRTs(event.target.value)\", event.target.value)\n    const rejexPositiveValue = /^[0-9\\b]+$/\n\n    if (event.target.value === '' || rejexPositiveValue.test(event.target.value)) {\n      const value = Number(event.target.value)\n      // console.log(typeof value)\n\n      setMinNRTs(value)\n    } else {\n      event.target.value = ''\n    }\n  }\n  // console.log(minNRTs)\n\n  const handleMaxNRTsQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    // console.log(\"setMaxNRTs(event.target.value)\", event.target.value)\n    const rejexPositiveValue = /^[0-9\\b]+$/\n\n    if (event.target.value === '' || rejexPositiveValue.test(event.target.value)) {\n      const value = Number(event.target.value)\n      // console.log(typeof value)\n\n      setMaxNRTs(value)\n    } else {\n      event.target.value = ''\n    }\n  }\n\n  // console.log(maxNRTs)\n\n  // characteristics filter handelers\n  const handleChangeCharacteristics = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const data = { ...characteristics }\n    data[event.target.name] = event.target.value\n    setCharacteristics(data)\n  }\n\n  // characteristics filter handelers\n  const handleChangeAttributes = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const data = { ...attributes }\n    const rejexPositiveValue = /^[0-9\\b]+$/\n\n    if (event.target.value === '' || rejexPositiveValue.test(event.target.value)) {\n      const value = Number(event.target.value)\n      data[event.target.name] = value\n      setAttributes(data)\n    } else {\n      event.target.value = ''\n    }\n  }\n  // Weapons filter handelers\n  const handleChangeWeapons = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const data = { ...weapons }\n    const rejexPositiveValue = /^[0-9\\b]+$/\n\n    if (event.target.value === '' || rejexPositiveValue.test(event.target.value)) {\n      const value = Number(event.target.value)\n      data[event.target.name] = value\n      setWeapons(data)\n    } else {\n      event.target.value = ''\n    }\n  }\n  // Abilities filter handelers\n  const handleChangeAbilities = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const data = { ...abilities }\n    const rejexPositiveValue = /^[0-9\\b]+$/\n\n    if (event.target.value === '' || rejexPositiveValue.test(event.target.value)) {\n      const value = Number(event.target.value)\n      data[event.target.name] = value\n      setAbilities(data)\n    } else {\n      event.target.value = ''\n    }\n  }\n\n  // Rarity filter handelers\n  const handleChangeRarity = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const data = { ...rarity }\n    // console.log(\"e.target.name\". event.target.name)\n    data[event.target.value] = event.target.checked\n    // console.log(event.target.checked)\n    // console.log(\"e.target.value\". event)\n    setRarity(data)\n  }\n  // useEffect(() => {\n  // console.log(\"rarityyyyyyyy\", rarity)\n  // }, [rarity])\n  type ValueI = 'ability' | 'weapon' | 'attributes' | 'characteristics' | 'rarity'\n\n  const clearFilterStates = (value: ValueI) => {\n    // console.log(\"value\", value)\n    if (value === 'ability') {\n      setAbilities(abilitiesInitialState)\n    }\n    if (value === 'weapon') {\n      setWeapons(weaponsInitialState)\n    }\n    if (value === 'attributes') {\n      setAttributes(attributeInitialState)\n    }\n    if (value === 'characteristics') {\n      setCharacteristics(characteristicsInitialState)\n    }\n    if (value === 'rarity') {\n      setRarity(rarityInitialState)\n    }\n  }\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n  const chosenNftModelsMemoized = useMemo(() => {\n    let chosenNftModels = []\n    const sortFarms = (nftModels: GalleryNft[]): GalleryNft[] => {\n      switch (sortOption) {\n        case 'hot':\n          return orderBy(nftModels, (nft: GalleryNft) => nft.orderBy, 'asc')\n        case 'rarity':\n          return orderBy(nftModels, (nft: GalleryNft) => nft.rarity, 'desc')\n        case 'supply':\n          return orderBy(nftModels, (nft: GalleryNft) => nft.supply, 'desc')\n        case 'school price':\n          return orderBy(nftModels, (nft: GalleryNft) => nft.finalLifeCycle.price, 'desc')\n        case 'gladiator ready':\n          return orderBy(nftModels, (nft: GalleryNft) => nft.finalLifeCycle.price, 'desc')\n        default:\n          return nftModels\n      }\n    }\n\n    if (isActive) {\n      const stake = stakedOnly ? galleryList(stakedOnlyFarms) : galleryList(activeFarms)\n      const fresh = freshwaterOnly ? galleryList(freshwaterOnlyFarms) : []\n      const salt = saltwaterOnly ? galleryList(saltwaterOnlyFarms) : []\n      chosenNftModels = union(fresh, salt)\n    }\n    if (isActive) {\n      const stake = chosenNftModels ? galleryPriceFiltering(chosenNftModels) : galleryPriceFiltering(chosenNftModels)\n      const fresh = chosenNftModels ? galleryPriceFiltering(chosenNftModels) : []\n      const salt = chosenNftModels ? galleryPriceFiltering(chosenNftModels) : []\n      chosenNftModels = union(fresh, salt)\n    }\n    if (isActive) {\n      const stake = chosenNftModels\n        ? galleryCharacteristicsFiltering(chosenNftModels)\n        : galleryCharacteristicsFiltering(chosenNftModels)\n      const fresh = chosenNftModels ? galleryCharacteristicsFiltering(chosenNftModels) : []\n      const salt = chosenNftModels ? galleryCharacteristicsFiltering(chosenNftModels) : []\n      chosenNftModels = union(fresh, salt)\n    }\n    if (isActive) {\n      const stake = chosenNftModels\n        ? galleryAttributesFiltering(chosenNftModels)\n        : galleryAttributesFiltering(chosenNftModels)\n      const fresh = chosenNftModels ? galleryAttributesFiltering(chosenNftModels) : []\n      const salt = chosenNftModels ? galleryAttributesFiltering(chosenNftModels) : []\n      chosenNftModels = union(fresh, salt)\n    }\n    if (isActive) {\n      const stake = chosenNftModels\n        ? galleryWeaponsFiltering(chosenNftModels)\n        : galleryWeaponsFiltering(chosenNftModels)\n      const fresh = chosenNftModels ? galleryWeaponsFiltering(chosenNftModels) : []\n      const salt = chosenNftModels ? galleryWeaponsFiltering(chosenNftModels) : []\n      chosenNftModels = union(fresh, salt)\n    }\n    if (isActive) {\n      const stake = chosenNftModels\n        ? galleryAbilitiesFiltering(chosenNftModels)\n        : galleryAbilitiesFiltering(chosenNftModels)\n      const fresh = chosenNftModels ? galleryAbilitiesFiltering(chosenNftModels) : []\n      const salt = chosenNftModels ? galleryAbilitiesFiltering(chosenNftModels) : []\n      chosenNftModels = union(fresh, salt)\n    }\n    if (isActive) {\n      const stake = chosenNftModels ? galleryRarityFiltering(chosenNftModels) : galleryRarityFiltering(chosenNftModels)\n      const fresh = chosenNftModels ? galleryRarityFiltering(chosenNftModels) : []\n      const salt = chosenNftModels ? galleryRarityFiltering(chosenNftModels) : []\n      chosenNftModels = union(fresh, salt)\n    }\n\n    // if (isInactive) {\n    //   chosenNftModels = stakedOnly ? galleryList(stakedInactiveFarms) : galleryList(inactiveFarms)\n    // }\n    if (isArchived) {\n      chosenNftModels = stakedOnly ? galleryList(stakedArchivedFarms) : galleryList(archivedFarms)\n    }\n    // console.log(\"sortFarmssortFarmssortFarmssortFarms\", sortFarms(chosenNftModels))\n    return sortFarms(chosenNftModels).slice(0, numberOfFarmsVisible)\n  }, [\n    query,\n    sortOption,\n    activeFarms,\n    galleryList,\n    archivedFarms,\n    isActive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    freshwaterOnly,\n    freshwaterOnlyFarms,\n    saltwaterOnly,\n    saltwaterOnlyFarms,\n    numberOfFarmsVisible,\n    minNRTs,\n    maxNRTs,\n    characteristics,\n    attributes,\n    weapons,\n  ])\n\n  chosenNftModelsLength.current = chosenNftModelsMemoized.length\n  const profileContract = useProfileContract()\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfFarmsVisible((farmsCurrentlyVisible) => {\n        if (farmsCurrentlyVisible <= chosenNftModelsLength.current) {\n          return farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE\n        }\n        return farmsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n\n  const getUserStatus = async () => {\n    // console.log(\"profileContractprofileContract\", profileContract)\n    const data = await profileContract.getUserStatus(account)\n    if (!data) {\n      // history.push(\"/create-profile\")\n    }\n  }\n\n  useEffect(() => {\n    getUserStatus()\n  }, [])\n  const renderContent = (): JSX.Element => {\n    //GF-227\n    return (\n      <>\n        {chosenNftModelsMemoized.length > 0 ? (\n          <FlexLayout>\n            <Route exact path={`${path}`}>\n              {chosenNftModelsMemoized.map((nftModel) => (\n                <GalleryModelCard\n                  key={nftModel.glTF}\n                  nftModel={nftModel}\n                  // displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n                  cakePrice={cakePrice}\n                  account={account}\n                  removed={false}\n                />\n              ))}\n            </Route>\n            {/* <Route exact path={`${path}/history`}>\n          {chosenNftModelsMemoized.map((nftModel) => (\n            <GalleryModelCard\n              key={nftModel.glTF}\n              nftModel={nftModel}\n              // displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed={false}\n            />\n          ))}\n        </Route>\n        <Route exact path={`${path}/archived`}>\n          {chosenNftModelsMemoized.map((nftModel) => (\n            <GalleryModelCard\n              key={nftModel.glTF}\n              nftModel={nftModel}\n              // displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed={false}\n            />\n          ))}\n        </Route> */}\n          </FlexLayout>\n        ) : (\n          <GallerySearch>No result found</GallerySearch>\n        )}\n      </>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    // console.log(\"optionoptionoptionoptionoptionoptionoption\", option)\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <StyledHeader>\n        <Flex flexDirection={['column-reverse', null, 'row']}>\n          <Left>\n            <NewHeading as=\"h1\" scale=\"xxl\" my=\"24px\">\n              {t('Gladiators 3D Gallery')}\n            </NewHeading>\n            <Text color=\"textSubtle\" mb=\"24px\">\n              {t(\n                \"This is where you will find our ecosystem's 3D models for purchase. Browse, personalize and buy, as simple as 1, 2, 3.\",\n              )}\n            </Text>\n            <Text color=\"textSubtle\">\n              {t(\n                \"Click on Personalize & Buy to visualize and personalize, you won't be charged until you make up your mind.\",\n              )}\n            </Text>\n            <Text color=\"textSubtle\" mb=\"24px\">\n              {t(\"Make sure you visit your creature's evolution life cycle.\")}\n            </Text>\n            {/* <Link external href={FORM_ADDRESS}>\n              <Button>\n                <Text color=\"white\" bold fontSize=\"16px\" mr=\"4px\">\n                  {t('Apply for a Farm/Pool')}\n                </Text>\n              </Button>\n            </Link> */}\n          </Left>\n          <Right>\n            <img src=\"/images/decorations/gladiator.png\" alt={t('gallery gladiator')} />\n          </Right>\n        </Flex>\n      </StyledHeader>\n      <GalleryBackground\n        innerProps={{ style: { margin: '0', width: '100%' } }}\n        p=\"24px 0\"\n        index={2}\n        concaveDivider\n        dividerPosition=\"top\"\n        clipFill={{ light: 'url(/images/decorations/bgmin.png)', dark: 'url(/images/decorations/bgmin.png)' }}\n      >\n        <FilterContainer flexDirection={['column', null, null, 'row']}>\n          <Flex flexDirection=\"column\" width=\"288px\" minWidth=\"288px\">\n            <FilterCard\n              handleCurrency={setCurrency}\n              handleChangeQuery={handleChangeQuery}\n              handleSortOptionChange={handleSortOptionChange}\n              freshwaterOnly={freshwaterOnly}\n              saltwaterOnly={saltwaterOnly}\n              setFreshwaterOnly={setFreshwaterOnly}\n              setSaltwaterOnly={setSaltwaterOnly}\n              handleMinNRTsQuery={handleMinNRTsQuery}\n              handleMaxNRTsQuery={handleMaxNRTsQuery}\n              handleChangeCharacteristics={handleChangeCharacteristics}\n              handleChangeAttributes={handleChangeAttributes}\n              handleChangeWeapons={handleChangeWeapons}\n              handleChangeAbilities={handleChangeAbilities}\n              handleChangeRarity={handleChangeRarity}\n              rarity={rarity}\n              clearFilterStates={clearFilterStates}\n            />\n          </Flex>\n\n          {renderContent()}\n          {account && !userDataLoaded && stakedOnly && (\n            <Flex justifyContent=\"center\">\n              <Loading />\n            </Flex>\n          )}\n        </FilterContainer>\n        <div ref={observerRef} />\n        <MainCharacter>\n          <StyledImage src=\"/images/decorations/3dpan.png\" alt=\"Gladiators illustration\" />\n        </MainCharacter>\n      </GalleryBackground>\n    </>\n  )\n}\n\nexport default Gallery\n","import create from 'zustand';\n\nexport const useCountStore = create((set, get) => ({\n\tshowStatics: false,\n\tupdateShowStatics: ( value ) => {\n\t\tset({ showStatics: value });\n\t},\n\tcurrentStatics: null,\n\tupdateCurrentStatics: (value) => {\n\t\tset({ currentStatics: value });\n\t},\n\tcurrentHoverModel: null,\n\tupdateCurrentHoverModel: (value) => {\n\t\tset({ currentHoverModel: value });\n\t},\n\tmyGladiators: null,\n\tsetMyGladiators: data => {\n\t\tset({myGladiators: data})\n\t},\n\tschoolGladiators: null,\n\tsetSchoolGladiators: data => {\n\t\tset({schoolGladiators: data})\n\t},\n\tusersGladiators: null,\n\tsetUsersGladiators: data => {\n\t\tset({usersGladiators: data})\n\t},\n\tuserNftHashes: [],\n\tsettingUserNFTHashes: data => {\n\t\tset({userNftHashes: data})\n\t},\n\tschoolNftHashes: [],\n\tsettingSchoolNFTHashes: data => {\n\t\tset({schoolNftHashes: data})\n\t},\n\tnftHashes: [],\n\tsettingNFTHashes: data => {\n\t\tset({nftHashes: data})\n\t},\n\ttotalSupplies: 0,\n\tsetTotalSupplies: data => {\n\t\tset({totalSupplies: data})\n\t}\n}))\n\nexport default useCountStore;"],"sourceRoot":""}