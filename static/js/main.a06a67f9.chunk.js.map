{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useActiveWeb3React.ts","state/swap/actions.ts","state/mint/actions.ts","components/Layout/Row.tsx","config/constants/contracts.ts","utils/addressHelpers.ts","utils/bigNumber.ts","config/constants/types.ts","state/user/actions.ts","utils/formatBalance.ts","config/constants/tokens.ts","components/Layout/Column.tsx","utils/index.ts","utils/contractHelpers.ts","config/constants/index.ts","config/constants/endpoints.ts","hooks/useContract.ts","components/Balance.tsx","state/user/hooks/index.tsx","utils/multicall.ts","state/pools/hooks.ts","config/index.ts","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","utils/wrappedCurrency.ts","state/swap/types.ts","views/Pools/helpers.tsx","state/user/hooks/helpers.ts","state/predictions/helpers.ts","state/predictions/queries.ts","state/multicall/hooks.ts","state/nftMarket/helpers.ts","state/nftMarket/queries.ts","state/collectibles/index.ts","state/info/index.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","state/nftMarket/types.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/types.ts","config/constants/lists.ts","state/lists/hooks.ts","components/QuestionHelper/index.tsx","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/lists/actions.ts","utils/prices.ts","state/multicall/actions.ts","hooks/useTheme.ts","config/constants/pools.ts","hooks/useToast.ts","utils/providers.ts","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","components/Toast/DescriptionWithTx.tsx","state/block/hooks.ts","state/transactions/actions.ts","utils/getLpAddress.ts","state/swap/queries/lastPairDayId.ts","state/swap/queries/pairHourDatas.ts","state/swap/queries/pairDayDatasByIdsQuery.ts","state/swap/fetch/constants.ts","state/swap/fetch/utils.ts","state/swap/queries/pairDayDatas.ts","state/swap/queries/pairHourDatasByIds.ts","state/swap/queries/lastPairHourId.ts","utils/requestWithTimeout.ts","state/swap/fetch/fetchPairPriceData.ts","state/swap/normalizers.ts","state/swap/queries/getDerivedPrices.ts","state/swap/fetch/fetchDerivedPriceData.ts","state/swap/hooks.ts","state/swap/constants.ts","hooks/useParsedQueryString.ts","state/swap/selectors.ts","state/wallet/hooks.ts","hooks/usePairs.ts","state/transactions/hooks.tsx","state/farms/hooks.ts","state/info/actions.ts","config/constants/nftsCollections/types.ts","config/constants/nftsCollections/index.ts","views/Nft/market/constants.ts","components/Card/index.tsx","utils/compoundApyHelpers.ts","utils/getGasPrice.ts","state/predictions/config.ts","config/localization/languages.ts","components/ConnectWalletButton.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/actions.ts","hooks/useCallWithGasPrice.ts","state/lottery/helpers.ts","hooks/useDebounce.ts","config/constants/nfts/collections.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","utils/isZero.ts","contexts/RefreshContext.tsx","contexts/Localization/helpers.ts","utils/truncateHash.ts","hooks/useRefresh.ts","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","state/profile/index.tsx","utils/wallet.ts","hooks/useAuth.ts","utils/clearUserStates.ts","utils/uriToHttp.ts","utils/currencyId.ts","views/Swap/components/Chart/utils.ts","utils/trades.ts","hooks/Trades.ts","hooks/useTokenBalance.ts","hooks/usePreviousValue.ts","state/teams/index.tsx","utils/web3React.ts","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","config/constants/meta.ts","components/Layout/Page.tsx","state/profile/hooks.ts","config/constants/info.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","components/Tags.tsx","components/Loader/CircleLoader.tsx","hooks/useIsWindowVisible.ts","routerHistory.ts","state/block/index.ts","utils/getRpcUrl.ts","config/constants/nfts/types.ts","utils/ENS/parseENSAddress.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/GasSettings.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","state/profile/helpers.ts","config/constants/campaigns.ts","components/SearchModal/filtering.ts","hooks/useSWRContract.ts","hooks/useBUSDPrice.ts","components/Loader/Dots.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","hooks/useScript.ts","components/TradingView.tsx","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens.ts","views/Swap/components/Chart/constants.ts","components/Layout/Container.tsx","state/nftMarket/reducer.ts","views/Info/utils/infoQueryHelpers.ts","components/TokenImage/index.tsx","views/Info/components/ChartLoaders/LineChartLoaderSVG.tsx","views/Info/components/ChartLoaders/BarChartLoaderSVG.tsx","views/Info/components/ChartLoaders/CandleChartLoaderSVG.tsx","views/Info/components/ChartLoaders/index.tsx","views/Page.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","config/constants/ifo.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/pools/helpers.ts","state/achievements/helpers.ts","state/lottery/getUserLotteryData.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","hooks/useInterval.ts","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/Menu/Footer.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","config/constants/nfts/gladiatorsProfileCollectibles.ts","config/constants/nfts/index.ts","utils/collectibles.ts","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","utils/latinise.ts","state/burn/actions.ts","utils/achievements.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","components/PageHeader/PageHeader.tsx","components/Loader/PageLoader.tsx","views/Info/utils/formatInfoNumbers.ts","components/Select/Select.tsx","state/lottery/index.ts","utils/getTimePeriods.ts","views/Info/hooks/useBlocksFromTimestamps.ts","hooks/useIntersectionObserver.ts","hooks/useLastUpdated.ts","state/gallery/index.ts","components/Loading.tsx","components/Layout/Flex.tsx","components/PositionCard/index.tsx","components/SearchInput/SearchInput.tsx","state/voting/helpers.ts","state/voting/index.tsx","state/achievements/index.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserTicketsData.ts","hooks/useDelayedUnmount.ts","utils/farmHelpers.ts","utils/apr.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","state/lists/updater.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","hooks/useScrollOnRouteChange.ts","components/DatePicker/DatePickerPortal.tsx","style/Global.tsx","components/Menu/config/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","components/Menu/UserMenu/ProfileUserMenutItem.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/utils.ts","components/Menu/config/footerConfig.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/ToggleView/ToggleView.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/components/Chart/styles.tsx","views/Swap/components/Chart/BnbWbnbNotice.tsx","views/Swap/components/Chart/NoChartAvailable.tsx","views/Swap/components/Chart/TokenDisplay.tsx","views/Swap/components/Chart/BasicChart.tsx","views/Swap/components/Chart/TradingViewChart.tsx","views/Swap/components/Chart/PriceChart.tsx","views/Swap/components/Chart/PriceChartContainer.tsx","views/Swap/styles.tsx","views/Swap/components/CurrencyInputHeader.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","components/GlobalCheckClaimStatus/AnniversaryAchievementModal.tsx","components/GlobalCheckClaimStatus/index.tsx","App.tsx","Providers.tsx","fonts/good_times/GOODTIME.TTF","fonts/good_times/font.js","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setProvider","current","parseInt","process","Field","selectCurrency","createAction","switchCurrencies","typeInput","replaceSwapState","setRecipient","updatePairData","updateDerivedPairData","resetMintState","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","getAddress","address","ChainId","MAINNET","getMasterChefAddress","addresses","getMulticallAddress","getLotteryV2Address","getGladiatorProfileAddress","getPancakeRabbitsAddress","getGladiatorCollectibleFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","getAnniversaryAchievement","getNftMarketAddress","getNftSaleAddress","getPancakeSquadAddress","getGlaidatorNftAddress","getGlaidatorAchievementsAddress","getBattleNftAddress","getAchievementNftAddress","getReferralsNftAddress","getPredictionNftAddress","getGlaidatorEquipmentAddress","BIG_ZERO","BigNumber","BIG_ONE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","PoolIds","PoolCategory","LotteryStatus","AuctionStatus","FetchStatus","FarmStakedOnly","ViewMode","ChartViewMode","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","updateUserGalleryFreshwaterOnly","updateUserGallerySaltwaterOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionAcceptedRisk","updateUserPredictionChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","updateGasPrice","setChartViewMode","addWatchlistToken","addWatchlistPool","setIsExchangeChartDisplayed","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","TESTNET","mainnetTokens","wbnb","Token","bnb","cake","nrt","dena","tlos","nft","stephero","pros","qbt","cvp","bscdefi","busd","dai","usdt","btcb","ust","eth","usdc","kalm","hotcross","belt","watch","bry","wsote","helmet","ten","ditto","blink","syrup","pha","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","ada","band","dot","eos","link","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","pots","gnt","rusd","bp","sfund","naos","testnetTokens","khaos","governance","tokens","reduce","accum","serializeTokens","unserializedTokens","serializeToken","Column","ColumnCenter","AutoColumn","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","getBscScanLinkForNft","collectionAddress","tokenId","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getProviderOrSigner","account","getSigner","connectUnchecked","getContract","ABI","AddressZero","Contract","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","config","poolsConfig","find","pool","sousId","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getNrtContract","nrtAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getGladiatorCollectibleFactoryContract","gladiatorCollectibleFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","getAnniversaryAchievementContract","anniversaryAchievementAbi","getNftMarketContract","nftMarketAbi","getPancakeSquadContract","pancakeSquadAbi","getErc721CollectionContract","erc721CollectionAbi","getGladiatorNftContract","gladiatorNftAbi","getGladiatorAchievementsContract","gladiatorAchievementsAbi","getBattleNftContract","battleNftAbi","getAchievementNftContract","achievementsAbi","getReferralsNftContract","referralsAbi","getPredictionNftContract","predictionAbi","getGladiatorEquipmentContract","gladiatorEquipmentAbi","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","GRAPH_API_PROFILE","GRAPH_API_PREDICTION","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","API_PROFILE","API_NFT","SNAPSHOT_API","SNAPSHOT_HUB_API","GRAPH_API_PREDICTION_V1","INFO_CLIENT","BLOCKS_CLIENT","GRAPH_API_NFTMARKET","CHAIN_ID","useIfoV1Contract","useMemo","useIfoV2Contract","useERC20","useCake","useNrt","useGladiatorCollectibleFactory","useGladiatorNft","useBattleNft","usePredictionNft","useGladiatorEquipment","useProfileContract","withSignerIfPossible","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useTradingCompetitionContract","useCakeVaultContract","usePredictionsContract","useAnniversaryAchievementContract","useFarmAuctionContract","useNftMarketContract","useErc721CollectionContract","useContract","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","multiCallAbi","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","suffix","duration","separator","useAudioModeManager","dispatch","useDispatch","audioPlay","useSelector","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useExchangeChartViewManager","userChartViewMode","view","useUserSlippageTolerance","userSlippageTolerance","useExchangeChartManager","isMobile","isChartDisplayed","isExchangeChartDisplayed","isDisplayed","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserGalleryFreshwaterOnly","userGalleryFreshwaterOnly","setUserGalleryFreshwaterOnly","freshwaterOnly","useUserGallerySaltwaterOnly","userGallerySaltwaterOnly","setUserGallerySaltwaterOnly","saltwaterOnly","useUserPoolStakedOnly","userPoolStakedOnly","useUserPoolsViewMode","userPoolsViewMode","viewMode","useUserFarmsViewMode","userFarmsViewMode","useUserPredictionAcceptedRisk","userPredictionAcceptedRisk","acceptedRisk","userAcceptedRisk","useUserPredictionChartDisclaimerShow","userPredictionChartDisclaimerShow","showDisclaimer","userShowDisclaimer","useUserExpertModeAcknowledgementShow","userExpertModeAcknowledgementShow","showAcknowledgement","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","token","serializedToken","useRemoveUserAddedToken","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","useGasPriceManager","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","memo","sorted","sortsBefore","useWatchlistTokens","watchlistTokens","useWatchlistPools","watchlistPools","multicall","calls","multi","itf","utils","Interface","calldata","call","target","toLowerCase","callData","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","useFetchPublicPoolsData","useAppDispatch","slowRefresh","useSlowFresh","getBlockNumber","blockNumber","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","useFetchUserPools","fastRefresh","useFastFresh","fetchPoolsUserDataAsync","usePools","pools","userDataLoaded","transformPool","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userData","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","IPFS_GATEWAY","PINATA_CLOUD","PANCAKE_BUNNIES_UPDATE_FREQUENCY","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbol","symbolBytes32","loading","useCurrency","currencyId","isBNB","toUpperCase","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","PairDataTimeWindowEnum","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","apr","autoCompoundFrequency","getApy","getCakeVaultEarnings","earningTokenPrice","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","Math","max","blocksRemaining","hasPoolStarted","blocksToDisplay","GAS_PRICE","projectLink","default","parseUnits","fast","instant","Result","numberOrNull","valueNum","Number","isNaN","transformBetResponse","betResponse","bet","hash","block","parseFloat","position","BetPosition","BULL","BEAR","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","transformUserResponse","round","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getFilteredBets","HistoryFilter","COLLECTED","UNCOLLECTED","ALL","getBetHistory","where","first","skip","request","gql","response","getLedgerData","epochs","ledgerCalls","LEADERBOARD_RESULTS_PER_PAGE","defaultPredictionUserOptions","orderBy","orderDir","getPredictionUsers","users","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","claimableResponse","index","claimable","getPredictionData","staticCalls","method","intervalSeconds","minBetAmount","paused","bufferSeconds","status","PredictionStatus","PAUSED","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","rounds","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","parseBigNumberObj","fetchUsersRoundsLength","contract","getUserRoundsLength","fetchUserRounds","cursor","ROUNDS_PER_PAGE","getUserRounds","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blocksPerFetch","Infinity","useCallsData","callResults","serializedCallKeys","JSON","stringify","c","toCallKey","sort","callKeys","parse","parseCallKey","addMulticallListeners","removeMulticallListeners","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","results","inputs","useBlock","useMultipleContractSingleData","addGladiatorsToDB","axios","post","newData","getAllGladiators","fetch","ok","json","getSpecificGladiators","ids","getSpecificGladiators2","addJoinBattleNFTToDB","getAllJoinPageNfts","getSpecificJoinPageNfts","getCollectionsApi","fromApi","total","count","statusText","getCollectionApi","getNftsFromCollectionApi","page","isPBCollection","gladiatorCollectiblesAddress","requestPath","requestTotal","resTotal","getNftApi","getNftsFromDifferentCollectionsApi","promises","Promise","all","responses","resp","collectionName","collection","description","attributes","image","getCollectionSg","getCollectionsSg","getNftsByGladiatorCollectibleIdSg","bunnyId","existingTokenIds","orderDirection","otherId","isTradable","tokenId_not_in","nfts","getMarketDataForTokenIds","tokenId_in","getNftsMarketData","getAllGladiatorCollectiblesLowestPrice","bunnyIds","singleGladiatorCollectibleSubQueries","rawResponse","lowestPricesData","subQueryKey","split","currentAskPrice","getAllGladiatorCollectiblesRecentUpdatedAt","updatedAtData","getLowestPriceInCollection","nftSg","getUserActivity","askOrderHistory","buyTradeHistory","sellTradeHistory","getCollectionActivity","nftActivityFilter","itemPerQuery","getAskOrderEvent","orderType","MarketEvent","CANCEL","AskOrderType","MODIFY","NEW","isFetchAllCollections","hasCollectionFilter","collectionFilters","collectionFilterGql","askOrderTypeFilter","typeFilters","marketEvent","SELL","askOrderIncluded","askOrderTypeFilterGql","transactionIncluded","some","BUY","askOrderQueryItem","transactionQueryItem","askOrderGql","transactionGql","askOrders","transactions","getTokenActivity","askHistory","transactionHistory","getLatestListedNfts","fetchNftsFiltered","filters","getMetadataWithFallback","apiMetadata","original","thumbnail","getGladiatorCollectiblesAttributesField","traitType","displayType","combineApiAndSgResponseToNftToken","marketData","fetchWalletTokenIdsForCollections","collections","balanceOfCalls","balanceOfCallsResultRaw","balanceOfCallsResult","flat","tokenIdCalls","balanceOf","range","tokenIndex","tokenIdResultRaw","tokenIdResult","nftLocation","NftLocation","WALLET","walletNfts","acc","tokenIdBn","push","combineCollectionData","collectionApiData","collectionSgData","collectionsMarketObj","prev","collectionMarket","attachMarketDataToWalletNfts","marketDataForWalletNfts","walletNft","marketNft","metadataUrl","currentSeller","latestTradedPriceInBNB","tradeVolumeBNB","totalTrades","combineNftMarketAndMetadata","nftsWithMetadata","nftsForSale","tokenIdsInWallet","tokenIdsForSale","profileNftId","forSaleNft","location","PROFILE","FORSALE","getNftLocationForMarketNft","getCompleteAccountNftData","profileNftWithCollectionAddress","walletNftIdsWithCollectionAddress","unshift","uniqueCollectionAddresses","uniq","walletNftId","walletNftsByCollection","idWithCollectionAddress","walletMarketDataRequests","walletNftByCollection","tokenIdIn","walletMarketDataResponses","walletMarketData","walletNftsWithMarketData","walletTokenIds","marketDataForSaleNfts","forSaleNftIds","metadataForAllNfts","completeNftData","getCollectionDistributionApi","fetchWalletNfts","createAsyncThunk","nftSourcePromises","nftSourceType","addressObj","balanceOfResponse","getTokenIdAndData","tokenOfOwnerByIndex","getNftByTokenId","identifier","nftDataFetchPromises","nftData","nftSourceData","collectiblesSlice","createSlice","isInitialized","reducers","extraReducers","builder","addCase","pending","fulfilled","action","payload","association","protocol","overview","chartData","byAddress","createReducer","updateProtocolData","protocolData","updateProtocolChartData","updateProtocolTransactions","updatePoolData","poolData","addPoolKeys","poolAddresses","updatePoolChartData","poolAddress","updatePoolTransactions","updateTokenData","tokenData","addTokenKeys","tokenAddresses","priceData","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","secondsInterval","oldestFetchedTimestamp","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","TABLE","userUsernameVisibility","BASIC","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","tokenWatchlist","newTokens","poolsWatchlist","newPools","now","addTransaction","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","pairDataById","derivedPairDataById","otherField","pairData","timeWindow","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","requestId","url","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","blockReducer","farms","farmsReducer","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","gallery","galleryReducer","voting","votingReducer","lottery","lotteryReducer","info","infoReducer","nftMarket","nftMarketReducer","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","NFTMarketInitializationState","UserNftInitializationState","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","callWithGasPrice","useCallWithGasPrice","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","ProfileAvatarFetchStatus","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","QuestionWrapper","QuestionHelper","text","placement","useTooltip","trigger","targetRef","tooltip","tooltipVisible","ref","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingKhaos","pendingReward","fetchPublicVaultData","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","cakeVaultContract","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","tokenPerBlock","setPoolsPublicData","stakingLimitData","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","findIndex","actions","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","multiplyPriceByAmount","price","significantDigits","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","useTheme","theme","StyledThemeContext","serializedTokens","CORE","harvest","sortOrder","arena","cardTextColor","useToast","toastContext","ToastsContext","RPC_URL","getRpcUrl","providers","JsonRpcProvider","types","SUCCESS","DANGER","WARNING","INFO","alertTypeMap","alertVariants","StyledToast","mediaQueries","sm","Toast","toast","onRemove","ttl","timer","removeHandler","title","handleRemove","clearTimeout","window","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","zIndex","top","DescriptionWithTx","txHash","as","external","href","truncateHash","usePollBlockNumber","isWindowVisible","useIsWindowVisible","setInterval","setBlock","clearInterval","useInitialBlock","initialBlock","getLpAddress","token2","token1AsTokenInstance","token2AsTokenInstance","String","checksummedToken1Address","checksummedToken2Address","lastPairDayId","pairHourDatas","pairDayDatasByIdsQuery","timeWindowIdsCountMapping","DAY","WEEK","MONTH","YEAR","timeWindowGapMapping","getHeaders","endpoint","REACT_APP_SF_HEADER","getPairSequentialId","getIdsByTimeWindow","pairLastId","idsCount","pairLastIdAsNumber","pairHasEnoughLiquidity","amountOfDataPoints","totalLiquidity","fetchPairEntry","reserveUSD","pairDayDatas","pairHourDatasByIds","lastPairHourId","requestWithTimeout","graphQLClient","variables","race","reject","fetchPairPriceData","client","GraphQLClient","headers","lastPairHourIdData","lastId","pairHourId","pairHourIds","pairIds","pairHoursData","lastPairDayIdData","pairDayIds","pairDayData","normalizeChartData","time","hourStartUnix","token0Id","token1Id","reserve0","reserve1","date","normalizeDerivedChartData","token0DerivedBnb","token0DerivedBnbEntry","token1DerivedBnbEntry","token1DerivedBnb","token0DerivedBNB","derivedBNB","token1DerivedBNB","getDerivedPrices","blocks","getDerivedPricesQueryConstructor","subqueries","getTokenDerivedBnbPrices","multiQuery","tokenPrices","priceKey","b","getInterval","ONE_HOUR_SECONDS","ONE_DAY_UNIX","getSkipDaysToStart","fetchDerivedPriceData","interval","endTimestamp","getUnixTime","startOfHour","days","timestamps","getBlocksFromTimestamps","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useSingleTokenSwapInfo","inputCurrency","outputCurrency","getTokenAddress","parsedAmount","bestTradeExactIn","useTradeExactIn","inputTokenPrice","outputTokenPrice","useDerivedSwapInfo","inputError","recipientLookup","useENS","to","relevantTokenBalances","useCurrencyBalances","isExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","currencies","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","useFetchPairPrices","currentSwapPrice","setPairId","setIsLoading","pairByDataIdSelector","derivedPairData","derivedPairByDataIdSelector","fetchDerivedData","derivedData","normalizedDerivedData","hasEnoughLiquidity","newPairData","fetchAndUpdatePairPrice","updatePairId","normalizedPairData","activeToken","pairPrice","fromUnixTime","reverse","normalizePairDataByActiveToken","normalizedDerivedPairData","normalizeDerivedPairDataByActiveToken","hasSwapPrice","normalizedPairDataWithCurrentSwapPrice","normalizedDerivedPairDataWithCurrentSwapPrice","hasNoDirectData","hasNoDerivedData","pairPrices","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","callState","useTokenBalances","useTokenBalance","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","EXISTS","usePair","useAllTransactions","isTransactionRecent","allTransactions","deserializeFarmUserData","farm","tokenBalance","earnings","deserializeFarm","lpAddresses","lpSymbol","pid","dual","multiplier","isCommunity","quoteTokenPriceBusd","tokenPriceBusd","quoteToken","tokenAmountTotal","lpTotalInQuoteToken","lpTotalSupply","tokenPriceVsQuote","poolWeight","usePollFarmsPublicData","includeArchive","pids","farmsConfig","nonArchivedFarms","farmToFetch","fetchFarmsPublicDataAsync","usePollFarmsWithUserData","fetchFarmUserDataAsync","usePollCoreFarmData","useFarms","deserializedFarmsData","loadArchivedFarmsData","useFarmFromPid","f","useFarmUser","useLpTokenPrice","useFarmFromLpSymbol","farmTokenPriceInUsd","useBusdPriceFromPid","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","usePriceCakeBusd","cakePriceBusdAsString","GladiatorsCollectionKey","gladiatorsCollections","GLADIATORS","slug","SQUAD","nftsBaseUrl","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","compoundFrequency","timesCompounded","aprAsDecimal","roundingDecimalsNew","daysAsDecimalOfYear","principal","interestEarned","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","getGasPrice","REWARD_RATE","ROUND_BUFFER","PAST_ROUND_COUNT","LEADERBOARD_MIN_ROUNDS_PLAYED","code","languageList","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","quoteTokenAmountMc","masterchefABI","totalAllocPoint","allocPoint","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","serializedFarm","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","useDebounce","delay","debouncedValue","setDebouncedValue","handler","CollectionKey","getTokenLogoURL","StyledLogo","uriLocations","isZero","hexNumberString","FAST_INTERVAL","SLOW_INTERVAL","createRefreshContext","RefreshContext","React","Context","setCount","useInterval","SlowRefresh","FastRefresh","RefreshContextProvider","getItem","startLength","endLength","substring","EditingCurrency","CalculatorMode","Footer","Flex","BulletList","ul","textSubtle","RoiCalculatorFooter","isFarm","displayApr","linkLabel","linkHref","isExpanded","setIsExpanded","my","tooltipOffset","multiplierRef","multiplierTooltip","multiplierTooltipVisible","gridRowCount","apy","flexDirection","expanded","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","justifyContent","alignItems","mr","height","fontSize","display","mt","fee","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","useReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","MILLION","RoiCardWrapper","radii","RoiCardInner","gradients","bubblegum","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","Text","fadeOut","RoiCard","earningTokenSymbol","calculatorState","inputRef","focus","onEnterEditing","bold","textTransform","inputMode","pattern","scale","placeholder","onChange","event","currentTarget","rotate","keyframes","ArrowContainer","primary","AnimatedArrow","setKey","prevKey","prevId","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","headerBackground","mb","asset","currencyValue","innerRef","switchEditingUnits","onFocus","lte","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","hasRegistered","profileAvatars","fetchProfile","getProfile","fetchProfileAvatar","getProfileAvatar","fetchProfileUsername","username","getUsername","profileSlice","profileClear","addPoints","points","meta","arg","usernameFetchStatus","Fetching","avatarFetchStatus","Fetched","Idle","setupNetwork","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","tokenAdded","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","resetUserNftState","Sentry","scope","setUser","walletconnect","close","clearUserStates","uriToHttp","uri","substr","getTimeWindowChange","lineChartData","firstValue","changeValue","min","MIN_VALUE_DISPLAYED","changePercentage","lowerCaseAddress","BNB_ADDRESS","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","useSWRContract","refreshInterval","rest","fetchStatus","useGetBnbBalance","useSWR","mutate","constants","Zero","refresh","useGetNrtBalance","usePreviousValue","teamsList","team","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","teamId","getTeam","fetchTeams","getTeams","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","rpc","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","TransactionSubmittedContent","currencyToAdd","strokeWidth","isMetaMask","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","DEFAULT_META","StyledPage","Container","lg","PageMeta","pathname","nrtPriceUsd","useNrtBusdPrice","nrtPriceUsdDisplay","pageMeta","startsWith","getCustomMeta","pageTitle","join","property","Page","useFetchProfile","useProfileForAddress","profileState","setProfileState","hasAddressChanged","fetchProfileForAddress","useAchievementsForAddress","getAchievements","useProfile","hasProfile","useGetProfileAvatar","MINIMUM_SEARCH_CHARACTERS","WEEKS_IN_YEAR","TOTAL_FEE","LP_HOLDERS_FEE","PCS_V2_START","ITEMS_PER_INFO_TABLE_PAGE","TOKEN_BLACKLIST","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","CoreTag","outline","startIcon","CommunityTag","PartnerTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","StyledSVG","svg","stroke","CircleLoader","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","VISIBILITY_STATE_SUPPORTED","document","visibilityState","isVisible","setIsVisible","handleVisibilityChange","addEventListener","removeEventListener","history","createBrowserHistory","blockSlice","sample","parseENSAddress","ensAddress","ensPath","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","setUserSlippageTolerance","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","onBlur","e","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setShowExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","maxWidth","userSelect","prompt","GasSettings","setGasPrice","SettingsModal","showConfirmExpertModal","showExpertModeAcknowledgement","setSingleHopOnly","pb","borderTop","TransactionSettings","GlobalSettings","useModal","onPresentSettingsModal","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","setToasts","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","StyledInput","input","failure","inputRegex","Input","nextUserInput","autoComplete","autoCorrect","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","className","val","transformProfileResponse","profileResponse","userId","numberPoints","profileCalls","profileCallsResult","apiRes","nftToken","Cookies","avatar","domain","secure","expires","campaigns","badge","campaignMap","campaign","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubstrings","trim","fetchStatusMiddleware","useSWRNext","fetcher","swr","isValidating","Failed","getContractKey","serializesContractKey","interfaceFormat","format","FormatTypes","full","serializedKeys","BUSD_MAINNET","WBNB","useBUSDPrice","wrapped","tokenPairs","ethPairState","ethPair","busdPairState","busdPair","busdEthPairState","busdEthPair","priceOf","Price","ethPairETHAmount","reserveOf","ethPairETHBUSDValue","quote","greaterThan","ethBusdPrice","currencyEthPrice","busdPrice","useDenaPrice","useBNBBusdPrice","Dots","span","Transactions","TransactionsModal","onPresentTransactionsModal","AppHeaderContainer","AppHeader","subtitle","helper","backTo","noConfig","Link","show","BodyWrapper","AppBody","images","md","ipfs","textColor","useTotalSupply","totalSupply","useScript","src","setStatus","script","querySelector","getAttribute","createElement","async","setAttribute","body","appendChild","setAttributeFromEvent","setStateFromEvent","tradingViewListener","resolve","defineProperty","configurable","tv","initializeTradingView","TradingViewObj","localeCode","opts","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","widget","container_id","autosize","toolbar_bg","enable_publishing","allow_symbol_change","hide_side_toolbar","enabled_features","useTradingViewEvent","onNoDataEvent","onLoadedEvent","onNoDataAvailable","frameElementId","TradingViewLabel","TradingView","widgetRef","useMatchBreakpoints","overflow","profileContract","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","serializedTokensMap","initialNftFilterState","loadingState","activeFilters","showOnlyOnSale","ordering","direction","initialNftActivityFilterState","initializationState","UNINITIALIZED","activityFilters","isUpdatingGladiatorCollectibles","latestGladiatorCollectiblesUpdateAt","userNftsInitializationState","activity","fetchCollections","collectionsMarket","fetchCollection","fetchNftsFromCollections","tokenIds","nftsMarket","filterNftsFromCollection","nftFilters","attrParams","attr","isEmpty","attrFilters","apiToken","nftTokens","apiTokenMarketData","tokenMarketData","fetchNewPBAndUpdateExisting","existingTokensWithGladiatorCollectibleId","allExistingPBTokenIds","existingMetadata","updatedNfts","updatedNftsMarket","updatedTokens","newNfts","moreTokensWithRequestedGladiatorCollectibleId","fetchUserNfts","updateUserNft","marketDataForNft","metadataForNft","removeUserNft","addUserNft","fetchUserActivity","toLocaleLowerCase","userActivity","NftMarket","removeAllFilters","addActivityTypeFilters","removeActivityTypeFilters","activeFilter","addActivityCollectionFilters","removeActivityCollectionFilters","removeAllActivityCollectionFilters","removeAllActivityFilters","setOrdering","setShowOnlyOnSale","INITIALIZED","existingNftsWithoutNewOnes","newToken","ERROR","INITIALIZING","userNftsState","nftToUpdate","indexInState","copyOfState","nftToRemove","splice","queryConstructor","skipCount","fetchedData","allFound","subqueriesSlice","getDeltaTimestamps","utcCurrentTime","startOfMinute","subDays","subWeeks","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","TokenImage","LineChartLoaderSVG","preserveAspectRatio","strokeDasharray","strokeDashoffset","opacity","attributeName","dur","begin","stdDeviation","in","BarChartLoaderSVG","keyTimes","repeatCount","CandleChartLoaderSVG","LoadingText","LoadingIndicator","BarChartLoader","LineChartLoader","CandleChartLoader","flexGrow","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","floor","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","transformUserData","quoteTokenAddress","getUserPointIncreaseEvents","pointIncreaseEvents","userPoint","campaignMeta","getAchievementTitle","getAchievementDescription","MAX_USER_LOTTERIES_REQUEST_SIZE","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","totalTickets","nodeRoundsWithGraphData","userNodeRound","userGraphRound","graphResponseRound","nodeRoundData","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","callback","leading","savedCallback","tick","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","onError","ImportToken","handleCurrencySelect","confirmed","setConfirmed","addToken","inactiveTokenList","gridGap","maxAmountSpend","Nfts","blur","gladiatorsProfileCollectibles","getTokenUrl","tokenUri","fetchCachedUriData","tokenUrl","localUriData","uriDataResponse","uriData","getTokenUriData","nftAddress","tokenURI","gladiators","TransactionState","IconWrapper","Transaction","renderTransactions","sortedRecentTransactions","clearAllTransactionsCallback","ens","resolvedContentHash","useENSContentHash","Latinise","latin_map","τ","Τ","latinise","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","ifoCampaign","ZERO","useMintState","ConfirmAddModalBottom","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","currencyAAmount","currencyBAmount","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","lastOraclePrice","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","selectedAddress","timePeriod","hasMoreResults","addressResults","initializePredictions","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","userRoundsLength","emptyResult","maxPages","ceil","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","predictionsSlice","setLeaderboardFilter","setHistoryPaneState","setChartPaneState","setHistoryFilter","setLastOraclePrice","markAsCollected","setSelectedAddress","newestRound","maxBy","futureRound","Outer","Inner","PageHeader","PageLoader","formatAmount","notation","displayThreshold","tokenPrecision","isInteger","precision","repeat","amountWithPrecision","numeral","DropDownHeader","inputSecondary","secondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","onOptionChange","defaultOptionIndex","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","stopPropagation","handleClickOutside","option","selectedIndex","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","fetchAdditionalUserLotteries","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","mergedRounds","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","getBlockSubqueries","blocksQueryConstructor","sortDirection","sortingFunction","useBlocksFromTimestamps","setBlocks","setError","fetchData","useIntersectionObserver","observerRef","intersectionObserverRef","observerIsSet","setObserverIsSet","isIntersecting","setIsIntersecting","IntersectionObserver","rootMargin","threshold","disconnect","useLastUpdated","lastUpdated","setStateLastUpdated","previousLastUpdated","setLastUpdated","fetchWalletGalleryNfts","gallerySlice","models","Loading","FlexLayout","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","InputWrapper","SearchInput","onChangeCallback","searchText","setSearchText","debouncedOnChange","debounce","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","votingPower","getAllVotes","proposalId","votesPerChunk","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","achievementFetchStatus","fetchAchievements","achievementSlice","addAchievement","MAX_LOTTERIES_REQUEST_SIZE","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","graphRoundData","getGraphLotteries","idsForNodesCall","mergedData","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","cakePriceUsd","poolLiquidityUsd","farmAddress","cakeRewardsApr","NaN","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","currencyKey","StyledBalanceText","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","paddingTop","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","Manage","showLists","setShowLists","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","Updater","fetchAllListsCallback","PATCH","MINOR","MAJOR","waitRandom","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","useScrollOnRouteChange","unlisten","listen","scroll","left","behavior","StyledDatePickerPortal","card","primaryBright","DatePickerPortal","GlobalStyle","createGlobalStyle","icon","showItemsOnMobile","showOnMobile","hideSubNav","DropdownMenuItemType","DIVIDER","EXTERNAL_LINK","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","cakeBalance","cakeFetchStatus","fontWeight","TxnIcon","Summary","TxnLink","renderIcon","txn","spin","TransactionRow","WalletTransactions","sortedTransactions","minHeight","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","setView","newIndex","fullWidth","TRANSACTIONS","Dot","ProfileUserMenuItem","handleClick","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","getActiveSubMenuItem","menuItem","activeSubMenuItems","subMenuItem","subMenuItem1","subMenuItem2","footerLinks","StyledMenu","Menu","nrtBusdPrice","denaPrice","activeMenuItem","menuConfig","getActiveMenuItem","activeSubMenuItem","navRef","logoHtml","parentNode","innerHTML","userMenu","globalMenu","currentLang","langs","setLang","denaPriceUsd","links","subLinks","activeItem","activeSubItem","buyCakeLabel","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","plus","onPresentApyModal","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","manualTooltipText","autoTooltipText","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","useVaultApprove","cakeContract","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","endIcon","StyledLink","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","units","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","fullDecimalStakeAmount","userNotEnoughToken","usdValueStaked","formattedUsdValueStaked","annualRoi","formattedAnnualRoi","getTokenLink","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","RecentCakeProfitRow","VaultCardActions","ToggleView","onToggle","handleToggle","CARD","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","xs","HelpButton","BaseCell","CellContent","StyledCell","NameCell","hasVaultShares","showStakedTag","showSubtitle","EarningsCell","labelText","AprLabelContainer","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","toggled","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","AutoHarvestAction","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isXs","isSm","isMd","poolStakingTokenBalance","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","AutoHarvest","Harvest","Stake","HelpIconWrapper","AutoEarningsCell","AutoAprCell","StyledRow","PoolRow","isLg","isXl","isXxl","isTablet","isDesktop","isLargerScreen","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","poolsCurrentlyVisible","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","estimatedText","transactionRevertText","truncatedRecipient","recipientSentToText","postSentToText","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","StyledPriceChart","$isDark","$isExpanded","defaultProps","BnbWbnbNotice","isChartExpanded","NoChartAvailable","wordSpacing","formatOptions","TokenDisplay","inputSymbol","outputSymbol","SwapLineChart","lazy","BasicChart","setTimeWindow","hoverValue","setHoverValue","hoverDate","setHoverDate","valueToDisplay","isChangePositive","chartHeight","currentDate","year","month","next","TradingViewWrapper","$show","LoadingWrapper","bnbToWBNBSymbol","sym","ID","TradingViewChart","onTwChartSymbol","hasNoData","setHasNoData","output","debouncedLoading","ChartButton","$active","PriceChart","setIsChartExpanded","chartView","setChartView","twChartSymbol","setTwChartSymbol","handleTwChartSymbol","TRADING_VIEW","currentIsExpanded","PriceChartContainer","isPairReversed","setIsPairReversed","togglePairReversed","prePairReversed","StyledSwapContainer","xxl","$isChartExpanded","StyledInputCurrencyWrapper","CurrencyInputContainer","ColoredIconButton","IconButton","CurrencyInputHeader","setIsChartDisplayed","currentIsChartDisplayed","fontFamily","Label","SwitchIconButton","Swap","loadedUrlParams","userChartPreference","setUserChartPreference","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","singleTokenPrice","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmWord","word","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","entries","warningTokenConfig","warningTokenData","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","AnniversaryImage","img","showConfetti","confetti","particleCount","startVelocity","gravity","spread","origin","y","AnniversaryAchievementModal","claimAnniversaryPoints","GlobalCheckClaimStatus","excludeLocations","hasDisplayedModal","canClaimAnniversaryPoints","setCanClaimAnniversaryPoints","onPresentAnniversaryModal","canClaim","canClaimAnniversary","fetchClaimAnniversaryStatus","matchesSomeLocations","Home","Farms","FarmAuction","Lottery","Ifos","NotFound","Teams","Team","TradingCompetition","Predictions","PredictionsLeaderboard","Voting","Proposal","CreateProposal","Liquidity","PoolFinder","RemoveLiquidity","Info","ProfileCreation","Gallery","ArenaPools","Arena","Battles","BattleStart","Referrals","StakeGladiators","Global","exact","strict","iterations","ThemeProviderWrapper","dark","Providers","use","goodTimes","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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6CACA,GACA,UACA,4BACA,8BAEFsH,KAAM,IAAIZ,IACR1G,EACA,6CACA,GACA,OACA,cACA,+BAEFuH,IAAK,IAAIb,IACP1G,EACA,6CACA,GACA,MACA,iBACA,6BAEFwH,KAAM,IAAId,IACR1G,EACA,6CACA,GACA,OACA,aACA,sBAEFyH,KAAM,IAAIf,IACR1G,EACA,6CACA,GACA,OACA,cACA,wBAEF0H,IAAK,IAAIhB,IACP1G,EACA,6CACA,GACA,MACA,oBACA,2BAEF2H,IAAK,IAAIjB,IACP1G,EACA,6CACA,GACA,MACA,6BACA,4BAEF4H,KAAM,IAAIlB,IACR1G,EACA,6CACA,GACA,OACA,uBACA,8BAEF6H,KAAM,IAAInB,IACR1G,EACA,6CACA,GACA,OACA,eACA,sBAEF8H,SAAU,IAAIpB,IACZ1G,EACA,6CACA,GACA,WACA,iBACA,6BAEF+H,KAAM,IAAIrB,IACR1G,EACA,6CACA,GACA,OACA,aACA,yBAEFgI,MAAO,IAAItB,IACT1G,EACA,6CACA,GACA,QACA,mBACA,2BAEFiI,IAAK,IAAIvB,IACP1G,EACA,6CACA,GACA,MACA,cACA,yBAEFkI,MAAO,IAAIxB,IACT1G,EACA,6CACA,GACA,QACA,gBACA,4BAEFmI,OAAQ,IAAIzB,IACV1G,EACA,6CACA,GACA,SACA,eACA,8BAEFoI,IAAK,IAAI1B,IACP1G,EACA,6CACA,GACA,MACA,cACA,2BAEFqI,MAAO,IAAI3B,IACT1G,EACA,6CACA,EACA,QACA,cACA,wBAEFsI,MAAO,IAAI5B,IACT1G,EACA,6CACA,EACA,QACA,cACA,0BAEFuI,MAAO,IAAI7B,IACT1G,EACA,6CACA,GACA,QACA,iBACA,gCAEFwI,IAAK,IAAI9B,IACP1G,EACA,6CACA,GACA,MACA,cACA,yBAEFyI,SAAU,IAAI/B,IACZ1G,EACA,6CACA,GACA,WACA,kBACA,yBAEF0I,KAAM,IAAIhC,IACR1G,EACA,6CACA,GACA,OACA,gBACA,wBAEF2I,KAAM,IAAIjC,IACR1G,EACA,6CACA,GACA,OACA,iBACA,wBAEF4I,IAAK,IAAIlC,IACP1G,EACA,6CACA,GACA,MACA,0BACA,mBAEF6I,KAAM,IAAInC,IACR1G,EACA,6CACA,GACA,OACA,oBACA,oCAEF8I,KAAM,IAAIpC,IACR1G,EACA,6CACA,GACA,OACA,aACA,+BAEF+I,MAAO,IAAIrC,IACT1G,EACA,6CACA,GACA,QACA,qBACA,gCAEFgJ,GAAI,IAAItC,IACN1G,EACA,6CACA,GACA,KACA,2BACA,+BAEFiJ,IAAK,IAAIvC,IACP1G,EACA,6CACA,GACA,MACA,sBACA,6BAEFkJ,MAAO,IAAIxC,IACT1G,EACA,6CACA,GACA,QACA,cACA,0BAEFmJ,MAAO,IAAIzC,IACT1G,EACA,6CACA,GACA,QACA,kBACA,yBAEFoJ,QAAS,IAAI1C,IACX1G,EACA,6CACA,GACA,MACA,oBACA,4BAEFqJ,KAAM,IAAI3C,IAAM1G,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGsJ,IAAK,IAAI5C,IACP1G,EACA,6CACA,GACA,MACA,wBACA,4BAEFuJ,IAAK,IAAI7C,IACP1G,EACA,6CACA,GACA,MACA,qBACA,4BAEFwJ,OAAQ,IAAI9C,IACV1G,EACA,6CACA,GACA,SACA,eACA,uBAEFyJ,OAAQ,IAAI/C,IACV1G,EACA,6CACA,GACA,SACA,uBACA,iCAEF0J,KAAM,IAAIhD,IACR1G,EACA,6CACA,GACA,OACA,kBACA,yBAEF2J,IAAK,IAAIjD,IAAM1G,EAAS,6CAA8C,GAAI,MAAO,aAAc,qBAC/F4J,KAAM,IAAIlD,IACR1G,EACA,6CACA,GACA,OACA,aACA,yBAEF6J,IAAK,IAAInD,IACP1G,EACA,6CACA,GACA,MACA,kBACA,6BAEF8J,MAAO,IAAIpD,IACT1G,EACA,6CACA,GACA,QACA,qBACA,iCAEF+J,MAAO,IAAIrD,IACT1G,EACA,6CACA,EACA,QACA,0BACA,oCAEFgK,IAAK,IAAItD,IACP1G,EACA,6CACA,GACA,MACA,gBACA,6BAEFiK,IAAK,IAAIvD,IACP1G,EACA,6CACA,GACA,MACA,mBACA,kCAEFkK,KAAM,IAAIxD,IACR1G,EACA,6CACA,EACA,OACA,aACA,wBAEFmK,KAAM,IAAIzD,IACR1G,EACA,6CACA,GACA,OACA,kBACA,yBAEFoK,IAAK,IAAI1D,IACP1G,EACA,6CACA,GACA,MACA,iBACA,qBAEFqK,KAAM,IAAI3D,IACR1G,EACA,6CACA,GACA,OACA,aACA,yBAEFsK,IAAK,IAAI5D,IACP1G,EACA,6CACA,GACA,MACA,uBACA,qBAEFuK,IAAK,IAAI7D,IACP1G,EACA,6CACA,EACA,MACA,oBACA,gCAEFwK,MAAO,IAAI9D,IACT1G,EACA,6CACA,EACA,QACA,2BACA,sCAEFyK,KAAM,IAAI/D,IACR1G,EACA,6CACA,GACA,OACA,mBACA,+BAEF0K,KAAM,IAAIhE,IACR1G,EACA,6CACA,GACA,OACA,kCACA,qBAEF2K,IAAK,IAAIjE,IACP1G,EACA,6CACA,GACA,MACA,kBACA,8BAEF4K,MAAO,IAAIlE,IACT1G,EACA,6CACA,GACA,QACA,wBACA,uBAEF6K,KAAM,IAAInE,IACR1G,EACA,6CACA,GACA,OACA,aACA,sBAEF8K,QAAS,IAAIpE,IACX1G,EACA,6CACA,GACA,UACA,wBACA,4BAEF+K,IAAK,IAAIrE,IACP1G,EACA,6CACA,GACA,MACA,iBACA,wBAEFgL,KAAM,IAAItE,IACR1G,EACA,6CACA,GACA,OACA,aACA,0BAEFiL,IAAK,IAAIvE,IACP1G,EACA,6CACA,GACA,MACA,YACA,0BAEFkL,IAAK,IAAIxE,IACP1G,EACA,6CACA,GACA,MACA,gBACA,2BAEFmL,KAAM,IAAIzE,IACR1G,EACA,6CACA,GACA,OACA,uBACA,2BAEFoL,IAAK,IAAI1E,IACP1G,EACA,6CACA,GACA,MACA,iBACA,6BAEFqL,KAAM,IAAI3E,IACR1G,EACA,6CACA,EACA,OACA,eACA,2BAEFsL,IAAK,IAAI5E,IACP1G,EACA,6CACA,GACA,MACA,gBACA,uBAEFuL,KAAM,IAAI7E,IACR1G,EACA,6CACA,GACA,OACA,eACA,uBAEFwL,MAAO,IAAI9E,IACT1G,EACA,6CACA,GACA,QACA,iBACA,yBAEFyL,MAAO,IAAI/E,IACT1G,EACA,6CACA,GACA,QACA,4BACA,uBAEF0L,KAAM,IAAIhF,IACR1G,EACA,6CACA,GACA,OACA,aACA,sBAEF2L,MAAO,IAAIjF,IACT1G,EACA,6CACA,GACA,QACA,sBACA,6BAEF4L,IAAK,IAAIlF,IACP1G,EACA,6CACA,EACA,MACA,gBACA,0BAEF6L,IAAK,IAAInF,IACP1G,EACA,6CACA,EACA,MACA,yBACA,0BAEF8L,GAAI,IAAIpF,IACN1G,EACA,6CACA,EACA,KACA,gBACA,0BAEF+L,KAAM,IAAIrF,IACR1G,EACA,6CACA,GACA,OACA,qBACA,yBAEFgM,IAAK,IAAItF,IACP1G,EACA,6CACA,EACA,MACA,iBACA,0BAEFiM,IAAK,IAAIvF,IACP1G,EACA,6CACA,EACA,MACA,4BACA,0BAEFkM,IAAK,IAAIxF,IACP1G,EACA,6CACA,GACA,MACA,iBACA,8CAEFmM,KAAM,IAAIzF,IACR1G,EACA,6CACA,GACA,OACA,aACA,6BAEFoM,IAAK,IAAI1F,IACP1G,EACA,6CACA,GACA,MACA,qBACA,4BAEFqM,KAAM,IAAI3F,IACR1G,EACA,6CACA,EACA,OACA,aACA,wBAEFsM,QAAS,IAAI5F,IACX1G,EACA,6CACA,GACA,UACA,eACA,sBAEFuM,KAAM,IAAI7F,IACR1G,EACA,6CACA,GACA,OACA,gBACA,4BAEFwM,IAAK,IAAI9F,IACP1G,EACA,6CACA,GACA,MACA,oBACA,4BAEFyM,IAAK,IAAI/F,IACP1G,EACA,6CACA,GACA,MACA,iBACA,yBAEF0M,IAAK,IAAIhG,IACP1G,EACA,6CACA,EACA,MACA,eACA,kCAEF2M,IAAK,IAAIjG,IACP1G,EACA,6CACA,GACA,MACA,2BACA,kCAEF4M,IAAK,IAAIlG,IAAM1G,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChG6M,MAAO,IAAInG,IACT1G,EACA,6CACA,GACA,QACA,sBACA,4BAEF8M,IAAK,IAAIpG,IAAM1G,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChG+M,MAAO,IAAIrG,IACT1G,EACA,6CACA,GACA,QACA,yBACA,sBAEFgN,KAAM,IAAItG,IACR1G,EACA,6CACA,GACA,OACA,yBACA,6BAEFiN,KAAM,IAAIvG,IACR1G,EACA,6CACA,GACA,OACA,sBACA,0BAEFkN,KAAM,IAAIxG,IACR1G,EACA,6CACA,GACA,OACA,qBACA,yBAEFmN,KAAM,IAAIzG,IACR1G,EACA,6CACA,GACA,OACA,qBACA,8CAEFoN,MAAO,IAAI1G,IACT1G,EACA,6CACA,GACA,QACA,4BACA,2BAEFqN,OAAQ,IAAI3G,IACV1G,EACA,6CACA,GACA,SACA,6BACA,2BAEFsN,MAAO,IAAI5G,IACT1G,EACA,6CACA,GACA,QACA,4BACA,2BAEFuN,MAAO,IAAI7G,IACT1G,EACA,6CACA,GACA,QACA,4BACA,2BAEFwN,IAAK,IAAI9G,IACP1G,EACA,6CACA,GACA,MACA,6BACA,yBAEFyN,IAAK,IAAI/G,IACP1G,EACA,6CACA,GACA,MACA,6BACA,4BAEF0N,KAAM,IAAIhH,IACR1G,EACA,6CACA,GACA,OACA,kCACA,6BAEF2N,IAAK,IAAIjH,IACP1G,EACA,6CACA,GACA,MACA,6BACA,6BAEF4N,IAAK,IAAIlH,IACP1G,EACA,6CACA,GACA,MACA,wBACA,mBAEF6N,KAAM,IAAInH,IACR1G,EACA,6CACA,GACA,OACA,8BACA,uBAEF8N,IAAK,IAAIpH,IACP1G,EACA,6CACA,GACA,MACA,wBACA,2BAEF+N,KAAM,IAAIrH,IACR1G,EACA,6CACA,GACA,OACA,2BACA,2BAEFgO,KAAM,IAAItH,IACR1G,EACA,6CACA,GACA,OACA,iCACA,wBAEFiO,IAAK,IAAIvH,IACP1G,EACA,6CACA,GACA,MACA,0BACA,0BAEFkO,IAAK,IAAIxH,IACP1G,EACA,6CACA,GACA,MACA,iCACA,qBAEFmO,IAAK,IAAIzH,IACP1G,EACA,6CACA,GACA,MACA,kCACA,0BAEFoO,IAAK,IAAI1H,IACP1G,EACA,6CACA,GACA,MACA,4BACA,wBAEFqO,IAAK,IAAI3H,IACP1G,EACA,6CACA,GACA,MACA,6BACA,wBAEFsO,KAAM,IAAI5H,IACR1G,EACA,6CACA,GACA,OACA,mBACA,+BAEFuO,OAAQ,IAAI7H,IACV1G,EACA,6CACA,GACA,SACA,mBACA,2BAEFwO,MAAO,IAAI9H,IACT1G,EACA,6CACA,GACA,QACA,yBACA,2BAEFyO,QAAS,IAAI/H,IACX1G,EACA,6CACA,GACA,UACA,2BACA,2BAEF0O,MAAO,IAAIhI,IACT1G,EACA,6CACA,GACA,QACA,iBACA,yBAEF2O,IAAK,IAAIjI,IACP1G,EACA,6CACA,GACA,MACA,iBACA,uBAEF4O,IAAK,IAAIlI,IACP1G,EACA,6CACA,GACA,MACA,wBACA,2BAEF6O,KAAM,IAAInI,IACR1G,EACA,6CACA,GACA,OACA,oBACA,uBAEF8O,IAAK,IAAIpI,IACP1G,EACA,6CACA,GACA,MACA,oBACA,2BAEF+O,KAAM,IAAIrI,IACR1G,EACA,6CACA,GACA,OACA,mBACA,kCAEFgP,IAAK,IAAItI,IACP1G,EACA,6CACA,GACA,MACA,gBACA,4BAEFiP,KAAM,IAAIvI,IACR1G,EACA,6CACA,EACA,OACA,qBACA,yBAEFkP,KAAM,IAAIxI,IACR1G,EACA,6CACA,EACA,OACA,yBACA,6BAEFmP,IAAK,IAAIzI,IACP1G,EACA,6CACA,GACA,MACA,gBACA,gCAEFoP,IAAK,IAAI1I,IACP1G,EACA,6CACA,GACA,MACA,sBACA,6BAEFqP,KAAM,IAAI3I,IACR1G,EACA,6CACA,GACA,OACA,qBACA,iCAEFsP,IAAK,IAAI5I,IACP1G,EACA,6CACA,GACA,MACA,sBACA,qBAEFuP,KAAM,IAAI7I,IACR1G,EACA,6CACA,GACA,OACA,aACA,2BAEFwP,KAAM,IAAI9I,IAAM1G,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGyP,IAAK,IAAI/I,IAAM1G,EAAS,6CAA8C,EAAG,MAAO,YAAa,oBAC7F0P,KAAM,IAAIhJ,IACR1G,EACA,6CACA,GACA,OACA,iBACA,wBAEF2P,OAAQ,IAAIjJ,IACV1G,EACA,6CACA,GACA,SACA,eACA,+BAEF4P,IAAK,IAAIlJ,IACP1G,EACA,6CACA,GACA,MACA,mBACA,+BAEF6P,KAAM,IAAInJ,IACR1G,EACA,6CACA,GACA,OACA,qBACA,yBAEF8P,KAAM,IAAIpJ,IACR1G,EACA,6CACA,GACA,OACA,kBACA,yBAEF+P,IAAK,IAAIrJ,IACP1G,EACA,6CACA,GACA,MACA,yBACA,6BAEFgQ,IAAK,IAAItJ,IACP1G,EACA,6CACA,GACA,MACA,wBACA,wBAEFiQ,IAAK,IAAIvJ,IACP1G,EACA,6CACA,EACA,MACA,6BACA,2BAEFkQ,KAAM,IAAIxJ,IACR1G,EACA,6CACA,GACA,OACA,SACA,4BAEFmQ,KAAM,IAAIzJ,IACR1G,EACA,6CACA,GACA,OACA,YACA,4BAEFoQ,IAAK,IAAI1J,IACP1G,EACA,6CACA,GACA,MACA,yBACA,gCAEFqQ,MAAO,IAAI3J,IACT1G,EACA,6CACA,GACA,QACA,iBACA,+BAEFsQ,IAAK,IAAI5J,IACP1G,EACA,6CACA,GACA,MACA,oBACA,8BAEFuQ,IAAK,IAAI7J,IACP1G,EACA,6CACA,GACA,MACA,YACA,oCAEFwQ,MAAO,IAAI9J,IACT1G,EACA,6CACA,GACA,QACA,cACA,0BAEFyQ,IAAK,IAAI/J,IACP1G,EACA,6CACA,GACA,MACA,gBACA,4BAEF0Q,YAAM,IAAIhK,IACR1G,EACA,6CACA,EACA,YACA,sBACA,8BAEF2Q,OAAQ,IAAIjK,IACV1G,EACA,6CACA,GACA,SACA,cACA,kCAEF4Q,IAAK,IAAIlK,IACP1G,EACA,6CACA,GACA,MACA,iBACA,yBAEF6Q,IAAK,IAAInK,IACP1G,EACA,6CACA,GACA,MACA,qBACA,yBAEF8Q,IAAK,IAAIpK,IACP1G,EACA,6CACA,GACA,MACA,+BACA,+BAEF+Q,IAAK,IAAIrK,IACP1G,EACA,6CACA,GACA,MACA,aACA,yBAEFgR,IAAK,IAAItK,IACP1G,EACA,6CACA,GACA,MACA,YACA,yBAEFiR,MAAO,IAAIvK,IACT1G,EACA,6CACA,GACA,QACA,4BACA,2BAEFkR,KAAM,IAAIxK,IACR1G,EACA,6CACA,GACA,OACA,aACA,2BAEFmR,IAAK,IAAIzK,IACP1G,EACA,6CACA,GACA,MACA,wBACA,0BAEFoR,IAAK,IAAI1K,IACP1G,EACA,6CACA,GACA,MACA,gCACA,0BAEFqR,KAAM,IAAI3K,IACR1G,EACA,6CACA,GACA,OACA,aACA,uBAEFsR,IAAK,IAAI5K,IACP1G,EACA,6CACA,EACA,MACA,mBACA,wBAEFuR,KAAM,IAAI7K,IACR1G,EACA,6CACA,EACA,OACA,uBACA,yBAEFwR,KAAM,IAAI9K,IACR1G,EACA,6CACA,GACA,OACA,kBACA,0BAEFyR,IAAK,IAAI/K,IACP1G,EACA,6CACA,GACA,MACA,eACA,2BAEF0R,KAAM,IAAIhL,IACR1G,EACA,6CACA,GACA,OACA,iBACA,yBAEF2R,aAAO,IAAIjL,IACT1G,EACA,6CACA,EACA,aACA,iBACA,8BAEF4R,IAAK,IAAIlL,IACP1G,EACA,6CACA,GACA,MACA,eACA,2BAEF6R,KAAM,IAAInL,IACR1G,EACA,6CACA,GACA,OACA,eACA,uBAEF8R,MAAO,IAAIpL,IACT1G,EACA,6CACA,EACA,QACA,qBACA,2BAEF+R,KAAM,IAAIrL,IACR1G,EACA,6CACA,GACA,OACA,aACA,8BAEFgS,KAAM,IAAItL,IACR1G,EACA,6CACA,GACA,OACA,aACA,yBAEFiS,IAAK,IAAIvL,IAAM1G,EAAS,6CAA8C,GAAI,MAAO,YAAa,wBAC9FkS,IAAK,IAAIxL,IACP1G,EACA,6CACA,EACA,MACA,eACA,wBAEFmS,KAAM,IAAIzL,IACR1G,EACA,6CACA,GACA,OACA,aACA,gCAEFoS,KAAM,IAAI1L,IACR1G,EACA,6CACA,GACA,OACA,gBACA,8BAEFqS,IAAK,IAAI3L,IACP1G,EACA,6CACA,GACA,MACA,kBACA,0BAEFsS,OAAQ,IAAI5L,IACV1G,EACA,6CACA,GACA,SACA,cACA,0BAEFuS,MAAO,IAAI7L,IACT1G,EACA,6CACA,GACA,QACA,wBACA,uBAEFwS,GAAI,IAAI9L,IACN1G,EACA,6CACA,GACA,KACA,gBACA,2BAEFyS,IAAK,IAAI/L,IACP1G,EACA,6CACA,GACA,MACA,qBACA,qBAEF0S,KAAM,IAAIhM,IACR1G,EACA,6CACA,GACA,OACA,4BACA,4BAEF2S,KAAM,IAAIjM,IACR1G,EACA,6CACA,GACA,OACA,qBACA,yBAEF4S,IAAK,IAAIlM,IACP1G,EACA,6CACA,GACA,MACA,gBACA,uBAEF6S,IAAK,IAAInM,IACP1G,EACA,6CACA,GACA,MACA,mBACA,0BAEF8S,KAAM,IAAIpM,IACR1G,EACA,6CACA,GACA,OACA,oBACA,mCAEF+S,GAAI,IAAIrM,IAAM1G,EAAS,6CAA8C,GAAI,KAAM,WAAY,wBAC3FgT,IAAK,IAAItM,IACP1G,EACA,6CACA,GACA,MACA,iBACA,4BAEFiT,KAAM,IAAIvM,IACR1G,EACA,6CACA,GACA,OACA,cACA,2BAEFkT,OAAQ,IAAIxM,IACV1G,EACA,6CACA,GACA,SACA,kBACA,8BAEFmT,MAAO,IAAIzM,IACT1G,EACA,6CACA,GACA,QACA,kBACA,yBAEFoT,KAAM,IAAI1M,IACR1G,EACA,6CACA,EACA,OACA,aACA,+BAEFqT,GAAI,IAAI3M,IACN1G,EACA,6CACA,GACA,KACA,gBACA,uBAEFsT,IAAK,IAAI5M,IAAM1G,EAAS,6CAA8C,EAAG,MAAO,eAAgB,sBAChGuT,IAAK,IAAI7M,IACP1G,EACA,6CACA,GACA,MACA,eACA,0BAEFwT,IAAK,IAAI9M,IACP1G,EACA,6CACA,GACA,MACA,yBACA,wBAEFyT,IAAK,IAAI/M,IACP1G,EACA,6CACA,GACA,MACA,wBACA,4BAEF0T,SAAU,IAAIhN,IACZ1G,EACA,6CACA,EACA,WACA,iBACA,yBAEF2T,IAAK,IAAIjN,IACP1G,EACA,6CACA,GACA,MACA,qCACA,6BAEF4T,IAAK,IAAIlN,IACP1G,EACA,6CACA,GACA,MACA,eACA,uBAEF6T,KAAM,IAAInN,IACR1G,EACA,6CACA,GACA,OACA,gBACA,wBAEF8T,IAAK,IAAIpN,IA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","file":"static/js/main.a06a67f9.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setProvider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setProvider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import { createAction } from '@reduxjs/toolkit'\nimport { DerivedPairDataNormalized, PairDataNormalized, PairDataTimeWindowEnum } from './types'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n\nexport const updatePairData =\n  createAction<{ pairData: PairDataNormalized; pairId: string; timeWindow: PairDataTimeWindowEnum }>(\n    'swap/updatePairData',\n  )\n  \nexport const updateDerivedPairData =\n  createAction<{ pairData: DerivedPairDataNormalized; pairId: string; timeWindow: PairDataTimeWindowEnum }>(\n    'swap/updateDerivedPairData',\n  )","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","export default {\n  masterChef: {\n    97: '0x7064Eea95252EF65253Da0A1D983bc42125C6deE',\n    56: '0x12c4dfD812d029a240606e1a1a28680F38b526B8',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0xfD2C53e6e18cFEB054F6e032Ae383A5feF233607',\n  },\n  gladiatorCollectibleFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0xA92b0761f25cf1eE3AC88334f56e4dFb26E8432C',\n  },\n  gladiatorProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0xf2F5A969f888ab595534535e492043C9Bc460117',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\n    97: '0xC239B3467A0F085aec35567f491722F52C9905c9',\n  },\n  chainlinkOracle: {\n    56: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  bunnySpecialLottery: {\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\n    97: '0x382cB497110F398F0f152cae82821476AE51c9cF',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n  AnniversaryAchievement: {\n    56: '0x787980da5491118C3cB33B21aB50c8c379D2C552',\n    97: '0x981aE96378e770DE44F89cD9175E708f9EDB70a9',\n  },\n  nftMarket: {\n    56: '',\n    97: '0x68096b526C0505D0A04f57acE6A6b2b99Fdf863c',\n  },\n  nftSale: {\n    56: '0x29fE7148636b7Ae0b1E53777b28dfbaA9327af8E',\n    97: '0xe486De509c5381cbdBF3e71F57D7F1f7570f5c46',\n  },\n  pancakeSquad: {\n    56: '0x0a8901b0E25DEb55A87524f0cC164E9644020EBA',\n    97: '0xfC0c3F11fDA72Cb9A56F28Ec8D44C0ae4B3ABF86',\n  },\n  gladiatorNft: {\n    56: '',\n    97: '0x5b6045de3051F22015B7411b906109e780b976B0',\n  },\n  battleNft: {\n    56: '',\n    97: '0x92e2Fa35464153547D947a9345bc5A36e891EC58',\n  },\n  achievementsNft: {\n    56: '',\n    97: '0xf52857B3C1B7eD56964c32ad01Dc56069fFa9eea',\n  },\n  referralsNft: {\n    56: '',\n    97: '0xD62984dcBee4587B7fc09869EEdD13167a4C8F25',\n  },\n  gladiatorEquipments: {\n    56: '',\n    97: '0x7de9b1A64B7e7CeB238A1528144580aC4e759251'\n  },\n  gladiatorAchievements: {\n    56: '',\n    97: '0xF07c8B2A1D29737F551E32f3001d60b1330F6242'\n  }\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getGladiatorProfileAddress = () => {\n  return getAddress(addresses.gladiatorProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getGladiatorCollectibleFactoryAddress = () => {\n  return getAddress(addresses.gladiatorCollectibleFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\nexport const getAnniversaryAchievement = () => {\n  return getAddress(addresses.AnniversaryAchievement)\n}\n\nexport const getNftMarketAddress = () => {\n  return getAddress(addresses.nftMarket)\n}\nexport const getNftSaleAddress = () => {\n  return getAddress(addresses.nftSale)\n}\nexport const getPancakeSquadAddress = () => {\n  return getAddress(addresses.pancakeSquad)\n}\nexport const getGlaidatorNftAddress = () => {\n  return getAddress(addresses.gladiatorNft)\n}\nexport const getGlaidatorAchievementsAddress = () => {\n  return getAddress(addresses.gladiatorAchievements)\n}\nexport const getBattleNftAddress = () => {\n  return getAddress(addresses.battleNft)\n}\nexport const getAchievementNftAddress = () => {\n  return getAddress(addresses.achievementsNft)\n}\nexport const getReferralsNftAddress = () => {\n  return getAddress(addresses.referralsNft)\n}\nexport const getPredictionNftAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getGlaidatorEquipmentAddress = () => {\n  return getAddress(addresses.gladiatorEquipments)\n}","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport { Token } from '@pancakeswap/sdk'\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n  projectLink?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\ninterface FarmConfigBaseProps {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface SerializedFarmConfig extends FarmConfigBaseProps {\n  token: SerializedToken\n  quoteToken: SerializedToken\n}\n\nexport interface DeserializedFarmConfig extends FarmConfigBaseProps {\n  token: Token\n  quoteToken: Token\n}\n\ninterface PoolConfigBaseProps {\n  sousId: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n  arena?: {\n    id: string\n    cardTextColor: string\n  }\n}\n\nexport interface SerializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: SerializedToken\n  stakingToken: SerializedToken\n}\n\nexport interface DeserializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: Token\n  stakingToken: Token\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: string\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n\nexport enum FetchStatus {\n  Idle = 'IDLE',\n  Fetching = 'FETCHING',\n  Fetched = 'FETCHED',\n  Failed = 'FAILED',\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport enum ViewMode {\n  TABLE = 'TABLE',\n  CARD = 'CARD',\n}\n\nexport enum ChartViewMode {\n  BASIC = 'BASIC',\n  TRADING_VIEW = 'TRADING_VIEW',\n}\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateUserGalleryFreshwaterOnly = createAction<{ userGalleryFreshwaterOnly: FarmStakedOnly }>(\n  'user/updateUserGalleryFreshwaterOnly',\n)\nexport const updateUserGallerySaltwaterOnly = createAction<{ userGallerySaltwaterOnly: FarmStakedOnly }>(\n  'user/updateUserGallerySaltwaterOnly',\n)\nexport const updateUserPoolStakedOnly = createAction<{ userPoolStakedOnly: boolean }>('user/updateUserPoolStakedOnly')\nexport const updateUserPoolsViewMode = createAction<{ userPoolsViewMode: ViewMode }>('user/updateUserPoolsViewMode')\nexport const updateUserFarmsViewMode = createAction<{ userFarmsViewMode: ViewMode }>('user/updateUserFarmsViewMode')\nexport const updateUserPredictionAcceptedRisk = createAction<{ userAcceptedRisk: boolean }>(\n  'user/updateUserPredictionAcceptedRisk',\n)\nexport const updateUserPredictionChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\n  'user/updateUserPredictionChartDisclaimerShow',\n)\nexport const updateUserExpertModeAcknowledgementShow = createAction<{ userExpertModeAcknowledgementShow: boolean }>(\n  'user/updateUserExpertModeAcknowledgementShow',\n)\nexport const updateUserUsernameVisibility = createAction<{ userUsernameVisibility: boolean }>(\n  'user/updateUserUsernameVisibility',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\nexport const setChartViewMode = createAction<ChartViewMode>('user/setChartViewMode')\n\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\nexport const setIsExchangeChartDisplayed = createAction<boolean>('user/toggleIsExchangeChartDisplayed')","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { serializeToken } from 'state/user/hooks/helpers'\nimport { SerializedToken } from './types'\n\nconst { MAINNET, TESTNET } = ChainId\n\ninterface TokenList {\n  [symbol: string]: Token\n}\n\ninterface SerializedTokenList {\n  [symbol: string]: SerializedToken\n}\n\nexport const mainnetTokens = {\n  wbnb: new Token(\n    MAINNET,\n    '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    18,\n    'WBNB',\n    'Wrapped BNB',\n    'https://www.binance.com/',\n  ),\n  // bnb here points to the wbnb contract. Wherever the currency BNB is required, conditional checks for the symbol 'BNB' can be used\n  bnb: new Token(MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'BNB', 'BNB', 'https://www.binance.com/'),\n  cake: new Token(\n    MAINNET,\n    '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n    'https://pancakeswap.finance/',\n  ),\n\n  nrt: new Token(\n    MAINNET,\n    '0x1B2F67679798C764f2C0c69DFB6bDa8b30a094cf',\n    18,\n    'NRT',\n    'NFT Royal Token',\n    'https://www.nftroyaltoken.com/',\n  ),\n  dena: new Token(\n    MAINNET,\n    '0xB56fF089c8b44B42763F9867Dc5964C62096cd8E',\n    18,\n    'DENA',\n    'Denarius Token',\n    'https://dev.gladiators.finance/',\n  ),\n\n  tlos: new Token(MAINNET, '0xb6C53431608E626AC81a9776ac3e999c5556717c', 18, 'TLOS', 'Telos', 'https://www.telos.net/'),\n  nft: new Token(MAINNET, '0x1fC9004eC7E5722891f5f38baE7678efCB11d34D', 6, 'NFT', 'APENFT', 'https://apenft.org'),\n  stephero: new Token(\n    MAINNET,\n    '0xE8176d414560cFE1Bf82Fd73B986823B89E4F545',\n    18,\n    'HERO',\n    'StepHero',\n    'https://stephero.io/',\n  ),\n  pros: new Token(MAINNET, '0xEd8c8Aa8299C10f067496BB66f8cC7Fb338A3405', 18, 'PROS', 'Prosper', 'https://prosper.so/'),\n  qbt: new Token(MAINNET, '0x17B7163cf1Dbd286E262ddc68b553D899B93f526', 18, 'QBT', 'Qubit Token', 'https://qbt.fi/'),\n  cvp: new Token(\n    MAINNET,\n    '0x5Ec3AdBDae549Dce842e24480Eb2434769e22B2E',\n    18,\n    'CVP',\n    'Concentrated Voting Power Token',\n    'https://powerpool.finance/',\n  ),\n  bscdefi: new Token(\n    MAINNET,\n    '0x40E46dE174dfB776BB89E04dF1C47d8a66855EB3',\n    18,\n    'BSCDEFI',\n    'BSC Defi blue chips token',\n    'https://powerpool.finance/',\n  ),\n  busd: new Token(\n    MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n    'https://www.paxos.com/busd/',\n  ),\n  dai: new Token(\n    MAINNET,\n    '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    18,\n    'DAI',\n    'Dai Stablecoin',\n    'https://www.makerdao.com/',\n  ),\n  usdt: new Token(\n    MAINNET,\n    '0x55d398326f99059fF775485246999027B3197955',\n    18,\n    'USDT',\n    'Tether USD',\n    'https://tether.to/',\n  ),\n  btcb: new Token(\n    MAINNET,\n    '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n    18,\n    'BTCB',\n    'Binance BTC',\n    'https://bitcoin.org/',\n  ),\n  ust: new Token(\n    MAINNET,\n    '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n    18,\n    'UST',\n    'Wrapped UST Token',\n    'https://mirror.finance/',\n  ),\n  eth: new Token(\n    MAINNET,\n    '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n    18,\n    'ETH',\n    'Binance-Peg Ethereum Token',\n    'https://ethereum.org/en/',\n  ),\n  usdc: new Token(\n    MAINNET,\n    '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n    18,\n    'USDC',\n    'Binance-Peg USD Coin',\n    'https://www.centre.io/usdc',\n  ),\n  kalm: new Token(\n    MAINNET,\n    '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n    18,\n    'KALM',\n    'Kalmar Token',\n    'https://kalmar.io/',\n  ),\n  hotcross: new Token(\n    MAINNET,\n    '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n    18,\n    'HOTCROSS',\n    'Hotcross Token',\n    'https://www.hotcross.com/',\n  ),\n  belt: new Token(\n    MAINNET,\n    '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n    18,\n    'BELT',\n    'Belt Token',\n    'https://beta.belt.fi/',\n  ),\n  watch: new Token(\n    MAINNET,\n    '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n    18,\n    'WATCH',\n    'Yieldwatch Token',\n    'https://yieldwatch.net/',\n  ),\n  bry: new Token(\n    MAINNET,\n    '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n    18,\n    'BRY',\n    'Berry Token',\n    'https://berrydata.co/',\n  ),\n  wsote: new Token(\n    MAINNET,\n    '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n    18,\n    'wSOTE',\n    'Soteria Token',\n    'https://soteria.finance/',\n  ),\n  helmet: new Token(\n    MAINNET,\n    '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n    18,\n    'Helmet',\n    'Helmet Token',\n    'https://www.helmet.insure/',\n  ),\n  ten: new Token(\n    MAINNET,\n    '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n    18,\n    'TEN',\n    'Tenet Token',\n    'https://www.tenet.farm/',\n  ),\n  ditto: new Token(\n    MAINNET,\n    '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n    9,\n    'DITTO',\n    'Ditto Token',\n    'https://ditto.money/',\n  ),\n  blink: new Token(\n    MAINNET,\n    '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n    6,\n    'BLINK',\n    'Blink Token',\n    'https://blink.wink.org',\n  ),\n  syrup: new Token(\n    MAINNET,\n    '0x28F0Af18394BD2660c8B1B8d363fBEF789eA2446',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  pha: new Token(\n    MAINNET,\n    '0x0112e557d400474717056C4e6D40eDD846F38351',\n    18,\n    'PHA',\n    'Phala Token',\n    'https://phala.network',\n  ),\n  babycake: new Token(\n    MAINNET,\n    '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n    18,\n    'BABYCAKE',\n    'Baby Cake Token',\n    'https://babycake.app/',\n  ),\n  bmon: new Token(\n    MAINNET,\n    '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n    18,\n    'BMON',\n    'Binamon Token',\n    'https://binamon.org/',\n  ),\n  hero: new Token(\n    MAINNET,\n    '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n    18,\n    'HERO',\n    'Metahero Token',\n    'https://metahero.io/',\n  ),\n  wsg: new Token(\n    MAINNET,\n    '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n    18,\n    'WSG',\n    'Wall Street Games Token',\n    'https://wsg.gg/',\n  ),\n  mcrn: new Token(\n    MAINNET,\n    '0xacb2d47827C9813AE26De80965845D80935afd0B',\n    18,\n    'MCRN',\n    'Macaronswap Token',\n    'https://www.macaronswap.finance/',\n  ),\n  revv: new Token(\n    MAINNET,\n    '0x833F307aC507D47309fD8CDD1F835BeF8D702a93',\n    18,\n    'REVV',\n    'REVV Token',\n    'https://revvmotorsport.com/',\n  ),\n  skill: new Token(\n    MAINNET,\n    '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n    18,\n    'SKILL',\n    'Cryptoblades Token',\n    'https://www.cryptoblades.io/',\n  ),\n  if: new Token(\n    MAINNET,\n    '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n    18,\n    'IF',\n    'Impossible Finance Token',\n    'https://impossible.finance/',\n  ),\n  sps: new Token(\n    MAINNET,\n    '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n    18,\n    'SPS',\n    'Splinterlands Token',\n    'https://splinterlands.com',\n  ),\n  chess: new Token(\n    MAINNET,\n    '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n    18,\n    'CHESS',\n    'Chess Token',\n    'https://tranchess.com/',\n  ),\n  titan: new Token(\n    MAINNET,\n    '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n    18,\n    'TITAN',\n    'Titanswap Token',\n    'https://titanswap.org',\n  ),\n  harmony: new Token(\n    MAINNET,\n    '0x03fF0ff224f904be3118461335064bB48Df47938',\n    18,\n    'ONE',\n    'Harmony ONE Token',\n    'https://www.harmony.one/',\n  ),\n  mask: new Token(MAINNET, '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3', 18, 'MASK', 'Mask Token', 'https://mask.io/'),\n  dvi: new Token(\n    MAINNET,\n    '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n    18,\n    'DVI',\n    'Dvision Network Token',\n    'https://dvision.network/',\n  ),\n  adx: new Token(\n    MAINNET,\n    '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n    18,\n    'ADX',\n    'Adex Network Token',\n    'https://www.adex.network',\n  ),\n  bscpad: new Token(\n    MAINNET,\n    '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n    18,\n    'BSCPAD',\n    'Bscpad Token',\n    'https://bscpad.com/',\n  ),\n  rabbit: new Token(\n    MAINNET,\n    '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n    18,\n    'RABBIT',\n    'Rabbit Finance Token',\n    'https://rabbitfinance.io/earn',\n  ),\n  form: new Token(\n    MAINNET,\n    '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n    18,\n    'FORM',\n    'Formation Token',\n    'https://formation.fi/',\n  ),\n  txl: new Token(MAINNET, '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5', 18, 'TXL', 'Tixl Token', 'https://tixl.org/'),\n  orbs: new Token(\n    MAINNET,\n    '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n    18,\n    'ORBS',\n    'Orbs Token',\n    'https://www.orbs.com/',\n  ),\n  cos: new Token(\n    MAINNET,\n    '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n    18,\n    'COS',\n    'Contentos Token',\n    'https://www.contentos.io/',\n  ),\n  bunny: new Token(\n    MAINNET,\n    '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n    18,\n    'BUNNY',\n    'Pancakebunny Token',\n    'https://pancakebunny.finance/',\n  ),\n  alice: new Token(\n    MAINNET,\n    '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n    6,\n    'ALICE',\n    'My Neighbor Alice Token',\n    'https://www.myneighboralice.com/',\n  ),\n  for: new Token(\n    MAINNET,\n    '0x658A109C5900BC6d2357c87549B651670E5b0539',\n    18,\n    'FOR',\n    'Fortube Token',\n    'https://www.for.tube/home',\n  ),\n  bux: new Token(\n    MAINNET,\n    '0x211FfbE424b90e25a15531ca322adF1559779E45',\n    18,\n    'BUX',\n    'Bux Crypto Token',\n    'https://getbux.com/bux-crypto/',\n  ),\n  nuls: new Token(\n    MAINNET,\n    '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n    8,\n    'NULS',\n    'Nuls Token',\n    'https://www.nuls.io/',\n  ),\n  ramp: new Token(\n    MAINNET,\n    '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n    18,\n    'RAMP',\n    'RAMP DEFI Token',\n    'https://rampdefi.com/',\n  ),\n  bfi: new Token(\n    MAINNET,\n    '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n    18,\n    'BFI',\n    'bearn.fi Token',\n    'https://bearn.fi/',\n  ),\n  dexe: new Token(\n    MAINNET,\n    '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n    18,\n    'DEXE',\n    'DeXe Token',\n    'https://dexe.network/',\n  ),\n  bel: new Token(\n    MAINNET,\n    '0x8443f091997f06a61670B735ED92734F5628692F',\n    18,\n    'BEL',\n    'Bella Protocol Token',\n    'https://bella.fi/',\n  ),\n  tpt: new Token(\n    MAINNET,\n    '0xECa41281c24451168a37211F0bc2b8645AF45092',\n    4,\n    'TPT',\n    'Tokenpocket Token',\n    'https://www.tokenpocket.pro/',\n  ),\n  xmark: new Token(\n    MAINNET,\n    '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n    9,\n    'xMARK',\n    'Benchmark Protocol Token',\n    'https://benchmarkprotocol.finance/',\n  ),\n  bmxx: new Token(\n    MAINNET,\n    '0x4131b87F74415190425ccD873048C708F8005823',\n    18,\n    'bMXX',\n    'Multiplier Token',\n    'https://multiplier.finance/',\n  ),\n  iotx: new Token(\n    MAINNET,\n    '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n    18,\n    'IOTX',\n    'Binance-Peg IoTeX Network Token',\n    'https://iotex.io/',\n  ),\n  bor: new Token(\n    MAINNET,\n    '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n    18,\n    'BOR',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  bopen: new Token(\n    MAINNET,\n    '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n    18,\n    'bOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  dodo: new Token(\n    MAINNET,\n    '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n    18,\n    'DODO',\n    'Dodo Token',\n    'https://dodoex.io/',\n  ),\n  swingby: new Token(\n    MAINNET,\n    '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n    18,\n    'SWINGBY',\n    'Swingby Network Token',\n    'https://swingby.network/',\n  ),\n  zee: new Token(\n    MAINNET,\n    '0x44754455564474A89358B2C2265883DF993b12F0',\n    18,\n    'ZEE',\n    'Zeroswap Token',\n    'https://zeroswap.io/',\n  ),\n  swgb: new Token(\n    MAINNET,\n    '0xE40255C5d7fa7ceEc5120408C78C787CECB4cfdb',\n    18,\n    'SWGb',\n    'SWGb Token',\n    'https://swirgepay.com/',\n  ),\n  swg: new Token(\n    MAINNET,\n    '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n    18,\n    'SWG',\n    'SWG Token',\n    'https://swirgepay.com/',\n  ),\n  sfp: new Token(\n    MAINNET,\n    '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n    18,\n    'SFP',\n    'Safepal Token',\n    'https://www.safepal.io/',\n  ),\n  lina: new Token(\n    MAINNET,\n    '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n    18,\n    'LINA',\n    'Linear Finance Token',\n    'https://linear.finance/',\n  ),\n  lit: new Token(\n    MAINNET,\n    '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n    18,\n    'LIT',\n    'Litentry Token',\n    'https://www.litentry.com/',\n  ),\n  hget: new Token(\n    MAINNET,\n    '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n    6,\n    'HGET',\n    'Hedget Token',\n    'https://www.hedget.com/',\n  ),\n  bdo: new Token(\n    MAINNET,\n    '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n    18,\n    'BDO',\n    'Bdollar Token',\n    'https://bdollar.fi/',\n  ),\n  egld: new Token(\n    MAINNET,\n    '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n    18,\n    'EGLD',\n    'Elrond Token',\n    'https://elrond.com/',\n  ),\n  front: new Token(\n    MAINNET,\n    '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n    18,\n    'FRONT',\n    'Frontier Token',\n    'https://frontier.xyz/',\n  ),\n  btcst: new Token(\n    MAINNET,\n    '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n    17,\n    'BTCST',\n    'StandardBTCHashrate Token',\n    'https://www.1-b.tc/',\n  ),\n  bscx: new Token(\n    MAINNET,\n    '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n    18,\n    'BSCX',\n    'BSCX Token',\n    'https://bscex.org/',\n  ),\n  balbt: new Token(\n    MAINNET,\n    '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n    18,\n    'bALBT',\n    'AllianceBlock Token',\n    'https://allianceblock.io/',\n  ),\n  asr: new Token(\n    MAINNET,\n    '0x80D5f92C2c8C682070C95495313dDB680B267320',\n    2,\n    'ASR',\n    'AS Roma Token',\n    'https://www.chiliz.com',\n  ),\n  atm: new Token(\n    MAINNET,\n    '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n    2,\n    'ATM',\n    'Athletico Madrid Token',\n    'https://www.chiliz.com',\n  ),\n  og: new Token(\n    MAINNET,\n    '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n    2,\n    'OG',\n    'OG Nice Token',\n    'https://www.chiliz.com',\n  ),\n  reef: new Token(\n    MAINNET,\n    '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n    18,\n    'REEF',\n    'Reef.finance Token',\n    'https://reef.finance/',\n  ),\n  juv: new Token(\n    MAINNET,\n    '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n    2,\n    'JUV',\n    'Juventus Token',\n    'https://www.chiliz.com',\n  ),\n  psg: new Token(\n    MAINNET,\n    '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n    2,\n    'PSG',\n    'Paris Saint-Germain Token',\n    'https://www.chiliz.com',\n  ),\n  vai: new Token(\n    MAINNET,\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n    18,\n    'VAI',\n    'VAI Stablecoin',\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n  ),\n  unfi: new Token(\n    MAINNET,\n    '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n    18,\n    'UNFI',\n    'UNFI Token',\n    'https://unifiprotocol.com',\n  ),\n  twt: new Token(\n    MAINNET,\n    '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n    18,\n    'TWT',\n    'Trust Wallet Token',\n    'https://trustwallet.com/',\n  ),\n  hard: new Token(\n    MAINNET,\n    '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n    6,\n    'HARD',\n    'HARD Token',\n    'https://hard.kava.io',\n  ),\n  broobee: new Token(\n    MAINNET,\n    '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n    18,\n    'bROOBEE',\n    'ROOBEE Token',\n    'https://roobee.io/',\n  ),\n  stax: new Token(\n    MAINNET,\n    '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n    18,\n    'STAX',\n    'StableX Token',\n    'https://stablexswap.com/',\n  ),\n  nar: new Token(\n    MAINNET,\n    '0xA1303E6199b319a891b79685F0537D289af1FC83',\n    18,\n    'NAR',\n    'Narwhalswap Token',\n    'https://narwhalswap.org/',\n  ),\n  nya: new Token(\n    MAINNET,\n    '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n    18,\n    'NYA',\n    'Nyanswop Token',\n    'https://nyanswop.org/',\n  ),\n  ctk: new Token(\n    MAINNET,\n    '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n    6,\n    'CTK',\n    'Certik Token',\n    'https://www.certik.foundation/',\n  ),\n  inj: new Token(\n    MAINNET,\n    '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n    18,\n    'INJ',\n    'Injective Protocol Token',\n    'https://injectiveprotocol.com/',\n  ),\n  sxp: new Token(MAINNET, '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A', 18, 'SXP', 'Swipe Token', 'https://swipe.io/'),\n  alpha: new Token(\n    MAINNET,\n    '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n    18,\n    'ALPHA',\n    'Alpha Finance Token',\n    'https://alphafinance.io/',\n  ),\n  xvs: new Token(MAINNET, '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63', 18, 'XVS', 'Venus Token', 'https://venus.io/'),\n  sushi: new Token(\n    MAINNET,\n    '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n    18,\n    'SUSHI',\n    'Binance-Peg SushiToken',\n    'https://sushi.com/',\n  ),\n  comp: new Token(\n    MAINNET,\n    '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n    18,\n    'COMP',\n    'Compound Finance Token',\n    'https://compound.finance/',\n  ),\n  bifi: new Token(\n    MAINNET,\n    '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n    18,\n    'BIFI',\n    'Beefy Finance Token',\n    'https://beefy.finance/',\n  ),\n  dusk: new Token(\n    MAINNET,\n    '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n    18,\n    'DUSK',\n    'Dusk Network Token',\n    'https://dusk.network/',\n  ),\n  beth: new Token(\n    MAINNET,\n    '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n    18,\n    'BETH',\n    'Binance Beacon ETH',\n    'https://ethereum.org/en/eth2/beacon-chain/',\n  ),\n  mamzn: new Token(\n    MAINNET,\n    '0x3947B992DC0147D2D89dF0392213781b04B25075',\n    18,\n    'mAMZN',\n    'Wrapped Mirror AMZN Token',\n    'https://mirror.finance/',\n  ),\n  mgoogl: new Token(\n    MAINNET,\n    '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n    18,\n    'mGOOGL',\n    'Wrapped Mirror GOOGL Token',\n    'https://mirror.finance/',\n  ),\n  mnflx: new Token(\n    MAINNET,\n    '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n    18,\n    'mNFLX',\n    'Wrapped Mirror NFLX Token',\n    'https://mirror.finance/',\n  ),\n  mtsla: new Token(\n    MAINNET,\n    '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n    18,\n    'mTSLA',\n    'Wrapped Mirror TSLA Token',\n    'https://mirror.finance/',\n  ),\n  ltc: new Token(\n    MAINNET,\n    '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n    18,\n    'LTC',\n    'Binance-Peg Litecoin Token',\n    'https://litecoin.org/',\n  ),\n  ada: new Token(\n    MAINNET,\n    '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n    18,\n    'ADA',\n    ' Binance-Peg Cardano Token',\n    'https://www.cardano.org/',\n  ),\n  band: new Token(\n    MAINNET,\n    '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n    18,\n    'BAND',\n    'Binance-Peg Band Protocol Token',\n    'https://bandprotocol.com/',\n  ),\n  dot: new Token(\n    MAINNET,\n    '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n    18,\n    'DOT',\n    'Binance-Peg Polkadot Token',\n    'https://polkadot.network/',\n  ),\n  eos: new Token(\n    MAINNET,\n    '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n    18,\n    'EOS',\n    'Binance-Peg EOS Token',\n    'https://eos.io/',\n  ),\n  link: new Token(\n    MAINNET,\n    '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n    18,\n    'LINK',\n    'Binance-Peg Chainlink Token',\n    'https://chain.link/',\n  ),\n  xrp: new Token(\n    MAINNET,\n    '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n    18,\n    'XRP',\n    'Binance-Peg XRP Token',\n    'https://ripple.com/xrp/',\n  ),\n  atom: new Token(\n    MAINNET,\n    '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n    18,\n    'ATOM',\n    'Binance-Peg Cosmos Token',\n    'https://cosmos.network/',\n  ),\n  yfii: new Token(\n    MAINNET,\n    '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n    18,\n    'YFII',\n    'Binance-Peg YFII.finance Token',\n    'https://dfi.money/#/',\n  ),\n  xtz: new Token(\n    MAINNET,\n    '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n    18,\n    'XTZ',\n    'Binance-Peg Tezos Token',\n    'https://www.tezos.com/',\n  ),\n  bch: new Token(\n    MAINNET,\n    '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n    18,\n    'BCH',\n    'Binance-Peg Bitcoin Cash Token',\n    'https://bch.info/',\n  ),\n  yfi: new Token(\n    MAINNET,\n    '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n    18,\n    'YFI',\n    'Binance-Peg yearn.finance Token',\n    'https://yearn.finance/',\n  ),\n  uni: new Token(\n    MAINNET,\n    '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n    18,\n    'UNI',\n    'Binance-Peg Uniswap Token',\n    'https://uniswap.org/',\n  ),\n  fil: new Token(\n    MAINNET,\n    '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n    18,\n    'FIL',\n    'Binance-Peg Filecoin Token',\n    'https://filecoin.io/',\n  ),\n  bake: new Token(\n    MAINNET,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n  burger: new Token(\n    MAINNET,\n    '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n    18,\n    'BURGER',\n    'Burgerswap Token',\n    'https://burgerswap.org/',\n  ),\n  bdigg: new Token(\n    MAINNET,\n    '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n    18,\n    'bDIGG',\n    'Badger Sett Digg Token',\n    'https://badger.finance/',\n  ),\n  bbadger: new Token(\n    MAINNET,\n    '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n    18,\n    'bBadger',\n    'Badger Sett Badger Token',\n    'https://badger.finance/',\n  ),\n  trade: new Token(\n    MAINNET,\n    '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n    18,\n    'TRADE',\n    'Unitrade Token',\n    'https://unitrade.app/',\n  ),\n  pnt: new Token(\n    MAINNET,\n    '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n    18,\n    'PNT',\n    'pNetwork Token',\n    'https://ptokens.io/',\n  ),\n  mir: new Token(\n    MAINNET,\n    '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n    18,\n    'MIR',\n    'Mirror Protocol Token',\n    'https://mirror.finance/',\n  ),\n  pbtc: new Token(\n    MAINNET,\n    '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n    18,\n    'pBTC',\n    'pTokens BTC Token',\n    'https://ptokens.io/',\n  ),\n  lto: new Token(\n    MAINNET,\n    '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n    18,\n    'LTO',\n    'LTO Network Token',\n    'https://ltonetwork.com/',\n  ),\n  pcws: new Token(\n    MAINNET,\n    '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n    18,\n    'pCWS',\n    'PolyCrowns Token',\n    'https://game.seascape.network/',\n  ),\n  zil: new Token(\n    MAINNET,\n    '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n    12,\n    'ZIL',\n    'Zilliqa Token',\n    'https://www.zilliqa.com/',\n  ),\n  lien: new Token(\n    MAINNET,\n    '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n    8,\n    'LIEN',\n    'Lien Finance Token',\n    'https://lien.finance/',\n  ),\n  swth: new Token(\n    MAINNET,\n    '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n    8,\n    'SWTH',\n    'Switcheo Network Token',\n    'https://switcheo.network/',\n  ),\n  dft: new Token(\n    MAINNET,\n    '0x42712dF5009c20fee340B245b510c0395896cF6e',\n    18,\n    'DFT',\n    'Dfuture Token',\n    'https://www.dfuture.com/home',\n  ),\n  gum: new Token(\n    MAINNET,\n    '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n    18,\n    'GUM',\n    'GourmetGalaxy Token',\n    'https://gourmetgalaxy.io/',\n  ),\n  dego: new Token(\n    MAINNET,\n    '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n    18,\n    'DEGO',\n    'Dego Finance Token',\n    'https://bsc.dego.finance/home',\n  ),\n  nrv: new Token(\n    MAINNET,\n    '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n    18,\n    'NRV',\n    'Nerve Finance Token',\n    'https://nerve.fi/',\n  ),\n  easy: new Token(\n    MAINNET,\n    '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n    18,\n    'EASY',\n    'EASY Token',\n    'https://easyfi.network/',\n  ),\n  oddz: new Token(MAINNET, '0xCD40F2670CF58720b694968698A5514e924F742d', 18, 'ODDZ', 'Oddz Token', 'https://oddz.fi/'),\n  hoo: new Token(MAINNET, '0xE1d1F66215998786110Ba0102ef558b22224C016', 8, 'HOO', 'Hoo Token', 'https://hoo.com/'),\n  apys: new Token(\n    MAINNET,\n    '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n    18,\n    'APYS',\n    'APY Swap Token',\n    'https://apyswap.com/',\n  ),\n  bondly: new Token(\n    MAINNET,\n    '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n    18,\n    'BONDLY',\n    'Bondly Token',\n    'https://www.bondly.finance/',\n  ),\n  tko: new Token(\n    MAINNET,\n    '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n    18,\n    'TKO',\n    'Tokocrypto Token',\n    'https://www.tokocrypto.com/',\n  ),\n  itam: new Token(\n    MAINNET,\n    '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n    18,\n    'ITAM',\n    'Itam Network Token',\n    'https://itam.network/',\n  ),\n  arpa: new Token(\n    MAINNET,\n    '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n    18,\n    'ARPA',\n    'Arpachain Token',\n    'https://arpachain.io/',\n  ),\n  eps: new Token(\n    MAINNET,\n    '0xA7f552078dcC247C2684336020c03648500C6d9F',\n    18,\n    'EPS',\n    'Ellipsis Finance Token',\n    'https://ellipsis.finance/',\n  ),\n  jgn: new Token(\n    MAINNET,\n    '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n    18,\n    'JGN',\n    'Juggernaut DeFi Token',\n    'https://jgndefi.com/',\n  ),\n  tlm: new Token(\n    MAINNET,\n    '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n    4,\n    'TLM',\n    'Alien Worlds Trilium Token',\n    'https://alienworlds.io/',\n  ),\n  perl: new Token(\n    MAINNET,\n    '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n    18,\n    'PERL',\n    'Perlin',\n    'https://perlinx.finance/',\n  ),\n  alpa: new Token(\n    MAINNET,\n    '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n    18,\n    'ALPA',\n    'AlpaToken',\n    'https://bsc.alpaca.city/',\n  ),\n  hzn: new Token(\n    MAINNET,\n    '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n    18,\n    'HZN',\n    'Horizon Protocol Token',\n    'https://horizonprotocol.com/',\n  ),\n  suter: new Token(\n    MAINNET,\n    '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n    18,\n    'SUTER',\n    'Suterusu Token',\n    'https://shield.suterusu.io/',\n  ),\n  cgg: new Token(\n    MAINNET,\n    '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n    18,\n    'CGG',\n    'pTokens CGG Token',\n    'https://chainguardians.io/',\n  ),\n  mix: new Token(\n    MAINNET,\n    '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n    18,\n    'MIX',\n    'Mix Token',\n    'https://mixie.chainguardians.io/',\n  ),\n  hakka: new Token(\n    MAINNET,\n    '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n    18,\n    'HAKKA',\n    'Hakka Token',\n    'https://hakka.finance/',\n  ),\n  xed: new Token(\n    MAINNET,\n    '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n    18,\n    'XED',\n    'Exeedme Token',\n    'https://www.exeedme.com/',\n  ),\n  τbtc: new Token(\n    MAINNET,\n    '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n    9,\n    'τBTC',\n    'τBitcoin Token',\n    'https://www.btcst.finance/',\n  ),\n  alpaca: new Token(\n    MAINNET,\n    '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n    18,\n    'ALPACA',\n    'AlpacaToken',\n    'https://www.alpacafinance.org/',\n  ),\n  dfd: new Token(\n    MAINNET,\n    '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n    18,\n    'DFD',\n    'DefiDollar DAO',\n    'https://dusd.finance/',\n  ),\n  lmt: new Token(\n    MAINNET,\n    '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n    18,\n    'LMT',\n    'Lympo Market Token',\n    'https://lympo.io/lmt/',\n  ),\n  btt: new Token(\n    MAINNET,\n    '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n    18,\n    'BTT',\n    'Binance-Peg BitTorrent Token',\n    'https://www.bittorrent.com/',\n  ),\n  trx: new Token(\n    MAINNET,\n    '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n    18,\n    'TRX',\n    'TRON Token',\n    'https://tron.network/',\n  ),\n  win: new Token(\n    MAINNET,\n    '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n    18,\n    'WIN',\n    'WIN Token',\n    'https://winklink.org/',\n  ),\n  mcoin: new Token(\n    MAINNET,\n    '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n    18,\n    'MCOIN',\n    'Wrapped Mirror COIN Token',\n    'https://mirror.finance/',\n  ),\n  math: new Token(\n    MAINNET,\n    '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n    18,\n    'MATH',\n    'MATH Token',\n    'https://mathwallet.org/',\n  ),\n  kun: new Token(\n    MAINNET,\n    '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n    18,\n    'KUN',\n    'QIAN governance token',\n    'https://chemix.io/home',\n  ),\n  qsd: new Token(\n    MAINNET,\n    '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n    18,\n    'QSD',\n    'QIAN second generation dollar',\n    'https://chemix.io/home',\n  ),\n  hyfi: new Token(\n    MAINNET,\n    '0x9a319b959e33369C5eaA494a770117eE3e585318',\n    18,\n    'HYFI',\n    'HYFI Token',\n    'https://hyfi.pro/#/',\n  ),\n  oin: new Token(\n    MAINNET,\n    '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n    8,\n    'OIN',\n    'oinfinance Token',\n    'https://oin.finance/',\n  ),\n  doge: new Token(\n    MAINNET,\n    '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n    8,\n    'DOGE',\n    'Binance-Peg Dogecoin',\n    'https://dogecoin.com/',\n  ),\n  fine: new Token(\n    MAINNET,\n    '0x4e6415a5727ea08aAE4580057187923aeC331227',\n    18,\n    'FINE',\n    'Refinable Token',\n    'https://refinable.com/',\n  ),\n  one: new Token(\n    MAINNET,\n    '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n    18,\n    'ONE',\n    'BigONE Token',\n    'https://www.bigone.com/',\n  ),\n  pmon: new Token(\n    MAINNET,\n    '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n    18,\n    'PMON',\n    'Polkamon Token',\n    'https://polkamon.com/',\n  ),\n  τdoge: new Token(\n    MAINNET,\n    '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n    8,\n    'τDOGE',\n    'τDogecoin',\n    'https://www.btcst.finance/',\n  ),\n  btr: new Token(\n    MAINNET,\n    '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n    18,\n    'BTR',\n    'Bitrue Token',\n    'https://www.bitrue.com/',\n  ),\n  ubxt: new Token(\n    MAINNET,\n    '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n    18,\n    'UBXT',\n    'UpBots Token',\n    'https://upbots.com/',\n  ),\n  wmass: new Token(\n    MAINNET,\n    '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n    8,\n    'WMASS',\n    'Wrapped MASS Token',\n    'https://massnet.org/en/',\n  ),\n  rfox: new Token(\n    MAINNET,\n    '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n    18,\n    'RFOX',\n    'RFOX Token',\n    'https://www.redfoxlabs.io/',\n  ),\n  xend: new Token(\n    MAINNET,\n    '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n    18,\n    'XEND',\n    'XEND Token',\n    'https://xend.finance/',\n  ),\n  cyc: new Token(MAINNET, '0x810EE35443639348aDbbC467b33310d2AB43c168', 18, 'CYC', 'CYC Token', 'https://cyclone.xyz/'),\n  chr: new Token(\n    MAINNET,\n    '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n    6,\n    'CHR',\n    'Chroma Token',\n    'https://chromia.com/',\n  ),\n  deri: new Token(\n    MAINNET,\n    '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n    18,\n    'DERI',\n    'Deri Token',\n    'https://deri.finance/#/index',\n  ),\n  well: new Token(\n    MAINNET,\n    '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n    18,\n    'WELL',\n    'BitWell Token',\n    'https://www.bitwellex.com/',\n  ),\n  wex: new Token(\n    MAINNET,\n    '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n    18,\n    'WEX',\n    'WaultSwap Token',\n    'https://wault.finance/',\n  ),\n  waultx: new Token(\n    MAINNET,\n    '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n    18,\n    'WAULTx',\n    'Wault Token',\n    'https://wault.finance/',\n  ),\n  popen: new Token(\n    MAINNET,\n    '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n    18,\n    'pOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  ez: new Token(\n    MAINNET,\n    '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n    18,\n    'EZ',\n    'Easy V2 Token',\n    'https://easyfi.network/',\n  ),\n  vrt: new Token(\n    MAINNET,\n    '0x5F84ce30DC3cF7909101C69086c50De191895883',\n    18,\n    'VRT',\n    'Venus Reward Token',\n    'https://venus.io/',\n  ),\n  tusd: new Token(\n    MAINNET,\n    '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n    18,\n    'TUSD',\n    'Binance-Peg TrueUSD Token',\n    'https://www.trueusd.com/',\n  ),\n  mtrg: new Token(\n    MAINNET,\n    '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n    18,\n    'MTRG',\n    'Wrapped MTRG Token',\n    'https://www.meter.io/',\n  ),\n  ktn: new Token(\n    MAINNET,\n    '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n    18,\n    'KTN',\n    'Kattana Token',\n    'https://kattana.io/',\n  ),\n  qkc: new Token(\n    MAINNET,\n    '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n    18,\n    'QKC',\n    'QuarkChain Token',\n    'https://quarkchain.io/',\n  ),\n  bcfx: new Token(\n    MAINNET,\n    '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n    18,\n    'bCFX',\n    'BSC Conflux Token',\n    'https://www.confluxnetwork.org/',\n  ),\n  mx: new Token(MAINNET, '0x9F882567A62a5560d147d64871776EeA72Df41D3', 18, 'MX', 'MX Token', 'https://www.mxc.com/'),\n  ata: new Token(\n    MAINNET,\n    '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n    18,\n    'ATA',\n    'Automata Token',\n    'https://www.ata.network/',\n  ),\n  mbox: new Token(\n    MAINNET,\n    '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n    18,\n    'MBOX',\n    'Mobox Token',\n    'https://www.mobox.io/#/',\n  ),\n  boring: new Token(\n    MAINNET,\n    '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n    18,\n    'BORING',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  marsh: new Token(\n    MAINNET,\n    '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n    18,\n    'MARSH',\n    'Unmarshal Token',\n    'https://unmarshal.io/',\n  ),\n  ampl: new Token(\n    MAINNET,\n    '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n    9,\n    'AMPL',\n    'AMPL Token',\n    'https://www.ampleforth.org/',\n  ),\n  o3: new Token(\n    MAINNET,\n    '0xEe9801669C6138E84bD50dEB500827b776777d28',\n    18,\n    'O3',\n    'O3 Swap Token',\n    'https://o3swap.com/',\n  ),\n  hai: new Token(MAINNET, '0xaA9E582e5751d703F85912903bacADdFed26484C', 8, 'HAI', 'Hacken Token', 'https://hacken.io/'),\n  htb: new Token(\n    MAINNET,\n    '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n    18,\n    'HTB',\n    'Hotbit Token',\n    'https://www.hotbit.io/',\n  ),\n  woo: new Token(\n    MAINNET,\n    '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n    18,\n    'WOO',\n    'Wootrade Network Token',\n    'https://woo.network/',\n  ),\n  $dg: new Token(\n    MAINNET,\n    '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n    18,\n    '$DG',\n    'Decentral Games Token',\n    'https://decentral.games/',\n  ),\n  safemoon: new Token(\n    MAINNET,\n    '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n    9,\n    'SAFEMOON',\n    'Safemoon Token',\n    'https://safemoon.net/',\n  ),\n  axs: new Token(\n    MAINNET,\n    '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n    18,\n    'AXS',\n    'Binance-Pegged Axie Infinity Shard',\n    'https://axieinfinity.com/',\n  ),\n  c98: new Token(\n    MAINNET,\n    '0xaEC945e04baF28b135Fa7c640f624f8D90F1C3a6',\n    18,\n    'c98',\n    'Coin98 Token',\n    'https://coin98.com/',\n  ),\n  pots: new Token(\n    MAINNET,\n    '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\n    18,\n    'POTS',\n    'Moonpot Token',\n    'https://moonpot.com/',\n  ),\n  gnt: new Token(\n    MAINNET,\n    '0xF750A26EB0aCf95556e8529E72eD530f3b60f348',\n    18,\n    'GNT',\n    'GreenTrust Token',\n    'https://www.greentrusttoken.com/',\n  ),\n  rusd: new Token(\n    MAINNET,\n    '0x07663837218A003e66310a01596af4bf4e44623D',\n    18,\n    'rUSD',\n    'rUSD Token',\n    'https://appv2.rampdefi.com/#/',\n  ),\n  bp: new Token(\n    MAINNET,\n    '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1',\n    18,\n    'BP',\n    'BunnyPark Token',\n    'https://www.bunnypark.com/',\n  ),\n  sfund: new Token(\n    MAINNET,\n    '0x477bC8d23c634C154061869478bce96BE6045D12',\n    18,\n    'SFUND',\n    'Seedify Fund Token',\n    'https://seedify.fund/',\n  ),\n  naos: new Token(\n    MAINNET,\n    '0x758d08864fB6cCE3062667225ca10b8F00496cc2',\n    18,\n    'NAOS',\n    'NAOSToken',\n    'https://naos.finance/',\n  ),\n}\n\nexport const testnetTokens = {\n  wbnb: new Token(\n    TESTNET,\n    '0x094616F0BdFB0b526bD735Bf66Eca0Ad254ca81F',\n    18,\n    'WBNB',\n    'Wrapped BNB',\n    'https://www.binance.com/',\n  ),\n  cake: new Token(\n    TESTNET,\n    '0x618bE0EF9958A95055948c024A63152376099Fab',\n    18,\n    'DENA',\n    'DENA Token',\n    'https://gladiators.finance/',\n  ),\n  dena: new Token(\n    TESTNET,\n    '0x60fbAd46F86939498316D04A508E958cD0AEF45d',\n    18,\n    'DENA',\n    'Gladiator Finance',\n    'https://gladiators.finance/',\n  ),\n  // nrt: new Token(\n  //   TESTNET,\n  //   '0x769Fb42ceddb77d75d9dfBcaf98EBB3D22F1f90F',\n  //   18,\n  //   'NRT',\n  //   'NRT',\n  //   'https://www.nftroyaltoken.com',\n  // ),\n  nrt: new Token(\n    TESTNET,\n    '0xE17B02E14e309Db34eE8F7F78ccEDccC1BE6976D',\n    18,\n    'NRT',\n    'NRT',\n    'https://www.nftroyaltoken.com',\n  ),\n  busd: new Token(\n    TESTNET,\n    '0x78867bbeef44f2326bf8ddd1941a4439382ef2a7',\n    18,\n    'BUSD',\n    'Binance USD',\n    'https://www.paxos.com/busd/',\n  ),\n  syrup: new Token(\n    TESTNET,\n    '0x3CDAD33b31D4a4bFBCca5e7308D027C3D9BD35Ef',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  bake: new Token(\n    TESTNET,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n  khaos: new Token(\n    TESTNET,\n    '0xe3fdade8023cE0c66eA0c9D8423e5A47a9559801',\n    18,\n    'KHAOS',\n    'Khaos Token',\n    'https://www.khaos.org/',\n  ),\n  governance: new Token(\n    TESTNET,\n    '0xA2F3Cd8217823751feb2cCC1df1FBF39aD2874Fe',\n    18,\n    'GIVERNANCE',\n    'GIVERNANCE Token',\n    'https://www.khaos.org/',\n  ),\n}\n\nconst tokens = (): TokenList => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n\n  // If testnet - return list comprised of testnetTokens wherever they exist, and mainnetTokens where they don't\n  if (parseInt(chainId, 10) === ChainId.TESTNET) {\n    return Object.keys(mainnetTokens).reduce((accum, key) => {\n      return { ...accum, [key]: testnetTokens[key] || mainnetTokens[key] }\n    }, {})\n  }\n\n  return mainnetTokens\n}\n\nexport const serializeTokens = (): SerializedTokenList => {\n  const unserializedTokens = tokens()\n  const serializedTokens = Object.keys(unserializedTokens).reduce((accum, key) => {\n    return { ...accum, [key]: serializeToken(unserializedTokens[key]) }\n  }, {})\n\n  return serializedTokens\n}\n\nexport default tokens()","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\nexport function getBscScanLinkForNft(\n  collectionAddress: string,\n  tokenId: string,\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  return `${BASE_BSC_SCAN_URLS[chainId]}/token/${collectionAddress}?a=${tokenId}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\n\n// Addresses\nimport {\n  getAddress,\n  getGladiatorProfileAddress,\n  getPancakeRabbitsAddress,\n  getGladiatorCollectibleFactoryAddress,\n  getBunnySpecialAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n  getAnniversaryAchievement,\n  getNftMarketAddress,\n  getNftSaleAddress,\n  getPancakeSquadAddress,\n  getGlaidatorNftAddress,\n  getGlaidatorAchievementsAddress,\n  getBattleNftAddress,\n  getAchievementNftAddress,\n  getReferralsNftAddress,\n  getPredictionNftAddress,\n  getGlaidatorEquipmentAddress\n} from 'utils/addressHelpers'\n\n// Types\nimport { Erc721collection } from 'config/abi/types'\n\n// ABI\nimport profileABI from 'config/abi/gladiatorProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport gladiatorCollectibleFactoryAbi from 'config/abi/gladiatorCollectibleFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport anniversaryAchievementAbi from 'config/abi/anniversaryAchievement.json'\nimport nftMarketAbi from 'config/abi/nftMarket.json'\nimport nftSaleAbi from 'config/abi/nftSale.json'\nimport pancakeSquadAbi from 'config/abi/pancakeSquad.json'\nimport nrtAbi from 'config/abi/nrt.json'\nimport erc721CollectionAbi from 'config/abi/erc721collection.json'\nimport gladiatorNftAbi from \"config/abi/gladiatorNft.json\"\nimport gladiatorAchievementsAbi from \"config/abi/gladiatorAchievements.json\"\nimport battleNftAbi from \"config/abi/battle.json\"\nimport achievementsAbi from \"config/abi/achievements.json\"\nimport referralsAbi from \"config/abi/referrals.json\"\nimport predictionAbi from \"config/abi/predictions.json\"\nimport gladiatorEquipmentAbi from \"config/abi/gladiatorEquipments.json\"\n\nimport { ChainLinkOracleContract, FarmAuctionContract, GladiatorProfileContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, tokens.dena.address, signer)\n}\nexport const getNrtContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nrtAbi, tokens.nrt.address, signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getGladiatorProfileAddress(), signer) as GladiatorProfileContract\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getGladiatorCollectibleFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(gladiatorCollectibleFactoryAbi, getGladiatorCollectibleFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\nexport const getAnniversaryAchievementContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(anniversaryAchievementAbi, getAnniversaryAchievement(), signer)\n}\nexport const getNftMarketContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nftMarketAbi, getNftMarketAddress(), signer)\n}\nexport const getNftSaleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nftSaleAbi, getNftSaleAddress(), signer)\n}\nexport const getPancakeSquadContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeSquadAbi, getPancakeSquadAddress(), signer)\n}\n\nexport const getErc721CollectionContract = (signer?: ethers.Signer | ethers.providers.Provider, address?: string) => {\n  return getContract(erc721CollectionAbi, address, signer) as Erc721collection\n}\n\nexport const getGladiatorNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(gladiatorNftAbi, getGlaidatorNftAddress(), signer)\n}\nexport const getGladiatorAchievementsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(gladiatorAchievementsAbi, getGlaidatorAchievementsAddress(), signer)\n}\nexport const getBattleNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(battleNftAbi, getBattleNftAddress(), signer)\n}\nexport const getAchievementNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(achievementsAbi, getAchievementNftAddress(), signer)\n}\nexport const getReferralsNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(referralsAbi, getReferralsNftAddress(), signer)\n}\nexport const getPredictionNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionAbi, getPredictionNftAddress(), signer)\n}\nexport const getGladiatorEquipmentContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(gladiatorEquipmentAbi, getGlaidatorEquipmentAddress(), signer)\n}\n","import { ChainId, JSBI, Percent, Token } from '@pancakeswap/sdk'\nimport { mainnetTokens, testnetTokens } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x77195d81261690c9e4e3b1bcf0cf819680be7615'\n// export const ROUTER_ADDRESS = '0xD99D1c33F9fC3444f8101754aBC46c52416550D1'\n\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [\n    mainnetTokens.wbnb,\n    mainnetTokens.cake,\n    mainnetTokens.busd,\n    mainnetTokens.usdt,\n    mainnetTokens.btcb,\n    mainnetTokens.ust,\n    mainnetTokens.eth,\n    mainnetTokens.usdc,\n  ],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.busd, mainnetTokens.cake, mainnetTokens.btcb],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.wbnb, mainnetTokens.dai, mainnetTokens.busd, mainnetTokens.usdt],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [mainnetTokens.cake, mainnetTokens.wbnb],\n    [mainnetTokens.busd, mainnetTokens.usdt],\n    [mainnetTokens.dai, mainnetTokens.usdt],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const API_PROFILE = process.env.REACT_APP_API_PROFILE\nexport const API_NFT = process.env.REACT_APP_API_NFT\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n\n/**\n * V1 will be deprecated but is still used to claim old rounds\n */\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\n\nexport const INFO_CLIENT = 'https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2'\nexport const BLOCKS_CLIENT = 'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks'\nexport const GRAPH_API_NFTMARKET = process.env.REACT_APP_GRAPH_API_NFT_MARKET\n\nexport const CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getGladiatorCollectibleFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n  getBunnySpecialLotteryContract,\n  getAnniversaryAchievementContract,\n  getNftMarketContract,\n  getNftSaleContract,\n  getPancakeSquadContract,\n  getErc721CollectionContract,\n  getNrtContract,\n  getBattleNftContract,\n  getAchievementNftContract,\n  getReferralsNftContract,\n  getPredictionNftContract,\n  getGladiatorNftContract,\n  getGladiatorAchievementsContract,\n  getGladiatorEquipmentContract\n} from 'utils/contractHelpers'\nimport { getMulticallAddress, getPancakeRabbitsAddress, getPancakeSquadAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract, getProviderOrSigner } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\nexport const useNrt = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getNrtContract(library.getSigner()), [library])\n}\n\nexport const useGladiatorCollectibleFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getGladiatorCollectibleFactoryContract(library.getSigner()), [library])\n}\nexport const useGladiatorNft = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getGladiatorNftContract(library.getSigner()), [library])\n}\nexport const useGladiatorAchievementContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getGladiatorAchievementsContract(library.getSigner()), [library])\n}\nexport const useBattleNft = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBattleNftContract(library.getSigner()), [library])\n}\nexport const useAchievementNft = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getAchievementNftContract(library.getSigner()), [library])\n}\nexport const useReferralsNft = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getReferralsNftContract(library.getSigner()), [library])\n}\nexport const usePredictionNft = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionNftContract(library.getSigner()), [library])\n}\nexport const useGladiatorEquipment = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getGladiatorEquipmentContract(library.getSigner()), [library])\n}\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfileContract = (withSignerIfPossible = true) => {\n  const { library, account } = useActiveWeb3React()\n  return useMemo(\n    () => getProfileContract(withSignerIfPossible ? getProviderOrSigner(library, account) : null),\n    [withSignerIfPossible, account, library],\n  )\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialLotteryContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\n}\n\nexport const useAnniversaryAchievementContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getAnniversaryAchievementContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\nexport const useNftMarketContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getNftMarketContract(library.getSigner()), [library])\n}\n\nexport const useErc721CollectionContract = (collectionAddress: string, withSignerIfPossible = true) => {\n  const { library, account } = useActiveWeb3React()\n  return useMemo(() => {\n    return getErc721CollectionContract(\n      withSignerIfPossible ? getProviderOrSigner(library, account) : null,\n      collectionAddress,\n    )\n  }, [account, library, collectionAddress, withSignerIfPossible])\n}\n\nexport const useContractForCollection = (collectionAddress: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => {\n    if (collectionAddress === getPancakeRabbitsAddress()) {\n      return getPancakeRabbitContract(library.getSigner())\n    }\n    if (collectionAddress === getPancakeSquadAddress()) {\n      return getPancakeSquadContract(library.getSigner())\n    }\n    return null\n  }, [library, collectionAddress])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n  addWatchlistToken,\n  addWatchlistPool,\n  updateUserPoolStakedOnly,\n  updateUserGalleryFreshwaterOnly,\n  updateUserGallerySaltwaterOnly,\n  updateUserPoolsViewMode,\n  ViewMode,\n  updateUserFarmsViewMode,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserPredictionAcceptedRisk,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n  ChartViewMode,\n  setIsExchangeChartDisplayed,\n  setChartViewMode\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\nexport function useExchangeChartViewManager() {\n  const dispatch = useDispatch<AppDispatch>()\n  const chartViewMode = useSelector<AppState, AppState['user']['userChartViewMode']>(\n    (state) => state.user.userChartViewMode,\n  )\n\n  const setUserChartViewPreference = useCallback(\n    (view: ChartViewMode) => {\n      dispatch(setChartViewMode(view))\n    },\n    [dispatch],\n  )\n\n  return [chartViewMode, setUserChartViewPreference] as const\n}\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n// Get user preference for exchange price chart\n// For mobile layout chart is hidden by default\nexport function useExchangeChartManager(isMobile: boolean): [boolean, (isDisplayed: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isChartDisplayed = useSelector<AppState, AppState['user']['isExchangeChartDisplayed']>(\n    (state) => state.user.isExchangeChartDisplayed,\n  )\n\n  const setUserChartPreference = useCallback(\n    (isDisplayed: boolean) => {\n      dispatch(setIsExchangeChartDisplayed(isDisplayed))\n    },\n    [dispatch],\n  )\n\n  return [isMobile ? false : isChartDisplayed, setUserChartPreference]\n}\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserGalleryFreshwaterOnly(isActive: boolean): [boolean, (freshwaterOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGalleryFreshwaterOnly = useSelector<AppState, AppState['user']['userGalleryFreshwaterOnly']>((state) => {\n    return state.user.userGalleryFreshwaterOnly\n  })\n\n  const setUserGalleryFreshwaterOnly = useCallback(\n    (freshwaterOnly: boolean) => {\n      const farmStakedOnly = freshwaterOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserGalleryFreshwaterOnly({ userGalleryFreshwaterOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userGalleryFreshwaterOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userGalleryFreshwaterOnly === FarmStakedOnly.TRUE,\n    setUserGalleryFreshwaterOnly,\n  ]\n}\n\nexport function useUserGallerySaltwaterOnly(isActive: boolean): [boolean, (saltwaterOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGallerySaltwaterOnly = useSelector<AppState, AppState['user']['userGallerySaltwaterOnly']>((state) => {\n    return state.user.userGallerySaltwaterOnly\n  })\n\n  const setUserGallerySaltwaterOnly = useCallback(\n    (saltwaterOnly: boolean) => {\n      const farmStakedOnly = saltwaterOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserGallerySaltwaterOnly({ userGallerySaltwaterOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userGallerySaltwaterOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userGallerySaltwaterOnly === FarmStakedOnly.TRUE,\n    setUserGallerySaltwaterOnly,\n  ]\n}\n\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\n    return state.user.userPoolStakedOnly\n  })\n\n  const setUserPoolStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\n}\n\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\n    return state.user.userPoolsViewMode\n  })\n\n  const setUserPoolsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolsViewMode, setUserPoolsViewMode]\n}\n\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\n    return state.user.userFarmsViewMode\n  })\n\n  const setUserFarmsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userFarmsViewMode, setUserFarmsViewMode]\n}\n\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\n    return state.user.userPredictionAcceptedRisk\n  })\n\n  const setUserPredictionAcceptedRisk = useCallback(\n    (acceptedRisk: boolean) => {\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\n}\n\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionChartDisclaimerShow = useSelector<\n    AppState,\n    AppState['user']['userPredictionChartDisclaimerShow']\n  >((state) => {\n    return state.user.userPredictionChartDisclaimerShow\n  })\n\n  const setPredictionUserChartDisclaimerShow = useCallback(\n    (showDisclaimer: boolean) => {\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\n}\n\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userExpertModeAcknowledgementShow = useSelector<\n    AppState,\n    AppState['user']['userExpertModeAcknowledgementShow']\n  >((state) => {\n    return state.user.userExpertModeAcknowledgementShow\n  })\n\n  const setUserExpertModeAcknowledgementShow = useCallback(\n    (showAcknowledgement: boolean) => {\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\n    },\n    [dispatch],\n  )\n\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\n}\n\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\n    return state.user.userUsernameVisibility\n  })\n\n  const setUserUsernameVisibility = useCallback(\n    (usernameVisibility: boolean) => {\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\n    },\n    [dispatch],\n  )\n\n  return [userUsernameVisibility, setUserUsernameVisibility]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { Interface } from '@ethersproject/abi'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => ({\n    target: call.address.toLowerCase(),\n    callData: itf.encodeFunctionData(call.name, call.params),\n  }))\n  // console.log(\"calldatacalldata\", calldata)\n  const { returnData } = await multi.aggregate(calldata)\n\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res as any\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<T> => {\n  // console.log(\"callscallscallscalls   callscallscallscalls\", calls)\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => ({\n    target: call.address.toLowerCase(),\n    callData: itf.encodeFunctionData(call.name, call.params),\n  }))\n  // console.log(\"calldatacalldatacalldatacalldata\", calldata)\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  // console.log(\"returnDatareturnDatareturnData\", returnData)\n\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    // console.log(\"result, dataresult, dataresult, data\", result, data)\n\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n  // console.log(\"resres  resres  resresres\", res)\n\n  return res as any\n}\n\nexport default multicall\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { useFastFresh, useSlowFresh } from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, DeserializedPool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const slowRefresh = useSlowFresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useFetchUserPools = (account) => {\n  const fastRefresh = useFastFresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n}\n\nexport const usePools = (): { pools: DeserializedPool[]; userDataLoaded: boolean } => {\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const fastRefresh = useFastFresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = 1\nexport const BLOCKS_PER_YEAR = (60 / BSC_BLOCK_TIME) * 60 * 24 * 365 // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK * BLOCKS_PER_YEAR\nexport const BASE_URL = 'https://gladiators.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\nexport const PINATA_CLOUD = 'https://gateway.pinata.cloud/ipfs'\n// In reality its 10000 because of fast refresh, a bit less here to cover for possible long request times\nexport const PANCAKE_BUNNIES_UPDATE_FREQUENCY = 8000\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","export type PairDataNormalized = {\n  time: number\n  token0Id: string\n  token1Id: string\n  reserve0: number\n  reserve1: number\n}[]\n\nexport type DerivedPairDataNormalized = {\n  time: number\n  token0Id: string\n  token1Id: string\n  token0DerivedBNB: number\n  token1DerivedBNB: number\n}[]\n\nexport type PairPricesNormalized = {\n  time: Date\n  value: number\n}[]\n\nexport enum PairDataTimeWindowEnum {\n  DAY,\n  WEEK,\n  MONTH,\n  YEAR,\n}\n","import BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { getApy } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: DeserializedPool, performanceFee: number) => {\n  const { isAutoVault, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: DeserializedPool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from 'config/constants/types'\nimport { parseUnits } from 'ethers/lib/utils'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n    projectLink: token.projectLink,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n    serializedToken.projectLink,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n  PredictionUser,\n  HistoryFilter,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  UserResponse,\n} from './queries'\nimport { ROUNDS_PER_PAGE } from './config'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  HOUSE = 'house',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponse(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n\n  if (bet.round.position === BetPosition.HOUSE) {\n    return Result.HOUSE\n  }\n\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\n  switch (filter) {\n    case HistoryFilter.COLLECTED:\n      return bets.filter((bet) => bet.claimed === true)\n    case HistoryFilter.UNCOLLECTED:\n      return bets.filter((bet) => {\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n      })\n    case HistoryFilter.ALL:\n    default:\n      return bets\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const { market } = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n      }\n    `,\n  )) as { market: TotalWonMarketResponse }\n\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - totalBNBTreasury, 0)\n}\n\ntype WhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          }\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          }\n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\n\ninterface GetPredictionUsersOptions {\n  skip?: number\n  first?: number\n  orderBy?: string\n  orderDir?: string\n  where?: WhereClause\n}\n\nconst defaultPredictionUserOptions = {\n  skip: 0,\n  first: LEADERBOARD_RESULTS_PER_PAGE,\n  orderBy: 'createdAt',\n  orderDir: 'desc',\n}\n\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\n          ${getUserBaseFields()}\n        }\n      }\n    `,\n    { first, skip, where, orderBy, orderDir },\n  )\n  return response.users\n}\n\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUser($id: ID!) {\n        user(id: $id) {\n          ${getUserBaseFields()}\n        }\n      }\n  `,\n    {\n      id: account.toLowerCase(),\n    },\n  )\n  return response.user\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\n    address,\n    name: method,\n  }))\n  // console.log(\"staticCallsstaticCallsstaticCalls  staticCallsstaticCallsstaticCalls\", staticCalls)\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    bufferSeconds: bufferSeconds.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  // console.log(\"callscallscallscallscalls\", calls)\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  // console.log(\"responseresponse111\", response)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n  \n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp?.eq(0) ? null : startTimestamp?.toNumber(),\n    lockTimestamp: lockTimestamp?.eq(0) ? null : lockTimestamp?.toNumber(),\n    closeTimestamp: closeTimestamp?.eq(0) ? null : closeTimestamp?.toNumber(),\n    lockPrice: lockPrice?.eq(0) ? null : lockPrice?.toJSON(),\n    closePrice: closePrice?.eq(0) ? null : closePrice?.toJSON(),\n    totalAmount: totalAmount?.toJSON(),\n    bullAmount: bullAmount?.toJSON(),\n    bearAmount: bearAmount?.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount?.toJSON(),\n    rewardAmount: rewardAmount?.toJSON(),\n    lockOracleId: lockOracleId?.toString(),\n    closeOracleId: closeOracleId?.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n\nexport const fetchUsersRoundsLength = async (account: string) => {\n  try {\n    const contract = getPredictionsContract()\n    const length = await contract.getUserRoundsLength(account)\n    return length\n  } catch {\n    return ethers.BigNumber.from(0)\n  }\n}\n\n/**\n * Fetches rounds a user has participated in\n */\nexport const fetchUserRounds = async (\n  account: string,\n  cursor = 0,\n  size = ROUNDS_PER_PAGE,\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\n  const contract = getPredictionsContract()\n\n  try {\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\n\n    return rounds.reduce((accum, round, index) => {\n      return {\n        ...accum,\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index] as PredictionsLedgerResponse),\n      }\n    }, {})\n  } catch {\n    // When the results run out the contract throws an error.\n    return null\n  }\n}\n","export interface UserResponse {\n  id: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  totalBets: string\n  totalBetsBull: string\n  totalBetsBear: string\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  totalBetsClaimed: string\n  totalBNBClaimed: string\n  winRate: string\n  averageBNB: string\n  netBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedAt: string\n  claimedBlock: string\n  claimedHash: string\n  claimedBNB: string\n  claimedNetBNB: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  position: string\n  failed: boolean\n  startAt: string\n  startBlock: string\n  startHash: string\n  lockAt: string\n  lockBlock: string\n  lockHash: string\n  lockPrice: string\n  lockRoundId: string\n  closeAt: string\n  closeBlock: string\n  closeHash: string\n  closePrice: string\n  closeRoundId: string\n  totalBets: string\n  totalAmount: string\n  bullBets: string\n  bullAmount: string\n  bearBets: string\n  bearAmount: string\n  bets?: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const getBetBaseFields = () => `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const getUserBaseFields = () => `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalBNB\n  totalBNBBull\n  totalBNBBear\n  totalBetsClaimed\n  totalBNBClaimed\n  winRate\n  averageBNB\n  netBNB\n`\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlock } from 'state/block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\n  }, [fragment, contract, results, currentBlock])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\n  }, [fragment, results, contractInterface, currentBlock])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, currentBlock)\n  }, [result, contract, fragment, currentBlock])\n}\n","import { gql, request } from 'graphql-request'\nimport { stringify } from 'qs'\nimport { API_NFT, GRAPH_API_NFTMARKET, CHAIN_ID } from 'config/constants/endpoints'\nimport { multicallv2 } from 'utils/multicall'\nimport erc721Abi from 'config/abi/erc721.json'\nimport { uniq, range } from 'lodash'\nimport { gladiatorCollectiblesAddress } from 'views/Nft/market/constants'\nimport {\n  ApiCollection,\n  ApiCollections,\n  ApiResponseCollectionTokens,\n  ApiResponseSpecificToken,\n  AskOrderType,\n  Collection,\n  CollectionMarketDataBaseFields,\n  NftActivityFilter,\n  NftLocation,\n  NftToken,\n  TokenIdWithCollectionAddress,\n  TokenMarketData,\n  Transaction,\n  AskOrder,\n  ApiSingleTokenData,\n  NftAttribute,\n  ApiTokenFilterResponse,\n  ApiCollectionsResponse,\n  MarketEvent,\n} from './types'\nimport axios from \"axios\";\nimport { getBaseNftFields, getBaseTransactionFields, getCollectionBaseFields } from './queries'\n\n/**\n * API HELPERS\n */\n\n/**\n * Add Gladiators to DB\n * @returns\n */\n export const addGladiatorsToDB = async (data: any) => {\n  //  console.log(\"dataaaaa\", data)\n   try {\n     const  {data: newData} = await axios.post(`${API_NFT}/mygladiators`,data)\n    //  console.log(\"newDataeeeeeeeeeeeeee\", newData)\n     return newData\n   } catch (error) {\n    //  console.log(\"errorrrrrrrrrr\", error)\n     return error\n   }\n}\n\n/**\n * get Gladiators from DB\n * @returns\n */\n export const getAllGladiators = async () => {\n  try {\n    const res = await fetch(`${API_NFT}/mygladiators`)\n    if (res.ok) {\n      const json = await res.json()\n      return json\n    }\n  } catch (error) {\n    return error\n  }\n}\n/**\n * get Gladiators from DB\n * @returns\n */\n export const getSpecificGladiators = async (ids) => {\n  try {\n    const res = await fetch(`${API_NFT}/myspecificgladiators/${ids}`)\n    if (res.ok) {\n      const json = await res.json()\n      return json\n    }\n  } catch (error) {\n    return error\n  }\n}\nexport const getSpecificGladiators2 = async (ids) => {\n  try {\n    const res = await fetch(`${API_NFT}/myspecificgladiators/${JSON.stringify(ids)}`)\n    if (res.ok) {\n      const json = await res.json()\n      return json\n    }\n  } catch (error) {\n    return error\n  }\n}\n/**\n * Add NFTs to DB\n * @returns\n */\n export const addJoinBattleNFTToDB = async (data) => {\n  try {\n    const  {data: newData} = await axios.post(`${API_NFT}/joinBattleNfts`,data)\n    // console.log(\"newDataeeeeeeeeeeeeee\", newData)\n    return newData\n  } catch (error) {\n    return error\n  }\n}\n\n\n/**\n * Get NFTs from DB\n * @returns\n */\n export const getAllJoinPageNfts = async () => {\n  try {\n    const res = await fetch(`${API_NFT}/joinBattleNfts`)\n    if (res.ok) {\n      const json = await res.json()\n      return json\n    }\n  } catch (error) {\n    return error\n  }\n}\nexport const getSpecificJoinPageNfts = async (ids) => {\n  try {\n    const res = await fetch(`${API_NFT}/get/join/page/nfts/${JSON.stringify(ids)}`)\n    if (res.ok) {\n      const json = await res.json()\n      return json\n    }\n  } catch (error) {\n    return error\n  }\n}\n/**\n * Fetch static data from all collections using the API\n * @returns\n */\nexport const getCollectionsApi = async (): Promise<ApiCollectionsResponse> => {\n  const fromApi = {total:0, data:[]}\n  const count = await fetch(`${API_NFT}/collections/count`)\n  if (count.ok) {\n    const json = await count.json()\n    fromApi.total = json.count\n  }\n\n  const res = await fetch(`${API_NFT}/collections`)\n  if (res.ok) {\n    const json = await res.json()\n    fromApi.data = json\n    return fromApi\n  }\n  console.error('Failed to fetch NFT collections', res.statusText)\n  return null\n}\n\n/**\n * Fetch static data from a collection using the API\n * @returns\n */\nexport const getCollectionApi = async (collectionAddress: string): Promise<ApiCollection> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress}`, res.statusText)\n  return null\n}\n\n/**\n * Fetch static data for all nfts in a collection using the API\n * @param collectionAddress\n * @param size\n * @param page\n * @returns\n */\nexport const getNftsFromCollectionApi = async (\n  collectionAddress: string,\n  size = 100,\n  page = 1,\n): Promise<ApiResponseCollectionTokens> => {\n  const isPBCollection = collectionAddress.toLowerCase() === gladiatorCollectiblesAddress.toLowerCase()\n  const requestPath = `${API_NFT}/collections/${collectionAddress}/tokens${\n    !isPBCollection ? `?page=${page}&size=${size}` : ``\n  }`\n\n  const requestTotal = `${API_NFT}/collections/${collectionAddress}/tokens/count`\n\n  const resTotal = await fetch(requestTotal)\n  const res = await fetch(requestPath)\n  if (res.ok && resTotal.ok) {\n    const data = await res.json()\n    const count = await resTotal.json()\n    return {data, total: count.count}\n  }\n  console.error(`API: Failed to fetch NFT tokens for ${collectionAddress} collection`, res.statusText)\n  return null\n}\n\n/**\n * Fetch a single NFT using the API\n * @param collectionAddress\n * @param tokenId\n * @returns NFT from API\n */\nexport const getNftApi = async (\n  collectionAddress: string,\n  tokenId: string,\n): Promise<ApiResponseSpecificToken['data']> => {\n  const res = await fetch(`${API_NFT}/tokens/fetchToken/${CHAIN_ID}/${collectionAddress.toLowerCase()}/${tokenId}`)\n  if (res.ok) {\n    const json = await res.json()\n    return json\n  }\n\n  console.error(`API: Can't fetch NFT token ${tokenId} in ${collectionAddress}`, res.status)\n  return null\n}\n\n/**\n * Fetch a list of NFT from different collections\n * @param from Array of { collectionAddress: string; tokenId: string }\n * @returns Array of NFT from API\n */\nexport const getNftsFromDifferentCollectionsApi = async (\n  from: { collectionAddress: string; tokenId: string }[],\n): Promise<NftToken[]> => {\n  const promises = from.map((nft) => getNftApi(nft.collectionAddress, nft.tokenId))\n  const responses = await Promise.all(promises)\n  // Sometimes API can't find some tokens (e.g. 404 response)\n  // at least return the ones that returned successfully\n  return responses\n    .filter((resp) => resp)\n    .map((res, index) => ({\n      tokenId: res.tokenId,\n      name: res.name,\n      collectionName: res.collection.name,\n      collectionAddress: from[index].collectionAddress,\n      description: res.description,\n      attributes: res.attributes,\n      createdAt: res.createdAt,\n      updatedAt: res.updatedAt,\n      image: res.image,\n    }))\n}\n\n/**\n * SUBGRAPH HELPERS\n */\n\n/**\n * Fetch market data from a collection using the Subgraph\n * @returns\n */\nexport const getCollectionSg = async (collectionAddress: string): Promise<CollectionMarketDataBaseFields> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getCollectionData($collectionAddress: String!) {\n          collection(id: $collectionAddress) {\n            ${getCollectionBaseFields()}\n          }\n        }\n      `,\n      { collectionAddress: collectionAddress.toLowerCase() },\n    )\n    return res.collection\n  } catch (error) {\n    console.error('Failed to fetch collection', error)\n    return null\n  }\n}\n\n/**\n * Fetch market data from all collections using the Subgraph\n * @returns\n */\nexport const getCollectionsSg = async (): Promise<CollectionMarketDataBaseFields[]> => {\n  // try {\n  //   const res = await request(\n  //     GRAPH_API_NFTMARKET,\n  //     gql`\n  //       {\n  //         collections {\n  //           ${getCollectionBaseFields()}\n  //         }\n  //       }\n  //     `,\n  //   )\n  //   return res.collections\n  // } catch (error) {\n  //   console.error('Failed to fetch NFT collections', error)\n  //   return []\n  // }\n  return []\n}\n\n/**\n * Fetch market data for nfts in a collection using the Subgraph\n * @param collectionAddress\n * @param first\n * @param skip\n * @returns\n */\nexport const getNftsFromCollectionSg = async (\n  collectionAddress: string,\n  first = 1000,\n  skip = 0,\n): Promise<TokenMarketData[]> => {\n  // Squad to be sorted by tokenId as this matches the order of the paginated API return. For PBs - get the most recent,\n  const isPBCollection = collectionAddress.toLowerCase() === gladiatorCollectiblesAddress.toLowerCase()\n\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftCollectionMarketData($collectionAddress: String!) {\n          collection(id: $collectionAddress) {\n            id\n            nfts(orderBy:${isPBCollection ? 'updatedAt' : 'tokenId'}, skip: $skip, first: $first) {\n             ${getBaseNftFields()}\n            }\n          }\n        }\n      `,\n      { collectionAddress: collectionAddress.toLowerCase(), skip, first },\n    )\n    return res.collection.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs from collection', error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for GladiatorCollectibles NFTs by bunny id using the Subgraph\n * @param bunnyId - bunny id to query\n * @param existingTokenIds - tokens that are already loaded into redux\n * @returns\n */\nexport const getNftsByGladiatorCollectibleIdSg = async (\n  bunnyId: string,\n  existingTokenIds: string[],\n  orderDirection: 'asc' | 'desc',\n): Promise<TokenMarketData[]> => {\n  try {\n    const where =\n      existingTokenIds.length > 0\n        ? { otherId: bunnyId, isTradable: true, tokenId_not_in: existingTokenIds }\n        : { otherId: bunnyId, isTradable: true }\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftsByGladiatorCollectibleIdSg($collectionAddress: String!, $where: NFT_filter, $orderDirection: String!) {\n          nfts(first: 30, where: $where, orderBy: currentAskPrice, orderDirection: $orderDirection) {\n            ${getBaseNftFields()}\n          }\n        }\n      `,\n      {\n        collectionAddress: gladiatorCollectiblesAddress.toLowerCase(),\n        where,\n        orderDirection,\n      },\n    )\n    return res.nfts\n  } catch (error) {\n    console.error(`Failed to fetch collection NFTs for bunny id ${bunnyId}`, error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for GladiatorCollectibles NFTs by bunny id using the Subgraph\n * @param bunnyId - bunny id to query\n * @param existingTokenIds - tokens that are already loaded into redux\n * @returns\n */\nexport const getMarketDataForTokenIds = async (\n  collectionAddress: string,\n  existingTokenIds: string[],\n): Promise<TokenMarketData[]> => {\n  try {\n    if (existingTokenIds.length === 0) {\n      return []\n    }\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getMarketDataForTokenIds($collectionAddress: String!, $where: NFT_filter) {\n          collection(id: $collectionAddress) {\n            id\n            nfts(first: 1000, where: $where) {\n              ${getBaseNftFields()}\n            }\n          }\n        }\n      `,\n      {\n        collectionAddress: collectionAddress.toLowerCase(),\n        where: { tokenId_in: existingTokenIds },\n      },\n    )\n    return res.collection.nfts\n  } catch (error) {\n    console.error(`Failed to fetch market data for NFTs stored tokens`, error)\n    return []\n  }\n}\n\nexport const getNftsMarketData = async (\n  where = {},\n  first = 1000,\n  orderBy = 'id',\n  orderDirection: 'asc' | 'desc' = 'desc',\n  skip = 0,\n): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftsMarketData($first: Int, $skip: Int!, $where: NFT_filter, $orderBy: NFT_orderBy, $orderDirection: OrderDirection) {\n          nfts(where: $where, first: $first, orderBy: $orderBy, orderDirection: $orderDirection, skip: $skip) {\n            ${getBaseNftFields()}\n            transactionHistory {\n              ${getBaseTransactionFields()}\n            }\n          }\n        }\n      `,\n      { where, first, skip, orderBy, orderDirection },\n    )\n\n    return res.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs market data', error)\n    return []\n  }\n}\n\nexport const getAllGladiatorCollectiblesLowestPrice = async (bunnyIds: string[]): Promise<Record<string, number>> => {\n  try {\n    const singleGladiatorCollectibleSubQueries = bunnyIds.map(\n      (\n        bunnyId,\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: currentAskPrice, orderDirection: asc) {\n        currentAskPrice\n      }\n    `,\n    )\n    const rawResponse: Record<string, { currentAskPrice: string }[]> = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getAllGladiatorCollectiblesLowestPrice {\n          ${singleGladiatorCollectibleSubQueries}\n        }\n      `,\n    )\n    return Object.keys(rawResponse).reduce((lowestPricesData, subQueryKey) => {\n      const bunnyId = subQueryKey.split('b')[1]\n      return {\n        ...lowestPricesData,\n        [bunnyId]:\n          rawResponse[subQueryKey].length > 0 ? parseFloat(rawResponse[subQueryKey][0].currentAskPrice) : Infinity,\n      }\n    }, {})\n  } catch (error) {\n    console.error('Failed to fetch GladiatorCollectibles lowest prices', error)\n    return {}\n  }\n}\n\nexport const getAllGladiatorCollectiblesRecentUpdatedAt = async (bunnyIds: string[]): Promise<Record<string, number>> => {\n  try {\n    const singleGladiatorCollectibleSubQueries = bunnyIds.map(\n      (\n        bunnyId,\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: updatedAt, orderDirection: desc) {\n        updatedAt\n      }\n    `,\n    )\n    const rawResponse: Record<string, { updatedAt: string }[]> = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getAllGladiatorCollectiblesLowestPrice {\n          ${singleGladiatorCollectibleSubQueries}\n        }\n      `,\n    )\n    return Object.keys(rawResponse).reduce((updatedAtData, subQueryKey) => {\n      const bunnyId = subQueryKey.split('b')[1]\n      return {\n        ...updatedAtData,\n        [bunnyId]: rawResponse[subQueryKey].length > 0 ? Number(rawResponse[subQueryKey][0].updatedAt) : -Infinity,\n      }\n    }, {})\n  } catch (error) {\n    console.error('Failed to fetch GladiatorCollectibles latest market updates', error)\n    return {}\n  }\n}\n\n/**\n * Returns the lowest price of any NFT in a collection\n */\nexport const getLowestPriceInCollection = async (collectionAddress: string) => {\n  try {\n    const response = await getNftsMarketData(\n      { collection: collectionAddress.toLowerCase(), isTradable: true },\n      1,\n      'currentAskPrice',\n      'asc',\n    )\n\n    if (response.length === 0) {\n      return 0\n    }\n\n    const [nftSg] = response\n    return parseFloat(nftSg.currentAskPrice)\n  } catch (error) {\n    console.error(`Failed to lowest price NFTs in collection ${collectionAddress}`, error)\n    return 0\n  }\n}\n\n/**\n * Fetch user trading data for buyTradeHistory, sellTradeHistory and askOrderHistory from the Subgraph\n * @param where a User_filter where condition\n * @returns a UserActivity object\n */\nexport const getUserActivity = async (\n  address: string,\n): Promise<{ askOrderHistory: AskOrder[]; buyTradeHistory: Transaction[]; sellTradeHistory: Transaction[] }> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getUserActivity($address: String!) {\n          user(id: $address) {\n            buyTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\n              ${getBaseTransactionFields()}\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n            sellTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\n              ${getBaseTransactionFields()}\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n            askOrderHistory(first: 500, orderBy: timestamp, orderDirection: desc) {\n              id\n              block\n              timestamp\n              orderType\n              askPrice\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n          }\n        }\n      `,\n      { address },\n    )\n\n    return res.user || { askOrderHistory: [], buyTradeHistory: [], sellTradeHistory: [] }\n  } catch (error) {\n    console.error('Failed to fetch user Activity', error)\n    return {\n      askOrderHistory: [],\n      buyTradeHistory: [],\n      sellTradeHistory: [],\n    }\n  }\n}\n\nexport const getCollectionActivity = async (\n  address: string,\n  nftActivityFilter: NftActivityFilter,\n  itemPerQuery,\n): Promise<{ askOrders?: AskOrder[]; transactions?: Transaction[] }> => {\n  const getAskOrderEvent = (orderType: MarketEvent): AskOrderType => {\n    switch (orderType) {\n      case MarketEvent.CANCEL:\n        return AskOrderType.CANCEL\n      case MarketEvent.MODIFY:\n        return AskOrderType.MODIFY\n      case MarketEvent.NEW:\n        return AskOrderType.NEW\n      default:\n        return AskOrderType.MODIFY\n    }\n  }\n\n  const isFetchAllCollections = address === ''\n\n  const hasCollectionFilter = nftActivityFilter.collectionFilters.length > 0\n\n  const collectionFilterGql = !isFetchAllCollections\n    ? `collection: ${JSON.stringify(address)}`\n    : hasCollectionFilter\n    ? `collection_in: ${JSON.stringify(nftActivityFilter.collectionFilters)}`\n    : ``\n\n  const askOrderTypeFilter = nftActivityFilter.typeFilters\n    .filter((marketEvent) => marketEvent !== MarketEvent.SELL)\n    .map((marketEvent) => getAskOrderEvent(marketEvent))\n\n  const askOrderIncluded = nftActivityFilter.typeFilters.length === 0 || askOrderTypeFilter.length > 0\n\n  const askOrderTypeFilterGql =\n    askOrderTypeFilter.length > 0 ? `orderType_in: ${JSON.stringify(askOrderTypeFilter)}` : ``\n\n  const transactionIncluded =\n    nftActivityFilter.typeFilters.length === 0 ||\n    nftActivityFilter.typeFilters.some(\n      (marketEvent) => marketEvent === MarketEvent.BUY || marketEvent === MarketEvent.SELL,\n    )\n\n  let askOrderQueryItem = itemPerQuery / 2\n  let transactionQueryItem = itemPerQuery / 2\n\n  if (!askOrderIncluded || !transactionIncluded) {\n    askOrderQueryItem = !askOrderIncluded ? 0 : itemPerQuery\n    transactionQueryItem = !transactionIncluded ? 0 : itemPerQuery\n  }\n\n  const askOrderGql = askOrderIncluded\n    ? `askOrders(first: ${askOrderQueryItem}, orderBy: timestamp, orderDirection: desc, where:{\n            ${collectionFilterGql}, ${askOrderTypeFilterGql}\n          }) {\n              id\n              block\n              timestamp\n              orderType\n              askPrice\n              seller {\n                id\n              }\n              nft {\n                ${getBaseNftFields()}\n              }\n          }`\n    : ``\n\n  const transactionGql = transactionIncluded\n    ? `transactions(first: ${transactionQueryItem}, orderBy: timestamp, orderDirection: desc, where:{\n            ${collectionFilterGql}\n          }) {\n            ${getBaseTransactionFields()}\n              nft {\n                ${getBaseNftFields()}\n              }\n          }`\n    : ``\n\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getCollectionActivity {\n          ${askOrderGql}\n          ${transactionGql}\n        }\n      `,\n    )\n\n    return res || { askOrders: [], transactions: [] }\n  } catch (error) {\n    console.error('Failed to fetch collection Activity', error)\n    return {\n      askOrders: [],\n      transactions: [],\n    }\n  }\n}\n\nexport const getTokenActivity = async (\n  tokenId: string,\n  collectionAddress: string,\n): Promise<{ askOrders: AskOrder[]; transactions: Transaction[] }> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getCollectionActivity($tokenId: BigInt!, $address: ID!) {\n          nfts(where:{tokenId: $tokenId, collection: $address}) {\n            transactionHistory(orderBy: timestamp, orderDirection: desc) {\n              ${getBaseTransactionFields()}\n                nft {\n                  ${getBaseNftFields()}\n                }\n            }\n            askHistory(orderBy: timestamp, orderDirection: desc) {\n                id\n                block\n                timestamp\n                orderType\n                askPrice\n                seller {\n                  id\n                }\n                nft {\n                  ${getBaseNftFields()}\n                }\n            }\n          }\n        }\n      `,\n      { tokenId, address: collectionAddress },\n    )\n\n    if (res.nfts.length > 0) {\n      return { askOrders: res.nfts[0].askHistory, transactions: res.nfts[0].transactionHistory }\n    }\n    return { askOrders: [], transactions: [] }\n  } catch (error) {\n    console.error('Failed to fetch token Activity', error)\n    return {\n      askOrders: [],\n      transactions: [],\n    }\n  }\n}\n\n/**\n * Get the most recently listed NFTs\n * @param first Number of nfts to retrieve\n * @returns NftTokenSg[]\n */\nexport const getLatestListedNfts = async (first: number): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getLatestNftMarketData($first: Int) {\n          nfts(where: { isTradable: true }, orderBy: updatedAt , orderDirection: desc, first: $first) {\n            ${getBaseNftFields()}\n            collection {\n              id\n            }\n          }\n        }\n      `,\n      { first },\n    )\n\n    return res.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs market data', error)\n    return []\n  }\n}\n\n/**\n * Filter NFTs from a collection\n * @param collectionAddress\n * @returns\n */\nexport const fetchNftsFiltered = async (\n  collectionAddress: string,\n  filters: Record<string, string | number>,\n): Promise<ApiTokenFilterResponse> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/filter?${stringify(filters)}`)\n\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress}`, res.statusText)\n  return null\n}\n\n/**\n * OTHER HELPERS\n */\n\nexport const getMetadataWithFallback = (apiMetadata: ApiResponseCollectionTokens['data'], bunnyId: string) => {\n  // The fallback is just for the testnet where some bunnies don't exist\n  return (\n    apiMetadata[bunnyId] ?? {\n      name: '',\n      description: '',\n      collection: { name: 'Pancake Bunnies' },\n      image: {\n        original: '',\n        thumbnail: '',\n      },\n    }\n  )\n}\n\nexport const getGladiatorCollectiblesAttributesField = (bunnyId: string) => {\n  // Generating attributes field that is not returned by API\n  // but can be \"faked\" since objects are keyed with bunny id\n  return [\n    {\n      traitType: 'bunnyId',\n      value: bunnyId,\n      displayType: null,\n    },\n  ]\n}\n\nexport const combineApiAndSgResponseToNftToken = (\n  apiMetadata: ApiSingleTokenData,\n  marketData: TokenMarketData,\n  attributes: NftAttribute[],\n) => {\n  return {\n    tokenId: marketData.tokenId,\n    name: apiMetadata.name,\n    description: apiMetadata.description,\n    collectionName: apiMetadata.collection.name,\n    collectionAddress: gladiatorCollectiblesAddress,\n    image: apiMetadata.image,\n    marketData,\n    attributes,\n  }\n}\n\nexport const fetchWalletTokenIdsForCollections = async (\n  account: string,\n  collections: ApiCollections,\n): Promise<TokenIdWithCollectionAddress[]> => {\n  const balanceOfCalls = Object.values(collections).map((collection) => {\n    const { address: collectionAddress } = collection\n    return {\n      address: collectionAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const balanceOfCallsResultRaw = await multicallv2(erc721Abi, balanceOfCalls, { requireSuccess: false })\n  const balanceOfCallsResult = balanceOfCallsResultRaw.flat()\n\n  const tokenIdCalls = Object.values(collections)\n    .map((collection, index) => {\n      const balanceOf = balanceOfCallsResult[index]?.toNumber() ?? 0\n      const { address: collectionAddress } = collection\n\n      return range(balanceOf).map((tokenIndex) => {\n        return {\n          address: collectionAddress,\n          name: 'tokenOfOwnerByIndex',\n          params: [account, tokenIndex],\n        }\n      })\n    })\n    .flat()\n\n  const tokenIdResultRaw = await multicallv2(erc721Abi, tokenIdCalls, { requireSuccess: false })\n  const tokenIdResult = tokenIdResultRaw.flat()\n\n  const nftLocation = NftLocation.WALLET\n\n  const walletNfts = tokenIdResult.reduce((acc, tokenIdBn, index) => {\n    if (tokenIdBn) {\n      const { address: collectionAddress } = tokenIdCalls[index]\n      acc.push({ tokenId: tokenIdBn.toString(), collectionAddress, nftLocation })\n    }\n    return acc\n  }, [])\n\n  return walletNfts\n}\n\n/**\n * Helper to combine data from the collections' API and subgraph\n */\nexport const combineCollectionData = (\n  collectionApiData: ApiCollection[],\n  collectionSgData: CollectionMarketDataBaseFields[],\n): Record<string, Collection> => {\n  const collectionsMarketObj: Record<string, CollectionMarketDataBaseFields> = collectionSgData.reduce(\n    (prev, current) => ({ ...prev, [current.id]: { ...current } }),\n    {},\n  )\n\n  return collectionApiData.reduce((accum, current) => {\n    const collectionMarket = collectionsMarketObj[current.address.toLowerCase()]\n    const collection: Collection = {\n      ...current,\n      ...collectionMarket,\n    }\n\n    if (current.name) {\n      collection.name = current.name\n    }\n\n    return {\n      ...accum,\n      [current.address]: collection,\n    }\n  }, {})\n}\n\n/**\n * Evaluate whether a market NFT is in a users wallet, their profile picture, or on sale\n * @param tokenId string\n * @param tokenIdsInWallet array of tokenIds in wallet\n * @param tokenIdsForSale array of tokenIds on sale\n * @param profileNftId Optional tokenId of users' profile picture\n * @returns NftLocation enum value\n */\nexport const getNftLocationForMarketNft = (\n  tokenId: string,\n  tokenIdsInWallet: string[],\n  tokenIdsForSale: string[],\n  profileNftId?: string,\n): NftLocation => {\n  if (tokenId === profileNftId) {\n    return NftLocation.PROFILE\n  }\n  if (tokenIdsForSale.includes(tokenId)) {\n    return NftLocation.FORSALE\n  }\n  if (tokenIdsInWallet.includes(tokenId)) {\n    return NftLocation.WALLET\n  }\n  console.error(`Cannot determine location for tokenID ${tokenId}, defaulting to NftLocation.WALLET`)\n  return NftLocation.WALLET\n}\n\n/**\n * Construct complete TokenMarketData entities with a users' wallet NFT ids and market data for their wallet NFTs\n * @param walletNfts TokenIdWithCollectionAddress\n * @param marketDataForWalletNfts TokenMarketData[]\n * @returns TokenMarketData[]\n */\nexport const attachMarketDataToWalletNfts = (\n  walletNfts: TokenIdWithCollectionAddress[],\n  marketDataForWalletNfts: TokenMarketData[],\n): TokenMarketData[] => {\n  const walletNftsWithMarketData = walletNfts.map((walletNft) => {\n    const marketData = marketDataForWalletNfts.find(\n      (marketNft) =>\n        marketNft.tokenId === walletNft.tokenId &&\n        marketNft.collection.id.toLowerCase() === walletNft.collectionAddress.toLowerCase(),\n    )\n    return (\n      marketData ?? {\n        tokenId: walletNft.tokenId,\n        collection: {\n          id: walletNft.collectionAddress.toLowerCase(),\n        },\n        nftLocation: walletNft.nftLocation,\n        metadataUrl: null,\n        transactionHistory: null,\n        currentSeller: null,\n        isTradable: null,\n        currentAskPrice: null,\n        latestTradedPriceInBNB: null,\n        tradeVolumeBNB: null,\n        totalTrades: null,\n        otherId: null,\n      }\n    )\n  })\n  return walletNftsWithMarketData\n}\n\n/**\n * Attach TokenMarketData and location to NftToken\n * @param nftsWithMetadata NftToken[] with API metadata\n * @param nftsForSale  market data for nfts that are on sale (i.e. not in a user's wallet)\n * @param walletNfts market data for nfts in a user's wallet\n * @param tokenIdsInWallet array of token ids in user's wallet\n * @param tokenIdsForSale array of token ids of nfts that are on sale\n * @param profileNftId profile picture token id\n * @returns NFT[]\n */\nexport const combineNftMarketAndMetadata = (\n  nftsWithMetadata: NftToken[],\n  nftsForSale: TokenMarketData[],\n  walletNfts: TokenMarketData[],\n  tokenIdsInWallet: string[],\n  tokenIdsForSale: string[],\n  profileNftId?: string,\n): NftToken[] => {\n  const completeNftData = nftsWithMetadata.map<NftToken>((nft) => {\n    // Get metadata object\n    const isOnSale = nftsForSale.filter((forSaleNft) => forSaleNft.tokenId === nft.tokenId).length > 0\n    let marketData\n    if (isOnSale) {\n      marketData = nftsForSale.find((marketNft) => marketNft.tokenId === nft.tokenId)\n    } else {\n      marketData = walletNfts.find((marketNft) => marketNft.tokenId === nft.tokenId)\n    }\n    const location = getNftLocationForMarketNft(nft.tokenId, tokenIdsInWallet, tokenIdsForSale, profileNftId)\n    return { ...nft, marketData, location }\n  })\n  return completeNftData\n}\n\n/**\n * Get in-wallet, on-sale & profile pic NFT metadata, complete with market data for a given account\n * @param account\n * @param collections\n * @param profileNftWithCollectionAddress\n * @returns Promise<NftToken[]>\n */\nexport const getCompleteAccountNftData = async (\n  account: string,\n  collections: ApiCollections,\n  profileNftWithCollectionAddress?: TokenIdWithCollectionAddress,\n): Promise<NftToken[]> => {\n  const walletNftIdsWithCollectionAddress = await fetchWalletTokenIdsForCollections(account, collections)\n  if (profileNftWithCollectionAddress?.tokenId) {\n    walletNftIdsWithCollectionAddress.unshift(profileNftWithCollectionAddress)\n  }\n\n  const uniqueCollectionAddresses = uniq(\n    walletNftIdsWithCollectionAddress.map((walletNftId) => walletNftId.collectionAddress),\n  )\n\n  const walletNftsByCollection = uniqueCollectionAddresses.map((collectionAddress) => {\n    return {\n      collectionAddress,\n      idWithCollectionAddress: walletNftIdsWithCollectionAddress.filter(\n        (walletNft) => walletNft.collectionAddress === collectionAddress,\n      ),\n    }\n  })\n\n  const walletMarketDataRequests = walletNftsByCollection.map((walletNftByCollection) => {\n    const tokenIdIn = walletNftByCollection.idWithCollectionAddress.map((walletNft) => walletNft.tokenId)\n    return getNftsMarketData({\n      tokenId_in: tokenIdIn,\n      collection: walletNftByCollection.collectionAddress.toLowerCase(),\n    })\n  })\n\n  const walletMarketDataResponses = await Promise.all(walletMarketDataRequests)\n  const walletMarketData = walletMarketDataResponses.flat()\n\n  const walletNftsWithMarketData = attachMarketDataToWalletNfts(walletNftIdsWithCollectionAddress, walletMarketData)\n\n  const walletTokenIds = walletNftIdsWithCollectionAddress\n    .filter((walletNft) => {\n      // Profile Pic NFT is no longer wanted in this array, hence the filter\n      return profileNftWithCollectionAddress?.tokenId !== walletNft.tokenId\n    })\n    .map((nft) => nft.tokenId)\n\n  const marketDataForSaleNfts = await getNftsMarketData({ currentSeller: account.toLowerCase() })\n  const tokenIdsForSale = marketDataForSaleNfts.map((nft) => nft.tokenId)\n\n  const forSaleNftIds = marketDataForSaleNfts.map((nft) => {\n    return { collectionAddress: nft.collection.id, tokenId: nft.tokenId }\n  })\n\n  const metadataForAllNfts = await getNftsFromDifferentCollectionsApi([\n    ...forSaleNftIds,\n    ...walletNftIdsWithCollectionAddress,\n  ])\n\n  const completeNftData = combineNftMarketAndMetadata(\n    metadataForAllNfts,\n    marketDataForSaleNfts,\n    walletNftsWithMarketData,\n    walletTokenIds,\n    tokenIdsForSale,\n    profileNftWithCollectionAddress?.tokenId,\n  )\n\n  return completeNftData\n}\n\n/**\n * Fetch distribution information for a collection\n * @returns\n */\nexport const getCollectionDistributionApi = async <T>(collectionAddress: string): Promise<T> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/distribution`)\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress} distribution`, res.statusText)\n  return null\n}\n","export const getBaseNftFields = () => `\n  tokenId\n  metadataUrl\n  currentAskPrice\n  currentSeller\n  latestTradedPriceInBNB\n  tradeVolumeBNB\n  totalTrades\n  isTradable\n  updatedAt\n  otherId\n  collection {\n    id\n  }\n`\n\nexport const getBaseTransactionFields = () => `\n  id\n  block\n  timestamp\n  askPrice\n  netPrice\n  withBNB\n  buyer {\n    id\n  }\n  seller {\n    id\n  }\n`\n\nexport const getCollectionBaseFields = () => `\n  id\n  name\n  symbol\n  active\n  totalTrades\n  totalVolumeBNB\n  numberTokensListed\n  creatorAddress\n  tradingFee\n  creatorFee\n  whitelistChecker\n`\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport collections from 'config/constants/nfts/collections'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(collections).map(async (nftSourceType) => {\n      const { address: addressObj } = collections[nftSourceType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOfResponse.eq(0)) {\n        return []\n      }\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { InfoState } from './types'\nimport {\n  updateProtocolData,\n  updateProtocolChartData,\n  updateProtocolTransactions,\n  updatePoolData,\n  addPoolKeys,\n  updatePoolChartData,\n  updatePoolTransactions,\n  updateTokenData,\n  addTokenKeys,\n  addTokenPoolAddresses,\n  updateTokenChartData,\n  updateTokenPriceData,\n  updateTokenTransactions,\n} from './actions'\n\nconst initialState: InfoState = {\n  protocol: {\n    overview: undefined,\n    chartData: undefined,\n    transactions: undefined,\n  },\n  pools: { byAddress: {} },\n  tokens: { byAddress: {} },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    // Protocol actions\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.protocol.overview = protocolData\n    })\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\n      state.protocol.chartData = chartData\n    })\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\n      state.protocol.transactions = transactions\n    })\n    // Pools actions\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.forEach((poolData) => {\n        state.pools.byAddress[poolData.address] = {\n          ...state.pools.byAddress[poolData.address],\n          data: poolData,\n        }\n      })\n    })\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.forEach((address) => {\n        if (!state.pools.byAddress[address]) {\n          state.pools.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\n    })\n    // Tokens actions\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.forEach((tokenData) => {\n        state.tokens.byAddress[tokenData.address] = {\n          ...state.tokens.byAddress[tokenData.address],\n          data: tokenData,\n        }\n      })\n    })\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.forEach((address) => {\n        if (!state.tokens.byAddress[address]) {\n          state.tokens.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\n    })\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\n    })\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\n    })\n    .addCase(\n      updateTokenPriceData,\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\n        state.tokens.byAddress[tokenAddress] = {\n          ...state.tokens.byAddress[tokenAddress],\n          priceData: {\n            ...state.tokens.byAddress[tokenAddress].priceData,\n            [secondsInterval]: priceData,\n            oldestFetchedTimestamp,\n          },\n        }\n      },\n    ),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  FarmStakedOnly,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  muteAudio,\n  toggleTheme,\n  unmuteAudio,\n  updateGasPrice,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserFarmsViewMode,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  ViewMode,\n  updateUserPredictionAcceptedRisk,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n  updateUserGalleryFreshwaterOnly,\n  updateUserGallerySaltwaterOnly,\n  setChartViewMode,\n  setIsExchangeChartDisplayed,\n  ChartViewMode\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  userGalleryFreshwaterOnly: FarmStakedOnly\n  userGallerySaltwaterOnly: FarmStakedOnly\n  userPoolStakedOnly: boolean\n  userPoolsViewMode: ViewMode\n  userFarmsViewMode: ViewMode\n  userPredictionAcceptedRisk: boolean\n  userPredictionChartDisclaimerShow: boolean\n  userExpertModeAcknowledgementShow: boolean\n  userUsernameVisibility: boolean\n  gasPrice: string\n  watchlistTokens: string[]\n  watchlistPools: string[],\n  userChartViewMode?: boolean | string,\n  isExchangeChartDisplayed: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  userGalleryFreshwaterOnly: FarmStakedOnly.TRUE,\n  userGallerySaltwaterOnly: FarmStakedOnly.TRUE,\n  userPoolStakedOnly: false,\n  userPoolsViewMode: ViewMode.TABLE,\n  userFarmsViewMode: ViewMode.TABLE,\n  userPredictionAcceptedRisk: false,\n  userPredictionChartDisclaimerShow: true,\n  userExpertModeAcknowledgementShow: true,\n  userUsernameVisibility: false,\n  gasPrice: GAS_PRICE_GWEI.default,\n  watchlistTokens: [],\n  watchlistPools: [],\n  isExchangeChartDisplayed: true,\n  userChartViewMode: ChartViewMode.BASIC,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateUserGalleryFreshwaterOnly, (state, { payload: { userGalleryFreshwaterOnly } }) => {\n      state.userGalleryFreshwaterOnly = userGalleryFreshwaterOnly\n    })\n    .addCase(updateUserGallerySaltwaterOnly, (state, { payload: { userGallerySaltwaterOnly } }) => {\n      state.userGallerySaltwaterOnly = userGallerySaltwaterOnly\n    })\n    .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\n      state.userPoolStakedOnly = userPoolStakedOnly\n    })\n    .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\n      state.userPoolsViewMode = userPoolsViewMode\n    })\n    .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\n      state.userFarmsViewMode = userFarmsViewMode\n    })\n    .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\n      state.userPredictionAcceptedRisk = userAcceptedRisk\n    })\n    .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\n      state.userPredictionChartDisclaimerShow = userShowDisclaimer\n    })\n    .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\n      state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\n    })\n    .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\n      state.userUsernameVisibility = userUsernameVisibility\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    })\n    .addCase(setIsExchangeChartDisplayed, (state, { payload }) => {\n      state.isExchangeChartDisplayed = payload\n    })\n    .addCase(setChartViewMode, (state, { payload }) => {\n      state.userChartViewMode = payload\n    })\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\n      const tokenWatchlist = state.watchlistTokens ?? []\n      if (!tokenWatchlist.includes(address)) {\n        state.watchlistTokens = [...tokenWatchlist, address]\n      } else {\n        // Remove token from watchlist\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\n        state.watchlistTokens = newTokens\n      }\n    })\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\n      const poolsWatchlist = state.watchlistPools ?? []\n      if (!poolsWatchlist.includes(address)) {\n        state.watchlistPools = [...poolsWatchlist, address]\n      } else {\n        // Remove pool from watchlist\n        const newPools = state.watchlistPools.filter((x) => x !== address)\n        state.watchlistPools = newPools\n      }\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  Field,\n  replaceSwapState,\n  selectCurrency,\n  setRecipient,\n  switchCurrencies,\n  typeInput,\n  updateDerivedPairData,\n  updatePairData,\n} from './actions'\nimport { DerivedPairDataNormalized, PairDataNormalized } from './types'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n  readonly pairDataById: Record<number, Record<string, PairDataNormalized>> | null\n  readonly derivedPairDataById: Record<number, Record<string, DerivedPairDataNormalized>> | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  pairDataById: {},\n  derivedPairDataById: {},\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n          pairDataById: state.pairDataById,\n          derivedPairDataById: state.derivedPairDataById,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    })\n    .addCase(updatePairData, (state, { payload: { pairData, pairId, timeWindow } }) => {\n      if (!state.pairDataById[pairId]) {\n        state.pairDataById[pairId] = {}\n      }\n      state.pairDataById[pairId][timeWindow] = pairData\n    })\n    .addCase(updateDerivedPairData, (state, { payload: { pairData, pairId, timeWindow } }) => {\n      if (!state.derivedPairDataById[pairId]) {\n        state.derivedPairDataById[pairId] = {}\n      }\n      state.derivedPairDataById[pairId][timeWindow] = pairData\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport galleryReducer from './gallery'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport infoReducer from './info'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\nimport nftMarketReducer from './nftMarket/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile', 'collectibles']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    gallery: galleryReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n    info: infoReducer,\n    nftMarket: nftMarketReducer,\n\n    // Exchange\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { FetchStatus } from 'config/constants/types'\nimport { BigNumberish } from 'ethers'\n\n// Collections -> Nfts -> Transactions\n// Users -> Nft tokens IDs\n\n// TODO: Handle the error state on the UI\nexport enum NFTMarketInitializationState {\n  UNINITIALIZED = 'UNINITIALIZED',\n  INITIALIZED = 'INITIALIZED',\n  ERROR = 'ERROR',\n}\n\nexport enum UserNftInitializationState {\n  UNINITIALIZED = 'UNINITIALIZED',\n  INITIALIZING = 'INITIALIZING',\n  INITIALIZED = 'INITIALIZED',\n  ERROR = 'ERROR',\n}\n\nexport interface State {\n  initializationState: NFTMarketInitializationState\n  data: {\n    collections: Record<string, Collection> // string is the address\n    nfts: Record<string, NftToken[]> // string is the collection address\n    filters: Record<string, NftFilter> // string is the collection address\n    activityFilters: Record<string, NftActivityFilter> // string is the collection address\n    loadingState: {\n      isUpdatingGladiatorCollectibles: boolean\n      latestGladiatorCollectiblesUpdateAt: number\n    }\n    users: Record<string, User> // string is the address\n    user: UserNftsState\n  }\n}\n\nexport interface UserNftsState {\n  userNftsInitializationState: UserNftInitializationState\n  nfts: NftToken[]\n  activity: UserActivity\n}\n\nexport interface Transaction {\n  id: string\n  block: string\n  timestamp: string\n  askPrice: string\n  netPrice: string\n  buyer: { id: string }\n  seller: { id: string }\n  withBNB: boolean\n  nft?: TokenMarketData\n}\n\nexport enum AskOrderType {\n  NEW = 'New',\n  MODIFY = 'Modify',\n  CANCEL = 'Cancel',\n}\n\nexport interface AskOrder {\n  id: string\n  block: string\n  timestamp: string\n  askPrice: string\n  orderType: AskOrderType\n  nft?: TokenMarketData\n  seller?: { id: string }\n}\n\nexport interface Image {\n  original: string\n  thumbnail: string\n  mp4?: string\n  webm?: string\n  gif?: string\n}\n\nexport enum NftLocation {\n  FORSALE = 'For Sale',\n  PROFILE = 'Profile Pic',\n  WALLET = 'In Wallet',\n}\n\n// Market data regarding specific token ID, acquired via subgraph\nexport interface TokenMarketData {\n  tokenId: string\n  metadataUrl: string\n  currentAskPrice: string\n  currentSeller: string\n  latestTradedPriceInBNB: string\n  tradeVolumeBNB: string\n  totalTrades: string\n  isTradable: boolean\n  otherId: string\n  collection?: {\n    id: string\n  }\n  updatedAt?: string\n  transactionHistory?: Transaction[]\n}\n\n// Represents single NFT token, either Squad-like NFT or single GladiatorCollectible.\nexport interface NftToken {\n  tokenId: string\n  name: string\n  description: string\n  collectionName: string\n  collectionAddress: string\n  image: Image\n  attributes?: NftAttribute[]\n  createdAt?: string // API createdAt\n  updatedAt?: string // API updatedAt\n  marketData?: TokenMarketData\n  location?: NftLocation\n  meta?: Record<string, string | number>\n}\n\nexport interface NftFilter {\n  loadingState: FetchStatus\n  activeFilters: Record<string, NftAttribute>\n  showOnlyOnSale: boolean\n  ordering: {\n    field: string\n    direction: 'asc' | 'desc'\n  }\n}\n\nexport interface NftActivityFilter {\n  typeFilters: MarketEvent[]\n  collectionFilters: string[]\n}\n\nexport interface TokenIdWithCollectionAddress {\n  collectionAddress: string\n  tokenId: string\n  nftLocation?: NftLocation\n}\n\nexport interface NftAttribute {\n  traitType: string\n  value: string | number\n  displayType: string\n}\n\n// Internal type used to refer to a collection\n// Most fields are populated from API (via ApiCollection type)\nexport interface Collection {\n  id: string\n  address: string\n  name: string\n  createdAt?: string\n  description?: string\n  symbol: string\n  active: boolean\n  totalVolumeBNB: string\n  numberTokensListed: string\n  tradingFee: string\n  creatorFee: string\n  owner: string\n  totalSupply: string\n  verified: boolean\n  avatar: string\n  banner: {\n    large: string\n    small: string\n  }\n  attributes?: NftAttribute[]\n}\n\nexport interface ApiCollections {\n  [key: string]: Collection\n}\n\nexport interface User {\n  address: string\n  numberTokensListed: BigNumberish\n  numberTokensPurchased: BigNumberish\n  numberTokensSold: BigNumberish\n  nfts: Record<string, BigNumberish> // String is an address, BigNumberish is a tokenID\n}\n\n/**\n * API RESPONSES\n */\n\nexport interface ApiCollection {\n  address: string\n  owner: string\n  name: string\n  description: string\n  symbol: string\n  totalSupply: string\n  verified: boolean\n  createdAt: string\n  updatedAt: string\n  avatar: string\n  banner: {\n    large: string\n    small: string\n  }\n  attributes?: NftAttribute[] // returned for specific collection but not for all collections\n}\n\n// Get all collections\n// ${API_NFT}/collections/\nexport interface ApiCollectionsResponse {\n  total: number\n  data: ApiCollection[]\n}\n\n// Get single collection\n// ${API_NFT}/collections/${collectionAddress}\nexport interface ApiSingleCollectionResponse {\n  data: ApiCollection\n}\n\n// Get single collection\n// ${API_NFT}/collections/${collectionAddress}\nexport interface ApiTokenFilterResponse {\n  total: number\n  data: Record<string, ApiSingleTokenData>\n}\n\nexport interface ApiSingleTokenData {\n  name: string\n  description: string\n  image: Image\n  collection: {\n    name: string\n  }\n  attributes?: NftAttribute[]\n  tokenId?: string\n}\n\n// Get tokens within collection\n// ${API_NFT}/collections/${collectionAddress}/tokens\nexport interface ApiResponseCollectionTokens {\n  total: number\n  attributesDistribution?: Record<string, number>\n  data: ApiSingleTokenData[]\n}\n\n// Get specific token data\n// ${API_NFT}/collections/${collectionAddress}/tokens/${tokenId}\nexport interface ApiResponseSpecificToken {\n  data: {\n    tokenId: string\n    name: string\n    description: string\n    image: Image\n    createdAt: string\n    updatedAt: string\n    attributes: NftAttribute[]\n    collection: {\n      name: string\n    }\n  }\n}\n\n// ${API_NFT}/collections/${collectionAddress}/distribution\nexport interface ApiCollectionDistribution {\n  total: number\n  data: Record<string, Record<string, number>>\n}\n\nexport interface ApiCollectionDistributionPB {\n  total: number\n  data: Record<string, number>\n}\n\nexport interface Activity {\n  marketEvent: MarketEvent\n  timestamp: string\n  tx: string\n  nft?: TokenMarketData\n  price?: string\n  otherParty?: string\n  buyer?: string\n  seller?: string\n}\n\nexport enum MarketEvent {\n  NEW = 'NEW',\n  CANCEL = 'CANCEL',\n  MODIFY = 'MODIFY',\n  BUY = 'BUY',\n  SELL = 'SELL',\n}\n\n/**\n * SUBGRAPH RESPONSES\n */\n\nexport interface CollectionMarketDataBaseFields {\n  id: string\n  name: string\n  symbol: string\n  active: boolean\n  totalTrades: string\n  totalVolumeBNB: string\n  numberTokensListed: string\n  creatorAddress: string\n  tradingFee: string\n  creatorFee: string\n  whitelistChecked: string\n}\n\nexport interface UserActivity {\n  askOrderHistory: AskOrder[]\n  buyTradeHistory: Transaction[]\n  sellTradeHistory: Transaction[]\n  initializationState: UserNftInitializationState\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport {\n  CampaignType,\n  SerializedFarmConfig,\n  LotteryStatus,\n  LotteryTicket,\n  DeserializedPoolConfig,\n  SerializedPoolConfig,\n  Team,\n  TranslatableText,\n  DeserializedFarmConfig,\n  FetchStatus,\n} from 'config/constants/types'\n// import { Nft } from 'config/constants/nfts/types'\nimport { GalleryNft } from 'config/constants/gallery/types'\nimport { NftToken, State as NftMarketState } from './nftMarket/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type SerializedBigNumber = string\n\ninterface SerializedFarmUserData {\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport interface DeserializedFarmUserData {\n  allowance: BigNumber\n  tokenBalance: BigNumber\n  stakedBalance: BigNumber\n  earnings: BigNumber\n}\n\nexport interface SerializedFarm extends SerializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: SerializedFarmUserData\n}\n\nexport interface DeserializedFarm extends DeserializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: BigNumber\n  lpTotalInQuoteToken?: BigNumber\n  lpTotalSupply?: BigNumber\n  tokenPriceVsQuote?: BigNumber\n  poolWeight?: BigNumber\n  userData?: DeserializedFarmUserData\n}\n\ninterface CorePoolProps {\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  arena?: {\n    id: string\n    cardTextColor: string\n  }\n}\n\nexport interface DeserializedPool extends DeserializedPoolConfig, CorePoolProps {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface SerializedPool extends SerializedPoolConfig, CorePoolProps {\n  totalStaked?: SerializedBigNumber\n  stakingLimit?: SerializedBigNumber\n  userData?: {\n    allowance: SerializedBigNumber\n    stakingTokenBalance: SerializedBigNumber\n    stakedBalance: SerializedBigNumber\n    pendingReward: SerializedBigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  collectionAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: NftToken\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface SerializedFarmsState {\n  data: SerializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface DeserializedFarmsState {\n  data: DeserializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: SerializedPool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport enum ProfileAvatarFetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  FETCHING = 'fetching',\n  FETCHED = 'fetched',\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n  profileAvatars: {\n    [key: string]: {\n      username: string\n      nft: NftToken\n      hasRegistered: boolean\n      usernameFetchStatus: FetchStatus\n      avatarFetchStatus: FetchStatus\n    }\n  }\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  achievements: Achievement[]\n  achievementFetchStatus: FetchStatus\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Gallery\n\nexport interface GalleryState {\n  isInitialized: boolean\n  isLoading: boolean\n  models: GalleryNft[]\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  position: BetPosition\n  failed: boolean\n  startAt: number\n  startBlock: number\n  startHash: string\n  lockAt: number\n  lockBlock: number\n  lockHash: string\n  lockPrice: number\n  lockRoundId: string\n  closeAt: number\n  closeBlock: number\n  closeHash: string\n  closePrice: number\n  closeRoundId: string\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bullAmount: number\n  bearBets: number\n  bearAmount: number\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedAt: number\n  claimedBlock: number\n  claimedHash: string\n  claimedBNB: number\n  claimedNetBNB: number\n  createdAt: number\n  updatedAt: number\n  user?: PredictionUser\n  round?: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  createdAt: number\n  updatedAt: number\n  block: number\n  totalBets: number\n  totalBetsBull: number\n  totalBetsBear: number\n  totalBNB: number\n  totalBNBBull: number\n  totalBNBBear: number\n  totalBetsClaimed: number\n  totalBNBClaimed: number\n  winRate: number\n  averageBNB: number\n  netBNB: number\n  bets?: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n  lockOracleId: string\n  closeOracleId: string\n}\n\nexport interface NodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: ethers.BigNumber | null\n  closePrice: ethers.BigNumber | null\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n  closeOracleId: string\n  lockOracleId: string\n}\n\nexport enum LeaderboardLoadingState {\n  INITIAL,\n  LOADING,\n  IDLE,\n}\n\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\n\nexport interface LeaderboardFilter {\n  address?: string\n  orderBy?: string\n  timePeriod?: LeaderboardFilterTimePeriod\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  intervalSeconds: number\n  minBetAmount: string\n  bufferSeconds: number\n  lastOraclePrice: string\n  history: Bet[]\n  totalHistory: number\n  currentHistoryPage: number\n  hasHistoryLoaded: boolean\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n  leaderboard: {\n    selectedAddress: string\n    loadingState: FetchStatus\n    filters: LeaderboardFilter\n    skip: number\n    hasMoreResults: boolean\n    addressResults: {\n      [key: string]: PredictionUser\n    }\n    results: PredictionUser[]\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: FetchStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: FetchStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: SerializedFarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  gallery: GalleryState\n  voting: VotingState\n  lottery: LotteryState\n  nftMarket: NftMarketState\n}\n","const PANCAKE_EXTENDED = 'https://tokens.gladiators.finance/gladiators-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.gladiators.finance/gladiators-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps, Placement } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n  placement?: Placement\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, placement = 'right-end', ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\nimport tokens from 'config/constants/tokens'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingToken.address,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: tokens.wbnb.address,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((pool) => pool.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'allowance',\n    params: [account, getAddress(pool.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingKhaos('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, SerializedPool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? pool.stakingToken.address.toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? pool.earningToken.address.toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: SerializedPool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { CurrencyAmount, Fraction, JSBI, Percent, Price, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n\n/**\n * Helper to multiply a Price object by an arbitrary amount\n */\nexport const multiplyPriceByAmount = (price: Price, amount: number, significantDigits = 18) => {\n  if (!price) {\n    return 0\n  }\n\n  return parseFloat(price.toSignificant(significantDigits)) * amount\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { serializeTokens } from './tokens'\nimport { SerializedPoolConfig, PoolCategory } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst pools: SerializedPoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: serializedTokens.nrt,\n    earningToken: serializedTokens.dena,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n    arena: {\n      id: 'arena1',\n      cardTextColor: 'black'\n    }\n  },\n  {\n    sousId: 0,\n    stakingToken: serializedTokens.dena,\n    earningToken: serializedTokens.dena,\n    contractAddress: {\n      97: '',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '173727',\n    arena: {\n      id: 'arena2',\n      cardTextColor: 'black'\n    }\n  },\n  {\n    sousId: 0,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dena,\n    contractAddress: {\n      97: '',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0861',\n    arena: {\n      id: 'arena3',\n      cardTextColor: 'white'\n    }\n  },\n  // {\n  //   sousId: 0,\n  //   stakingToken: serializedTokens.dena,\n  //   earningToken: serializedTokens.tlos,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3616',\n  //   arena: {\n  //     id: 'arena4',\n  //     cardTextColor: 'white'\n  //   }\n  // },\n  // {\n  //   sousId: 218,\n  //   stakingToken: serializedTokens.dena,\n  //   earningToken: serializedTokens.stephero,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.1851',\n  //   arena: {\n  //     id: 'arena5',\n  //     cardTextColor: 'white'\n  //   }\n  // },\n  // {\n  //   sousId: 217,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bp,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x8ed7acf12b08274d5cdaf03d43d0e54bcbdd487e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.217',\n  // },\n  // {\n  //   sousId: 216,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.cvp,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xC4b15117BC0be030c20754FF36197641477af5d1',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.14',\n  // },\n  // {\n  //   sousId: 215,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.qbt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xB72dEf58D0832f747d6B7197471Fe20AeA7EB463',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.412',\n  // },\n  // {\n  //   sousId: 214,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.naos,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb38b78529bCc895dA16CE2978D6cD6C56e8CfFC3',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.1736',\n  // },\n  // {\n  //   sousId: 213,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.pha,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2E101b5F7f910F2609e5AcE5f43bD274b1DE09AA',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.28',\n  // },\n  // {\n  //   sousId: 212,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bel,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x52733Ad7b4D09BF613b0389045e33E2F287afa04',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.101',\n  // },\n  // {\n  //   sousId: 211,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.ramp,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x401b9b97bdbc3197c1adfab9652dc78040bd1e13',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.9837',\n  // },\n  // {\n  //   sousId: 210,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.pots,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xBeDb490970204cb3CC7B0fea94463BeD67d5364D',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0868',\n  // },\n  // {\n  //   sousId: 209,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.tusd,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb6e510ae2da1ab4e350f837c70823ab75091780e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.5787',\n  // },\n  // {\n  //   sousId: 208,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.revv,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x8aa5b2c67852ed5334c8a7f0b5eb0ef975106793',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.331',\n  // },\n  // {\n  //   sousId: 207,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.btt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3b804460c3c62f0f565af593984159f13b1ac976',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '263',\n  // },\n  // {\n  //   sousId: 206,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.skill,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x455f4d4cc4d6ca15441a93c631e82aaf338ad843',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00289',\n  // },\n  // {\n  //   sousId: 205,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.win,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xde4aef42bb27a2cb45c746acde4e4d8ab711d27c',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1815.39',\n  // },\n  // {\n  //   sousId: 204,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.if,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x57d3524888ded4085d9124a422f13b27c8a43de7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.02835',\n  // },\n  // {\n  //   sousId: 203,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.sps,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb56299d8fbf46c509014b103a164ad1fc65ea222',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '12.86',\n  // },\n  // {\n  //   sousId: 202,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.c98,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x5e49531BA07bE577323e55666D46C6217164119E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.7361',\n  // },\n  // {\n  //   sousId: 201,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.axs,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xBB472601B3CB32723d0755094BA80B73F67f2AF3',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00744',\n  // },\n  // {\n  //   sousId: 200,\n  //   stakingToken: serializedTokens.axs,\n  //   earningToken: serializedTokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x583A36816F3b8401C4fdf682203E0caDA6997740',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00992',\n  // },\n  // {\n  //   sousId: 199,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.pmon,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x28050e8f024e05f9ddbef5f60dd49f536dba0cf0',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.02696',\n  // },\n  // {\n  //   sousId: 198,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.trx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb2b62f88ab82ed0bb4ab4da60d9dc9acf9e816e5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '9.6643',\n  // },\n  // {\n  //   sousId: 197,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.chess,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xd1812e7e28c39e78727592de030fc0e7c366d61a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4286',\n  // },\n  // {\n  //   sousId: 196,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.titan,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x97058cf9b36c9ef1622485cef22e72d6fea32a36',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.08912',\n  // },\n  // {\n  //   sousId: 195,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.harmony,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xe595456846155e23b24cc9cbee910ee97027db6d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.0092',\n  // },\n  // {\n  //   sousId: 194,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.mask,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xae611c6d4d3ca2cee44cd34eb7aac29d5a387fcf',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.06423',\n  // },\n  // {\n  //   sousId: 193,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.dvi,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x135827eaf9746573c0b013f18ee12f138b9b0384',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.7233',\n  // },\n  // {\n  //   sousId: 192,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.gum,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x09b8a5f51c9e245402057851ada274174fa00e2a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.67129',\n  // },\n  // {\n  //   sousId: 191,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.adx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x53a2d1db049b5271c6b6db020dba0e8a7c4eb90d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.7523',\n  // },\n  // {\n  //   sousId: 190,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.suter,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4da8da81647ee0aa7350e9959f3e4771eb753da0',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '69.9074',\n  // },\n  // {\n  //   sousId: 189,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bscpad,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3877',\n  // },\n  // {\n  //   sousId: 188,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.rabbit,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.993',\n  // },\n  // {\n  //   sousId: 187,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.waultx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '7.9108',\n  // },\n  // {\n  //   sousId: 186,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.wex,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '11.574',\n  // },\n  // {\n  //   sousId: 185,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.form,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.4467',\n  // },\n  // {\n  //   sousId: 184,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.orbs,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.8946',\n  // },\n  // {\n  //   sousId: 183,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.$dg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xa07a91da6d10173f33c294803684bceede325957',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00135',\n  // },\n  // {\n  //   sousId: 182,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.woo,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x88c321d444c88acf3e747dc90f20421b97648903',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3854',\n  // },\n  // {\n  //   sousId: 181,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.woo,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0003854',\n  // },\n  // {\n  //   sousId: 180,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.htb,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '5.2083',\n  // },\n  // {\n  //   sousId: 179,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.jgn,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.1001',\n  // },\n  // {\n  //   sousId: 178,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.dft,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.7361',\n  // },\n  // {\n  //   sousId: 177,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.hai,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.3078',\n  // },\n  // {\n  //   sousId: 176,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.o3,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.107638',\n  // },\n  // {\n  //   sousId: 175,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.ampl,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.398',\n  // },\n  // {\n  //   sousId: 174,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.oddz,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4843',\n  // },\n  // {\n  //   sousId: 173,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bondly,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.6741',\n  // },\n  // {\n  //   sousId: 172,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.marsh,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.1108',\n  // },\n  // {\n  //   sousId: 171,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.mbox,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x36f9452083fc9bc469a31e7966b873f402292433',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4803',\n  // },\n  // {\n  //   sousId: 170,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.ata,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xc612680457751d0d01b5d901ad08132a3b001900',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.7361',\n  // },\n  // {\n  //   sousId: 169,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.mx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.27777',\n  // },\n  // {\n  //   sousId: 168,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bcfx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.6944',\n  // },\n  // {\n  //   sousId: 167,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.qkc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '15.9143',\n  // },\n  // {\n  //   sousId: 166,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.ktn,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.01215',\n  // },\n  // {\n  //   sousId: 165,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.mtrg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.05613',\n  // },\n  // {\n  //   sousId: 164,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.tusd,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.5787',\n  // },\n  // {\n  //   sousId: 163,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.vrt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '40.5092',\n  // },\n  // {\n  //   sousId: 162,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.kalm,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0868',\n  // },\n  // {\n  //   sousId: 161,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.ez,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb19395702460261e51edf7a7b130109c64f13af9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.01736',\n  // },\n  // {\n  //   sousId: 160,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.kalm,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenPerBlock: '0.00868',\n  // },\n  // {\n  //   sousId: 159,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.popen,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.19097',\n  // },\n  // {\n  //   sousId: 158,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.lien,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.023148',\n  // },\n  // {\n  //   sousId: 157,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.well,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.2025',\n  //   sortOrder: 999,\n  // },\n  // {\n  //   sousId: 156,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.deri,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '1.6087',\n  //   sortOrder: 999,\n  // },\n  // {\n  //   sousId: 155,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.chr,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '1.655',\n  //   sortOrder: 999,\n  // },\n  // {\n  //   sousId: 154,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.cyc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xD714738837944C3c592477249E8edB724A76e068',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.00015914',\n  //   sortOrder: 999,\n  // },\n  // {\n  //   sousId: 153,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.xend,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.31828',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 152,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.hget,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.03553',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 151,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.hotcross,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.4722',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 150,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.rfox,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.7361',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 149,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.wmass,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.24942',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 148,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.ubxt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '2.4074',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 147,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.btr,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '2.8935',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 146,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.τdoge,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.868',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 145,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.pmon,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.01261',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 144,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.one,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '57.87',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 143,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.fine,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.1342',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 142,\n  //   stakingToken: serializedTokens.doge,\n  //   earningToken: serializedTokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.01388',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 141,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bmxx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.01331',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 140,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.oin,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x01453a74a94687fa3f99b80762435855a13664f4',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3472',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 139,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.hyfi,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '2.8935',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 138,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.kun,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.23148',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 137,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.math,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.15798',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 136,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.ust,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.17361',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 135,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.win,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '462.96',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 134,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.trx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '4.0509',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 133,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.btt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '79.86',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 132,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.lmt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.66145',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 131,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.pnt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.09548',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 130,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.xmark,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xdc8943d806f9dd64312d155284abf780455fd345',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0298',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 129,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.ramp,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4861',\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 128,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.hakka,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.4722',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 127,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.pbtc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0000031',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 126,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.lien,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x7112f8988f075c7784666ab071927ae4109a8076',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.003472',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 125,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bbadger,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00265278',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 124,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bdigg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00000403',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 123,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bondly,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9483ca44324de06802576866b9d296f7614f45ac',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4629',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 122,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.xed,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3472',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 121,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.cgg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.10918',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 120,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.perl,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.1574',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 119,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.arpa,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.949',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 118,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.oddz,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.11284',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 117,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.dexe,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.009837',\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 116,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.dfd,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.46296',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 115,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.alpaca,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.22743',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 114,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.τbtc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00000608',\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 113,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.τbtc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00000608',\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 112,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.swingby,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.21527',\n  // },\n  // {\n  //   sousId: 111,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.xed,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3472',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 110,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.hakka,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.4722',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 109,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.cgg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.10918',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 108,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.mix,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.3721',\n  // },\n  // {\n  //   sousId: 107,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.suter,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '15.3356',\n  // },\n  // {\n  //   sousId: 106,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.broobee,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '14.4675',\n  // },\n  // {\n  //   sousId: 105,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.hzn,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.6944',\n  // },\n  // {\n  //   sousId: 104,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.alpa,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.23495',\n  // },\n  // {\n  //   sousId: 103,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.perl,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.1574',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 102,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.tlm,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '17.361',\n  // },\n  // {\n  //   sousId: 101,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.jgn,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.08796',\n  // },\n  // {\n  //   sousId: 100,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.eps,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.07716',\n  // },\n  // {\n  //   sousId: 99,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.arpa,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.949',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 98,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.itam,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '3.096',\n  // },\n  // {\n  //   sousId: 97,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bondly,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1329ad151dE6C441184E32E108401126AE850937',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.4629',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 96,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.tko,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.1574',\n  // },\n  // {\n  //   sousId: 95,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.apys,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x46530d79b238f809e80313e73715b160c66677aF',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.09953',\n  // },\n  // {\n  //   sousId: 94,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.hoo,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.489',\n  // },\n  // {\n  //   sousId: 93,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.oddz,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.11284',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 92,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.easy,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0072338',\n  // },\n  // {\n  //   sousId: 91,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.nrv,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.15046',\n  // },\n  // {\n  //   sousId: 90,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.dego,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00405',\n  // },\n  // {\n  //   sousId: 89,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.gum,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.08912',\n  // },\n  // {\n  //   sousId: 88,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.pbtc,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.0000031',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 87,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.dft,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.6811',\n  // },\n  // {\n  //   sousId: 86,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.swth,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '2.3148',\n  // },\n  // {\n  //   sousId: 85,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.lien,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.003472',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 84,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.zil,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '1.0995',\n  // },\n  // {\n  //   sousId: 83,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.pcws,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00434',\n  // },\n  // {\n  //   sousId: 82,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bbadger,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00265278',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 81,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bdigg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.00000403',\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 80,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.lto,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '0.2893',\n  // },\n  // {\n  //   sousId: 79,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.mir,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01273',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 78,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.mir,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01273',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 77,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.trade,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.4484',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 76,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.dusk,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.4629',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 75,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bifi,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xB4C68A1C565298834360BbFF1652284275120D47',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.00007234',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 74,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.txl,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.434027',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 73,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.cos,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xF682D186168b4114ffDbF1291F19429310727151',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '5.787',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 72,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bunny,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.00289',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 71,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.alice,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.14467',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 70,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.for,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '2.8935',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 69,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bux,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.5787',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 68,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.nuls,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0868',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 67,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.belt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.00868',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 66,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.ramp,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.4861',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 65,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bfi,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0001157',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 64,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.dexe,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.009837',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 63,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bel,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0549',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 62,\n  //   stakingToken: serializedTokens.tpt,\n  //   earningToken: serializedTokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0462',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 61,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.tpt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '3.616',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 60,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.watch,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.3472',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 59,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.xmark,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0413',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 58,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bmxx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.00248',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 57,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.iotx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '6.365',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 56,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bor,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.000395',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 55,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bopen,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0723',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 54,\n  //   stakingToken: serializedTokens.sushi,\n  //   earningToken: serializedTokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0367',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 53,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.dodo,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0578',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 52,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.swingby,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.13',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 51,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bry,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.1157',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 50,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.zee,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.1736',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 49,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.swgb,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.899',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 48,\n  //   stakingToken: serializedTokens.comp,\n  //   earningToken: serializedTokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.055',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 47,\n  //   stakingToken: serializedTokens.comp,\n  //   earningToken: serializedTokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.55',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 46,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.sfp,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.6',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 45,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.lina,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.983',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 44,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.lina,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0983',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 43,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.lit,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.231',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 42,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.hget,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0138',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 41,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bdo,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.075',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 40,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.egld,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.001215',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 39,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.ust,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.1157',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 38,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.wsote,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.23',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 37,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.front,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.2546',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 36,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.helmet,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.81',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 35,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.btcst,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.011574',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 34,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bscx,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.17361',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 33,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.ten,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.05787',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 32,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.balbt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.4166',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 31,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.asr,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 30,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.atm,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 29,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.og,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 28,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.reef,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '115.74',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 27,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.ditto,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.01157',\n  //   sortOrder: 999,\n  //   isFinished: false,\n  // },\n  // {\n  //   sousId: 26,\n  //   stakingToken: serializedTokens.twt,\n  //   earningToken: serializedTokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.248',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 24,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.juv,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.02',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 25,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.psg,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.02',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 21,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.vai,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.104',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 20,\n  //   stakingToken: serializedTokens.bnb,\n  //   earningToken: serializedTokens.cake,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n  //   },\n  //   poolCategory: PoolCategory.BINANCE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 19,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.bnb,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.0041',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 18,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.blink,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '23.14',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 17,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.blink,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '23.14',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   enableEmergencyWithdraw: true,\n  // },\n  // {\n  //   sousId: 16,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.unfi,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.02893',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 15,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.twt,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 14,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.hard,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.346',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 13,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.broobee,\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   harvest: true,\n  //   tokenPerBlock: '12.5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 12,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.stax,\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   harvest: true,\n  //   tokenPerBlock: '0.2',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 11,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.nar,\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   harvest: true,\n  //   tokenPerBlock: '1',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 10,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.nya,\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n  //   },\n  //   poolCategory: PoolCategory.COMMUNITY,\n  //   harvest: true,\n  //   sortOrder: 999,\n  //   tokenPerBlock: '10',\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 9,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.ctk,\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.5',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 8,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.twt,\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n  // {\n  //   sousId: 7,\n  //   stakingToken: serializedTokens.cake,\n  //   earningToken: serializedTokens.inj,\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '0.25',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  // },\n]\n\nexport default pools\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { ReactNode } from 'react'\n\nexport const types = {\n  SUCCESS: 'success',\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n}\n\nexport type Types = typeof types[keyof typeof types]\n\nexport interface Toast {\n  id: string\n  type: Types\n  title: string\n  description?: ReactNode\n}\n\nexport interface ToastContainerProps {\n  toasts: Toast[]\n  stackSpacing?: number\n  ttl?: number\n  onRemove: (id: string) => void\n}\n\nexport interface ToastProps {\n  toast: Toast\n  onRemove: ToastContainerProps['onRemove']\n  ttl: number\n  style: Partial<CSSStyleDeclaration>\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\nimport { ToastProps, types } from './types'\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n}\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`\n\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef<number>()\n  const ref = useRef(null)\n  const removeHandler = useRef(onRemove)\n  const { id, title, description, type } = toast\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current)\n  }\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n  }\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [timer, ttl, handleRemove])\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {description}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport styled from 'styled-components'\nimport Toast from './Toast'\nimport { ToastContainerProps } from './types'\n\nconst ZINDEX = 1000\nconst TOP_POSITION = 80 // Initial position from the top\n\nconst StyledToastContainer = styled.div`\n  .enter,\n  .appear {\n    opacity: 0.01;\n  }\n\n  .enter.enter-active,\n  .appear.appear-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n  }\n\n  .exit {\n    opacity: 1;\n  }\n\n  .exit.exit-active {\n    opacity: 0.01;\n    transition: opacity 250ms ease-out;\n  }\n`\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\n  return (\n    <StyledToastContainer>\n      <TransitionGroup>\n        {toasts.map((toast, index) => {\n          const zIndex = (ZINDEX - index).toString()\n          const top = TOP_POSITION + index * stackSpacing\n\n          return (\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\n          )\n        })}\n      </TransitionGroup>\n    </StyledToastContainer>\n  )\n}\n\nexport default ToastContainer\n","import React from 'react'\nimport { Link, Text } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n}\n\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\n          {t('View on BscScan')}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const timer = useRef(null)\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, 6000)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { Token, Pair, ChainId } from '@pancakeswap/sdk'\nimport { isAddress } from 'utils'\n\nconst getLpAddress = (token1: string | Token, token2: string | Token) => {\n  let token1AsTokenInstance = token1\n  let token2AsTokenInstance = token2\n  if (!token1 || !token2) {\n    return null\n  }\n  if (typeof token1 === 'string' || token1 instanceof String) {\n    const checksummedToken1Address = isAddress(token1)\n    if (!checksummedToken1Address) {\n      return null\n    }\n    token1AsTokenInstance = new Token(ChainId.MAINNET, checksummedToken1Address, 18)\n  }\n  if (typeof token2 === 'string' || token2 instanceof String) {\n    const checksummedToken2Address = isAddress(token2)\n    if (!checksummedToken2Address) {\n      return null\n    }\n    token2AsTokenInstance = new Token(ChainId.MAINNET, checksummedToken2Address, 18)\n  }\n  return Pair.getAddress(token1AsTokenInstance as Token, token2AsTokenInstance as Token)\n}\n\nexport default getLpAddress\n","import { gql } from 'graphql-request'\n\nconst lastPairDayId = gql`\n  query lastPairDayId($pairId: String) {\n    pairDayDatas(first: 1, where: { pairAddress: $pairId }, orderBy: date, orderDirection: desc) {\n      id\n    }\n  }\n`\nexport default lastPairDayId\n","import { gql } from 'graphql-request'\n\nconst pairHourDatas = gql`\n  query pairHourDatas($pairId: String, $first: Int) {\n    pairHourDatas(first: $first, where: { pair: $pairId }, orderBy: hourStartUnix, orderDirection: desc) {\n      id\n      hourStartUnix\n      reserve0\n      reserve1\n      reserveUSD\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\nexport default pairHourDatas\n","import { gql } from 'graphql-request'\n\nconst pairDayDatasByIdsQuery = gql`\n  query pairDayDatasByIdsQuery($pairIds: [String]) {\n    pairDayDatas(where: { id_in: $pairIds }, orderBy: date, orderDirection: desc) {\n      id\n      date\n      reserve0\n      reserve1\n      reserveUSD\n      pairAddress {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\nexport default pairDayDatasByIdsQuery\n","import { INFO_CLIENT } from 'config/constants/endpoints'\nimport { PairDataTimeWindowEnum } from '../types'\n\n// Specifies the amount of data points to query for specific time window\nexport const timeWindowIdsCountMapping: Record<PairDataTimeWindowEnum, number> = {\n  [PairDataTimeWindowEnum.DAY]: 24,\n  [PairDataTimeWindowEnum.WEEK]: 28,\n  [PairDataTimeWindowEnum.MONTH]: 30,\n  [PairDataTimeWindowEnum.YEAR]: 24,\n}\n\n// How many StreamingFast ids to skip when querying the data\nexport const timeWindowGapMapping: Record<PairDataTimeWindowEnum, number | null> = {\n  [PairDataTimeWindowEnum.DAY]: null,\n  [PairDataTimeWindowEnum.WEEK]: 6, // Each datapoint 6 hours apart\n  [PairDataTimeWindowEnum.MONTH]: 1, // Each datapoint 1 day apart\n  [PairDataTimeWindowEnum.YEAR]: 15, // Each datapoint 15 days apart\n}\n\n// Extra headers\n// Mostly for dev environment\n// No production env check since production preview might also need them\nexport const getHeaders = (endpoint: string) => {\n  if (endpoint === INFO_CLIENT) {\n    return { 'X-Sf': process.env.REACT_APP_SF_HEADER }\n  }\n  return undefined\n}\n","import times from 'lodash/times'\nimport { PairDataTimeWindowEnum } from '../types'\nimport { timeWindowGapMapping } from './constants'\nimport { PairDayDatasResponse, PairHoursDatasResponse } from './types'\n\ntype getPairSequentialIdParams = {\n  id: string\n  pairId: string\n}\nexport const getPairSequentialId = ({ id, pairId }: getPairSequentialIdParams) => id.replace(`${pairId}-`, '')\n\ntype getPairHoursIdsByTimeWindowParams = {\n  pairAddress: string\n  pairLastId: string\n  timeWindow: PairDataTimeWindowEnum\n  idsCount: number\n}\n\nexport const getIdsByTimeWindow = ({\n  pairAddress,\n  pairLastId,\n  timeWindow,\n  idsCount,\n}: getPairHoursIdsByTimeWindowParams) => {\n  const pairLastIdAsNumber = Number(pairLastId)\n  if (timeWindow === PairDataTimeWindowEnum.DAY) {\n    return []\n  }\n  return times(idsCount, (value) => `${pairAddress}-${pairLastIdAsNumber - value * timeWindowGapMapping[timeWindow]}`)\n}\n\nexport const pairHasEnoughLiquidity = (\n  data: PairHoursDatasResponse | PairDayDatasResponse | null,\n  timeWindow: PairDataTimeWindowEnum,\n) => {\n  const liquidityThreshold = 10000\n  switch (timeWindow) {\n    case PairDataTimeWindowEnum.DAY:\n    case PairDataTimeWindowEnum.WEEK: {\n      const amountOfDataPoints = (data as PairHoursDatasResponse)?.pairHourDatas?.length ?? 1\n      const totalUSD = (data as PairHoursDatasResponse)?.pairHourDatas?.reduce((totalLiquidity, fetchPairEntry) => {\n        return totalLiquidity + parseFloat(fetchPairEntry.reserveUSD)\n      }, 0)\n      return totalUSD / amountOfDataPoints > liquidityThreshold\n    }\n    case PairDataTimeWindowEnum.MONTH:\n    case PairDataTimeWindowEnum.YEAR: {\n      const amountOfDataPoints = (data as PairDayDatasResponse)?.pairDayDatas?.length ?? 1\n      const totalUSD = (data as PairDayDatasResponse)?.pairDayDatas?.reduce((totalLiquidity, fetchPairEntry) => {\n        return totalLiquidity + parseFloat(fetchPairEntry.reserveUSD)\n      }, 0)\n      return totalUSD / amountOfDataPoints > liquidityThreshold\n    }\n    default:\n      return null\n  }\n}\n","import { gql } from 'graphql-request'\n\nconst pairDayDatas = gql`\n  query pairDayDatas($pairId: String, $first: Int) {\n    pairDayDatas(first: $first, where: { pairAddress: $pairId }, orderBy: date, orderDirection: desc) {\n      id\n      date\n      reserve0\n      reserve1\n      reserveUSD\n      pairAddress {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\nexport default pairDayDatas\n","import { gql } from 'graphql-request'\n\nconst pairHourDatasByIds = gql`\n  query pairHourDatasByIds($pairIds: [String]) {\n    pairHourDatas(where: { id_in: $pairIds }, orderBy: hourStartUnix, orderDirection: desc) {\n      id\n      hourStartUnix\n      reserve0\n      reserve1\n      reserveUSD\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\nexport default pairHourDatasByIds\n","import { gql } from 'graphql-request'\n\nconst lastPairHourId = gql`\n  query lastPairHourId($pairId: String) {\n    pairHourDatas(first: 1, where: { pair: $pairId }, orderBy: hourStartUnix, orderDirection: desc) {\n      id\n    }\n  }\n`\nexport default lastPairHourId\n","import { GraphQLClient } from 'graphql-request'\n\nconst requestWithTimeout = <T extends any>(\n  graphQLClient: GraphQLClient,\n  request: string,\n  variables?: any,\n  timeout = 30000,\n): Promise<T> => {\n  return Promise.race([\n    variables ? graphQLClient.request<T>(request, variables) : graphQLClient.request<T>(request),\n    new Promise((_, reject) => {\n      setTimeout(() => {\n        reject(new Error(`Request timed out after ${timeout} milliseconds`))\n      }, timeout)\n    }),\n  ]) as Promise<T>\n}\n\nexport default requestWithTimeout\n","import { INFO_CLIENT } from 'config/constants/endpoints'\nimport { GraphQLClient } from 'graphql-request'\nimport lastPairDayId from '../queries/lastPairDayId'\nimport pairHourDatas from '../queries/pairHourDatas'\nimport pairDayDatasByIdsQuery from '../queries/pairDayDatasByIdsQuery'\nimport { PairDataTimeWindowEnum } from '../types'\nimport { timeWindowIdsCountMapping, getHeaders } from './constants'\nimport {\n  fetchPairDataParams,\n  LastPairDayIdResponse,\n  LastPairHourIdResponse,\n  PairDayDatasResponse,\n  PairHoursDatasResponse,\n} from './types'\nimport { getIdsByTimeWindow, getPairSequentialId } from './utils'\nimport pairDayDatas from '../queries/pairDayDatas'\nimport pairHourDatasByIds from '../queries/pairHourDatasByIds'\nimport lastPairHourId from '../queries/lastPairHourId'\nimport requestWithTimeout from '../../../utils/requestWithTimeout'\n\nconst fetchPairPriceData = async ({ pairId, timeWindow }: fetchPairDataParams) => {\n  const client = new GraphQLClient(INFO_CLIENT, { headers: getHeaders(INFO_CLIENT) })\n\n  try {\n    switch (timeWindow) {\n      case PairDataTimeWindowEnum.DAY: {\n        const data = await requestWithTimeout<PairHoursDatasResponse>(client, pairHourDatas, {\n          pairId,\n          first: timeWindowIdsCountMapping[timeWindow],\n        })\n        return { data, error: false }\n      }\n      case PairDataTimeWindowEnum.WEEK: {\n        const lastPairHourIdData = await requestWithTimeout<LastPairHourIdResponse>(client, lastPairHourId, { pairId })\n        const lastId = lastPairHourIdData?.pairHourDatas ? lastPairHourIdData.pairHourDatas[0]?.id : null\n        if (!lastId) {\n          return { data: { pairHourDatas: [] }, error: false }\n        }\n        const pairHourId = getPairSequentialId({ id: lastId, pairId })\n        const pairHourIds = getIdsByTimeWindow({\n          pairAddress: pairId,\n          pairLastId: pairHourId,\n          timeWindow,\n          idsCount: timeWindowIdsCountMapping[timeWindow],\n        })\n\n        const pairHoursData = await requestWithTimeout<PairHoursDatasResponse>(client, pairHourDatasByIds, {\n          pairIds: pairHourIds,\n        })\n        return { data: pairHoursData, error: false }\n      }\n      case PairDataTimeWindowEnum.MONTH: {\n        const data = await requestWithTimeout<PairHoursDatasResponse>(client, pairDayDatas, {\n          pairId,\n          first: timeWindowIdsCountMapping[timeWindow],\n        })\n        return { data, error: false }\n      }\n      case PairDataTimeWindowEnum.YEAR: {\n        const lastPairDayIdData = await requestWithTimeout<LastPairDayIdResponse>(client, lastPairDayId, { pairId })\n        const lastId = lastPairDayIdData?.pairDayDatas ? lastPairDayIdData.pairDayDatas[0]?.id : null\n        if (!lastId) {\n          return { data: { pairDayDatas: [] }, error: false }\n        }\n        const pairLastId = getPairSequentialId({ id: lastId, pairId })\n        const pairDayIds = getIdsByTimeWindow({\n          pairAddress: pairId,\n          pairLastId,\n          timeWindow,\n          idsCount: timeWindowIdsCountMapping[timeWindow],\n        })\n        const pairDayData = await requestWithTimeout<PairDayDatasResponse>(client, pairDayDatasByIdsQuery, {\n          pairIds: pairDayIds,\n        })\n        return { data: pairDayData, error: false }\n      }\n      default:\n        return { data: null, error: false }\n    }\n  } catch (error) {\n    console.error('Failed to fetch price chart data', error)\n    return { error: true }\n  }\n}\n\nexport default fetchPairPriceData\n","import { fromUnixTime } from 'date-fns'\nimport { PairDayDatasResponse, PairHoursDatasResponse } from './fetch/types'\nimport { DerivedPairDataNormalized, PairDataNormalized, PairDataTimeWindowEnum, PairPricesNormalized } from './types'\n\nexport const normalizeChartData = (\n  data: PairHoursDatasResponse | PairDayDatasResponse | null,\n  timeWindow: PairDataTimeWindowEnum,\n) => {\n  switch (timeWindow) {\n    case PairDataTimeWindowEnum.DAY:\n    case PairDataTimeWindowEnum.WEEK:\n      return (data as PairHoursDatasResponse)?.pairHourDatas?.map((fetchPairEntry) => ({\n        time: fetchPairEntry.hourStartUnix,\n        token0Id: fetchPairEntry.pair.token0.id,\n        token1Id: fetchPairEntry.pair.token1.id,\n        reserve0: parseFloat(fetchPairEntry.reserve0),\n        reserve1: parseFloat(fetchPairEntry.reserve1),\n      }))\n    case PairDataTimeWindowEnum.MONTH:\n    case PairDataTimeWindowEnum.YEAR:\n      return (data as PairDayDatasResponse)?.pairDayDatas?.map((fetchPairEntry) => ({\n        time: fetchPairEntry.date,\n        token0Id: fetchPairEntry.pairAddress.token0.id,\n        token1Id: fetchPairEntry.pairAddress.token1.id,\n        reserve0: parseFloat(fetchPairEntry.reserve0),\n        reserve1: parseFloat(fetchPairEntry.reserve1),\n      }))\n    default:\n      return null\n  }\n}\n\nexport const normalizeDerivedChartData = (data: any) => {\n  if (!data?.token0DerivedBnb || data?.token0DerivedBnb.length === 0) {\n    return []\n  }\n  return data?.token0DerivedBnb.reduce((acc, token0DerivedBnbEntry) => {\n    const token1DerivedBnbEntry = data?.token1DerivedBnb?.find(\n      (entry) => entry.timestamp === token0DerivedBnbEntry.timestamp,\n    )\n    if (!token1DerivedBnbEntry) {\n      return acc\n    }\n    return [\n      ...acc,\n      {\n        time: parseInt(token0DerivedBnbEntry.timestamp, 10),\n        token0Id: token0DerivedBnbEntry.tokenAddress,\n        token1Id: token1DerivedBnbEntry.tokenAddress,\n        token0DerivedBNB: token0DerivedBnbEntry.derivedBNB,\n        token1DerivedBNB: token1DerivedBnbEntry.derivedBNB,\n      },\n    ]\n  }, [])\n}\n\ntype normalizePairDataByActiveTokenParams = {\n  pairData: PairDataNormalized\n  activeToken: string\n}\n\nexport const normalizePairDataByActiveToken = ({\n  pairData,\n  activeToken,\n}: normalizePairDataByActiveTokenParams): PairPricesNormalized =>\n  pairData\n    ?.map((pairPrice) => ({\n      time: fromUnixTime(pairPrice.time),\n      value:\n        activeToken === pairPrice?.token0Id\n          ? pairPrice.reserve1 / pairPrice.reserve0\n          : pairPrice.reserve0 / pairPrice.reserve1,\n    }))\n    .reverse()\n\ntype normalizeDerivedPairDataByActiveTokenParams = {\n  pairData: DerivedPairDataNormalized\n  activeToken: string\n}\n\nexport const normalizeDerivedPairDataByActiveToken = ({\n  pairData,\n  activeToken,\n}: normalizeDerivedPairDataByActiveTokenParams): PairPricesNormalized =>\n  pairData?.map((pairPrice) => ({\n    time: fromUnixTime(pairPrice.time),\n    value:\n      activeToken === pairPrice?.token0Id\n        ? pairPrice.token0DerivedBNB / pairPrice.token1DerivedBNB\n        : pairPrice.token1DerivedBNB / pairPrice.token0DerivedBNB,\n  }))\n","import { gql } from 'graphql-request'\nimport { Block } from 'state/info/types'\n\nexport const getDerivedPrices = (tokenAddress: string, blocks: Block[]) =>\n  blocks.map(\n    (block) => `\n    t${block.timestamp}:token(id:\"${tokenAddress}\", block: { number: ${block.number} }) { \n        derivedBNB\n      }\n    `,\n  )\n\nexport const getDerivedPricesQueryConstructor = (subqueries: string[]) => {\n  return gql`\n      query derivedTokenPriceData {\n        ${subqueries}\n      }\n    `\n}\n","import { INFO_CLIENT } from 'config/constants/endpoints'\nimport { ONE_DAY_UNIX, ONE_HOUR_SECONDS } from 'config/constants/info'\nimport { getUnixTime, startOfHour, sub } from 'date-fns'\nimport { Block } from 'state/info/types'\nimport { getBlocksFromTimestamps } from 'views/Info/hooks/useBlocksFromTimestamps'\nimport { multiQuery } from 'views/Info/utils/infoQueryHelpers'\nimport { getDerivedPrices, getDerivedPricesQueryConstructor } from '../queries/getDerivedPrices'\nimport { PairDataTimeWindowEnum } from '../types'\n\nconst getTokenDerivedBnbPrices = async (tokenAddress: string, blocks: Block[]) => {\n  const prices: any | undefined = await multiQuery(\n    getDerivedPricesQueryConstructor,\n    getDerivedPrices(tokenAddress, blocks),\n    INFO_CLIENT,\n    200,\n  )\n\n  if (!prices) {\n    console.error('Price data failed to load')\n    return null\n  }\n\n  // format token BNB price results\n  const tokenPrices: {\n    tokenAddress: string\n    timestamp: string\n    derivedBNB: number\n  }[] = []\n\n  // Get Token prices in BNB\n  Object.keys(prices).forEach((priceKey) => {\n    const timestamp = priceKey.split('t')[1]\n    if (timestamp) {\n      tokenPrices.push({\n        tokenAddress,\n        timestamp,\n        derivedBNB: prices[priceKey]?.derivedBNB ? parseFloat(prices[priceKey].derivedBNB) : 0,\n      })\n    }\n  })\n\n  tokenPrices.sort((a, b) => parseInt(a.timestamp, 10) - parseInt(b.timestamp, 10))\n\n  return tokenPrices\n}\n\nconst getInterval = (timeWindow: PairDataTimeWindowEnum) => {\n  switch (timeWindow) {\n    case PairDataTimeWindowEnum.DAY:\n      return ONE_HOUR_SECONDS\n    case PairDataTimeWindowEnum.WEEK:\n      return ONE_HOUR_SECONDS * 4\n    case PairDataTimeWindowEnum.MONTH:\n      return ONE_DAY_UNIX\n    case PairDataTimeWindowEnum.YEAR:\n      return ONE_DAY_UNIX * 15\n    default:\n      return ONE_HOUR_SECONDS * 4\n  }\n}\n\nconst getSkipDaysToStart = (timeWindow: PairDataTimeWindowEnum) => {\n  switch (timeWindow) {\n    case PairDataTimeWindowEnum.DAY:\n      return 1\n    case PairDataTimeWindowEnum.WEEK:\n      return 7\n    case PairDataTimeWindowEnum.MONTH:\n      return 30\n    case PairDataTimeWindowEnum.YEAR:\n      return 365\n    default:\n      return 7\n  }\n}\n\n// Fetches derivedBnb values for tokens to calculate derived price\n// Used when no direct pool is available\nconst fetchDerivedPriceData = async (\n  token0Address: string,\n  token1Address: string,\n  timeWindow: PairDataTimeWindowEnum,\n) => {\n  const interval = getInterval(timeWindow)\n  const endTimestamp = getUnixTime(new Date())\n  const startTimestamp = getUnixTime(startOfHour(sub(endTimestamp * 1000, { days: getSkipDaysToStart(timeWindow) })))\n  const timestamps = []\n  let time = startTimestamp\n  while (time <= endTimestamp) {\n    timestamps.push(time)\n    time += interval\n  }\n\n  try {\n    const blocks = await getBlocksFromTimestamps(timestamps, 'asc', 500)\n    if (!blocks || blocks.length === 0) {\n      console.error('Error fetching blocks for timestamps', timestamps)\n      return null\n    }\n\n    const token0DerivedBnb = await getTokenDerivedBnbPrices(token0Address, blocks)\n    const token1DerivedBnb = await getTokenDerivedBnbPrices(token1Address, blocks)\n    return { token0DerivedBnb, token1DerivedBnb }\n  } catch (error) {\n    console.error('Failed to fetched derived price data for chart', error)\n    return null\n  }\n}\n\nexport default fetchDerivedPriceData\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport getLpAddress from 'utils/getLpAddress'\nimport { getTokenAddress } from 'views/Swap/components/Chart/utils'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport {\n  Field,\n  replaceSwapState,\n  selectCurrency,\n  setRecipient,\n  switchCurrencies,\n  typeInput,\n  updateDerivedPairData,\n  updatePairData,\n} from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\nimport fetchPairPriceData from './fetch/fetchPairPriceData'\nimport {\n  normalizeChartData,\n  normalizeDerivedChartData,\n  normalizeDerivedPairDataByActiveToken,\n  normalizePairDataByActiveToken,\n} from './normalizers'\nimport { PairDataTimeWindowEnum } from './types'\nimport { derivedPairByDataIdSelector, pairByDataIdSelector } from './selectors'\nimport { DEFAULT_INPUT_CURRENCY, DEFAULT_OUTPUT_CURRENCY } from './constants'\nimport fetchDerivedPriceData from './fetch/fetchDerivedPriceData'\nimport { pairHasEnoughLiquidity } from './fetch/utils'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0xfc985d4713de16166278e6a43f21d2668f61262f', // v2 factory\n  '0x1c09da0cb543e311ddf6da8b3952a1b7542a0c47', // v2 router 01\n  '0x77195d81261690c9e4e3b1bcf0cf819680be7615', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// Get swap price for single token disregarding slippage and price impact\nexport function useSingleTokenSwapInfo(): { [key: string]: number } {\n  const {\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const token0Address = getTokenAddress(inputCurrencyId)\n  const token1Address = getTokenAddress(outputCurrencyId)\n\n  const parsedAmount = tryParseAmount('1', inputCurrency ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(parsedAmount, outputCurrency ?? undefined)\n  if (!inputCurrency || !outputCurrency || !bestTradeExactIn) {\n    return null\n  }\n\n  const inputTokenPrice = parseFloat(bestTradeExactIn?.executionPrice?.toSignificant(6))\n  const outputTokenPrice = 1 / inputTokenPrice\n\n  return {\n    [token0Address]: inputTokenPrice,\n    [token1Address]: outputTokenPrice,\n  }\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency) || DEFAULT_INPUT_CURRENCY\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency) || DEFAULT_OUTPUT_CURRENCY\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n    pairDataById: {},\n    derivedPairDataById: {},\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n  }, [dispatch, chainId, parsedQs])\n\n  return result\n}\n\ntype useFetchPairPricesParams = {\n  token0Address: string\n  token1Address: string\n  timeWindow: PairDataTimeWindowEnum\n  currentSwapPrice: {\n    [key: string]: number\n  }\n}\n\nexport const useFetchPairPrices = ({\n  token0Address,\n  token1Address,\n  timeWindow,\n  currentSwapPrice,\n}: useFetchPairPricesParams) => {\n  const [pairId, setPairId] = useState(null)\n  const [isLoading, setIsLoading] = useState(false)\n  const pairData = useSelector(pairByDataIdSelector({ pairId, timeWindow }))\n  const derivedPairData = useSelector(derivedPairByDataIdSelector({ pairId, timeWindow }))\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const fetchDerivedData = async () => {\n      console.info(\n        '[Price Chart]: Not possible to retrieve price data from single pool, trying to fetch derived prices',\n      )\n      try {\n        // Try to get at least derived data for chart\n        // This is used when there is no direct data for pool\n        // i.e. when multihops are necessary\n        const derivedData = await fetchDerivedPriceData(token0Address, token1Address, timeWindow)\n        if (derivedData) {\n          const normalizedDerivedData = normalizeDerivedChartData(derivedData)\n          dispatch(updateDerivedPairData({ pairData: normalizedDerivedData, pairId, timeWindow }))\n        } else {\n          dispatch(updateDerivedPairData({ pairData: [], pairId, timeWindow }))\n        }\n      } catch (error) {\n        console.error('Failed to fetch derived prices for chart', error)\n        dispatch(updateDerivedPairData({ pairData: [], pairId, timeWindow }))\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    const fetchAndUpdatePairPrice = async () => {\n      setIsLoading(true)\n      const { data } = await fetchPairPriceData({ pairId, timeWindow })\n      if (data) {\n        // Find out if Liquidity Pool has enough liquidity\n        // low liquidity pool might mean that the price is incorrect\n        // in that case try to get derived price\n        const hasEnoughLiquidity = pairHasEnoughLiquidity(data, timeWindow)\n        const newPairData = normalizeChartData(data, timeWindow) || []\n        if (newPairData.length > 0 && hasEnoughLiquidity) {\n          dispatch(updatePairData({ pairData: newPairData, pairId, timeWindow }))\n          setIsLoading(false)\n        } else {\n          console.info(`[Price Chart]: Liquidity too low for ${pairId}`)\n          dispatch(updatePairData({ pairData: [], pairId, timeWindow }))\n          fetchDerivedData()\n        }\n      } else {\n        dispatch(updatePairData({ pairData: [], pairId, timeWindow }))\n        fetchDerivedData()\n      }\n    }\n\n    if (!pairData && !derivedPairData && pairId && !isLoading) {\n      fetchAndUpdatePairPrice()\n    }\n  }, [\n    pairId,\n    timeWindow,\n    pairData,\n    currentSwapPrice,\n    token0Address,\n    token1Address,\n    derivedPairData,\n    dispatch,\n    isLoading,\n  ])\n\n  useEffect(() => {\n    const updatePairId = () => {\n      try {\n        const pairAddress = getLpAddress(token0Address, token1Address)?.toLowerCase()\n        if (pairAddress !== pairId) {\n          setPairId(pairAddress)\n        }\n      } catch (error) {\n        setPairId(null)\n      }\n    }\n\n    updatePairId()\n  }, [token0Address, token1Address, pairId])\n\n  const normalizedPairData = useMemo(\n    () => normalizePairDataByActiveToken({ activeToken: token0Address, pairData }),\n    [token0Address, pairData],\n  )\n\n  const normalizedDerivedPairData = useMemo(\n    () => normalizeDerivedPairDataByActiveToken({ activeToken: token0Address, pairData: derivedPairData }),\n    [token0Address, derivedPairData],\n  )\n\n  const hasSwapPrice = currentSwapPrice && currentSwapPrice[token0Address] > 0\n\n  const normalizedPairDataWithCurrentSwapPrice =\n    normalizedPairData?.length > 0 && hasSwapPrice\n      ? [...normalizedPairData, { time: new Date(), value: currentSwapPrice[token0Address] }]\n      : normalizedPairData\n\n  const normalizedDerivedPairDataWithCurrentSwapPrice =\n    normalizedDerivedPairData?.length > 0 && hasSwapPrice\n      ? [...normalizedDerivedPairData, { time: new Date(), value: currentSwapPrice[token0Address] }]\n      : normalizedDerivedPairData\n\n  const hasNoDirectData = normalizedPairDataWithCurrentSwapPrice && normalizedPairDataWithCurrentSwapPrice?.length === 0\n  const hasNoDerivedData =\n    normalizedDerivedPairDataWithCurrentSwapPrice && normalizedDerivedPairDataWithCurrentSwapPrice?.length === 0\n\n  // undefined is used for loading\n  let pairPrices = hasNoDirectData && hasNoDerivedData ? [] : undefined\n  if (normalizedPairDataWithCurrentSwapPrice && normalizedPairDataWithCurrentSwapPrice?.length > 0) {\n    pairPrices = normalizedPairDataWithCurrentSwapPrice\n  } else if (\n    normalizedDerivedPairDataWithCurrentSwapPrice &&\n    normalizedDerivedPairDataWithCurrentSwapPrice?.length > 0\n  ) {\n    pairPrices = normalizedDerivedPairDataWithCurrentSwapPrice\n  }\n  return { pairPrices, pairId }\n}\n","// BNB\nexport const DEFAULT_INPUT_CURRENCY = 'BNB'\n// NRT\nexport const DEFAULT_OUTPUT_CURRENCY = '0x1b2f67679798c764f2c0c69dfb6bda8b30a094cf'\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import get from 'lodash/get'\nimport { AppState } from 'state'\nimport { PairDataTimeWindowEnum } from './types'\n\ntype pairByDataIdSelectorParams = {\n  pairId: string\n  timeWindow: PairDataTimeWindowEnum\n}\n\nexport const pairByDataIdSelector =\n  ({ pairId, timeWindow }: pairByDataIdSelectorParams) =>\n  (state: AppState) =>\n    get(state, ['swap', 'pairDataById', pairId, timeWindow])\n\nexport const derivedPairByDataIdSelector =\n  ({ pairId, timeWindow }: pairByDataIdSelectorParams) =>\n  (state: AppState) =>\n    get(state, ['swap', 'derivedPairDataById', pairId, timeWindow])\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport { useSlowFresh, useFastFresh } from 'hooks/useRefresh'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, SerializedFarm, DeserializedFarmUserData, DeserializedFarm, DeserializedFarmsState } from '../types'\n\nconst deserializeFarmUserData = (farm: SerializedFarm): DeserializedFarmUserData => {\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\nconst deserializeFarm = (farm: SerializedFarm): DeserializedFarm => {\n  const { lpAddresses, lpSymbol, pid, dual, multiplier, isCommunity, quoteTokenPriceBusd, tokenPriceBusd } = farm\n\n  return {\n    lpAddresses,\n    lpSymbol,\n    pid,\n    dual,\n    multiplier,\n    isCommunity,\n    quoteTokenPriceBusd,\n    tokenPriceBusd,\n    token: deserializeToken(farm.token),\n    quoteToken: deserializeToken(farm.quoteToken),\n    userData: deserializeFarmUserData(farm),\n    tokenAmountTotal: farm.tokenAmountTotal ? new BigNumber(farm.tokenAmountTotal) : BIG_ZERO,\n    lpTotalInQuoteToken: farm.lpTotalInQuoteToken ? new BigNumber(farm.lpTotalInQuoteToken) : BIG_ZERO,\n    lpTotalSupply: farm.lpTotalSupply ? new BigNumber(farm.lpTotalSupply) : BIG_ZERO,\n    tokenPriceVsQuote: farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO,\n    poolWeight: farm.poolWeight ? new BigNumber(farm.poolWeight) : BIG_ZERO,\n  }\n}\n\nexport const usePollFarmsPublicData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const slowRefresh = useSlowFresh()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n  }, [includeArchive, dispatch, slowRefresh])\n}\n\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const slowRefresh = useSlowFresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const fastRefresh = useFastFresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1, 2]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): DeserializedFarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  const deserializedFarmsData = farms.data.map(deserializeFarm)\n  const { loadArchivedFarmsData, userDataLoaded } = farms\n  return {\n    loadArchivedFarmsData,\n    userDataLoaded,\n    data: deserializedFarmsData,\n  }\n}\n\nexport const useFarmFromPid = (pid: number): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmUser = (pid): DeserializedFarmUserData => {\n  const { userData } = useFarmFromPid(pid)\n  const { allowance, tokenBalance, stakedBalance, earnings } = userData\n  return {\n    allowance,\n    tokenBalance,\n    stakedBalance,\n    earnings,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.tokenPriceBusd)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply.gt(0) && farm.lpTotalInQuoteToken.gt(0)) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(farm.lpTotalSupply)\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(3)\n\n  const cakePriceBusdAsString = cakeBnbFarm.tokenPriceBusd\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { Transaction } from 'state/info/types'\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\n\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\n  'info/protocol/updateProtocolChartData',\n)\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\n  'info/protocol/updateProtocolTransactions',\n)\n\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\n  'info/pools/updatePoolChartData',\n)\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\n  'info/pools/updatePoolTransactions',\n)\n\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\n  'info/tokens/addTokenPoolAddresses',\n)\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\n  'info/tokens/updateTokenChartData',\n)\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\n  'info/tokens/updateTokenTransactions',\n)\nexport const updateTokenPriceData = createAction<{\n  tokenAddress: string\n  secondsInterval: number\n  priceData?: PriceChartEntry[]\n  oldestFetchedTimestamp: number\n}>('info/tokens/updateTokenPriceData')\n","import { Address } from '../types'\n\nexport enum GladiatorsCollectionKey {\n  GLADIATORS = 'gladiators',\n  SQUAD = 'pancakeSquad',\n}\n\nexport type GladiatorsCollection = {\n  name: string\n  description?: string\n  slug: string\n  address: Address\n}\n\nexport type GladiatorsCollections = {\n  [key in GladiatorsCollectionKey]: GladiatorsCollection\n}\n","import { GladiatorsCollectionKey, GladiatorsCollections } from './types'\n\nconst gladiatorsCollections: GladiatorsCollections = {\n  [GladiatorsCollectionKey.GLADIATORS]: {\n    name: 'Gladiators Collectibles',\n    slug: 'gladiators-collectibles',\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x6a46c560b1f6b062855bde6d96665b7d22f34f06', //lower case\n    },\n  },\n  [GladiatorsCollectionKey.SQUAD]: {\n    name: 'Gladiators Squad',\n    description: \"GladiatorsSwap's first official generative NFT collection.. Join the squad.\",\n    slug: 'gladiators-squad',\n    address: {\n      56: '0x0a8901b0E25DEb55A87524f0cC164E9644020EBA',\n      97: '0xEf12ef570300bFA65c4F022deAaA3dfF4f5d5c91',\n    },\n  },\n}\n\nexport default gladiatorsCollections\n","import { GladiatorsCollectionKey } from 'config/constants/nftsCollections/types'\nimport gladiatorsCollections from 'config/constants/nftsCollections'\nimport { getAddress } from 'utils/addressHelpers'\n\nexport const nftsBaseUrl = '/nfts'\nexport const gladiatorCollectiblesAddress = getAddress(gladiatorsCollections[GladiatorsCollectionKey.GLADIATORS].address)\nexport const gladiatorsSquadAddress = getAddress(gladiatorsCollections[GladiatorsCollectionKey.SQUAD].address)\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport store from 'state'\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\n\n/**\n * Function to return gasPrice outwith a react component\n */\nconst getGasPrice = (): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const state = store.getState()\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport default getGasPrice\n","export const REWARD_RATE = 0.97\n\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nexport const ROUND_BUFFER = 9\n\nexport const PAST_ROUND_COUNT = 5\nexport const FUTURE_ROUND_COUNT = 2\n\nexport const ROUNDS_PER_PAGE = 200\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import tokens from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst priceHelperLps: SerializedFarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absence of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n   {\n    pid: null,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '0x85EcDcdd01EbE0BfD0Aba74B81Ca6d7F4A53582b',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { SerializedFarm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: token.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: quoteToken.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: token.address,\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: quoteToken.address,\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of quoteToken in the LP that are staked in the MC\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { SerializedFarm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<SerializedFarm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { SerializedFarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: SerializedFarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      const serializedFarm = { ...farm, token: farm.token, quoteToken: farm.quoteToken }\n      return serializedFarm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { SerializedFarm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (\n  farms: SerializedFarm[],\n  preferredQuoteTokens: string[] = ['BUSD', 'WBNB'],\n): SerializedFarm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { SerializedFarm } from 'state/types'\nimport tokens from 'config/constants/tokens'\n\nconst getFarmFromTokenSymbol = (\n  farms: SerializedFarm[],\n  tokenSymbol: string,\n  preferredQuoteTokens?: string[],\n): SerializedFarm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === tokens.busd.symbol) {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === tokens.wbnb.symbol) {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === tokens.wbnb.symbol) {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === tokens.busd.symbol) {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'WBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'WBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms: SerializedFarm[]) => {\n  const bnbBusdFarm = farms.find((farm) => farm.pid === 3)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const tokenPriceBusd = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPriceBusd = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n\n    return {\n      ...farm,\n      tokenPriceBusd: tokenPriceBusd.toJSON(),\n      quoteTokenPriceBusd: quoteTokenPriceBusd.toJSON(),\n    }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { SerializedFarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingKhaos',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { SerializedFarmsState, SerializedFarm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: SerializedFarmsState = {\n  data: noAccountFarmConfig,\n  loadArchivedFarmsData: false,\n  userDataLoaded: false,\n}\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<SerializedFarm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: SerializedFarm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { Collections, CollectionKey } from './types'\n\nconst collections: Collections = {\n  [CollectionKey.GLADIATORS]: {\n    name: 'Gladiators Collectibles',\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x6a46c560b1f6b062855bde6d96665b7d22f34f06',\n    },\n  },\n}\n\nexport default collections\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { serializeTokens } from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst farms: SerializedFarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 1, 2) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'KHAOS LP',\n    lpAddresses: {\n      97: '0xe3fdade8023cE0c66eA0c9D8423e5A47a9559801',\n      // 56 PID address is not geniune jut to avoid errors\n      56: '0xB56fF089c8b44B42763F9867Dc5964C62096cd8E',\n    },\n    token: serializedTokens.syrup,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'NRT LP',\n    lpAddresses: {\n      97: '0xE17B02E14e309Db34eE8F7F78ccEDccC1BE6976D',\n      // 56 PID address is not geniune jut to avoid errors\n      56: '0x1bd72D5015bb1C8303235d1Da1542D887C8fcFB8',\n    },\n    token: serializedTokens.nrt,\n    quoteToken: serializedTokens.wbnb,\n  },\n  // {\n  //   pid: 2,\n  //   lpSymbol: 'DENA-BNB LP',\n  //   lpAddresses: {\n  //     97: '0x0a0554ed9d75dd0475d3295953ff7455ff3cb098',\n  //     // 56 PID address is not geniune jut to avoid errors\n  //     56: '0x64ca41d5b48979dab1d5990d2cb1e8245cd860d3',\n  //   },\n  //   token: serializedTokens.dena,\n  //   quoteToken: serializedTokens.wbnb\n  // },\n  // {\n  //   pid: 3,\n  //   lpSymbol: 'BUSD-BNB LP',\n  //   lpAddresses: {\n  //     97: '0x60fbAd46F86939498316D04A508E958cD0AEF45d',\n  //     56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n  //   },\n  //   token: serializedTokens.busd,\n  //   quoteToken: serializedTokens.wbnb\n  // },\n  {\n    pid: 3,\n    lpSymbol: 'DENA LP',\n    lpAddresses: {\n      97: '0xdc0bdCdeEA4B0eC6BeB15cC42EE4581a9d08E37B',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: serializedTokens.busd,\n    quoteToken: serializedTokens.wbnb\n  },\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n  // {\n  //   pid: 3,\n  //   lpSymbol: 'NRT-DENA LP',\n  //   lpAddresses: {\n  //     97: '0xb33705a4cf3c49753592d0d4c4c05be1ca678c1e',\n  //     56: '',\n  //   },\n  //   token: serializedTokens.nrt,\n  //   quoteToken: serializedTokens.dena,\n  // },\n  // {\n  //   pid: 446,\n  //   lpSymbol: 'BMON-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x00e53C169dA54a7E11172aEEDf8Eb87F060F479e',\n  //   },\n  //   token: serializedTokens.bmon,\n  //   quoteToken: serializedTokens.busd,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 458,\n  //   lpSymbol: 'PROS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x109cBFfE72C02F26536Ff8b92278Dfd3610dE656',\n  //   },\n  //   token: serializedTokens.pros,\n  //   quoteToken: serializedTokens.wbnb,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 457,\n  //   lpSymbol: 'NFT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0ecc84c9629317a494f12bc56aa2522475bf32e8',\n  //   },\n  //   token: serializedTokens.nft,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 429,\n  //   lpSymbol: 'CHESS-USDC LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1472976e0b97f5b2fc93f1fff14e2b5c4447b64f',\n  //   },\n  //   token: serializedTokens.chess,\n  //   quoteToken: serializedTokens.usdc,\n  // },\n  // {\n  //   pid: 447,\n  //   lpSymbol: 'GNT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3747e3e107223539FD09bb730b055A1f11F78Adf',\n  //   },\n  //   token: serializedTokens.gnt,\n  //   quoteToken: serializedTokens.wbnb,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 425,\n  //   lpSymbol: 'DVI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x89ebf9cd99864f6e51bd7a578965922029cab977',\n  //   },\n  //   token: serializedTokens.dvi,\n  //   quoteToken: serializedTokens.wbnb,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 439,\n  //   lpSymbol: 'MCRN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe8D5d81dac092Ae61d097f84EFE230759BF2e522',\n  //   },\n  //   token: serializedTokens.mcrn,\n  //   quoteToken: serializedTokens.wbnb,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 456,\n  //   lpSymbol: 'TLOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3eDb06e2d182d133864fe7C0f9B4C204bBf61D4E',\n  //   },\n  //   token: serializedTokens.tlos,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 455,\n  //   lpSymbol: 'HERO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5d937c3966002cbD9d32c890a59439b4b300a14d',\n  //   },\n  //   token: serializedTokens.stephero,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 449,\n  //   lpSymbol: 'BP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2bF2dEB40639201C9A94c9e33b4852D9AEa5fd2D',\n  //   },\n  //   token: serializedTokens.bp,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 454,\n  //   lpSymbol: 'BSCDEFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5B0A3b98C2f01741A11E57A9d0595B254E62F9F2',\n  //   },\n  //   token: serializedTokens.bscdefi,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 453,\n  //   lpSymbol: 'QBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x67EFeF66A55c4562144B9AcfCFbc62F9E4269b3e',\n  //   },\n  //   token: serializedTokens.qbt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 452,\n  //   lpSymbol: 'NAOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcaa662ad41a662b81be2aea5d59ec0697628665f',\n  //   },\n  //   token: serializedTokens.naos,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 451,\n  //   lpSymbol: 'PHA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4ddd56e2f34338839BB5953515833950eA680aFb',\n  //   },\n  //   token: serializedTokens.pha,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 314,\n  //   lpSymbol: 'BEL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\n  //   },\n  //   token: serializedTokens.bel,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 450,\n  //   lpSymbol: 'SFUND-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x74fA517715C4ec65EF01d55ad5335f90dce7CC87',\n  //   },\n  //   token: serializedTokens.sfund,\n  //   quoteToken: serializedTokens.wbnb,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 448,\n  //   lpSymbol: 'RUSD-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x59FaC9e98479fc9979aE2a0C7422Af50bCBB9B26',\n  //   },\n  //   token: serializedTokens.rusd,\n  //   quoteToken: serializedTokens.busd,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 317,\n  //   lpSymbol: 'RAMP-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\n  //   },\n  //   token: serializedTokens.ramp,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 445,\n  //   lpSymbol: 'POTS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF90BAA331Cfd40F094476E752Bf272892170d399',\n  //   },\n  //   token: serializedTokens.pots,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 397,\n  //   lpSymbol: 'TUSD-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\n  //   },\n  //   token: serializedTokens.tusd,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 443,\n  //   lpSymbol: 'BTT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdcfbb12ded3fea12d2a078bc6324131cd14bf835',\n  //   },\n  //   token: serializedTokens.btt,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 442,\n  //   lpSymbol: 'TRX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb5d108578be3750209d1b3a8f45ffee8c5a75146',\n  //   },\n  //   token: serializedTokens.trx,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 441,\n  //   lpSymbol: 'WIN-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6a445ceb72c8b1751755386c3990055ff92e14a0',\n  //   },\n  //   token: serializedTokens.win,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 436,\n  //   lpSymbol: 'BABYCAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb5e33fE13a821e55ED33C884589a804B1b4F6fD8',\n  //   },\n  //   token: serializedTokens.babycake,\n  //   quoteToken: serializedTokens.wbnb,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 440,\n  //   lpSymbol: 'HERO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe267018C943E77992e7e515724B07b9CE7938124',\n  //   },\n  //   token: serializedTokens.hero,\n  //   quoteToken: serializedTokens.wbnb,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 438,\n  //   lpSymbol: 'WSG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x37Ff7D4459ad96E0B01275E5efffe091f33c2CAD',\n  //   },\n  //   token: serializedTokens.wsg,\n  //   quoteToken: serializedTokens.wbnb,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 435,\n  //   lpSymbol: 'REVV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1cc18962b919ef90085a8b21f8ddc95824fbad9e',\n  //   },\n  //   token: serializedTokens.revv,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 367,\n  //   lpSymbol: 'BTT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\n  //   },\n  //   token: serializedTokens.btt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 434,\n  //   lpSymbol: 'SKILL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc19dfd34d3ba5816df9cbdaa02d32a9f8dc6f6fc',\n  //   },\n  //   token: serializedTokens.skill,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 369,\n  //   lpSymbol: 'WIN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\n  //   },\n  //   token: serializedTokens.win,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 433,\n  //   lpSymbol: 'IF-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7b4682D2B3f8670b125aF6AEA8d7eD2Daa43Bdc1',\n  //   },\n  //   token: serializedTokens.if,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 432,\n  //   lpSymbol: 'SPS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfdfde3af740a22648b9dd66d05698e5095940850',\n  //   },\n  //   token: serializedTokens.sps,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 431,\n  //   lpSymbol: 'C98-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x92247860A03F48d5c6425c7CA35CDcFCB1013AA1',\n  //   },\n  //   token: serializedTokens.c98,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 430,\n  //   lpSymbol: 'AXS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC2d00De94795e60FB76Bc37d899170996cBdA436',\n  //   },\n  //   token: serializedTokens.axs,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 379,\n  //   lpSymbol: 'PMON-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\n  //   },\n  //   token: serializedTokens.pmon,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 368,\n  //   lpSymbol: 'TRX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\n  //   },\n  //   token: serializedTokens.trx,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 428,\n  //   lpSymbol: 'TITAN-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9392a1f471d9aa14c0b8eb28bd7a3f4a814727be',\n  //   },\n  //   token: serializedTokens.titan,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 427,\n  //   lpSymbol: 'ONE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9d2296e2fe3cdbf2eb3e3e2ca8811bafa42eedff',\n  //   },\n  //   token: serializedTokens.harmony,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 426,\n  //   lpSymbol: 'MASK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x46c6bA71af7648cD7f67D0AD4d16f75bE251ed12',\n  //   },\n  //   token: serializedTokens.mask,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 339,\n  //   lpSymbol: 'GUM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\n  //   },\n  //   token: serializedTokens.gum,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 424,\n  //   lpSymbol: 'ADX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0648ff5de80adf54aac07ece2490f50a418dde23',\n  //   },\n  //   token: serializedTokens.adx,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 423,\n  //   lpSymbol: 'USDC-USDT LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xec6557348085aa57c72514d67070dc863c0a5a8c',\n  //   },\n  //   token: serializedTokens.usdc,\n  //   quoteToken: serializedTokens.usdt,\n  // },\n  // {\n  //   pid: 422,\n  //   lpSymbol: 'CAKE-USDT LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA39Af17CE4a8eb807E076805Da1e2B8EA7D0755b',\n  //   },\n  //   token: serializedTokens.cake,\n  //   quoteToken: serializedTokens.usdt,\n  // },\n  // {\n  //   pid: 357,\n  //   lpSymbol: 'SUTER-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\n  //   },\n  //   token: serializedTokens.suter,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 421,\n  //   lpSymbol: 'BSCPAD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xba01662e978de7d67f8ffc937726215eb8995d17',\n  //   },\n  //   token: serializedTokens.bscpad,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 420,\n  //   lpSymbol: 'RABBIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x04b56A5B3f45CFeaFbfDCFc999c14be5434f2146',\n  //   },\n  //   token: serializedTokens.rabbit,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 419,\n  //   lpSymbol: 'WAULTx-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3e4370204f598205998143F07ebCC486E441b456',\n  //   },\n  //   token: serializedTokens.waultx,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 418,\n  //   lpSymbol: 'WEX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x547A355E70cd1F8CAF531B950905aF751dBEF5E6',\n  //   },\n  //   token: serializedTokens.wex,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 417,\n  //   lpSymbol: 'FORM-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3E19C18Fe3458A6065D8F0844cB7Eae52C9DAE07',\n  //   },\n  //   token: serializedTokens.form,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 416,\n  //   lpSymbol: 'ORBS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB87b857670A44356f2b70337E0F218713D2378e8',\n  //   },\n  //   token: serializedTokens.orbs,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 415,\n  //   lpSymbol: 'DG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8b2824d57eebf07f5aff5c91fa67ed7c501a9f43',\n  //   },\n  //   token: serializedTokens.$dg,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 414,\n  //   lpSymbol: 'WOO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x89eE0491CE55d2f7472A97602a95426216167189',\n  //   },\n  //   token: serializedTokens.woo,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 413,\n  //   lpSymbol: 'HTB-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2a995d355d5df641e878c0f366685741fd18d004',\n  //   },\n  //   token: serializedTokens.htb,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 351,\n  //   lpSymbol: 'JGN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\n  //   },\n  //   token: serializedTokens.jgn,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 337,\n  //   lpSymbol: 'DFT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\n  //   },\n  //   token: serializedTokens.dft,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 412,\n  //   lpSymbol: 'HAI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x289841bFb694767bCb56fBc7B741aB4B4D97D490',\n  //   },\n  //   token: serializedTokens.hai,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 411,\n  //   lpSymbol: 'O3-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7759283571Da8c0928786A96AE601944E10461Ff',\n  //   },\n  //   token: serializedTokens.o3,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 410,\n  //   lpSymbol: 'AMPL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6e98beb694ff1cdb1ee130edd2b21b0298683d58',\n  //   },\n  //   token: serializedTokens.ampl,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 343,\n  //   lpSymbol: 'ODDZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\n  //   },\n  //   token: serializedTokens.oddz,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 409,\n  //   lpSymbol: 'ETH-USDC LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\n  //   },\n  //   token: serializedTokens.eth,\n  //   quoteToken: serializedTokens.usdc,\n  // },\n  // {\n  //   pid: 408,\n  //   lpSymbol: 'BTCB-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\n  //   },\n  //   token: serializedTokens.btcb,\n  //   quoteToken: serializedTokens.eth,\n  // },\n  // {\n  //   pid: 347,\n  //   lpSymbol: 'BONDLY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\n  //   },\n  //   token: serializedTokens.bondly,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 407,\n  //   lpSymbol: 'MARSH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\n  //   },\n  //   token: serializedTokens.marsh,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 406,\n  //   lpSymbol: 'BORING-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\n  //   },\n  //   token: serializedTokens.boring,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 405,\n  //   lpSymbol: 'MBOX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\n  //   },\n  //   token: serializedTokens.mbox,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 404,\n  //   lpSymbol: 'ATA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xef7767677867552cfa699148b96a03358a9be779',\n  //   },\n  //   token: serializedTokens.ata,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 403,\n  //   lpSymbol: 'MX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\n  //   },\n  //   token: serializedTokens.mx,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 402,\n  //   lpSymbol: 'bCFX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\n  //   },\n  //   token: serializedTokens.bcfx,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 401,\n  //   lpSymbol: 'QKC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\n  //   },\n  //   token: serializedTokens.qkc,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 400,\n  //   lpSymbol: 'KTN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\n  //   },\n  //   token: serializedTokens.ktn,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 399,\n  //   lpSymbol: 'MTRG-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\n  //   },\n  //   token: serializedTokens.mtrg,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 398,\n  //   lpSymbol: 'SWG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\n  //   },\n  //   token: serializedTokens.swg,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 396,\n  //   lpSymbol: 'VRT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\n  //   },\n  //   token: serializedTokens.vrt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 395,\n  //   lpSymbol: 'EZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\n  //   },\n  //   token: serializedTokens.ez,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 394,\n  //   lpSymbol: 'KALM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\n  //   },\n  //   token: serializedTokens.kalm,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 393,\n  //   lpSymbol: 'pOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\n  //   },\n  //   token: serializedTokens.popen,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 335,\n  //   lpSymbol: 'LIEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\n  //   },\n  //   token: serializedTokens.lien,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 392,\n  //   lpSymbol: 'WELL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\n  //   },\n  //   token: serializedTokens.well,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 391,\n  //   lpSymbol: 'DERI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\n  //   },\n  //   token: serializedTokens.deri,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 390,\n  //   lpSymbol: 'CHR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\n  //   },\n  //   token: serializedTokens.chr,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 389,\n  //   lpSymbol: 'CAKE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\n  //   },\n  //   token: serializedTokens.cake,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 388,\n  //   lpSymbol: 'CYC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\n  //   },\n  //   token: serializedTokens.cyc,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 387,\n  //   lpSymbol: 'XEND-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\n  //   },\n  //   token: serializedTokens.xend,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 296,\n  //   lpSymbol: 'HGET-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\n  //   },\n  //   token: serializedTokens.hget,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 386,\n  //   lpSymbol: 'HOTCROSS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\n  //   },\n  //   token: serializedTokens.hotcross,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 385,\n  //   lpSymbol: 'RFOX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\n  //   },\n  //   token: serializedTokens.rfox,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 384,\n  //   lpSymbol: 'WMASS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\n  //   },\n  //   token: serializedTokens.wmass,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 383,\n  //   lpSymbol: 'UBXT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\n  //   },\n  //   token: serializedTokens.ubxt,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 381,\n  //   lpSymbol: 'BTR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\n  //   },\n  //   token: serializedTokens.btr,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 380,\n  //   lpSymbol: 'τDOGE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\n  //   },\n  //   token: serializedTokens.τdoge,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 378,\n  //   lpSymbol: 'ONE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\n  //   },\n  //   token: serializedTokens.one,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 377,\n  //   lpSymbol: 'FINE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\n  //   },\n  //   token: serializedTokens.fine,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 376,\n  //   lpSymbol: 'DOGE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xac109c8025f272414fd9e2faa805a583708a017f',\n  //   },\n  //   token: serializedTokens.doge,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 310,\n  //   lpSymbol: 'bMXX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\n  //   },\n  //   token: serializedTokens.bmxx,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 375,\n  //   lpSymbol: 'OIN-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\n  //   },\n  //   token: serializedTokens.oin,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 374,\n  //   lpSymbol: 'HYFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\n  //   },\n  //   token: serializedTokens.hyfi,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 373,\n  //   lpSymbol: 'KUN-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\n  //   },\n  //   token: serializedTokens.kun,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 372,\n  //   lpSymbol: 'KUN-QSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\n  //   },\n  //   token: serializedTokens.kun,\n  //   quoteToken: serializedTokens.qsd,\n  // },\n  // {\n  //   pid: 371,\n  //   lpSymbol: 'MATH-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\n  //   },\n  //   token: serializedTokens.math,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 370,\n  //   lpSymbol: 'mCOIN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\n  //   },\n  //   token: serializedTokens.mcoin,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 366,\n  //   lpSymbol: 'PNT-pBTC LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\n  //   },\n  //   token: serializedTokens.pnt,\n  //   quoteToken: serializedTokens.pbtc,\n  // },\n  // {\n  //   pid: 311,\n  //   lpSymbol: 'xMARK-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\n  //   },\n  //   token: serializedTokens.xmark,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 365,\n  //   lpSymbol: 'BTCB-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\n  //   },\n  //   token: serializedTokens.btcb,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 364,\n  //   lpSymbol: 'LMT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\n  //   },\n  //   token: serializedTokens.lmt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 363,\n  //   lpSymbol: 'DFD-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\n  //   },\n  //   token: serializedTokens.dfd,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 362,\n  //   lpSymbol: 'ALPACA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\n  //   },\n  //   token: serializedTokens.alpaca,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 361,\n  //   lpSymbol: 'τBTC-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\n  //   },\n  //   token: serializedTokens.τbtc,\n  //   quoteToken: serializedTokens.btcb,\n  // },\n  // {\n  //   pid: 304,\n  //   lpSymbol: 'SWINGBY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\n  //   },\n  //   token: serializedTokens.swingby,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 360,\n  //   lpSymbol: 'XED-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\n  //   },\n  //   token: serializedTokens.xed,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 359,\n  //   lpSymbol: 'HAKKA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\n  //   },\n  //   token: serializedTokens.hakka,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 358,\n  //   lpSymbol: 'CGG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\n  //   },\n  //   token: serializedTokens.cgg,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 356,\n  //   lpSymbol: 'bROOBEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\n  //   },\n  //   token: serializedTokens.broobee,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 355,\n  //   lpSymbol: 'HZN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\n  //   },\n  //   token: serializedTokens.hzn,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 354,\n  //   lpSymbol: 'ALPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\n  //   },\n  //   token: serializedTokens.alpa,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 353,\n  //   lpSymbol: 'PERL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\n  //   },\n  //   token: serializedTokens.perl,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 352,\n  //   lpSymbol: 'TLM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\n  //   },\n  //   token: serializedTokens.tlm,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 350,\n  //   lpSymbol: 'EPS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\n  //   },\n  //   token: serializedTokens.eps,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 349,\n  //   lpSymbol: 'ARPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\n  //   },\n  //   token: serializedTokens.arpa,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 348,\n  //   lpSymbol: 'ITAM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\n  //   },\n  //   token: serializedTokens.itam,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 346,\n  //   lpSymbol: 'TKO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\n  //   },\n  //   token: serializedTokens.tko,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 345,\n  //   lpSymbol: 'APYS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\n  //   },\n  //   token: serializedTokens.apys,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 344,\n  //   lpSymbol: 'HOO-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\n  //   },\n  //   token: serializedTokens.hoo,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 342,\n  //   lpSymbol: 'EASY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\n  //   },\n  //   token: serializedTokens.easy,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 341,\n  //   lpSymbol: 'NRV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\n  //   },\n  //   token: serializedTokens.nrv,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 340,\n  //   lpSymbol: 'DEGO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\n  //   },\n  //   token: serializedTokens.dego,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 338,\n  //   lpSymbol: 'pBTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\n  //   },\n  //   token: serializedTokens.pbtc,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 336,\n  //   lpSymbol: 'SWTH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\n  //   },\n  //   token: serializedTokens.swth,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 334,\n  //   lpSymbol: 'ZIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\n  //   },\n  //   token: serializedTokens.zil,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 333,\n  //   lpSymbol: 'pCWS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\n  //   },\n  //   token: serializedTokens.pcws,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 332,\n  //   lpSymbol: 'bBADGER-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\n  //   },\n  //   token: serializedTokens.bbadger,\n  //   quoteToken: serializedTokens.btcb,\n  // },\n  // {\n  //   pid: 331,\n  //   lpSymbol: 'bDIGG-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\n  //   },\n  //   token: serializedTokens.bdigg,\n  //   quoteToken: serializedTokens.btcb,\n  // },\n  // {\n  //   pid: 330,\n  //   lpSymbol: 'LTO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\n  //   },\n  //   token: serializedTokens.lto,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 329,\n  //   lpSymbol: 'MIR-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\n  //   },\n  //   token: serializedTokens.mir,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 328,\n  //   lpSymbol: 'TRADE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\n  //   },\n  //   token: serializedTokens.trade,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 327,\n  //   lpSymbol: 'DUSK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\n  //   },\n  //   token: serializedTokens.dusk,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 326,\n  //   lpSymbol: 'BIFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\n  //   },\n  //   token: serializedTokens.bifi,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 325,\n  //   lpSymbol: 'TXL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\n  //   },\n  //   token: serializedTokens.txl,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 324,\n  //   lpSymbol: 'COS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\n  //   },\n  //   token: serializedTokens.cos,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 323,\n  //   lpSymbol: 'BUNNY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\n  //   },\n  //   token: serializedTokens.bunny,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 322,\n  //   lpSymbol: 'ALICE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\n  //   },\n  //   token: serializedTokens.alice,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 321,\n  //   lpSymbol: 'FOR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\n  //   },\n  //   token: serializedTokens.for,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 320,\n  //   lpSymbol: 'BUX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\n  //   },\n  //   token: serializedTokens.bux,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 319,\n  //   lpSymbol: 'NULS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x853784B7BDe87d858555715c0123374242db7943',\n  //   },\n  //   token: serializedTokens.nuls,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 318,\n  //   lpSymbol: 'BELT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\n  //   },\n  //   token: serializedTokens.belt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 316,\n  //   lpSymbol: 'BFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\n  //   },\n  //   token: serializedTokens.bfi,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 315,\n  //   lpSymbol: 'DEXE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\n  //   },\n  //   token: serializedTokens.dexe,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 313,\n  //   lpSymbol: 'TPT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\n  //   },\n  //   token: serializedTokens.tpt,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 312,\n  //   lpSymbol: 'WATCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\n  //   },\n  //   token: serializedTokens.watch,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 309,\n  //   lpSymbol: 'IOTX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\n  //   },\n  //   token: serializedTokens.iotx,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 308,\n  //   lpSymbol: 'BOR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\n  //   },\n  //   token: serializedTokens.bor,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 307,\n  //   lpSymbol: 'bOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\n  //   },\n  //   token: serializedTokens.bopen,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 306,\n  //   lpSymbol: 'SUSHI-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\n  //   },\n  //   token: serializedTokens.sushi,\n  //   quoteToken: serializedTokens.eth,\n  // },\n  // {\n  //   pid: 305,\n  //   lpSymbol: 'DODO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\n  //   },\n  //   token: serializedTokens.dodo,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 303,\n  //   lpSymbol: 'BRY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\n  //   },\n  //   token: serializedTokens.bry,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 302,\n  //   lpSymbol: 'ZEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\n  //   },\n  //   token: serializedTokens.zee,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 301,\n  //   lpSymbol: 'SWGb-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\n  //   },\n  //   token: serializedTokens.swgb,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 300,\n  //   lpSymbol: 'COMP-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\n  //   },\n  //   token: serializedTokens.comp,\n  //   quoteToken: serializedTokens.eth,\n  // },\n  // {\n  //   pid: 299,\n  //   lpSymbol: 'SFP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\n  //   },\n  //   token: serializedTokens.sfp,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 298,\n  //   lpSymbol: 'LINA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\n  //   },\n  //   token: serializedTokens.lina,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 297,\n  //   lpSymbol: 'LIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\n  //   },\n  //   token: serializedTokens.lit,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 295,\n  //   lpSymbol: 'BDO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\n  //   },\n  //   token: serializedTokens.bdo,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 294,\n  //   lpSymbol: 'EGLD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\n  //   },\n  //   token: serializedTokens.egld,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 293,\n  //   lpSymbol: 'UST-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x05faf555522Fa3F93959F86B41A3808666093210',\n  //   },\n  //   token: serializedTokens.ust,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 292,\n  //   lpSymbol: 'mAMZN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\n  //   },\n  //   token: serializedTokens.mamzn,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 291,\n  //   lpSymbol: 'mGOOGL-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\n  //   },\n  //   token: serializedTokens.mgoogl,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 290,\n  //   lpSymbol: 'mNFLX-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\n  //   },\n  //   token: serializedTokens.mnflx,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 289,\n  //   lpSymbol: 'mTSLA-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\n  //   },\n  //   token: serializedTokens.mtsla,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 288,\n  //   lpSymbol: 'wSOTE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\n  //   },\n  //   token: serializedTokens.wsote,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 287,\n  //   lpSymbol: 'FRONT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\n  //   },\n  //   token: serializedTokens.front,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 286,\n  //   lpSymbol: 'Helmet-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\n  //   },\n  //   token: serializedTokens.helmet,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 285,\n  //   lpSymbol: 'BTCST-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\n  //   },\n  //   token: serializedTokens.btcst,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 284,\n  //   lpSymbol: 'LTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n  //   },\n  //   token: serializedTokens.ltc,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 283,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\n  //   },\n  //   token: serializedTokens.usdc,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 282,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\n  //   },\n  //   token: serializedTokens.dai,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 281,\n  //   lpSymbol: 'BSCX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\n  //   },\n  //   token: serializedTokens.bscx,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 280,\n  //   lpSymbol: 'TEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\n  //   },\n  //   token: serializedTokens.ten,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 279,\n  //   lpSymbol: 'bALBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\n  //   },\n  //   token: serializedTokens.balbt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 278,\n  //   lpSymbol: 'REEF-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\n  //   },\n  //   token: serializedTokens.reef,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 277,\n  //   lpSymbol: 'Ditto-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\n  //   },\n  //   token: serializedTokens.ditto,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 276,\n  //   lpSymbol: 'VAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\n  //   },\n  //   token: serializedTokens.vai,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 275,\n  //   lpSymbol: 'BLK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\n  //   },\n  //   token: serializedTokens.blink,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 274,\n  //   lpSymbol: 'UNFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\n  //   },\n  //   token: serializedTokens.unfi,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 273,\n  //   lpSymbol: 'HARD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\n  //   },\n  //   token: serializedTokens.hard,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 272,\n  //   lpSymbol: 'CTK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\n  //   },\n  //   token: serializedTokens.ctk,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 271,\n  //   lpSymbol: 'SXP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\n  //   },\n  //   token: serializedTokens.sxp,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 270,\n  //   lpSymbol: 'INJ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\n  //   },\n  //   token: serializedTokens.inj,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 269,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\n  //   },\n  //   token: serializedTokens.fil,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 268,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\n  //   },\n  //   token: serializedTokens.uni,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 267,\n  //   lpSymbol: 'YFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\n  //   },\n  //   token: serializedTokens.yfi,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 266,\n  //   lpSymbol: 'ATOM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\n  //   },\n  //   token: serializedTokens.atom,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 265,\n  //   lpSymbol: 'XRP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\n  //   },\n  //   token: serializedTokens.xrp,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 264,\n  //   lpSymbol: 'USDT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n  //   },\n  //   token: serializedTokens.usdt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 263,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\n  //   },\n  //   token: serializedTokens.alpha,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 262,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\n  //   },\n  //   token: serializedTokens.btcb,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 261,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n  //   },\n  //   token: serializedTokens.eth,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 260,\n  //   lpSymbol: 'XVS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\n  //   },\n  //   token: serializedTokens.xvs,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 259,\n  //   lpSymbol: 'TWT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\n  //   },\n  //   token: serializedTokens.twt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 258,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n  //   },\n  //   token: serializedTokens.usdt,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 257,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\n  //   },\n  //   token: serializedTokens.link,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 256,\n  //   lpSymbol: 'EOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\n  //   },\n  //   token: serializedTokens.eos,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 255,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\n  //   },\n  //   token: serializedTokens.dot,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 254,\n  //   lpSymbol: 'BAND-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\n  //   },\n  //   token: serializedTokens.band,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 253,\n  //   lpSymbol: 'ADA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\n  //   },\n  //   token: serializedTokens.ada,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // /**\n  //  * V2 farms, set to be removed once unstaked\n  //  */\n  // {\n  //   pid: 139,\n  //   lpSymbol: 'CAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\n  //   },\n  //   token: serializedTokens.cake,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 250,\n  //   lpSymbol: 'τBTC-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\n  //   },\n  //   token: serializedTokens.τbtc,\n  //   quoteToken: serializedTokens.btcb,\n  // },\n  // {\n  //   pid: 193,\n  //   lpSymbol: 'SWINGBY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\n  //   },\n  //   token: serializedTokens.swingby,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 249,\n  //   lpSymbol: 'XED-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\n  //   },\n  //   token: serializedTokens.xed,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 248,\n  //   lpSymbol: 'HAKKA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\n  //   },\n  //   token: serializedTokens.hakka,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 247,\n  //   lpSymbol: 'CGG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\n  //   },\n  //   token: serializedTokens.cgg,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 246,\n  //   lpSymbol: 'SUTER-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\n  //   },\n  //   token: serializedTokens.suter,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 245,\n  //   lpSymbol: 'bROOBEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\n  //   },\n  //   token: serializedTokens.broobee,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 244,\n  //   lpSymbol: 'HZN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\n  //   },\n  //   token: serializedTokens.hzn,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 243,\n  //   lpSymbol: 'ALPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\n  //   },\n  //   token: serializedTokens.alpa,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 242,\n  //   lpSymbol: 'PERL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\n  //   },\n  //   token: serializedTokens.perl,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 241,\n  //   lpSymbol: 'TLM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\n  //   },\n  //   token: serializedTokens.tlm,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 240,\n  //   lpSymbol: 'JGN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\n  //   },\n  //   token: serializedTokens.jgn,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 239,\n  //   lpSymbol: 'EPS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\n  //   },\n  //   token: serializedTokens.eps,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 238,\n  //   lpSymbol: 'ARPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\n  //   },\n  //   token: serializedTokens.arpa,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 237,\n  //   lpSymbol: 'ITAM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\n  //   },\n  //   token: serializedTokens.itam,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 236,\n  //   lpSymbol: 'BONDLY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\n  //   },\n  //   token: serializedTokens.bondly,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 235,\n  //   lpSymbol: 'TKO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\n  //   },\n  //   token: serializedTokens.tko,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 234,\n  //   lpSymbol: 'APYS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\n  //   },\n  //   token: serializedTokens.apys,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 233,\n  //   lpSymbol: 'HOO-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\n  //   },\n  //   token: serializedTokens.hoo,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 232,\n  //   lpSymbol: 'ODDZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\n  //   },\n  //   token: serializedTokens.oddz,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 231,\n  //   lpSymbol: 'EASY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\n  //   },\n  //   token: serializedTokens.easy,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 230,\n  //   lpSymbol: 'NRV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\n  //   },\n  //   token: serializedTokens.nrv,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 229,\n  //   lpSymbol: 'DEGO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\n  //   },\n  //   token: serializedTokens.dego,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 228,\n  //   lpSymbol: 'GUM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\n  //   },\n  //   token: serializedTokens.gum,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 227,\n  //   lpSymbol: 'pBTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\n  //   },\n  //   token: serializedTokens.pbtc,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 226,\n  //   lpSymbol: 'DFT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\n  //   },\n  //   token: serializedTokens.dft,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 225,\n  //   lpSymbol: 'SWTH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\n  //   },\n  //   token: serializedTokens.swth,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 224,\n  //   lpSymbol: 'LIEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\n  //   },\n  //   token: serializedTokens.lien,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 223,\n  //   lpSymbol: 'ZIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\n  //   },\n  //   token: serializedTokens.zil,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 222,\n  //   lpSymbol: 'pCWS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe3D941e74141311436F82523817EBaa26462967d',\n  //   },\n  //   token: serializedTokens.pcws,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 221,\n  //   lpSymbol: 'bBADGER-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\n  //   },\n  //   token: serializedTokens.bbadger,\n  //   quoteToken: serializedTokens.btcb,\n  // },\n  // {\n  //   pid: 220,\n  //   lpSymbol: 'bDIGG-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\n  //   },\n  //   token: serializedTokens.bdigg,\n  //   quoteToken: serializedTokens.btcb,\n  // },\n  // {\n  //   pid: 219,\n  //   lpSymbol: 'LTO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\n  //   },\n  //   token: serializedTokens.lto,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 218,\n  //   lpSymbol: 'MIR-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\n  //   },\n  //   token: serializedTokens.mir,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 217,\n  //   lpSymbol: 'TRADE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\n  //   },\n  //   token: serializedTokens.trade,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 216,\n  //   lpSymbol: 'DUSK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\n  //   },\n  //   token: serializedTokens.dusk,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 215,\n  //   lpSymbol: 'BIFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\n  //   },\n  //   token: serializedTokens.bifi,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 214,\n  //   lpSymbol: 'TXL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\n  //   },\n  //   token: serializedTokens.txl,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 213,\n  //   lpSymbol: 'COS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\n  //   },\n  //   token: serializedTokens.cos,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 212,\n  //   lpSymbol: 'BUNNY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\n  //   },\n  //   token: serializedTokens.bunny,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 211,\n  //   lpSymbol: 'ALICE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\n  //   },\n  //   token: serializedTokens.alice,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 210,\n  //   lpSymbol: 'FOR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\n  //   },\n  //   token: serializedTokens.for,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 209,\n  //   lpSymbol: 'BUX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\n  //   },\n  //   token: serializedTokens.bux,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 208,\n  //   lpSymbol: 'NULS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\n  //   },\n  //   token: serializedTokens.nuls,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 207,\n  //   lpSymbol: 'BELT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\n  //   },\n  //   token: serializedTokens.belt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 206,\n  //   lpSymbol: 'RAMP-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\n  //   },\n  //   token: serializedTokens.ramp,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 205,\n  //   lpSymbol: 'BFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\n  //   },\n  //   token: serializedTokens.bfi,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 204,\n  //   lpSymbol: 'DEXE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\n  //   },\n  //   token: serializedTokens.dexe,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 203,\n  //   lpSymbol: 'BEL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\n  //   },\n  //   token: serializedTokens.bel,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 202,\n  //   lpSymbol: 'TPT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\n  //   },\n  //   token: serializedTokens.tpt,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 201,\n  //   lpSymbol: 'WATCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\n  //   },\n  //   token: serializedTokens.watch,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 200,\n  //   lpSymbol: 'xMARK-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\n  //   },\n  //   token: serializedTokens.xmark,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 199,\n  //   lpSymbol: 'bMXX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\n  //   },\n  //   token: serializedTokens.bmxx,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 198,\n  //   lpSymbol: 'IOTX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\n  //   },\n  //   token: serializedTokens.iotx,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 197,\n  //   lpSymbol: 'BOR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\n  //   },\n  //   token: serializedTokens.bor,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 196,\n  //   lpSymbol: 'bOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\n  //   },\n  //   token: serializedTokens.bopen,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 195,\n  //   lpSymbol: 'SUSHI-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\n  //   },\n  //   token: serializedTokens.sushi,\n  //   quoteToken: serializedTokens.eth,\n  // },\n  // {\n  //   pid: 194,\n  //   lpSymbol: 'DODO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\n  //   },\n  //   token: serializedTokens.dodo,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 192,\n  //   lpSymbol: 'BRY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\n  //   },\n  //   token: serializedTokens.bry,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 191,\n  //   lpSymbol: 'ZEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\n  //   },\n  //   token: serializedTokens.zee,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 190,\n  //   lpSymbol: 'SWGb-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\n  //   },\n  //   token: serializedTokens.swgb,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 189,\n  //   lpSymbol: 'COMP-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\n  //   },\n  //   token: serializedTokens.comp,\n  //   quoteToken: serializedTokens.eth,\n  // },\n  // {\n  //   pid: 188,\n  //   lpSymbol: 'SFP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\n  //   },\n  //   token: serializedTokens.sfp,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 187,\n  //   lpSymbol: 'LINA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\n  //   },\n  //   token: serializedTokens.lina,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 186,\n  //   lpSymbol: 'LIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\n  //   },\n  //   token: serializedTokens.lit,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 185,\n  //   lpSymbol: 'HGET-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\n  //   },\n  //   token: serializedTokens.hget,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 184,\n  //   lpSymbol: 'BDO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\n  //   },\n  //   token: serializedTokens.bdo,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 183,\n  //   lpSymbol: 'EGLD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\n  //   },\n  //   token: serializedTokens.egld,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 182,\n  //   lpSymbol: 'UST-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\n  //   },\n  //   token: serializedTokens.ust,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 181,\n  //   lpSymbol: 'mAMZN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2c065E42B464ef38480778B0624A207A09042481',\n  //   },\n  //   token: serializedTokens.mamzn,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 180,\n  //   lpSymbol: 'mGOOGL-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\n  //   },\n  //   token: serializedTokens.mgoogl,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 179,\n  //   lpSymbol: 'mNFLX-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\n  //   },\n  //   token: serializedTokens.mnflx,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 178,\n  //   lpSymbol: 'mTSLA-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\n  //   },\n  //   token: serializedTokens.mtsla,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 177,\n  //   lpSymbol: 'wSOTE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\n  //   },\n  //   token: serializedTokens.wsote,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 176,\n  //   lpSymbol: 'FRONT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\n  //   },\n  //   token: serializedTokens.front,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 175,\n  //   lpSymbol: 'Helmet-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\n  //   },\n  //   token: serializedTokens.helmet,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 174,\n  //   lpSymbol: 'BTCST-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\n  //   },\n  //   token: serializedTokens.btcst,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 173,\n  //   lpSymbol: 'LTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\n  //   },\n  //   token: serializedTokens.ltc,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 172,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\n  //   },\n  //   token: serializedTokens.usdc,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 171,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\n  //   },\n  //   token: serializedTokens.dai,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 170,\n  //   lpSymbol: 'BSCX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\n  //   },\n  //   token: serializedTokens.bscx,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 169,\n  //   lpSymbol: 'TEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\n  //   },\n  //   token: serializedTokens.ten,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 168,\n  //   lpSymbol: 'bALBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\n  //   },\n  //   token: serializedTokens.balbt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 167,\n  //   lpSymbol: 'REEF-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\n  //   },\n  //   token: serializedTokens.reef,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 166,\n  //   lpSymbol: 'Ditto-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\n  //   },\n  //   token: serializedTokens.ditto,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 165,\n  //   lpSymbol: 'VAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\n  //   },\n  //   token: serializedTokens.vai,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 164,\n  //   lpSymbol: 'BLK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\n  //   },\n  //   token: serializedTokens.blink,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 163,\n  //   lpSymbol: 'UNFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\n  //   },\n  //   token: serializedTokens.unfi,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 162,\n  //   lpSymbol: 'HARD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\n  //   },\n  //   token: serializedTokens.hard,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 161,\n  //   lpSymbol: 'CTK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\n  //   },\n  //   token: serializedTokens.ctk,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 160,\n  //   lpSymbol: 'SXP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\n  //   },\n  //   token: serializedTokens.sxp,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 159,\n  //   lpSymbol: 'INJ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\n  //   },\n  //   token: serializedTokens.inj,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 158,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\n  //   },\n  //   token: serializedTokens.fil,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 157,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\n  //   },\n  //   token: serializedTokens.uni,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 156,\n  //   lpSymbol: 'YFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\n  //   },\n  //   token: serializedTokens.yfi,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 155,\n  //   lpSymbol: 'YFII-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\n  //   },\n  //   token: serializedTokens.yfii,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 154,\n  //   lpSymbol: 'ATOM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\n  //   },\n  //   token: serializedTokens.atom,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 153,\n  //   lpSymbol: 'XRP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\n  //   },\n  //   token: serializedTokens.xrp,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 152,\n  //   lpSymbol: 'USDT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\n  //   },\n  //   token: serializedTokens.usdt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 151,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\n  //   },\n  //   token: serializedTokens.alpha,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 150,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\n  //   },\n  //   token: serializedTokens.btcb,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 149,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\n  //   },\n  //   token: serializedTokens.eth,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 148,\n  //   lpSymbol: 'XVS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\n  //   },\n  //   token: serializedTokens.xvs,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 147,\n  //   lpSymbol: 'TWT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\n  //   },\n  //   token: serializedTokens.twt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 146,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\n  //   },\n  //   token: serializedTokens.usdt,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 145,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\n  //   },\n  //   token: serializedTokens.link,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 144,\n  //   lpSymbol: 'EOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x082A80b3a55BD3B320a16678784186a979882b21',\n  //   },\n  //   token: serializedTokens.eos,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 143,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\n  //   },\n  //   token: serializedTokens.dot,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 142,\n  //   lpSymbol: 'BAND-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x473390697036E7611a670575eA9141583471fF47',\n  //   },\n  //   token: serializedTokens.band,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 141,\n  //   lpSymbol: 'ADA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\n  //   },\n  //   token: serializedTokens.ada,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 140,\n  //   lpSymbol: 'BUSD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\n  //   },\n  //   token: serializedTokens.busd,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // /**\n  //  * All farms below here are from v1 and are to be set to 0x\n  //  */\n  // {\n  //   pid: 1,\n  //   lpSymbol: 'CAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n  //     56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n  //   },\n  //   token: serializedTokens.cake,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 136,\n  //   lpSymbol: 'τBTC-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\n  //   },\n  //   token: serializedTokens.τbtc,\n  //   quoteToken: serializedTokens.btcb,\n  // },\n  // {\n  //   pid: 76,\n  //   lpSymbol: 'SWINGBY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\n  //   },\n  //   token: serializedTokens.swingby,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 135,\n  //   lpSymbol: 'XED-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\n  //   },\n  //   token: serializedTokens.xed,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 134,\n  //   lpSymbol: 'HAKKA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\n  //   },\n  //   token: serializedTokens.hakka,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 133,\n  //   lpSymbol: 'CGG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\n  //   },\n  //   token: serializedTokens.cgg,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 132,\n  //   lpSymbol: 'SUTER-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\n  //   },\n  //   token: serializedTokens.suter,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 131,\n  //   lpSymbol: 'bROOBEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\n  //   },\n  //   token: serializedTokens.broobee,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 130,\n  //   lpSymbol: 'HZN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\n  //   },\n  //   token: serializedTokens.hzn,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 129,\n  //   lpSymbol: 'ALPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\n  //   },\n  //   token: serializedTokens.alpa,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 128,\n  //   lpSymbol: 'PERL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\n  //   },\n  //   token: serializedTokens.perl,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 127,\n  //   lpSymbol: 'TLM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\n  //   },\n  //   token: serializedTokens.tlm,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 125,\n  //   lpSymbol: 'JGN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x890479844484D67e34B99e1BBc1468231b254c08',\n  //   },\n  //   token: serializedTokens.jgn,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 124,\n  //   lpSymbol: 'EPS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\n  //   },\n  //   token: serializedTokens.eps,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 123,\n  //   lpSymbol: 'ARPA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\n  //   },\n  //   token: serializedTokens.arpa,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 122,\n  //   lpSymbol: 'ITAM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\n  //   },\n  //   token: serializedTokens.itam,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 121,\n  //   lpSymbol: 'BONDLY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\n  //   },\n  //   token: serializedTokens.bondly,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 120,\n  //   lpSymbol: 'TKO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\n  //   },\n  //   token: serializedTokens.tko,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 119,\n  //   lpSymbol: 'APYS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\n  //   },\n  //   token: serializedTokens.apys,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 118,\n  //   lpSymbol: 'HOO-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\n  //   },\n  //   token: serializedTokens.hoo,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 117,\n  //   lpSymbol: 'ODDZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x61376b56ff33c618b115131712a4138f98810a6a',\n  //   },\n  //   token: serializedTokens.oddz,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 116,\n  //   lpSymbol: 'EASY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\n  //   },\n  //   token: serializedTokens.easy,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 115,\n  //   lpSymbol: 'NRV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\n  //   },\n  //   token: serializedTokens.nrv,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 114,\n  //   lpSymbol: 'DEGO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\n  //   },\n  //   token: serializedTokens.dego,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 113,\n  //   lpSymbol: 'GUM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\n  //   },\n  //   token: serializedTokens.gum,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 112,\n  //   lpSymbol: 'pBTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\n  //   },\n  //   token: serializedTokens.pbtc,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 111,\n  //   lpSymbol: 'DFT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\n  //   },\n  //   token: serializedTokens.dft,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 110,\n  //   lpSymbol: 'SWTH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\n  //   },\n  //   token: serializedTokens.swth,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 109,\n  //   lpSymbol: 'LIEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcd14855150335AAE984aa6D281E090c27035C692',\n  //   },\n  //   token: serializedTokens.lien,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 108,\n  //   lpSymbol: 'ZIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\n  //   },\n  //   token: serializedTokens.zil,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 107,\n  //   lpSymbol: 'pCWS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\n  //   },\n  //   token: serializedTokens.pcws,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 106,\n  //   lpSymbol: 'bBADGER-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\n  //   },\n  //   token: serializedTokens.bbadger,\n  //   quoteToken: serializedTokens.btcb,\n  // },\n  // {\n  //   pid: 104,\n  //   lpSymbol: 'bDIGG-BTCB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\n  //   },\n  //   token: serializedTokens.bdigg,\n  //   quoteToken: serializedTokens.btcb,\n  // },\n  // {\n  //   pid: 103,\n  //   lpSymbol: 'LTO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\n  //   },\n  //   token: serializedTokens.lto,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 102,\n  //   lpSymbol: 'MIR-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\n  //   },\n  //   token: serializedTokens.mir,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 101,\n  //   lpSymbol: 'TRADE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\n  //   },\n  //   token: serializedTokens.trade,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 100,\n  //   lpSymbol: 'DUSK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\n  //   },\n  //   token: serializedTokens.dusk,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 99,\n  //   lpSymbol: 'BIFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\n  //   },\n  //   token: serializedTokens.bifi,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 98,\n  //   lpSymbol: 'TXL-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\n  //   },\n  //   token: serializedTokens.txl,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 97,\n  //   lpSymbol: 'COS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\n  //   },\n  //   token: serializedTokens.cos,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 96,\n  //   lpSymbol: 'BUNNY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\n  //   },\n  //   token: serializedTokens.bunny,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 95,\n  //   lpSymbol: 'ALICE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\n  //   },\n  //   token: serializedTokens.alice,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 94,\n  //   lpSymbol: 'FOR-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\n  //   },\n  //   token: serializedTokens.for,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 93,\n  //   lpSymbol: 'BUX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\n  //   },\n  //   token: serializedTokens.bux,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 92,\n  //   lpSymbol: 'NULS-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\n  //   },\n  //   token: serializedTokens.nuls,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 91,\n  //   lpSymbol: 'NULS-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\n  //   },\n  //   token: serializedTokens.nuls,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 90,\n  //   lpSymbol: 'BELT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\n  //   },\n  //   token: serializedTokens.belt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 89,\n  //   lpSymbol: 'RAMP-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\n  //   },\n  //   token: serializedTokens.ramp,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 88,\n  //   lpSymbol: 'BFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\n  //   },\n  //   token: serializedTokens.bfi,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 87,\n  //   lpSymbol: 'DEXE-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\n  //   },\n  //   token: serializedTokens.dexe,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 86,\n  //   lpSymbol: 'BEL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\n  //   },\n  //   token: serializedTokens.bel,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 85,\n  //   lpSymbol: 'TPT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\n  //   },\n  //   token: serializedTokens.tpt,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 84,\n  //   lpSymbol: 'WATCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\n  //   },\n  //   token: serializedTokens.watch,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 83,\n  //   lpSymbol: 'xMARK-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\n  //   },\n  //   token: serializedTokens.xmark,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 82,\n  //   lpSymbol: 'bMXX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\n  //   },\n  //   token: serializedTokens.bmxx,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 81,\n  //   lpSymbol: 'IOTX-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\n  //   },\n  //   token: serializedTokens.iotx,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 80,\n  //   lpSymbol: 'BOR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\n  //   },\n  //   token: serializedTokens.bor,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 79,\n  //   lpSymbol: 'bOPEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\n  //   },\n  //   token: serializedTokens.bopen,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 78,\n  //   lpSymbol: 'SUSHI-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\n  //   },\n  //   token: serializedTokens.sushi,\n  //   quoteToken: serializedTokens.eth,\n  // },\n  // {\n  //   pid: 77,\n  //   lpSymbol: 'DODO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\n  //   },\n  //   token: serializedTokens.dodo,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 75,\n  //   lpSymbol: 'BRY-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\n  //   },\n  //   token: serializedTokens.bry,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 74,\n  //   lpSymbol: 'ZEE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\n  //   },\n  //   token: serializedTokens.zee,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 73,\n  //   lpSymbol: 'SWGb-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\n  //   },\n  //   token: serializedTokens.swgb,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 72,\n  //   lpSymbol: 'COMP-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x0392957571f28037607c14832d16f8b653edd472',\n  //   },\n  //   token: serializedTokens.comp,\n  //   quoteToken: serializedTokens.eth,\n  // },\n  // {\n  //   pid: 71,\n  //   lpSymbol: 'SFP-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\n  //   },\n  //   token: serializedTokens.sfp,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 70,\n  //   lpSymbol: 'BETH-ETH LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\n  //   },\n  //   token: serializedTokens.beth,\n  //   quoteToken: serializedTokens.eth,\n  // },\n  // {\n  //   pid: 69,\n  //   lpSymbol: 'LINA-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\n  //   },\n  //   token: serializedTokens.lina,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 68,\n  //   lpSymbol: 'LIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\n  //   },\n  //   token: serializedTokens.lit,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 67,\n  //   lpSymbol: 'HGET-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\n  //   },\n  //   token: serializedTokens.hget,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 66,\n  //   lpSymbol: 'BDO-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\n  //   },\n  //   token: serializedTokens.bdo,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 65,\n  //   lpSymbol: 'EGLD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\n  //   },\n  //   token: serializedTokens.egld,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 63,\n  //   lpSymbol: 'UST-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\n  //   },\n  //   token: serializedTokens.ust,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 62,\n  //   lpSymbol: 'mAMZN-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\n  //   },\n  //   token: serializedTokens.mamzn,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 61,\n  //   lpSymbol: 'mGOOGL-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\n  //   },\n  //   token: serializedTokens.mgoogl,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 60,\n  //   lpSymbol: 'mNFLX-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xF609ade3846981825776068a8eD7746470029D1f',\n  //   },\n  //   token: serializedTokens.mnflx,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 59,\n  //   lpSymbol: 'mTSLA-UST LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\n  //   },\n  //   token: serializedTokens.mtsla,\n  //   quoteToken: serializedTokens.ust,\n  // },\n  // {\n  //   pid: 58,\n  //   lpSymbol: 'wSOTE-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\n  //   },\n  //   token: serializedTokens.wsote,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 57,\n  //   lpSymbol: 'FRONT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\n  //   },\n  //   token: serializedTokens.front,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 56,\n  //   lpSymbol: 'Helmet-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\n  //   },\n  //   token: serializedTokens.helmet,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 55,\n  //   lpSymbol: 'BTCST-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n  //   },\n  //   token: serializedTokens.btcst,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 54,\n  //   lpSymbol: 'LTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n  //   },\n  //   token: serializedTokens.ltc,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 53,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n  //   },\n  //   token: serializedTokens.usdc,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 52,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n  //   },\n  //   token: serializedTokens.dai,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 51,\n  //   lpSymbol: 'BSCX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n  //   },\n  //   token: serializedTokens.bscx,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 50,\n  //   lpSymbol: 'TEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n  //   },\n  //   token: serializedTokens.ten,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 49,\n  //   lpSymbol: 'bALBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n  //   },\n  //   token: serializedTokens.balbt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 46,\n  //   lpSymbol: 'OG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n  //   },\n  //   token: serializedTokens.og,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 47,\n  //   lpSymbol: 'ASR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n  //   },\n  //   token: serializedTokens.asr,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 48,\n  //   lpSymbol: 'ATM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n  //   },\n  //   token: serializedTokens.atm,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 45,\n  //   lpSymbol: 'REEF-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n  //   },\n  //   token: serializedTokens.reef,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 44,\n  //   lpSymbol: 'Ditto-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n  //   },\n  //   token: serializedTokens.ditto,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 43,\n  //   lpSymbol: 'JUV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n  //   },\n  //   token: serializedTokens.juv,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 42,\n  //   lpSymbol: 'PSG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n  //   },\n  //   token: serializedTokens.psg,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 39,\n  //   lpSymbol: 'UNFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n  //   },\n  //   token: serializedTokens.unfi,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 41,\n  //   lpSymbol: 'VAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n  //   },\n  //   token: serializedTokens.vai,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 40,\n  //   lpSymbol: 'BLK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n  //   },\n  //   token: serializedTokens.blink,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 37,\n  //   lpSymbol: 'HARD-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n  //   },\n  //   token: serializedTokens.hard,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 2,\n  //   lpSymbol: 'BUSD-BNB LP',\n  //   lpAddresses: {\n  //     97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n  //     56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n  //   },\n  //   token: serializedTokens.busd,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 3,\n  //   lpSymbol: 'ADA-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n  //     56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n  //   },\n  //   token: serializedTokens.ada,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 4,\n  //   lpSymbol: 'BAND-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n  //     56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n  //   },\n  //   token: serializedTokens.band,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 5,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n  //   },\n  //   token: serializedTokens.dot,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 6,\n  //   lpSymbol: 'EOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n  //   },\n  //   token: serializedTokens.eos,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 7,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n  //   },\n  //   token: serializedTokens.link,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 11,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n  //   },\n  //   token: serializedTokens.usdt,\n  //   quoteToken: serializedTokens.busd,\n  // },\n  // {\n  //   pid: 12,\n  //   lpSymbol: 'TWT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n  //   },\n  //   token: serializedTokens.twt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 13,\n  //   lpSymbol: 'XVS-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n  //   },\n  //   token: serializedTokens.xvs,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 14,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\n  //   },\n  //   token: serializedTokens.eth,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 15,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n  //   },\n  //   token: serializedTokens.btcb,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 16,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n  //   },\n  //   token: serializedTokens.alpha,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 17,\n  //   lpSymbol: 'USDT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n  //   },\n  //   token: serializedTokens.usdt,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 18,\n  //   lpSymbol: 'XRP-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n  //   },\n  //   token: serializedTokens.xrp,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 19,\n  //   lpSymbol: 'ATOM-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n  //   },\n  //   token: serializedTokens.atom,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 20,\n  //   lpSymbol: 'YFII-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n  //   },\n  //   token: serializedTokens.yfii,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 21,\n  //   lpSymbol: 'DAI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n  //   },\n  //   token: serializedTokens.dai,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 22,\n  //   lpSymbol: 'XTZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n  //   },\n  //   token: serializedTokens.xtz,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 23,\n  //   lpSymbol: 'BCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n  //   },\n  //   token: serializedTokens.bch,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 24,\n  //   lpSymbol: 'YFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n  //   },\n  //   token: serializedTokens.yfi,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 25,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n  //   },\n  //   token: serializedTokens.uni,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 26,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n  //   },\n  //   token: serializedTokens.fil,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 27,\n  //   lpSymbol: 'INJ-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n  //   },\n  //   token: serializedTokens.inj,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 29,\n  //   lpSymbol: 'USDC-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n  //   },\n  //   token: serializedTokens.usdc,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 30,\n  //   lpSymbol: 'SXP-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n  //   },\n  //   token: serializedTokens.sxp,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 32,\n  //   lpSymbol: 'CTK-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7793870484647a7278907498ec504879d6971EAb',\n  //   },\n  //   token: serializedTokens.ctk,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 34,\n  //   lpSymbol: 'STAX-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n  //   },\n  //   token: serializedTokens.stax,\n  //   quoteToken: serializedTokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 35,\n  //   lpSymbol: 'NAR-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n  //   },\n  //   token: serializedTokens.nar,\n  //   quoteToken: serializedTokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 36,\n  //   lpSymbol: 'NYA-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x2730bf486d658838464a4ef077880998d944252d',\n  //   },\n  //   token: serializedTokens.nya,\n  //   quoteToken: serializedTokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 38,\n  //   lpSymbol: 'bROOBEE-CAKE LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n  //   },\n  //   token: serializedTokens.broobee,\n  //   quoteToken: serializedTokens.cake,\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 8,\n  //   lpSymbol: 'BAKE-BNB Bakery LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n  //   },\n  //   token: serializedTokens.bake,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 9,\n  //   lpSymbol: 'BURGER-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n  //   },\n  //   token: serializedTokens.burger,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n  // {\n  //   pid: 10,\n  //   lpSymbol: 'BAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n  //   },\n  //   token: serializedTokens.bake,\n  //   quoteToken: serializedTokens.wbnb,\n  // },\n]\n\nexport default farms\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport React, { useState } from 'react'\n\nexport const FAST_INTERVAL = 10000\nexport const SLOW_INTERVAL = 60000\n\nconst createRefreshContext = (interval: number) => {\n  const RefreshContext = React.createContext(0)\n  return {\n    Context: RefreshContext,\n    Provider: ({ children }) => {\n      const [count, setCount] = useState(0)\n\n      useInterval(\n        () => {\n          setCount((c) => c + 1)\n        },\n        useIsWindowVisible ? interval : null,\n        false,\n      )\n\n      return <RefreshContext.Provider value={count}>{children}</RefreshContext.Provider>\n    },\n  }\n}\n\nexport const SlowRefresh = createRefreshContext(SLOW_INTERVAL)\nexport const FastRefresh = createRefreshContext(FAST_INTERVAL)\n\nconst RefreshContextProvider = ({ children }) => {\n  return (\n    <SlowRefresh.Provider>\n      <FastRefresh.Provider>{children}</FastRefresh.Provider>\n    </SlowRefresh.Provider>\n  )\n}\n\nexport { RefreshContextProvider }\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","import { useContext } from 'react'\nimport { FastRefresh, SlowRefresh } from 'contexts/RefreshContext'\n\nexport const useFastFresh = () => {\n  return useContext(FastRefresh.Context)\n}\nexport const useSlowFresh = () => {\n  return useContext(SlowRefresh.Context)\n}\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (CAKE yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTargetRoi(event.currentTarget.value)\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"number\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  value={roiUSD}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'DENA',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState, Profile } from 'state/types'\nimport { NftToken } from 'state/nftMarket/types'\nimport { FetchStatus } from 'config/constants/types'\nimport { getProfile, getProfileAvatar, getUsername } from './helpers'\n\nexport const initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: false,\n  hasRegistered: false,\n  data: null,\n  profileAvatars: {},\n}\n\nexport const fetchProfile = createAsyncThunk<{ hasRegistered: boolean; profile?: Profile }, string>(\n  'profile/fetchProfile',\n  async (account) => {\n    const { hasRegistered, profile } = await getProfile(account)\n    return { hasRegistered, profile }\n  },\n)\n\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: NftToken; hasRegistered: boolean }, string>(\n  'profile/fetchProfileAvatar',\n  async (account) => {\n    const { nft, hasRegistered } = await getProfileAvatar(account)\n    return { account, nft, hasRegistered }\n  },\n)\n\nexport const fetchProfileUsername = createAsyncThunk<\n  { account: string; username: string },\n  { account: string; hasRegistered: boolean }\n>('profile/fetchProfileUsername', async ({ account, hasRegistered }) => {\n  if (!hasRegistered) {\n    return { account, username: '' }\n  }\n  const username = await getUsername(account)\n  return { account, username }\n})\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchProfile.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchProfile.fulfilled, (state, action) => {\n      const { hasRegistered, profile } = action.payload\n\n      state.isInitialized = true\n      state.isLoading = false\n      state.hasRegistered = hasRegistered\n      state.data = profile\n    })\n    builder.addCase(fetchProfile.rejected, (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    })\n    builder.addCase(fetchProfileUsername.pending, (state, action) => {\n      const { account } = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          usernameFetchStatus: FetchStatus.Fetching,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          hasRegistered: false,\n          username: null,\n          nft: null,\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\n          // just in case I set isFetchingAvatar will be Fetched.Fetching at this point to avoid refetching\n          usernameFetchStatus: FetchStatus.Fetching,\n          avatarFetchStatus: FetchStatus.Fetched,\n        }\n      }\n    })\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\n      const { account, username } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username,\n          usernameFetchStatus: FetchStatus.Fetched,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username,\n          nft: null,\n          hasRegistered: true,\n          usernameFetchStatus: FetchStatus.Fetched,\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\n          // just in case I set isFetchingAvatar will be FetchStatus.Fetched at this point to avoid refetching\n          avatarFetchStatus: FetchStatus.Fetched,\n        }\n      }\n    })\n    builder.addCase(fetchProfileUsername.rejected, (state, action) => {\n      const { account } = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username: '',\n          usernameFetchStatus: FetchStatus.Fetched,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          hasRegistered: false,\n          username: '',\n          nft: null,\n          usernameFetchStatus: FetchStatus.Fetched,\n          avatarFetchStatus: FetchStatus.Fetched,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.pending, (state, action) => {\n      const account = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          hasRegistered: false,\n          avatarFetchStatus: FetchStatus.Fetching,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft: null,\n          hasRegistered: false,\n          usernameFetchStatus: FetchStatus.Idle,\n          avatarFetchStatus: FetchStatus.Fetching,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\n      const { account, nft, hasRegistered } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft,\n          hasRegistered,\n          avatarFetchStatus: FetchStatus.Fetched,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft,\n          hasRegistered,\n          usernameFetchStatus: FetchStatus.Idle,\n          avatarFetchStatus: FetchStatus.Fetched,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.rejected, (state, action) => {\n      const account = action.meta.arg\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft: null,\n          hasRegistered: false,\n          avatarFetchStatus: FetchStatus.Fetched,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft: null,\n          hasRegistered: false,\n          usernameFetchStatus: FetchStatus.Idle,\n          avatarFetchStatus: FetchStatus.Fetched,\n        }\n      }\n    })\n  },\n})\n\n// Actions\nexport const { profileClear, addPoints } = profileSlice.actions\n\nexport default profileSlice.reducer\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { useCallback } from 'react'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\nimport { clearUserStates } from '../utils/clearUserStates'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { chainId, activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    deactivate()\n    clearUserStates(dispatch, chainId)\n  }, [deactivate, dispatch, chainId])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import * as Sentry from '@sentry/react'\nimport { Dispatch } from '@reduxjs/toolkit'\nimport { connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { profileClear } from '../state/profile'\nimport { resetUserNftState } from '../state/nftMarket/reducer'\nimport { connectorsByName } from './web3React'\nimport { clearAllTransactions } from '../state/transactions/actions'\n\nexport const clearUserStates = (dispatch: Dispatch<any>, chainId: number) => {\n  dispatch(profileClear())\n  dispatch(resetUserNftState())\n  Sentry.configureScope((scope) => scope.setUser(null))\n  // This localStorage key is set by @web3-react/walletconnect-connector\n  if (window.localStorage.getItem('walletconnect')) {\n    connectorsByName.walletconnect.close()\n    connectorsByName.walletconnect.walletConnectProvider = null\n  }\n  window.localStorage.removeItem(connectorLocalStorageKey)\n  if (chainId) {\n    dispatch(clearAllTransactions({ chainId }))\n  }\n}\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { BNB_ADDRESS } from './constants'\n\nconst MIN_VALUE_DISPLAYED = 0.001\n\nexport const getTimeWindowChange = (lineChartData) => {\n  if (lineChartData.length > 0) {\n    const firstValue = lineChartData.find(({ value }) => !!value && value > 0)?.value ?? 0\n    const lastValue = lineChartData[lineChartData.length - 1].value\n    const changeValue = lastValue - firstValue\n\n    return {\n      changeValue:\n        changeValue > 0 ? Math.max(changeValue, MIN_VALUE_DISPLAYED) : Math.min(changeValue, MIN_VALUE_DISPLAYED * -1),\n      changePercentage: ((changeValue / firstValue) * 100).toFixed(2),\n    }\n  }\n\n  return {\n    changeValue: 0,\n    changePercentage: 0,\n  }\n}\n\nexport const getTokenAddress = (tokenAddress: undefined | string) => {\n  if (!tokenAddress) {\n    return ''\n  }\n  const lowerCaseAddress = tokenAddress.toLowerCase()\n  if (lowerCaseAddress === 'bnb') {\n    return BNB_ADDRESS\n  }\n\n  return lowerCaseAddress\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport tokens from 'config/constants/tokens'\nimport { FAST_INTERVAL, SLOW_INTERVAL } from 'contexts/RefreshContext'\nimport { ethers } from 'ethers'\nimport useSWR from 'swr'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { useCake, useTokenContract } from './useContract'\nimport { useSWRContract } from './useSWRContract'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { account } = useWeb3React()\n\n  const contract = useTokenContract(tokenAddress, false)\n  const { data, status, ...rest } = useSWRContract(\n    account\n      ? {\n          contract,\n          methodName: 'balanceOf',\n          params: [account],\n        }\n      : null,\n    {\n      refreshInterval: FAST_INTERVAL,\n    },\n  )\n\n  return {\n    ...rest,\n    fetchStatus: status,\n    balance: data ? new BigNumber(data.toString()) : BIG_ZERO,\n  }\n}\n\nexport const useTotalSupply = () => {\n  const cakeContract = useCake()\n  const { data } = useSWRContract([cakeContract, 'totalSupply'], {\n    refreshInterval: SLOW_INTERVAL,\n  })\n\n  return data ? new BigNumber(data.toString()) : null\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const contract = useTokenContract(tokenAddress, false)\n  const { data } = useSWRContract([contract, 'balanceOf', ['0x000000000000000000000000000000000000dEaD']], {\n    refreshInterval: SLOW_INTERVAL,\n  })\n\n  return data ? new BigNumber(data.toString()) : BIG_ZERO\n}\n\nexport const useGetBnbBalance = () => {\n  const { account } = useWeb3React()\n  const { status, data, mutate } = useSWR([account, 'bnbBalance'], async () => {\n    return simpleRpcProvider.getBalance(account)\n  })\n\n  return { balance: data || ethers.constants.Zero, fetchStatus: status, refresh: mutate }\n}\n\nexport const useGetCakeBalance = () => {\n  const { balance, fetchStatus } = useTokenBalance(tokens.cake.address)\n\n  // TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\n  return { balance: ethers.BigNumber.from(balance.toString()), fetchStatus }\n}\n\nexport const useGetNrtBalance = () => {\n  const { balance, fetchStatus } = useTokenBalance(tokens.nrt.address)\n\n  // TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\n  return { balance: ethers.BigNumber.from(balance.toString()), fetchStatus }\n}\n\nexport default useTokenBalance\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (\n  connector: AbstractConnector,\n  provider: any,\n  account: string,\n  message: string,\n): Promise<string> => {\n  if (window.BinanceChain && connector instanceof BscConnector) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'Gladiators',\n  description:\n    'Gladiators brings 3D NFTs to Binance Smart Chain. Trade, earn, win crypto and have with our massive 3D ecosystem on the most popular decentralized platform.',\n  image: 'https://gladiators.finance/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  let basePath\n  if (path.startsWith('/swap')) {\n    basePath = '/swap'\n  } else if (path.startsWith('/add')) {\n    basePath = '/add'\n  } else if (path.startsWith('/remove')) {\n    basePath = '/remove'\n  } else if (path.startsWith('/teams')) {\n    basePath = '/teams'\n  } else if (path.startsWith('/voting/proposal') && path !== '/voting/proposal/create') {\n    basePath = '/voting/proposal'\n  } else {\n    basePath = path\n  }\n\n  switch (basePath) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('Gladiators')}`,\n      }\n    case '/swap':\n      return {\n        title: `${t('Exchange')} | ${t('Gladiators')}`,\n      }\n    case '/add':\n      return {\n        title: `${t('Add Liquidity')} | ${t('Gladiators')}`,\n      }\n    case '/remove':\n      return {\n        title: `${t('Remove Liquidity')} | ${t('Gladiators')}`,\n      }\n    case '/liquidity':\n      return {\n        title: `${t('Liquidity')} | ${t('Gladiators')}`,\n      }\n    case '/find':\n      return {\n        title: `${t('Import Pool')} | ${t('Gladiators')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('Gladiators')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('Gladiators')}`,\n      }\n    case '/prediction/leaderboard':\n      return {\n        title: `${t('Leaderboard')} | ${t('Gladiators')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('Gladiators')}`,\n      }\n    case '/farms/auction':\n      return {\n        title: `${t('Farm Auctions')} | ${t('Gladiators')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('Gladiators')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('Gladiators')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('Gladiators')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('Gladiators')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('Gladiators')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('Gladiators')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('Gladiators')}`,\n      }\n    case '/voting':\n      return {\n        title: `${t('Voting')} | ${t('Gladiators')}`,\n      }\n    case '/voting/proposal':\n      return {\n        title: `${t('Proposals')} | ${t('Gladiators')}`,\n      }\n    case '/voting/proposal/create':\n      return {\n        title: `${t('Make a Proposal')} | ${t('Gladiators')}`,\n      }\n    case '/info':\n      return {\n        title: `${t('Overview')} | ${t('Gladiators Info & Analytics')}`,\n        description: 'View statistics for Pancakeswap exchanges.',\n      }\n    case '/info/pools':\n      return {\n        title: `${t('Pools')} | ${t('Gladiators Info & Analytics')}`,\n        description: 'View statistics for Pancakeswap exchanges.',\n      }\n    case '/info/tokens':\n      return {\n        title: `${t('Pools')} | ${t('Gladiators Info & Analytics')}`,\n        description: 'View statistics for Pancakeswap exchanges.',\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { useNrtBusdPrice } from 'hooks/useBUSDPrice'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport const PageMeta: React.FC<{ symbol?: string }> = ({ symbol }) => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const nrtPriceUsd = useNrtBusdPrice()\n  const nrtPriceUsdDisplay = nrtPriceUsd ? `$${nrtPriceUsd.toFixed(3)}` : '...'\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  let pageTitle = nrtPriceUsdDisplay ? [title, nrtPriceUsdDisplay].join(' - ') : title\n  if (symbol) {\n    pageTitle = [symbol, title].join(' - ')\n  }\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\n  symbol?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, symbol, ...props }) => {\n  return (\n    <>\n      <PageMeta symbol={symbol} />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { isAddress } from 'utils'\nimport { useAppDispatch } from 'state'\nimport usePreviousValue from 'hooks/usePreviousValue'\nimport { getAchievements } from 'state/achievements/helpers'\nimport { FetchStatus } from 'config/constants/types'\nimport { State, ProfileState, Achievement } from '../types'\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\nimport { getProfile, GetProfileResponse } from './helpers'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchProfile(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useProfileForAddress = (address: string) => {\n  const [profileState, setProfileState] = useState<{ profile: GetProfileResponse; isFetching: boolean }>({\n    profile: null,\n    isFetching: true,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      try {\n        const profile = await getProfile(address)\n        setProfileState({ profile, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch profile for address ${address}`, error)\n        setProfileState({ profile: null, isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!profileState.isFetching && !profileState.profile)) {\n      fetchProfileForAddress()\n    }\n  }, [profileState, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setProfileState({ profile: null, isFetching: true })\n  }, [address])\n\n  return profileState\n}\n\nexport const useAchievementsForAddress = (address: string) => {\n  const [state, setState] = useState<{ achievements: Achievement[]; isFetching: boolean }>({\n    achievements: [],\n    isFetching: false,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      setState({ achievements: [], isFetching: true })\n      try {\n        const achievements = await getAchievements(address)\n        setState({ achievements, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch achievements for address ${address}`, error)\n        setState({ achievements: [], isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!state.isFetching && !state.achievements)) {\n      fetchProfileForAddress()\n    }\n  }, [state, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setState({ achievements: [], isFetching: true })\n  }, [address])\n\n  return state\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\nexport const useGetProfileAvatar = (account: string) => {\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\n  const { username, nft, hasRegistered, usernameFetchStatus, avatarFetchStatus } = profileAvatar || {}\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    if (!nft && avatarFetchStatus !== FetchStatus.Fetched && address) {\n      dispatch(fetchProfileAvatar(account))\n    }\n\n    if (\n      !username &&\n      avatarFetchStatus === FetchStatus.Fetched &&\n      usernameFetchStatus !== FetchStatus.Fetched &&\n      address\n    ) {\n      dispatch(fetchProfileUsername({ account, hasRegistered }))\n    }\n  }, [account, nft, username, hasRegistered, avatarFetchStatus, usernameFetchStatus, dispatch])\n\n  return { username, nft, usernameFetchStatus, avatarFetchStatus }\n}\n","export const MINIMUM_SEARCH_CHARACTERS = 2\n\nexport const WEEKS_IN_YEAR = 52.1429\n\nexport const TOTAL_FEE = 0.0025\nexport const LP_HOLDERS_FEE = 0.0017\nexport const TREASURY_FEE = 0.0003\nexport const BUYBACK_FEE = 0.0005\n\nexport const PCS_V2_START = 1619136000 // April 23, 2021, 12:00:00 AM\nexport const ONE_DAY_UNIX = 86400 // 24h * 60m * 60s\nexport const ONE_HOUR_SECONDS = 3600\n\nexport const ITEMS_PER_INFO_TABLE_PAGE = 10\n\n// These tokens are either incorrectly priced or have some other issues that spoil the query data\n// None of them present any interest as they have almost 0 daily trade volume\nexport const TOKEN_BLACKLIST = [\n  // These ones are copied from v1 info\n  '0x495c7f3a713870f68f8b418b355c085dfdc412c3',\n  '0xc3761eb917cd790b30dad99f6cc5b4ff93c4f9ea',\n  '0xe31debd7abff90b06bca21010dd860d8701fd901',\n  '0xfc989fbb6b3024de5ca0144dc23c18a063942ac1',\n  '0xe40fc6ff5f2895b44268fd2e1a421e07f567e007',\n  '0xfd158609228b43aa380140b46fff3cdf9ad315de',\n  '0xc00af6212fcf0e6fd3143e692ccd4191dc308bea',\n  '0x205969b3ad459f7eba0dee07231a6357183d3fb6',\n  '0x0bd67d358636fd7b0597724aa4f20beedbf3073a',\n  '0xedf5d2a561e8a3cb5a846fbce24d2ccd88f50075',\n  '0x702b0789a3d4dade1688a0c8b7d944e5ba80fc30',\n  '0x041929a760d7049edaef0db246fa76ec975e90cc',\n  '0xba098df8c6409669f5e6ec971ac02cd5982ac108',\n  '0x1bbed115afe9e8d6e9255f18ef10d43ce6608d94',\n  '0xe99512305bf42745fae78003428dcaf662afb35d',\n  '0xbE609EAcbFca10F6E5504D39E3B113F808389056',\n  '0x847daf9dfdc22d5c61c4a857ec8733ef5950e82e',\n  '0xdbf8913dfe14536c0dae5dd06805afb2731f7e7b',\n  // These ones are newly found\n  '0xF1D50dB2C40b63D2c598e2A808d1871a40b1E653',\n  '0x4269e4090ff9dfc99d8846eb0d42e67f01c3ac8b',\n]\n","import { ethers, Contract, Overrides } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  overrides: Overrides = {},\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n    ...overrides,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  const gasPrice = getGasPrice()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst PartnerTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"warning\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Promoted')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, PartnerTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true\n  }\n\n  return document.visibilityState === 'visible'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible() {\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible())\n    }\n\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n    }\n  }, [setIsVisible])\n\n  return isVisible\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [\n  process.env.REACT_APP_NODE_1,\n  process.env.REACT_APP_NODE_2,\n  process.env.REACT_APP_NODE_3,\n  // process.env.REACT_APP_NODE_4,\n]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { Address, Images } from '../types'\n\nexport enum CollectionKey {\n  GLADIATORS = 'gladiators',\n}\n\ntype Collection = {\n  name: string\n  address: Address\n}\n\nexport type Collections = {\n  [key in CollectionKey]: Collection\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type Nft = {\n  id?: number | string\n  name: string\n  description: string\n  images: NftImages\n  video?: {\n    webm: string\n    mp4: string\n  }\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  attributes?: any\n}\n\nexport type Nfts = {\n  [key in CollectionKey]: Nft[]\n}\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport QuestionHelper from '../../QuestionHelper'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserSlippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text>{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t(\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\n            )}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(10)\n            }}\n            variant={userSlippageTolerance === 10 ? 'primary' : 'light'}\n          >\n            0.1%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'light'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'light'}\n          >\n            1.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\n              />\n            </Box>\n            <Text color=\"text\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </Text>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Flex alignItems=\"center\">\n          <Text>{t('Tx deadline (mins)')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex>\n          <Box width=\"52px\" mt=\"4px\">\n            <Input\n              scale=\"sm\"\n              color={deadlineError ? 'red' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString())\n              }}\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setShowExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({ setShowConfirmExpertModal, setShowExpertModeAcknowledgement }) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setShowExpertModeAcknowledgement(false)\n            }\n          }\n        }}\n      >\n        {t('Turn On Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import React from 'react'\nimport { Flex, Button, Text } from '@pancakeswap/uikit'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport { GAS_PRICE_GWEI, GAS_PRICE } from 'state/user/hooks/helpers'\nimport { useGasPriceManager } from 'state/user/hooks'\n\nconst GasSettings = () => {\n  const { t } = useTranslation()\n  const [gasPrice, setGasPrice] = useGasPriceManager()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex mb=\"12px\" alignItems=\"center\">\n        <Text>{t('Default Transaction Speed (GWEI)')}</Text>\n        <QuestionHelper\n          text={t(\n            'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees',\n          )}\n          placement=\"top-start\"\n          ml=\"4px\"\n        />\n      </Flex>\n      <Flex flexWrap=\"wrap\">\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.default)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'light'}\n        >\n          {t('Standard (%gasPrice%)', { gasPrice: GAS_PRICE.default })}\n        </Button>\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.fast)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'light'}\n        >\n          {t('Fast (%gasPrice%)', { gasPrice: GAS_PRICE.fast })}\n        </Button>\n        <Button\n          mr=\"4px\"\n          mt=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.instant)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'light'}\n        >\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.instant })}\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default GasSettings\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, PancakeToggle, Toggle, Flex, Modal, InjectedModalProps, ThemeSwitcher } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserExpertModeAcknowledgementShow,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport useTheme from 'hooks/useTheme'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\nimport GasSettings from './GasSettings'\n\nconst ScrollableContainer = styled(Flex)`\n  flex-direction: column;\n  max-height: 400px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [showExpertModeAcknowledgement, setShowExpertModeAcknowledgement] = useUserExpertModeAcknowledgementShow()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n  const { theme, isDark, toggleTheme } = useTheme()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setShowExpertModeAcknowledgement={setShowExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (!showExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '420px' }}\n      color=\"white\"\n    >\n      <ScrollableContainer>\n        <Flex pb=\"24px\" flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Global')}\n          </Text>\n          {/* <Flex justifyContent=\"space-between\">\n            <Text mb=\"24px\">{t('Dark mode')}</Text>\n            <ThemeSwitcher isDark={isDark} toggleTheme={toggleTheme} />\n          </Flex> */}\n          <GasSettings />\n        </Flex>\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Swaps & Liquidity')}\n          </Text>\n          <TransactionSettings />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Expert Mode')}</Text>\n            <QuestionHelper\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Disable Multihops')}</Text>\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} placement=\"top-start\" ml=\"4px\" />\n          </Flex>\n          <Toggle\n            id=\"toggle-disable-multihop-button\"\n            checked={singleHopOnly}\n            scale=\"md\"\n            onChange={() => {\n              setSingleHopOnly(!singleHopOnly)\n            }}\n          />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Flippy sounds')}</Text>\n            <QuestionHelper\n              text={t('Fun sounds to make a truly immersive pancake-flipping trading experience')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle checked={audioPlay} onChange={toggleSetAudioMode} scale=\"md\" />\n        </Flex>\n      </ScrollableContainer>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Flex, IconButton, CogIcon, useModal } from '@pancakeswap/uikit'\nimport SettingsModal from './SettingsModal'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\" id=\"open-settings-dialog-button\">\n        <CogIcon height={24} width={24} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'components/Toast'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from 'components/Toast'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  background: #eeeaf4 !important;\n  color: #000;\n  input {\n    color: #000;\n    &::placeholder {\n      color: #000;\n    }\n  }\n  div {\n    color: #000;\n  }\n  svg {\n    fill: #000;\n  }\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  background: #eeeaf4 !important;\n  color: #000;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  overflow: hidden;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\" color=\"#000\">\n                {translatedLabel}\n              </Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency\n                    ? t('Balance: %balance%', { balance: selectedCurrencyBalance?.toSignificant(6) ?? t('Loading') })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import Cookies from 'js-cookie'\nimport { Profile } from 'state/types'\nimport { GladiatorProfile } from 'config/abi/types/GladiatorProfile'\nimport profileABI from 'config/abi/gladiatorProfile.json'\nimport { getTeam } from 'state/teams/helpers'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getNftApi } from 'state/nftMarket/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { getGladiatorProfileAddress } from 'utils/addressHelpers'\nimport { API_PROFILE } from 'config/constants/endpoints'\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst transformProfileResponse = (\n  profileResponse: Awaited<ReturnType<GladiatorProfile['getUserProfile']>>,\n): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: collectionAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: userId.toNumber(),\n    points: numberPoints.toNumber(),\n    teamId: teamId.toNumber(),\n    tokenId: tokenId.toNumber(),\n    collectionAddress,\n    isActive,\n  }\n}\n\nexport const getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${API_PROFILE}/users/${address.toLowerCase()}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Intended to be used for getting a profile avatar\n */\nexport const getProfileAvatar = async (address: string) => {\n  try {\n    const profileCalls = ['hasRegistered', 'getUserProfile'].map((method) => {\n      return { address: getGladiatorProfileAddress(), name: method, params: [address] }\n    })\n    const profileCallsResult = await multicallv2(profileABI, profileCalls, { requireSuccess: false })\n    const [[hasRegistered], profileResponse] = profileCallsResult\n\n    if (!hasRegistered) {\n      return null\n    }\n\n    const { tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\n\n    let nft = null\n    if (isActive) {\n      const apiRes = await getNftApi(collectionAddress, tokenId.toString())\n\n      nft = {\n        tokenId: apiRes.tokenId,\n        name: apiRes.name,\n        collectionName: apiRes.collection.name,\n        collectionAddress,\n        description: apiRes.description,\n        attributes: apiRes.attributes,\n        createdAt: apiRes.createdAt,\n        updatedAt: apiRes.updatedAt,\n        image: {\n          original: apiRes.image?.original,\n          thumbnail: apiRes.image?.thumbnail,\n        },\n      }\n    }\n\n    return { nft, hasRegistered }\n  } catch {\n    return { nft: null, hasRegistered: false }\n  }\n}\n\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const profileCalls = ['hasRegistered', 'getUserProfile'].map((method) => {\n      return { address: getGladiatorProfileAddress(), name: method, params: [address] }\n    })\n    const profileCallsResult = await multicallv2(profileABI, profileCalls, { requireSuccess: false })\n    const [[hasRegistered], profileResponse] = profileCallsResult\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const { userId, points, teamId, tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n    let nftToken: NftToken\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    if (isActive) {\n      const apiRes = await getNftApi(collectionAddress, tokenId.toString())\n\n      nftToken = {\n        tokenId: apiRes.tokenId,\n        name: apiRes.name,\n        collectionName: apiRes.collection.name,\n        collectionAddress,\n        description: apiRes.description,\n        attributes: apiRes.attributes,\n        createdAt: apiRes.createdAt,\n        updatedAt: apiRes.updatedAt,\n        image: {\n          original: apiRes.image?.original,\n          thumbnail: apiRes.image?.thumbnail,\n        },\n      }\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `${nftToken.image.thumbnail}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      collectionAddress,\n      isActive,\n      nft: nftToken,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (e) {\n    console.error(e)\n    return null\n  }\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n  {\n    id: '515010001',\n    type: 'participation',\n    title: 'Lottie',\n    description: 'Joined a round in the early days of Lottery V2',\n    badge: 'lottie.svg',\n  },\n  {\n    id: '515020001',\n    type: 'participation',\n    title: 'Lucky',\n    description: 'Won a round in the early days of Lottery V2',\n    badge: 'lucky.svg',\n  },\n  {\n    id: '515030001',\n    type: 'participation',\n    title: 'Baller',\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\n    badge: 'baller.svg',\n  },\n  {\n    id: '516010001',\n    type: 'participation',\n    title: '1 Year',\n    description: 'Joined PancakeSwap during the first year of our journey!',\n    badge: '1-year.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubstrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> substring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubstrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubstrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","/* eslint-disable no-param-reassign */\nimport { FetchStatus } from 'config/constants/types'\nimport { Contract } from 'ethers'\nimport { FormatTypes } from 'ethers/lib/utils'\nimport useSWR, { Middleware, SWRConfiguration, KeyedMutator } from 'swr'\n\ndeclare module 'swr' {\n  interface SWRResponse<Data = any, Error = any> {\n    data?: Data\n    error?: Error\n    mutate: KeyedMutator<Data>\n    isValidating: boolean\n    // Add global fetchStatus to SWRResponse\n    status: FetchStatus\n  }\n}\n\nexport const fetchStatusMiddleware: Middleware = (useSWRNext) => {\n  return (key, fetcher, config) => {\n    const swr = useSWRNext(key, fetcher, config)\n    let status = FetchStatus.Idle\n\n    if (!swr.isValidating && !swr.error && !swr.data) {\n      status = FetchStatus.Idle\n    } else if (swr.isValidating && !swr.error && !swr.data) {\n      status = FetchStatus.Fetching\n    } else if (swr.data) {\n      status = FetchStatus.Fetched\n    } else if (swr.error && !swr.data) {\n      status = FetchStatus.Failed\n    }\n\n    return {\n      status,\n      ...swr,\n    }\n  }\n}\n\ntype MaybeContract<C extends Contract = Contract> = C | null | undefined\ntype ContractMethodName<C extends Contract = Contract> = keyof C['callStatic'] & string\n\ntype ContractMethodParams<\n  C extends Contract = Contract,\n  N extends ContractMethodName<C> = ContractMethodName<C>,\n> = Parameters<C['callStatic'][N]>\n\ntype UseSWRContractArrayKey<C extends Contract = Contract, N extends ContractMethodName<C> = any> =\n  | [MaybeContract<C>, N, ContractMethodParams<C, N>]\n  | [MaybeContract<C>, N]\n\nexport type UseSWRContractObjectKey<\n  C extends Contract = Contract,\n  N extends ContractMethodName<C> = ContractMethodName<C>,\n> = {\n  contract: MaybeContract<C>\n  methodName: N\n  params?: ContractMethodParams<C, N>\n}\n\ntype UseSWRContractSerializeKeys = {\n  address: string\n  interfaceFormat: string[]\n  methodName: string\n  callData: string\n}\n\nconst getContractKey = <T extends Contract = Contract, N extends ContractMethodName<T> = any>(\n  key?: UseSWRContractKey<T, N> | null,\n) => {\n  if (Array.isArray(key)) {\n    const [contract, methodName, params] = key || []\n    return {\n      contract,\n      methodName,\n      params,\n    }\n  }\n  return key\n}\n\nconst serializesContractKey = <T extends Contract = Contract>(\n  key?: UseSWRContractKey<T> | null,\n): UseSWRContractSerializeKeys | null => {\n  const { contract, methodName, params } = getContractKey(key) || {}\n  const serializedKeys =\n    key && contract && methodName\n      ? {\n          address: contract.address,\n          interfaceFormat: contract.interface.format(FormatTypes.full) as string[],\n          methodName,\n          callData: contract.interface.encodeFunctionData(methodName, params),\n        }\n      : null\n  return serializedKeys\n}\n\nexport type UseSWRContractKey<T extends Contract = Contract, N extends ContractMethodName<T> = any> =\n  | UseSWRContractArrayKey<T, N>\n  | UseSWRContractObjectKey<T, N>\nexport function useSWRContract<\n  Error = any,\n  T extends Contract = Contract,\n  N extends ContractMethodName<T> = ContractMethodName<T>,\n  // until typescript is upgrade\n  Data = any,\n  // Data = Awaited<ReturnType<T['functions'][N]>>,\n>(key?: UseSWRContractKey<T, N> | null, config: SWRConfiguration<Data, Error> = {}) {\n  const { contract, methodName, params } = getContractKey(key) || {}\n  const serializedKeys = serializesContractKey(key)\n\n  return useSWR<Data, Error>(\n    serializedKeys,\n    async () => {\n      if (!contract || !methodName) return null\n      if (!params) return contract[methodName]()\n      return contract[methodName](...params)\n    },\n    config,\n  )\n}\n\nexport const immutableMiddleware: Middleware = (useSWRNext) => (key, fetcher, config) => {\n  config.revalidateOnFocus = false\n  config.revalidateIfStale = false\n  config.revalidateOnReconnect = false\n  return useSWRNext(key, fetcher, config)\n}\n\n// dev only\nexport const loggerMiddleware: Middleware = (useSWRNext) => {\n  return (key, fetcher, config) => {\n    // Add logger to the original fetcher.\n    const extendedFetcher = fetcher\n      ? (...args: unknown[]) => {\n          console.debug('SWR Request:', key)\n          return fetcher(...args)\n        }\n      : null\n\n    // Execute the hook with the new fetcher.\n    return useSWRNext(key, extendedFetcher, config)\n  }\n}\n","import { ChainId, Currency, currencyEquals, JSBI, Price } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport tokens, { mainnetTokens, testnetTokens} from 'config/constants/tokens'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst BUSD_MAINNET = {\n  56: mainnetTokens.busd,\n  97: testnetTokens.busd\n}\n\nconst { wbnb: WBNB } = tokens\n\n/**\n * Returns the price in BUSD of the input currency\n * @param currency currency to compute the BUSD price of\n */\n export default function useBUSDPrice(currency?: Currency): Price | undefined {\n  const { chainId } = useActiveWeb3React()\n  const wrapped = wrappedCurrency(currency, chainId)\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\n    () => [\n      [chainId && wrapped && currencyEquals(WBNB, wrapped) ? undefined : currency, chainId ? WBNB : undefined],\n      [wrapped?.equals(BUSD_MAINNET[chainId]) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET[chainId] : undefined],\n      [chainId ? WBNB : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET[chainId] : undefined],\n    ],\n    [chainId, currency, wrapped],\n  )\n  const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs)\n\n  return useMemo(() => {\n    if (!currency || !wrapped || !chainId) {\n      return undefined\n    }\n    // handle weth/eth\n    if (wrapped.equals(WBNB)) {\n      if (busdPair) {\n        const price = busdPair.priceOf(WBNB)\n        return new Price(currency, BUSD_MAINNET[chainId], price.denominator, price.numerator)\n      }\n      return undefined\n    }\n    // handle busd\n    if (wrapped.equals(BUSD_MAINNET[chainId])) {\n      return new Price(BUSD_MAINNET[chainId], BUSD_MAINNET[chainId], '1', '1')\n    }\n\n    const ethPairETHAmount = ethPair?.reserveOf(WBNB)\n    const ethPairETHBUSDValue: JSBI =\n      ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WBNB).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\n\n    // all other tokens\n    // first try the busd pair\n    if (\n      busdPairState === PairState.EXISTS &&\n      busdPair &&\n      busdPair.reserveOf(BUSD_MAINNET[chainId]).greaterThan(ethPairETHBUSDValue)\n    ) {\n      const price = busdPair.priceOf(wrapped)\n      return new Price(currency, BUSD_MAINNET[chainId], price.denominator, price.numerator)\n    }\n    if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\n      if (busdEthPair.reserveOf(BUSD_MAINNET[chainId]).greaterThan('0') && ethPair.reserveOf(WBNB).greaterThan('0')) {\n        const ethBusdPrice = busdEthPair.priceOf(BUSD_MAINNET[chainId])\n        const currencyEthPrice = ethPair.priceOf(WBNB)\n        const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert()\n        return new Price(currency, BUSD_MAINNET[chainId], busdPrice.denominator, busdPrice.numerator)\n      }\n    }\n\n    return undefined\n  }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped])\n}\n\nexport const useCakeBusdPrice = (): Price | undefined => {\n  const cakeBusdPrice = useBUSDPrice(tokens.cake)\n\n  return cakeBusdPrice\n}\n\nexport const useNrtBusdPrice = (): Price | undefined => {\n  const nrtBusdPrice = useBUSDPrice(tokens.nrt)\n\n  return nrtBusdPrice\n}\nexport const useDenaPrice = (): Price | undefined => {\n  const denaPrice = useBUSDPrice(tokens.dena)\n  return denaPrice\n}\nexport const useBNBBusdPrice = (): Price | undefined => {\n  const bnbBusdPrice = useBUSDPrice(tokens.wbnb)\n  return bnbBusdPrice\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" placement=\"top-start\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { IPFS_GATEWAY } from '../index'\nimport { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Hermeses',\n    description: \"Meaning 'god of good luck', a skillful set of fighters in ancient Rome\",\n    images: {\n      lg: 'hermes-lg.png',\n      md: 'hermes-md.png',\n      sm: 'hermes-sm.png',\n      alt: 'hermes-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/hermes.png`,\n    },\n    background: 'hermes-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Flammas',\n    description: \"Meaning 'the flame' was one of the most formidable and capable gladiators\",\n    images: {\n      lg: 'flamma-lg.png',\n      md: 'flamma-md.png',\n      sm: 'flamma-sm.png',\n      alt: 'flamma-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/flamma.png`,\n    },\n    background: 'flamma-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Spartacus',\n    description: 'From the city of Sparta was the most famous gladiators of Ancient Rome',\n    images: {\n      lg: 'spartacus-lg.png',\n      md: 'spartacus-md.png',\n      sm: 'spartacus-sm.png',\n      alt: 'spartacus-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/spartacus.png`,\n    },\n    background: 'spartacus-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { useEffect, useState } from 'react'\n\nexport type Status = 'idle' | 'loading' | 'ready' | 'error'\nexport type ScriptElt = HTMLScriptElement | null\n\nfunction useScript(src: string): Status {\n  const [status, setStatus] = useState<Status>(src ? 'loading' : 'idle')\n\n  useEffect(\n    () => {\n      if (!src) {\n        setStatus('idle')\n        return\n      }\n\n      // Fetch existing script element by src\n      // It may have been added by another instance of this hook\n      let script: ScriptElt = document.querySelector(`script[src=\"${src}\"]`)\n\n      if (!script) {\n        // Create script\n        script = document.createElement('script')\n        script.src = src\n        script.async = true\n        script.setAttribute('data-status', 'loading')\n        // Add script to document body\n        document.body.appendChild(script)\n\n        // Store status in attribute on script\n        // This can be read by other instances of this hook\n        const setAttributeFromEvent = (event: Event) => {\n          script?.setAttribute('data-status', event.type === 'load' ? 'ready' : 'error')\n        }\n\n        script.addEventListener('load', setAttributeFromEvent)\n        script.addEventListener('error', setAttributeFromEvent)\n      } else {\n        // Grab existing script status from attribute and set to state.\n        setStatus(script.getAttribute('data-status') as Status)\n      }\n\n      // Script event handler to update status in state\n      // Note: Even if the script already exists we still need to add\n      // event handlers to update the state for *this* hook instance.\n      const setStateFromEvent = (event: Event) => {\n        setStatus(event.type === 'load' ? 'ready' : 'error')\n      }\n\n      // Add event listeners\n      script.addEventListener('load', setStateFromEvent)\n      script.addEventListener('error', setStateFromEvent)\n\n      // Remove event listeners on cleanup\n      // eslint-disable-next-line consistent-return\n      return () => {\n        if (script) {\n          script.removeEventListener('load', setStateFromEvent)\n          script.removeEventListener('error', setStateFromEvent)\n        }\n      }\n    },\n    [src], // Only re-run effect if script src changes\n  )\n\n  return status\n}\n\nexport default useScript\n","import { Box, Flex, FlexProps, Link, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useScript from 'hooks/useScript'\nimport React, { useEffect, useRef } from 'react'\nimport { DefaultTheme, useTheme } from 'styled-components'\n\n/**\n * When the script tag is injected the TradingView object is not immediately\n * available on the window. So we listen for when it gets set\n */\nconst tradingViewListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'TradingView', {\n      configurable: true,\n      set(value) {\n        this.tv = value\n        resolve(value)\n      },\n    }),\n  )\n\nconst initializeTradingView = (TradingViewObj: any, theme: DefaultTheme, localeCode: string, opts: any) => {\n  let timezone = 'Etc/UTC'\n  try {\n    timezone = Intl.DateTimeFormat().resolvedOptions().timeZone\n  } catch (e) {\n    // noop\n  }\n  /* eslint-disable new-cap */\n  /* eslint-disable no-new */\n  // @ts-ignore\n  return new TradingViewObj.widget({\n    // Advanced Chart Widget uses the legacy embedding scheme,\n    // an id property should be specified in the settings object\n    id: opts.container_id,\n    autosize: true,\n    height: '100%',\n    symbol: 'BINANCE:BNBUSDT',\n    interval: '5',\n    timezone,\n    theme: theme.isDark ? 'dark' : 'light',\n    style: '1',\n    locale: localeCode,\n    toolbar_bg: '#f1f3f6',\n    enable_publishing: false,\n    allow_symbol_change: true,\n    hide_side_toolbar: false,\n    enabled_features: ['header_fullscreen_button'],\n    ...opts,\n  })\n}\n\ninterface TradingViewProps {\n  id: string\n  symbol: string\n}\n\nconst TradingView = ({ id, symbol }: TradingViewProps) => {\n  const { currentLanguage } = useTranslation()\n  const theme = useTheme()\n  const widgetRef = useRef<any>()\n  const { isMobile } = useMatchBreakpoints()\n\n  useScript('https://s3.tradingview.com/tv.js')\n\n  useEffect(() => {\n    const opts: any = {\n      container_id: id,\n      symbol,\n    }\n\n    if (isMobile) {\n      opts.hide_side_toolbar = true\n    }\n\n    // @ts-ignore\n    if (window.tv) {\n      // @ts-ignore\n      widgetRef.current = initializeTradingView(window.tv, theme, currentLanguage.code, opts)\n    } else {\n      tradingViewListener().then((tv) => {\n        widgetRef.current = initializeTradingView(tv, theme, currentLanguage.code, opts)\n      })\n    }\n\n    // Ignore isMobile to avoid re-render TV\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [theme, currentLanguage, id, symbol])\n\n  return (\n    <Box overflow=\"hidden\" className=\"tradingview_container\">\n      <div id={id} />\n    </Box>\n  )\n}\n\nexport function useTradingViewEvent({\n  id,\n  onNoDataEvent,\n  onLoadedEvent,\n}: {\n  id?: string\n  onNoDataEvent?: () => void\n  onLoadedEvent?: () => void\n}) {\n  useEffect(() => {\n    const onNoDataAvailable = (event: MessageEvent) => {\n      const payload = event.data\n\n      if (payload.name === 'tv-widget-no-data') {\n        if (id && payload.frameElementId === id) {\n          onNoDataEvent?.()\n        }\n      }\n      if (payload.name === 'tv-widget-load') {\n        if (id && payload.frameElementId === id) {\n          onLoadedEvent?.()\n        }\n      }\n    }\n    window.addEventListener('message', onNoDataAvailable)\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      window.removeEventListener('message', onNoDataAvailable)\n    }\n  }, [id, onNoDataEvent, onLoadedEvent])\n}\n\n// Required to link to TradingView website for the widget\nexport const TradingViewLabel = ({ symbol, ...props }: { symbol: string } & FlexProps) => {\n  const { t } = useTranslation()\n  return (\n    <Flex alignItems=\"center\" px=\"24px\" {...props}>\n      <Link fontSize=\"14px\" href={`https://www.tradingview.com/symbols/${symbol}`} external>\n        BNB {t('Chart')}\n      </Link>\n      <Text fontSize=\"14px\" ml=\"4px\">\n        {t('by')} TradingView\n      </Text>\n    </Flex>\n  )\n}\n\nexport default TradingView\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/gladiatorProfile.json'\nimport { getGladiatorProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getGladiatorProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","// BNB Address\nconst BNB_ADDRESS = '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c'\n\nexport { BNB_ADDRESS }\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1400px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FetchStatus } from 'config/constants/types'\nimport isEmpty from 'lodash/isEmpty'\nimport { gladiatorCollectiblesAddress } from 'views/Nft/market/constants'\nimport {\n  combineApiAndSgResponseToNftToken,\n  combineCollectionData,\n  fetchNftsFiltered,\n  getCollectionApi,\n  getCollectionsApi,\n  getCollectionSg,\n  getCollectionsSg,\n  getCompleteAccountNftData,\n  getMarketDataForTokenIds,\n  getMetadataWithFallback,\n  getNftsByGladiatorCollectibleIdSg,\n  getNftsFromCollectionApi,\n  getNftsFromDifferentCollectionsApi,\n  getNftsMarketData,\n  getGladiatorCollectiblesAttributesField,\n  getUserActivity,\n} from './helpers'\nimport {\n  ApiCollections,\n  ApiSingleTokenData,\n  Collection,\n  MarketEvent,\n  NftActivityFilter,\n  NftAttribute,\n  NftFilter,\n  NftLocation,\n  NFTMarketInitializationState,\n  NftToken,\n  State,\n  TokenIdWithCollectionAddress,\n  UserNftInitializationState,\n} from './types'\n\nconst initialNftFilterState: NftFilter = {\n  loadingState: FetchStatus.Idle,\n  activeFilters: {},\n  showOnlyOnSale: true,\n  ordering: {\n    field: 'currentAskPrice',\n    direction: 'asc',\n  },\n}\n\nconst initialNftActivityFilterState: NftActivityFilter = {\n  typeFilters: [],\n  collectionFilters: [],\n}\n\nconst initialState: State = {\n  initializationState: NFTMarketInitializationState.UNINITIALIZED,\n  data: {\n    collections: {},\n    nfts: {},\n    filters: {},\n    activityFilters: {},\n    loadingState: {\n      isUpdatingGladiatorCollectibles: false,\n      latestGladiatorCollectiblesUpdateAt: 0,\n    },\n    users: {},\n    user: {\n      userNftsInitializationState: UserNftInitializationState.UNINITIALIZED,\n      nfts: [],\n      activity: {\n        initializationState: UserNftInitializationState.UNINITIALIZED,\n        askOrderHistory: [],\n        buyTradeHistory: [],\n        sellTradeHistory: [],\n      },\n    },\n  },\n}\n\n/**\n * Fetch all collections data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\n */\nexport const fetchCollections = createAsyncThunk<Record<string, Collection>>('nft/fetchCollections', async () => {\n  const [collections, collectionsMarket] = await Promise.all([getCollectionsApi(), getCollectionsSg()])\n  return combineCollectionData(collections?.data ?? [], collectionsMarket)\n})\n\n/**\n * Fetch collection data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\n */\nexport const fetchCollection = createAsyncThunk<Record<string, Collection>, string>(\n  'nft/fetchCollection',\n  async (collectionAddress) => {\n    const [collection, collectionMarket] = await Promise.all([\n      getCollectionApi(collectionAddress),\n      getCollectionSg(collectionAddress),\n    ])\n\n    return combineCollectionData([collection], [collectionMarket])\n  },\n)\n\n/**\n * Fetch all NFT data for a collections by combining data from the API (static metadata)\n * and the Subgraph (dynamic market data)\n * @param collectionAddress\n */\nexport const fetchNftsFromCollections = createAsyncThunk<\n  NftToken[],\n  { collectionAddress: string; page: number; size: number }\n>('nft/fetchNftsFromCollections', async ({ collectionAddress, page, size }) => {\n  try {\n    if (collectionAddress === gladiatorCollectiblesAddress) {\n      // GladiatorCollectibles don't need to pre-fetch \"all nfts\" from the collection\n      // When user visits IndividualNFTPage required nfts will be fetched via bunny id\n      return []\n    }\n\n    const nfts = await getNftsFromCollectionApi(collectionAddress, size, page)\n\n    if (!nfts?.data) {\n      return []\n    }\n\n    const tokenIds = Object.values(nfts.data).map((nft) => nft.tokenId)\n    const nftsMarket = await getMarketDataForTokenIds(collectionAddress, tokenIds)\n\n    return tokenIds.map((id) => {\n      const apiMetadata = nfts.data[id]\n      const marketData = nftsMarket.find((nft) => nft.tokenId === id)\n\n      return {\n        tokenId: id,\n        name: apiMetadata.name,\n        description: apiMetadata.description,\n        collectionName: apiMetadata.collection.name,\n        collectionAddress,\n        image: apiMetadata.image,\n        attributes: apiMetadata.attributes,\n        marketData,\n      }\n    })\n  } catch (error) {\n    console.error(`Failed to fetch collection NFTs for ${collectionAddress}`, error)\n    return []\n  }\n})\n\nexport const filterNftsFromCollection = createAsyncThunk<\n  NftToken[],\n  { collectionAddress: string; nftFilters: Record<string, NftAttribute> }\n>('nft/filterNftsFromCollection', async ({ collectionAddress, nftFilters }) => {\n  try {\n    const attrParams = Object.values(nftFilters).reduce(\n      (accum, attr) => ({\n        ...accum,\n        [attr.traitType]: attr.value,\n      }),\n      {},\n    )\n    if (isEmpty(attrParams)) {\n      return []\n    }\n    const attrFilters = await fetchNftsFiltered(collectionAddress, attrParams)\n\n    // Fetch market data for each token returned\n    const tokenIds = Object.values(attrFilters.data).map((apiToken) => apiToken.tokenId)\n    const marketData = await getNftsMarketData({ tokenId_in: tokenIds, collection: collectionAddress.toLowerCase() })\n\n    const nftTokens: NftToken[] = Object.values(attrFilters.data).map((apiToken) => {\n      const apiTokenMarketData = marketData.find((tokenMarketData) => tokenMarketData.tokenId === apiToken.tokenId)\n\n      return {\n        tokenId: apiToken.tokenId,\n        name: apiToken.name,\n        description: apiToken.description,\n        collectionName: apiToken.collection.name,\n        collectionAddress,\n        image: apiToken.image,\n        attributes: apiToken.attributes,\n        marketData: apiTokenMarketData,\n      }\n    })\n\n    return nftTokens\n  } catch {\n    return []\n  }\n})\n\n/**\n * This action keeps data on the individual GladiatorCollectible page up-to-date. Operation is a twofold\n * 1. Update existing NFTs in the state in case some were sold or got price modified\n * 2. Fetch 30 more NFTs with specified bunny id\n */\nexport const fetchNewPBAndUpdateExisting = createAsyncThunk<\n  NftToken[],\n  {\n    bunnyId: string\n    existingTokensWithGladiatorCollectibleId: string[]\n    allExistingPBTokenIds: string[]\n    existingMetadata: ApiSingleTokenData\n    orderDirection: 'asc' | 'desc'\n  }\n>(\n  'nft/fetchNewPBAndUpdateExisting',\n  async ({ bunnyId, existingTokensWithGladiatorCollectibleId, allExistingPBTokenIds, existingMetadata, orderDirection }) => {\n    try {\n      // 1. Update existing NFTs in the state in case some were sold or got price modified\n      const [updatedNfts, updatedNftsMarket] = await Promise.all([\n        getNftsFromCollectionApi(gladiatorCollectiblesAddress),\n        getMarketDataForTokenIds(gladiatorCollectiblesAddress, allExistingPBTokenIds),\n      ])\n\n      if (!updatedNfts?.data) {\n        return []\n      }\n      const updatedTokens = updatedNftsMarket.map((marketData) => {\n        const apiMetadata = getMetadataWithFallback(updatedNfts.data, marketData.otherId)\n        const attributes = getGladiatorCollectiblesAttributesField(marketData.otherId)\n        return combineApiAndSgResponseToNftToken(apiMetadata, marketData, attributes)\n      })\n\n      // 2. Fetch 30 more NFTs with specified bunny id\n      let newNfts = { data: [existingMetadata] }\n\n      if (!existingMetadata) {\n        newNfts = await getNftsFromCollectionApi(gladiatorCollectiblesAddress)\n      }\n      const nftsMarket = await getNftsByGladiatorCollectibleIdSg(bunnyId, existingTokensWithGladiatorCollectibleId, orderDirection)\n\n      if (!newNfts?.data) {\n        return updatedTokens\n      }\n\n      const moreTokensWithRequestedGladiatorCollectibleId = nftsMarket.map((marketData) => {\n        const apiMetadata = getMetadataWithFallback(newNfts.data, marketData.otherId)\n        const attributes = getGladiatorCollectiblesAttributesField(marketData.otherId)\n        return combineApiAndSgResponseToNftToken(apiMetadata, marketData, attributes)\n      })\n      return [...updatedTokens, ...moreTokensWithRequestedGladiatorCollectibleId]\n    } catch (error) {\n      console.error(`Failed to update GladiatorCollectibles NFTs`, error)\n      return []\n    }\n  },\n)\n\nexport const fetchUserNfts = createAsyncThunk<\n  NftToken[],\n  { account: string; profileNftWithCollectionAddress?: TokenIdWithCollectionAddress; collections: ApiCollections }\n>('nft/fetchUserNfts', async ({ account, profileNftWithCollectionAddress, collections }) => {\n  const completeNftData = await getCompleteAccountNftData(account, collections, profileNftWithCollectionAddress)\n  return completeNftData\n})\n\nexport const updateUserNft = createAsyncThunk<\n  NftToken,\n  { tokenId: string; collectionAddress: string; location?: NftLocation }\n>('nft/updateUserNft', async ({ tokenId, collectionAddress, location = NftLocation.WALLET }) => {\n  const marketDataForNft = await getNftsMarketData({\n    tokenId_in: [tokenId],\n    collection: collectionAddress.toLowerCase(),\n  })\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\n  const completeNftData = { ...metadataForNft[0], location, marketData: marketDataForNft[0] }\n\n  return completeNftData\n})\n\nexport const removeUserNft = createAsyncThunk<string, { tokenId: string }>(\n  'nft/removeUserNft',\n  async ({ tokenId }) => tokenId,\n)\n\nexport const addUserNft = createAsyncThunk<\n  NftToken,\n  { tokenId: string; collectionAddress: string; nftLocation?: NftLocation }\n>('nft/addUserNft', async ({ tokenId, collectionAddress, nftLocation = NftLocation.WALLET }) => {\n  const marketDataForNft = await getNftsMarketData({\n    tokenId_in: [tokenId],\n    collection: collectionAddress.toLowerCase(),\n  })\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\n\n  return {\n    ...metadataForNft[0],\n    location: nftLocation,\n    marketData: marketDataForNft[0],\n  }\n})\n\nexport const fetchUserActivity = createAsyncThunk('nft/fetchUserActivity', async (address: string) => {\n  const userActivity = await getUserActivity(address.toLocaleLowerCase())\n  return userActivity\n})\n\nexport const NftMarket = createSlice({\n  name: 'NftMarket',\n  initialState,\n  reducers: {\n    removeAllFilters: (state, action: PayloadAction<string>) => {\n      state.data.filters[action.payload] = { ...initialNftFilterState }\n      state.data.nfts[action.payload] = []\n    },\n    addActivityTypeFilters: (state, action: PayloadAction<{ collection: string; field: MarketEvent }>) => {\n      if (state.data.activityFilters[action.payload.collection]) {\n        state.data.activityFilters[action.payload.collection].typeFilters.push(action.payload.field)\n      } else {\n        state.data.activityFilters[action.payload.collection] = {\n          ...initialNftActivityFilterState,\n          typeFilters: [action.payload.field],\n        }\n      }\n    },\n    removeActivityTypeFilters: (state, action: PayloadAction<{ collection: string; field: MarketEvent }>) => {\n      if (state.data.activityFilters[action.payload.collection]) {\n        state.data.activityFilters[action.payload.collection].typeFilters = state.data.activityFilters[\n          action.payload.collection\n        ].typeFilters.filter((activeFilter) => activeFilter !== action.payload.field)\n      }\n    },\n    addActivityCollectionFilters: (state, action: PayloadAction<{ collection: string }>) => {\n      if (state.data.activityFilters['']) {\n        state.data.activityFilters[''].collectionFilters.push(action.payload.collection)\n      } else {\n        state.data.activityFilters[''] = {\n          ...initialNftActivityFilterState,\n          collectionFilters: [action.payload.collection],\n        }\n      }\n    },\n    removeActivityCollectionFilters: (state, action: PayloadAction<{ collection: string }>) => {\n      if (state.data.activityFilters['']) {\n        state.data.activityFilters[''].collectionFilters = state.data.activityFilters[''].collectionFilters.filter(\n          (activeFilter) => activeFilter !== action.payload.collection,\n        )\n      }\n    },\n    removeAllActivityCollectionFilters: (state) => {\n      if (state.data.activityFilters['']) {\n        state.data.activityFilters[''].collectionFilters = []\n      }\n    },\n    removeAllActivityFilters: (state, action: PayloadAction<string>) => {\n      state.data.activityFilters[action.payload] = { ...initialNftActivityFilterState }\n    },\n    setOrdering: (state, action: PayloadAction<{ collection: string; field: string; direction: 'asc' | 'desc' }>) => {\n      if (state.data.filters[action.payload.collection]) {\n        state.data.filters[action.payload.collection].ordering = {\n          field: action.payload.field,\n          direction: action.payload.direction,\n        }\n      } else {\n        state.data.filters[action.payload.collection] = {\n          ...initialNftFilterState,\n          ordering: {\n            field: action.payload.field,\n            direction: action.payload.direction,\n          },\n        }\n      }\n    },\n    setShowOnlyOnSale: (state, action: PayloadAction<{ collection: string; showOnlyOnSale: boolean }>) => {\n      if (state.data.filters[action.payload.collection]) {\n        state.data.filters[action.payload.collection].showOnlyOnSale = action.payload.showOnlyOnSale\n      } else {\n        state.data.filters[action.payload.collection] = {\n          ...initialNftFilterState,\n          showOnlyOnSale: action.payload.showOnlyOnSale,\n        }\n      }\n    },\n    resetUserNftState: (state) => {\n      state.data.user = { ...initialState.data.user }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(filterNftsFromCollection.pending, (state, action) => {\n      const { collectionAddress } = action.meta.arg\n      if (state.data.filters[collectionAddress]) {\n        state.data.filters[collectionAddress].loadingState = FetchStatus.Fetching\n      } else {\n        state.data.filters[collectionAddress] = {\n          ...initialNftFilterState,\n          loadingState: FetchStatus.Fetching,\n        }\n      }\n    })\n    builder.addCase(filterNftsFromCollection.fulfilled, (state, action) => {\n      const { collectionAddress, nftFilters } = action.meta.arg\n\n      state.data.filters[collectionAddress] = {\n        ...state.data.filters[collectionAddress],\n        loadingState: FetchStatus.Fetched,\n        activeFilters: nftFilters,\n      }\n      state.data.nfts[collectionAddress] = action.payload\n    })\n\n    builder.addCase(fetchCollection.fulfilled, (state, action) => {\n      state.data.collections = { ...state.data.collections, ...action.payload }\n    })\n    builder.addCase(fetchCollections.fulfilled, (state, action) => {\n      state.data.collections = action.payload\n      state.initializationState = NFTMarketInitializationState.INITIALIZED\n    })\n    builder.addCase(fetchNftsFromCollections.pending, (state, action) => {\n      const { collectionAddress } = action.meta.arg\n      if (state.data.filters[collectionAddress]) {\n        state.data.filters[collectionAddress].loadingState = FetchStatus.Fetching\n      } else {\n        state.data.filters[collectionAddress] = {\n          ...initialNftFilterState,\n          loadingState: FetchStatus.Fetching,\n        }\n      }\n    })\n    builder.addCase(fetchNftsFromCollections.fulfilled, (state, action) => {\n      const { collectionAddress } = action.meta.arg\n      const existingNfts: NftToken[] = state.data.nfts[collectionAddress] ?? []\n      const existingNftsWithoutNewOnes = existingNfts.filter(\n        (nftToken) => !action.payload.find((newToken) => newToken.tokenId === nftToken.tokenId),\n      )\n\n      state.data.filters[collectionAddress] = {\n        ...state.data.filters[collectionAddress],\n        loadingState: FetchStatus.Fetched,\n        activeFilters: {},\n      }\n      state.data.nfts[collectionAddress] = [...existingNftsWithoutNewOnes, ...action.payload]\n    })\n    builder.addCase(fetchNewPBAndUpdateExisting.pending, (state) => {\n      state.data.loadingState.isUpdatingGladiatorCollectibles = true\n    })\n    builder.addCase(fetchNewPBAndUpdateExisting.fulfilled, (state, action) => {\n      if (action.payload.length > 0) {\n        state.data.nfts[gladiatorCollectiblesAddress] = action.payload\n      }\n      state.data.loadingState.isUpdatingGladiatorCollectibles = false\n      state.data.loadingState.latestGladiatorCollectiblesUpdateAt = Date.now()\n    })\n    builder.addCase(fetchNewPBAndUpdateExisting.rejected, (state) => {\n      state.data.loadingState.isUpdatingGladiatorCollectibles = false\n      state.data.loadingState.latestGladiatorCollectiblesUpdateAt = Date.now()\n    })\n    builder.addCase(fetchUserNfts.rejected, (state) => {\n      state.data.user.userNftsInitializationState = UserNftInitializationState.ERROR\n    })\n    builder.addCase(fetchUserNfts.pending, (state) => {\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZING\n    })\n    builder.addCase(fetchUserNfts.fulfilled, (state, action) => {\n      state.data.user.nfts = action.payload\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZED\n    })\n    builder.addCase(updateUserNft.fulfilled, (state, action) => {\n      const userNftsState: NftToken[] = state.data.user.nfts\n      const nftToUpdate = userNftsState.find((nft) => nft.tokenId === action.payload.tokenId)\n      const indexInState = userNftsState.indexOf(nftToUpdate)\n      state.data.user.nfts[indexInState] = action.payload\n    })\n    builder.addCase(removeUserNft.fulfilled, (state, action) => {\n      const copyOfState: NftToken[] = [...state.data.user.nfts]\n      const nftToRemove = copyOfState.find((nft) => nft.tokenId === action.payload)\n      const indexInState = copyOfState.indexOf(nftToRemove)\n      copyOfState.splice(indexInState, 1)\n      state.data.user.nfts = copyOfState\n    })\n    builder.addCase(addUserNft.fulfilled, (state, action) => {\n      state.data.user.nfts = [...state.data.user.nfts, action.payload]\n    })\n    builder.addCase(fetchUserActivity.fulfilled, (state, action) => {\n      state.data.user.activity = { ...action.payload, initializationState: UserNftInitializationState.INITIALIZED }\n    })\n    builder.addCase(fetchUserActivity.rejected, (state) => {\n      state.data.user.activity.initializationState = UserNftInitializationState.ERROR\n    })\n    builder.addCase(fetchUserActivity.pending, (state) => {\n      state.data.user.activity.initializationState = UserNftInitializationState.INITIALIZING\n    })\n  },\n})\n\n// Actions\nexport const {\n  removeAllFilters,\n  removeAllActivityFilters,\n  removeActivityTypeFilters,\n  removeActivityCollectionFilters,\n  removeAllActivityCollectionFilters,\n  addActivityTypeFilters,\n  addActivityCollectionFilters,\n  setOrdering,\n  setShowOnlyOnSale,\n  resetUserNftState,\n} = NftMarket.actions\n\nexport default NftMarket.reducer\n","import { getUnixTime, subDays, subWeeks, startOfMinute } from 'date-fns'\nimport { request } from 'graphql-request'\n\n/**\n * Helper function to get large amount GraphQL subqueries\n * @param queryConstructor constructor function that combines subqueries\n * @param subqueries individual queries\n * @param endpoint GraphQL endpoint\n * @param skipCount how many subqueries to fire at a time\n * @returns\n */\nexport const multiQuery = async (\n  queryConstructor: (subqueries: string[]) => string,\n  subqueries: string[],\n  endpoint: string,\n  skipCount = 1000,\n) => {\n  let fetchedData = {}\n  let allFound = false\n  let skip = 0\n  try {\n    while (!allFound) {\n      let end = subqueries.length\n      if (skip + skipCount < subqueries.length) {\n        end = skip + skipCount\n      }\n      const subqueriesSlice = subqueries.slice(skip, end)\n      // eslint-disable-next-line no-await-in-loop\n      const result = await request(endpoint, queryConstructor(subqueriesSlice))\n      fetchedData = {\n        ...fetchedData,\n        ...result,\n      }\n      allFound = Object.keys(result).length < skipCount || skip + skipCount > subqueries.length\n      skip += skipCount\n    }\n    return fetchedData\n  } catch (error) {\n    console.error('Failed to fetch info data', error)\n    return null\n  }\n}\n\n/**\n * Returns UTC timestamps for 24h ago, 48h ago, 7d ago and 14d ago relative to current date and time\n */\nexport const getDeltaTimestamps = (): [number, number, number, number] => {\n  const utcCurrentTime = getUnixTime(new Date()) * 1000\n  const t24h = getUnixTime(startOfMinute(subDays(utcCurrentTime, 1)))\n  const t48h = getUnixTime(startOfMinute(subDays(utcCurrentTime, 2)))\n  const t7d = getUnixTime(startOfMinute(subWeeks(utcCurrentTime, 1)))\n  const t14d = getUnixTime(startOfMinute(subWeeks(utcCurrentTime, 2)))\n  return [t24h, t48h, t7d, t14d]\n}\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from '@pancakeswap/sdk'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\nconst getImageUrlFromToken = (token: Token) => {\n  const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst LineChartLoaderSVG: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg width=\"100%\" height=\"100%\" preserveAspectRatio=\"none\" viewBox=\"0 0 100 50\" {...props}>\n      <path\n        d=\"M 0 49 C 1 49 1 45 4 47 C 7 49 7 35 11 37 C 13 38 14 32 16 34 C 18 35.6667 20 40 22 39 C 24 38 24 34 26 34 C 27 34 29 39 32 36 C 33 35 34 32 35 32 C 37 32 37 35 39 34 C 40 33 39 29 43 31 C 46 32 45 28 47 30 C 50 32 49 22 51 24 Q 53 26 55 24 C 56 23 56 25 57 26 C 58 27 59 28 60 28 C 63 28 66 17 67 16 C 68 15 69 17 70 16 C 71 15 71 13 74 13 C 76 13 76 14 77 15 C 79 17 80 18 82 18 C 83 18 83 17 84 17 C 87 17 89 24 91 24 C 93 24 95 20 96 17 C 97.6667 13.3333 98 9 101 6\"\n        stroke=\"#7645D9\"\n        strokeWidth=\"0.2\"\n        strokeDasharray=\"156\"\n        strokeDashoffset=\"156\"\n        fill=\"transparent\"\n        opacity=\"0.5\"\n        filter=\"url(#glow)\"\n      >\n        <animate\n          id=\"firstline\"\n          attributeName=\"stroke-dashoffset\"\n          dur=\"2s\"\n          from=\"156\"\n          to=\"-156\"\n          begin=\"0s;firstline.end+0.5s\"\n        />\n      </path>\n      <path\n        d=\"M 0 49 C 1 49 1 45 4 47 C 7 49 7 35 11 37 C 13 38 14 32 16 34 C 18 35.6667 20 40 22 39 C 24 38 24 34 26 34 C 27 34 29 39 32 36 C 33 35 34 32 35 32 C 37 32 37 35 39 34 C 40 33 39 29 43 31 C 46 32 45 28 47 30 C 50 32 49 22 51 24 Q 53 26 55 24 C 56 23 56 25 57 26 C 58 27 59 28 60 28 C 63 28 66 17 67 16 C 68 15 69 17 70 16 C 71 15 71 13 74 13 C 76 13 76 14 77 15 C 79 17 80 18 82 18 C 83 18 83 17 84 17 C 87 17 89 24 91 24 C 93 24 95 20 96 17 C 97.6667 13.3333 98 9 101 6\"\n        stroke=\"#7645D9\"\n        strokeWidth=\"0.2\"\n        strokeDasharray=\"156\"\n        strokeDashoffset=\"156\"\n        fill=\"transparent\"\n        opacity=\"0.5\"\n        filter=\"url(#glow)\"\n      >\n        <animate\n          id=\"secondline\"\n          attributeName=\"stroke-dashoffset\"\n          dur=\"2s\"\n          from=\"156\"\n          to=\"-156\"\n          begin=\"1.3s;secondline.end+0.5s\"\n        />\n      </path>\n      <defs>\n        <filter id=\"glow\">\n          <feGaussianBlur className=\"blur\" result=\"coloredBlur\" stdDeviation=\"4\" />\n          <feMerge>\n            <feMergeNode in=\"coloredBlur\" />\n            <feMergeNode in=\"coloredBlur\" />\n            <feMergeNode in=\"coloredBlur\" />\n            <feMergeNode in=\"SourceGraphic\" />\n          </feMerge>\n        </filter>\n      </defs>\n    </Svg>\n  )\n}\n\nexport default LineChartLoaderSVG\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst BarChartLoaderSVG: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg width=\"100%\" height=\"100%\" viewBox=\"0 0 50 25\" preserveAspectRatio=\"none\" opacity=\"0.1\" {...props}>\n      <rect width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.9s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.9s\"\n        />\n      </rect>\n      <rect x=\"10.222%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.8s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.8s\"\n        />\n      </rect>\n      <rect x=\"20.444%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.7s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.7s\"\n        />\n      </rect>\n      <rect x=\"30.666%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.6s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.6s\"\n        />\n      </rect>\n      <rect x=\"40.888%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.5s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.5s\"\n        />\n      </rect>\n      <rect x=\"51.11%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.4s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.4s\"\n        />\n      </rect>\n      <rect x=\"61.332%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.3s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.3s\"\n        />\n      </rect>\n      <rect x=\"71.554%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.2s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.2s\"\n        />\n      </rect>\n      <rect x=\"81.776%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.1s\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"0.9s\"\n          values=\"85%; 10%; 85%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n          begin=\"-0.1s\"\n        />\n      </rect>\n      <rect x=\"91.998%\" width=\"8%\" fill=\"#1FC7D4\">\n        <animate\n          attributeName=\"height\"\n          dur=\"0.9s\"\n          values=\"15%; 90%; 15%\"\n          keyTimes=\"0; 0.55; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate attributeName=\"y\" dur=\"0.9s\" values=\"85%; 10%; 85%\" keyTimes=\"0; 0.55; 1\" repeatCount=\"indefinite\" />\n      </rect>\n    </Svg>\n  )\n}\n\nexport default BarChartLoaderSVG\n","import React from 'react'\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\n\nconst CandleChartLoaderSVG: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 50\" opacity=\"0.1\" {...props}>\n      <rect width=\"5%\" fill=\"#31D0AA\">\n        <animate\n          attributeName=\"height\"\n          dur=\"2s\"\n          values=\"0%; 40%; 40%; 10%; 10%\"\n          keyTimes=\"0; 0.125; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"2s\"\n          from=\"50%\"\n          to=\"30%\"\n          values=\"30%; 10%; 10%; 25%; 25%\"\n          keyTimes=\"0; 0.125; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"rx\"\n          dur=\"2s\"\n          values=\"0%; 0%; 100%; 100%;\"\n          keyTimes=\"0; 0.6; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"x\"\n          dur=\"2s\"\n          values=\"32.5%; 32.5%; 47.5%; 47.5%;\"\n          keyTimes=\"0; 0.7; 0.8; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"opacity\"\n          dur=\"2s\"\n          values=\"1; 1; 0; 0;\"\n          keyTimes=\"0; 0.75; 0.9; 1\"\n          repeatCount=\"indefinite\"\n        />\n      </rect>\n      <rect width=\"5%\" fill=\"#31D0AA\">\n        <animate\n          attributeName=\"height\"\n          dur=\"2s\"\n          values=\"0%; 0%; 20%; 20%; 10%; 10%\"\n          keyTimes=\"0; 0.125; 0.25; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"2s\"\n          values=\"15%; 15%; 5%; 5%; 25%; 25%\"\n          keyTimes=\"0; 0.125; 0.25; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"rx\"\n          dur=\"2s\"\n          values=\"0%; 0%; 100%; 100%;\"\n          keyTimes=\"0; 0.6; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"x\"\n          dur=\"2s\"\n          values=\"42.5%; 42.5%; 47.5%; 47.5%;\"\n          keyTimes=\"0; 0.7; 0.8; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"opacity\"\n          dur=\"2s\"\n          values=\"1; 1; 0; 0;\"\n          keyTimes=\"0; 0.75; 0.9; 1\"\n          repeatCount=\"indefinite\"\n        />\n      </rect>\n      <rect width=\"5%\" fill=\"#ED4B9E\">\n        <animate\n          attributeName=\"height\"\n          dur=\"2s\"\n          values=\"0%; 0%; 35%; 35%; 10%; 10%\"\n          keyTimes=\"0; 0.25; 0.375; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"2s\"\n          values=\"25%; 25%; 10%; 10%; 25%; 25%\"\n          keyTimes=\"0; 0.25; 0.375; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"rx\"\n          dur=\"2s\"\n          values=\"0%; 0%; 100%; 100%;\"\n          keyTimes=\"0; 0.6; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"x\"\n          dur=\"2s\"\n          values=\"52.5%; 52.5%; 47.5%; 47.5%;\"\n          keyTimes=\"0; 0.7; 0.8; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"opacity\"\n          dur=\"2s\"\n          values=\"1; 1; 0; 0;\"\n          keyTimes=\"0; 0.75; 0.9; 1\"\n          repeatCount=\"indefinite\"\n        />\n      </rect>\n      <rect width=\"5%\" fill=\"#31D0AA\">\n        <animate\n          attributeName=\"height\"\n          dur=\"2s\"\n          values=\"0%; 0%; 35%; 35%; 10%; 10%\"\n          keyTimes=\"0; 0.375; 0.5; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"y\"\n          dur=\"2s\"\n          values=\"15%; 15%; 0%; 0%; 25%; 25%\"\n          keyTimes=\"0; 0.375; 0.5; 0.5; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"rx\"\n          dur=\"2s\"\n          values=\"0%; 0%; 100%; 100%;\"\n          keyTimes=\"0; 0.6; 0.625; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"x\"\n          dur=\"2s\"\n          values=\"62.5%; 62.5%; 47.5%; 47.5%;\"\n          keyTimes=\"0; 0.7; 0.8; 1\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"opacity\"\n          dur=\"2s\"\n          values=\"1; 1; 0; 0;\"\n          keyTimes=\"0; 0.75; 0.9; 1\"\n          repeatCount=\"indefinite\"\n        />\n      </rect>\n    </Svg>\n  )\n}\n\nexport default CandleChartLoaderSVG\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport LineChartLoaderSVG from './LineChartLoaderSVG'\nimport BarChartLoaderSVG from './BarChartLoaderSVG'\nimport CandleChartLoaderSVG from './CandleChartLoaderSVG'\n\nconst LoadingText = styled(Box)`\n  position: absolute;\n  margin-left: auto;\n  margin-right: auto;\n  top: 50%;\n  left: 0;\n  right: 0;\n  text-align: center;\n`\n\nconst LoadingIndicator = styled(Box)`\n  height: 100%;\n  position: relative;\n`\n\nexport const BarChartLoader: React.FC = () => {\n  const { t } = useTranslation()\n  return (\n    <LoadingIndicator>\n      <BarChartLoaderSVG />\n      <LoadingText>\n        <Text color=\"textSubtle\" fontSize=\"20px\">\n          {t('Loading chart data...')}\n        </Text>\n      </LoadingText>\n    </LoadingIndicator>\n  )\n}\n\nexport const LineChartLoader: React.FC = () => {\n  const { t } = useTranslation()\n  return (\n    <LoadingIndicator>\n      <LineChartLoaderSVG />\n      <LoadingText>\n        <Text color=\"textSubtle\" fontSize=\"20px\">\n          {t('Loading chart data...')}\n        </Text>\n      </LoadingText>\n    </LoadingIndicator>\n  )\n}\n\nexport const CandleChartLoader: React.FC = () => {\n  const { t } = useTranslation()\n  return (\n    <LoadingIndicator>\n      <CandleChartLoaderSVG />\n      <LoadingText>\n        <Text color=\"textSubtle\" fontSize=\"20px\">\n          {t('Loading chart data...')}\n        </Text>\n      </LoadingText>\n    </LoadingIndicator>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport { PageMeta } from 'components/Layout/Page'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n  /* background: ${({ theme }) => theme.colors.gradients.bubblegum}; */\n  background: url('/images/bg.png');\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>\n        {children}\n        <Flex flexGrow={1} />\n        <Footer />\n      </StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import { Token, ChainId } from '@pancakeswap/sdk'\nimport tokens from './tokens'\nimport farms from './farms'\nimport { Ifo } from './types'\n\nconst cakeBnbLpToken = new Token(ChainId.MAINNET, farms[1].lpAddresses[ChainId.MAINNET], 18, farms[1].lpSymbol)\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import BigNumber from 'bignumber.js'\nimport { SerializedFarm, DeserializedPool, SerializedPool } from 'state/types'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | DeserializedPool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: SerializedPool): DeserializedPool => {\n  const { totalStaked, stakingLimit, userData, stakingToken, earningToken, ...rest } = pool\n\n  return {\n    ...rest,\n    stakingToken: deserializeToken(stakingToken),\n    earningToken: deserializeToken(earningToken),\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  }\n}\n\nexport const getTokenPricesFromFarm = (farms: SerializedFarm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = farm.quoteToken.address.toLocaleLowerCase()\n    const tokenAddress = farm.token.address.toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteTokenPriceBusd).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.tokenPriceBusd).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\n    const userGraphRound = userGraphData.find(\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\n    )\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\n    return {\n      endTime: nodeRoundData.endTime,\n      status: nodeRoundData.status,\n      lotteryId: nodeRoundData.lotteryId.toString(),\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\n      tickets: userNodeRound.userTickets,\n    }\n  })\n\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = userGraphData\n    .map((graphRound) => graphRound?.lotteryId)\n    .indexOf(lastCombinedDataRound?.lotteryId)\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status.toLowerCase(),\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, LinkExternal, Flex, Svg, Image, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: space-between;\n    flex-direction: row;\n  }\n`\n\nconst BubbleWrapper = styled(Flex)`\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n    transition: background-color 0.2s, opacity 0.2s;\n  }\n  &:hover {\n    svg {\n      opacity: 0.65;\n    }\n  }\n  &:active {\n    svg {\n      opacity: 0.85;\n    }\n  }\n`\n\nconst Footer = () => {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      {/* <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\n        <LinkExternal\n          id=\"ercBridge\"\n          href=\"https://www.binance.org/en/bridge?utm_source=GladiatorsFinance\"\n          ml={[0, 0, '40px']}\n          mt={['20px', '20px', 0]}\n          mb={['8px', '8px', 0]}\n          color=\"white\"\n        >\n          {t('Convert ERC-20 to BEP-20')}\n        </LinkExternal>\n      </Flex> */}\n      {/* <Flex\n        flexGrow={1}\n        alignItems=\"center\"\n        width={['100%', '100%', '100%', 'auto']}\n        justifyContent={['center', 'center', 'center', 'flex-end']}\n      >\n        <BubbleWrapper>\n          <Button\n            id=\"clickExchangeHelp\"\n            as=\"a\"\n            external\n            href=\"https://docs.gladiators.finance/\"\n            variant=\"subtle\"\n          >\n            {t('Need help ?')}\n          </Button>\n          <Svg viewBox=\"0 0 16 16\">\n            <path d=\"M0 16V0C0 0 3 1 6 1C9 1 16 -2 16 3.5C16 10.5 7.5 16 0 16Z\" />\n          </Svg>\n        </BubbleWrapper>\n        <Image src=\"/images/help.svg\" alt=\"Get some help\" width={160} height={108} />\n      </Flex> */}\n    </Wrapper>\n  )\n}\n\nexport default Footer\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address ? `${truncateHash(token.address)}` : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import { Nft } from './types'\nimport { PINATA_CLOUD } from '../../index'\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Gladiator One',\n    description: 'Amazing Gladiator',\n    images: {\n      lg: 'gladiator0-lg.png',\n      md: 'gladiator0-md.png',\n      sm: 'gladiator0-sm.png',\n      ipfs: `${PINATA_CLOUD}/QmSnHzZc6JczFBr8BQEQZQj6GdJJxEZ8sx6Ew7CGbHiD6k/0-gladiator-lg.png`,\n      blur: 'gladiator0-blur.png',\n    },\n    identifier: 'gladiator0',\n    id: 0,\n  },\n  {\n    name: 'Gladiator Two',\n    description: 'Amazing Gladiator Two',\n    images: {\n      lg: 'gladiator1-lg.png',\n      md: 'gladiator1-md.png',\n      sm: 'gladiator1-sm.png',\n      ipfs: `${PINATA_CLOUD}/QmSnHzZc6JczFBr8BQEQZQj6GdJJxEZ8sx6Ew7CGbHiD6k/1-gladiator-lg.png`,\n      blur: 'gladiator1-blur.png',\n    },\n    identifier: 'gladiator1',\n    id: 1,\n  },\n  {\n    name: 'Gladiator Three',\n    description: 'Amazing Gladiator Three',\n    images: {\n      lg: 'gladiator2-lg.png',\n      md: 'gladiator2-md.png',\n      sm: 'gladiator2-sm.png',\n      ipfs: `${PINATA_CLOUD}/QmSnHzZc6JczFBr8BQEQZQj6GdJJxEZ8sx6Ew7CGbHiD6k/2-gladiator-lg.png`,\n      blur: 'gladiator2-blur.png',\n    },\n    identifier: 'gladiator2',\n    id: 2,\n  },\n  {\n    name: 'Gladiator Four',\n    description: 'Amazing Gladiator Four',\n    images: {\n      lg: 'gladiator3-lg.png',\n      md: 'gladiator3-md.png',\n      sm: 'gladiator3-sm.png',\n      ipfs: `${PINATA_CLOUD}/QmSnHzZc6JczFBr8BQEQZQj6GdJJxEZ8sx6Ew7CGbHiD6k/3-gladiator-lg.png`,\n      blur: 'gladiator3-blur.png',\n    },\n    identifier: 'gladiator3',\n    id: 3,\n  }\n]\n\nexport default Nfts\n","import gladiatorsProfileCollectibles from './gladiatorsProfileCollectibles'\nimport { CollectionKey, Nfts } from './types'\n\nconst nfts: Nfts = {\n  [CollectionKey.GLADIATORS]: gladiatorsProfileCollectibles,\n}\n\nexport default nfts\nexport { default as collections } from './collections'\n","import nfts from 'config/constants/nfts'\nimport { IPFS_GATEWAY } from 'config'\nimport collections from 'config/constants/nfts/collections'\nimport { Nft, CollectionKey } from 'config/constants/nfts/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getGladiatorCollectiblesNftAddress = (collectionKey: CollectionKey = CollectionKey.GLADIATORS) => {\n  return getAddress(collections[collectionKey].address)\n}\n\nexport const fetchCachedUriData = async (tokenUrl: string) => {\n  try {\n    const localUriData = localStorage.getItem(tokenUrl)\n\n    if (localUriData) {\n      const data = JSON.parse(localUriData)\n      return data\n    }\n\n    const uriDataResponse = await fetch(tokenUrl)\n\n    if (!uriDataResponse.ok) {\n      throw new Error('Unable to fetch uriData')\n    }\n\n    const uriData = await uriDataResponse.json()\n    localStorage.setItem(tokenUrl, JSON.stringify(uriData))\n    return uriData\n  } catch (error) {\n    console.error(error)\n    return null\n  }\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriData = await fetchCachedUriData(getTokenUrl(tokenUri))\n\n    if (!uriData) {\n      return null\n    }\n\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  return nfts.gladiators.find((nft) => {\n    return uriData.image.includes(nft.identifier)\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { orderBy } from 'lodash'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\nimport ConnectWalletButton from '../../ConnectWalletButton'\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = orderBy(\n    Object.values(allTransactions).filter(isTransactionRecent),\n    'addedTime',\n    'desc',\n  )\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account ? (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      ) : (\n        <ConnectWalletButton />\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ethers } from 'ethers'\nimport { Campaign, TranslatableText } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { useTranslation } from 'contexts/Localization'\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = t('Connect Wallet')\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? t('Invalid pair')\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? t('Enter an amount')\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_A]?.symbol })\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_B]?.symbol })\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../../state'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field, resetMintState } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  useEffect(() => {\n    if (!currencyIdA && !currencyIdB) {\n      dispatch(resetMintState())\n    }\n  }, [dispatch, currencyIdA, currencyIdB])\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n          gasPrice,\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else if (currencyIdB) {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport {\n  Bet,\n  LedgerData,\n  HistoryFilter,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeRound,\n  BetPosition,\n  PredictionUser,\n  LeaderboardFilter,\n  State,\n} from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport { FetchStatus } from 'config/constants/types'\nimport {\n  FUTURE_ROUND_COUNT,\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\n  PAST_ROUND_COUNT,\n  ROUNDS_PER_PAGE,\n  ROUND_BUFFER,\n} from './config'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n  fetchUsersRoundsLength,\n  fetchUserRounds,\n  getPredictionUsers,\n  transformUserResponse,\n  LEADERBOARD_RESULTS_PER_PAGE,\n  getPredictionUser,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  intervalSeconds: 300,\n  minBetAmount: '10000000000000',\n  bufferSeconds: 60,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: [],\n  totalHistory: 0,\n  currentHistoryPage: 1,\n  hasHistoryLoaded: false,\n  ledgers: {},\n  claimableStatuses: {},\n  leaderboard: {\n    selectedAddress: null,\n    loadingState: FetchStatus.Idle,\n    filters: {\n      address: null,\n      orderBy: 'netBNB',\n      timePeriod: 'all',\n    },\n    skip: 0,\n    hasMoreResults: true,\n    addressResults: {},\n    results: [],\n  },\n}\n\n// Thunks\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalSeconds'\n  | 'minBetAmount'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n  | 'bufferSeconds'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/initialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    // console.log(\"marketDatamarketDatamarketData\", marketData)\n    const epochs =\n      marketData.currentEpoch > PAST_ROUND_COUNT\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n        : [marketData.currentEpoch]\n\n    //\n      \n    // console.log(\"epochsepochs epochsepochs epochsepochs\", epochs)\n    // Round data\n    // console.log(\"before roundsResponse\")\n    const roundsResponse = await getRoundsData(epochs)\n    // console.log(\"after roundsResponse\")\n    // console.log(\"roundsResponseroundsResponseroundsResponse\", roundsResponse)    // Round data\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n// console.log(\"reduxNodeRoundreduxNodeRoundreduxNodeRound\", reduxNodeRound)\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n// console.log(\"initialRoundDatainitialRoundData\", initialRoundData)\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n    // console.log(\"initializedDatainitializedData\", initializedData, account)\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n// console.log(\"ledgerResponsesledgerResponses\", ledgerResponses)\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n    // console.log(\"claimableStatusesclaimableStatuses\", claimableStatuses)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  // console.log(\"marketDatamarketData\", marketData)\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const fetchNodeHistory = createAsyncThunk<\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\n  { account: string; page?: number }\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\n  const userRoundsLength = await fetchUsersRoundsLength(account)\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\n\n  if (userRoundsLength.eq(0)) {\n    return emptyResult\n  }\n\n  if (page > maxPages) {\n    return emptyResult\n  }\n\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\n\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\n  const size =\n    maxPages === page\n      ? userRoundsLength\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\n          .toNumber()\n      : ROUNDS_PER_PAGE\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\n\n  if (!userRounds) {\n    return emptyResult\n  }\n\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\n  const roundData = await getRoundsData(epochs)\n  const claimableStatuses = await getClaimStatuses(account, epochs)\n\n  // Turn the data from the node into an Bet object that comes from the graph\n  const bets: Bet[] = roundData.reduce((accum, round) => {\n    const reduxRound = serializePredictionsRoundsResponse(round)\n    const ledger = userRounds[reduxRound.epoch]\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\n\n    const getRoundPosition = () => {\n      if (!closePrice) {\n        return null\n      }\n\n      if (round.closePrice.eq(round.lockPrice)) {\n        return BetPosition.HOUSE\n      }\n\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\n    }\n\n    return [\n      ...accum,\n      {\n        id: null,\n        hash: null,\n        amount: parseFloat(formatUnits(ledgerAmount)),\n        position: ledger.position,\n        claimed: ledger.claimed,\n        claimedAt: null,\n        claimedHash: null,\n        claimedBNB: 0,\n        claimedNetBNB: 0,\n        createdAt: null,\n        updatedAt: null,\n        block: 0,\n        round: {\n          id: null,\n          epoch: round.epoch.toNumber(),\n          failed: false,\n          startBlock: null,\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\n          startHash: null,\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\n          lockBlock: null,\n          lockPrice,\n          lockHash: null,\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\n          closeHash: null,\n          closeAt: null,\n          closePrice,\n          closeBlock: null,\n          totalBets: 0,\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\n          bullBets: 0,\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\n          bearBets: 0,\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\n          position: getRoundPosition(),\n        },\n      },\n    ]\n  }, [])\n\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\n})\n\n// Leaderboard\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\n  'predictions/filterLeaderboard',\n  async ({ filters }) => {\n    const usersResponse = await getPredictionUsers({\n      skip: 0,\n      orderBy: filters.orderBy,\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\n    })\n\n    return { results: usersResponse.map(transformUserResponse) }\n  },\n)\n\nexport const fetchAddressResult = createAsyncThunk<\n  { account: string; data: PredictionUser },\n  string,\n  { rejectValue: string }\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\n  const userResponse = await getPredictionUser(account)\n\n  if (!userResponse) {\n    return rejectWithValue(account)\n  }\n\n  return { account, data: transformUserResponse(userResponse) }\n})\n\nexport const filterNextPageLeaderboard = createAsyncThunk<\n  { results: PredictionUser[]; skip: number },\n  number,\n  { state: State }\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\n  const state = getState()\n  const usersResponse = await getPredictionUsers({\n    skip,\n    orderBy: state.predictions.leaderboard.filters.orderBy,\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\n  })\n\n  return { results: usersResponse.map(transformUserResponse), skip }\n})\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\n      state.leaderboard.filters = {\n        ...state.leaderboard.filters,\n        ...action.payload,\n      }\n\n      // Anytime we filters change we need to reset back to page 1\n      state.leaderboard.skip = 0\n      state.leaderboard.hasMoreResults = true\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\n    },\n    setSelectedAddress: (state, action: PayloadAction<string>) => {\n      state.leaderboard.selectedAddress = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Leaderboard filter\n    builder.addCase(filterLeaderboard.pending, (state) => {\n      // Only mark as loading if we come from Fetched. This allows initialization.\n      if (state.leaderboard.loadingState === FetchStatus.Fetched) {\n        state.leaderboard.loadingState = FetchStatus.Fetched\n      }\n    })\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\n      const { results } = action.payload\n\n      state.leaderboard.loadingState = FetchStatus.Fetched\n      state.leaderboard.results = results\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n\n      // Populate address results to reduce calls\n      state.leaderboard.addressResults = {\n        ...state.leaderboard.addressResults,\n        ...results.reduce((accum, result) => {\n          return {\n            ...accum,\n            [result.id]: result,\n          }\n        }, {}),\n      }\n    })\n\n    // Leaderboard account result\n    builder.addCase(fetchAddressResult.pending, (state) => {\n      state.leaderboard.loadingState = FetchStatus.Fetching\n    })\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\n      const { account, data } = action.payload\n      state.leaderboard.loadingState = FetchStatus.Fetched\n      state.leaderboard.addressResults[account] = data\n    })\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\n      state.leaderboard.loadingState = FetchStatus.Fetched // TODO: should handle error\n      state.leaderboard.addressResults[action.payload] = null\n    })\n\n    // Leaderboard next page\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\n      state.leaderboard.loadingState = FetchStatus.Fetching\n    })\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\n      const { results, skip } = action.payload\n\n      state.leaderboard.loadingState = FetchStatus.Fetched\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\n      state.leaderboard.skip = skip\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n    })\n\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      // console.log(\"fetchMarketDatafetchMarketDatafetchMarketData\", fetchMarketData.fulfilled)\n      // console.log(\"fetchMarketDatafetchMarketDatafetchMarketData\", action)\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalSeconds = intervalSeconds\n      state.minBetAmount = minBetAmount\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\n        action.payload\n        // console.log(\"action.payloadaction.payloadaction.payloadaction.payload\", action.payload)\n        // console.log(\"roundsroundsrounds\", rounds)\n      const futureRounds: ReduxNodeRound[] = []\n      const currentRound = rounds[currentEpoch]\n// console.log(\"currentRoundcurrentRound\", currentRound)\n      // for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n      //   futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\n      // }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        intervalSeconds,\n        bufferSeconds,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = merge([], state.history[account] ?? [], bets)\n    })\n\n    // History from the node\n    builder.addCase(fetchNodeHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\n\n      state.isFetchingHistory = false\n      state.history = page === 1 ? bets : [...state.history, ...bets]\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\n      state.totalHistory = totalHistory\n      state.currentHistoryPage = page\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setLastOraclePrice,\n  markAsCollected,\n  setLeaderboardFilter,\n  setSelectedAddress,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\nimport { PageHeaderProps } from './types'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #000;\n  min-width: 100vw;\n  min-height: 100vh;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import numeral from 'numeral'\n\n// Returns first 2 digits after first non-zero decimal\n// i.e. 0.001286 -> 0.0012, 0.9845 -> 0.98, 0.0102 -> 0.010, etc\n// Intended to be used for tokens whose value is less than $1\n// https://stackoverflow.com/a/23887837\nexport const getFirstThreeNonZeroDecimals = (value: number) => {\n  return value.toFixed(9).match(/^-?\\d*\\.?0*\\d{0,2}/)[0]\n}\nexport type formatAmountNotation = 'compact' | 'standard'\n\n/**\n * This function is used to format token prices, liquidity, amount of tokens in TX, and in general any numbers on info section\n * @param amount - amount to be formatted\n * @param notation - whether to show 1M or 1,000,000\n * @param displayThreshold - threshold below which it will return simply <displayThreshold instead of actual value, e.g. if 0.001 -> returns <0.001 for 0.0005\n * @param tokenPrecision - set to true when you want precision to be 3 decimals for values < 1 and 2 decimals for values > 1\n * @param isInteger - if true the values will contain decimal part only if the amount is > 1000\n * @returns formatted string ready to be displayed\n */\nexport const formatAmount = (\n  amount: number | undefined,\n  options?: {\n    notation?: 'compact' | 'standard'\n    displayThreshold?: number\n    tokenPrecision?: boolean\n    isInteger?: boolean\n  },\n) => {\n  const { notation = 'compact', displayThreshold, tokenPrecision, isInteger } = options || { notation: 'compact' }\n  if (amount === 0) {\n    if (isInteger) {\n      return '0'\n    }\n    return '0.00'\n  }\n  if (!amount) return '-'\n  if (displayThreshold && amount < displayThreshold) {\n    return `<${displayThreshold}`\n  }\n  if (amount < 1 && !tokenPrecision) {\n    return getFirstThreeNonZeroDecimals(amount)\n  }\n\n  let precision = 2\n  if (tokenPrecision) {\n    precision = amount < 1 ? 3 : 2\n  }\n\n  let format = `0.${'0'.repeat(precision)}a`\n\n  if (notation === 'standard') {\n    format = `0,0.${'0'.repeat(precision)}`\n  }\n\n  if (isInteger && amount < 1000) {\n    format = '0'\n  }\n\n  const amountWithPrecision = parseFloat(amount.toFixed(precision))\n\n  // toUpperCase is needed cause numeral doesn't have support for capital K M B out of the box\n  return numeral(amountWithPrecision).format(format).toUpperCase()\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.secondary};\n  transition: border-radius 0.15s;\n  color: #000000;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.secondary};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: #c19834;\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n  defaultOptionIndex?: number\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({\n  options,\n  onOptionChange,\n  defaultOptionIndex = 0,\n  ...props\n}) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(defaultOptionIndex)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text color=\"#000000\">{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text color=\"#000000\">{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; skip?: number }\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\n  return additionalUserLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\n      state.userLotteryData.rounds = mergedRounds\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import { gql } from 'graphql-request'\nimport { useState, useEffect } from 'react'\nimport { multiQuery } from 'views/Info/utils/infoQueryHelpers'\nimport { BLOCKS_CLIENT } from 'config/constants/endpoints'\nimport { Block } from 'state/info/types'\n\nconst getBlockSubqueries = (timestamps: number[]) =>\n  timestamps.map((timestamp) => {\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${\n      timestamp + 600\n    } }) {\n      number\n    }`\n  })\n\nconst blocksQueryConstructor = (subqueries: string[]) => {\n  return gql`query blocks {\n    ${subqueries}\n  }`\n}\n\n/**\n * @notice Fetches block objects for an array of timestamps.\n * @param {Array} timestamps\n */\nexport const getBlocksFromTimestamps = async (\n  timestamps: number[],\n  sortDirection: 'asc' | 'desc' = 'desc',\n  skipCount = 500,\n): Promise<Block[]> => {\n  if (timestamps?.length === 0) {\n    return []\n  }\n\n  const fetchedData: any = await multiQuery(\n    blocksQueryConstructor,\n    getBlockSubqueries(timestamps),\n    BLOCKS_CLIENT,\n    skipCount,\n  )\n\n  const sortingFunction =\n    sortDirection === 'desc' ? (a: Block, b: Block) => b.number - a.number : (a: Block, b: Block) => a.number - b.number\n\n  const blocks: Block[] = []\n  if (fetchedData) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key of Object.keys(fetchedData)) {\n      if (fetchedData[key].length > 0) {\n        blocks.push({\n          timestamp: key.split('t')[1],\n          number: parseInt(fetchedData[key][0].number, 10),\n        })\n      }\n    }\n    // graphql-request does not guarantee same ordering of batched requests subqueries, hence manual sorting\n    blocks.sort(sortingFunction)\n  }\n  return blocks\n}\n\n/**\n * for a given array of timestamps, returns block entities\n * @param timestamps\n */\nexport const useBlocksFromTimestamps = (\n  timestamps: number[],\n  sortDirection: 'asc' | 'desc' = 'desc',\n  skipCount = 1000,\n): {\n  blocks?: Block[]\n  error: boolean\n} => {\n  const [blocks, setBlocks] = useState<Block[]>()\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await getBlocksFromTimestamps(timestamps, sortDirection, skipCount)\n      if (result.length === 0) {\n        setError(true)\n      } else {\n        setBlocks(result)\n      }\n    }\n    if (!blocks && !error) {\n      fetchData()\n    }\n  }) // TODO: dep array?\n\n  return {\n    blocks,\n    error,\n  }\n}\n","import { useEffect, useRef, useState } from 'react'\n\nconst useIntersectionObserver = () => {\n  const observerRef = useRef<HTMLDivElement>(null)\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const [isIntersecting, setIsIntersecting] = useState(false)\n\n  useEffect(() => {\n    const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\n      setIsIntersecting(entry.isIntersecting)\n    }\n\n    if (!observerIsSet) {\n      intersectionObserverRef.current = new IntersectionObserver(checkObserverIsIntersecting, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      // intersectionObserverRef.current.observe(observerRef.current)\n      setObserverIsSet(true)\n    }\n\n    return () => {\n      if (intersectionObserverRef.current && observerIsSet) {\n        intersectionObserverRef.current.disconnect()\n      }\n    }\n  }, [observerIsSet])\n\n  return { observerRef, isIntersecting }\n}\n\nexport default useIntersectionObserver\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { GalleryState } from 'state/types'\nimport collections from 'config/constants/nfts/collections'\nimport { NftType } from 'config/constants/gallery/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: GalleryState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n  models: []\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletGalleryNfts = createAsyncThunk<NftSourceItem[], string>(\n  'gallery/fetchWalletGalleryNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(collections).map(async (nftSourceType) => {\n      const { address: addressObj } = collections[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const gallerySlice = createSlice({\n  name: 'gallery',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletGalleryNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletGalleryNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default gallerySlice.reducer\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { FetchStatus } from 'config/constants/types'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: FetchStatus.Idle,\n  proposals: {},\n  voteLoadingStatus: FetchStatus.Idle,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = FetchStatus.Fetching\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = FetchStatus.Fetched\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = FetchStatus.Fetching\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = FetchStatus.Fetched\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = FetchStatus.Fetching\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = FetchStatus.Fetched\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FetchStatus } from 'config/constants/types'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  achievements: [],\n  achievementFetchStatus: FetchStatus.Idle,\n}\n\nexport const fetchAchievements = createAsyncThunk<Achievement[], string>(\n  'achievements/fetchAchievements',\n  async (account) => {\n    const achievements = await getAchievements(account)\n    return achievements\n  },\n)\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.achievements.push(action.payload)\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchAchievements.pending, (state) => {\n      state.achievementFetchStatus = FetchStatus.Fetching\n    })\n    builder.addCase(fetchAchievements.fulfilled, (state, action) => {\n      state.achievementFetchStatus = FetchStatus.Fetched\n      state.achievements = action.payload\n    })\n    builder.addCase(fetchAchievements.rejected, (state) => {\n      state.achievementFetchStatus = FetchStatus.Failed\n    })\n  },\n})\n\n// Actions\nexport const { addAchievement } = achievementSlice.actions\n\nexport default achievementSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @param farmAddress Farm Address\n * @returns Farm Apr\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = poolWeight ? poolWeight.times(CAKE_PER_YEAR) : new BigNumber(NaN)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n\n  // console.log(\"cakeRewardsAprAsNumbercakeRewardsAprAsNumber\", cakeRewardsAprAsNumber)\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>BNB</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name.substring(11, list.name.length)}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {/* {console.log(\"sortedListssortedListssortedLists\", sortedLists)} */}\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local list\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n  overflow-y: auto;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useBlock } from 'state/block/hooks'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  // console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    // console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param currentBlock the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  currentBlock: number | undefined,\n): string[] {\n  if (!chainId || !currentBlock) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const { currentBlock } = useBlock()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!currentBlock || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== currentBlock) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: currentBlock,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: currentBlock,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: currentBlock,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport useToast from 'hooks/useToast'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                t('Transaction receipt'),\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      {t('View on BscScan')}\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError, t])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus } from 'config/constants/types'\nimport { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = parseUnits('2', 'gwei')\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.Fetched && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { useEffect } from 'react'\nimport history from 'routerHistory'\n\nconst useScrollOnRouteChange = () => {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      setTimeout(() => {\n        window.scroll({\n          top: 0,\n          left: 0,\n          behavior: 'smooth',\n        })\n      }, 50)\n    })\n\n    return () => unlisten()\n  }, [])\n}\n\nexport default useScrollOnRouteChange\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n\n  .good-times{\n    font-family: 'Good Times', sans-serif;\n  }\n`\n\nexport default GlobalStyle\n","import { MenuItemsType, DropdownMenuItemType } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nexport type ConfigMenuItemsType = MenuItemsType & { hideSubNav?: boolean }\n\nconst config: (t: ContextApi['t']) => ConfigMenuItemsType[] = (t) => [\n  {\n    label: t('Trade'),\n    icon: 'Swap',\n    href: '/swap',\n    showItemsOnMobile: false,\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/liquidity',\n      },\n    ],\n  },\n  {\n    label: t('Earn'),\n    href: '/room/pools',\n    icon: 'Earn',\n    items: [\n      {\n        label: t('Farms'),\n        icon: 'FarmIcon',\n        href: '/farms',\n      },\n      {\n        label: t('Room Pools'),\n        icon: 'PoolIcon',\n        href: '/room/pools',\n      },\n      {\n        label: t('Gladiator Battles'),\n        href: '/battles/join',\n      },\n      {\n        label: t('Bet on Battles'),\n        href: '/battles/bet',\n      },\n    ],\n  },\n  {\n    label: t('NFT'),\n    href: '/gallery',\n    icon: 'NFT',\n    showOnMobile: false,\n    showItemsOnMobile: false,\n    items: [\n      {\n        label: t('My Gladiators'),\n        href: '/mygladiators',\n      },\n      {\n        label: t('School'),\n        href: '/school',\n      },\n      {\n        label: t('Gallery'),\n        href: '/gallery',\n      },\n      {\n        label: t('Marketplace'),\n        href: '/nfts',\n      },\n    ],\n  },\n  // {\n  //   label: t('Win'),\n  //   href: '/prediction',\n  //   icon: 'Trophy',\n  //   items: [\n  //     {\n  //       label: t('Prediction (BETA)'),\n  //       href: '/prediction',\n  //     },\n  //     {\n  //       label: t('Lottery'),\n  //       href: '/lottery',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('NFT'),\n  //   href: '/collectibles',\n  //   icon: 'Nft',\n  //   showOnMobile: false,\n  //   showItemsOnMobile: false,\n  //   items: [\n  //     {\n  //       label: t('Collectibles'),\n  //       href: '/collectibles',\n  //     },\n  //   ],\n  // },\n  {\n    label: '',\n    href: '/referrals',\n    icon: 'More',\n    hideSubNav: true,\n    items: [\n      // {\n      //   label: t('Info'),\n      //   href: '/info',\n      // },\n      {\n        label: t('Referrals'),\n        href: '/referrals',\n      },\n      // {\n      //   label: t('Voting'),\n      //   href: '/voting',\n      // },\n      {\n        type: DropdownMenuItemType.DIVIDER,\n      },\n      // {\n      //   label: t('Leaderboard'),\n      //   href: '/teams',\n      // },\n      // {\n      //   type: DropdownMenuItemType.DIVIDER,\n      // },\n      {\n        label: t('Blog'),\n        href: '\thttps://medium.com/@gladiators.finance',\n        type: DropdownMenuItemType.EXTERNAL_LINK,\n      },\n      {\n        label: t('Docs'),\n        href: 'https://docs.gladiators.finance',\n        type: DropdownMenuItemType.EXTERNAL_LINK,\n      },\n    ],\n  },\n]\n\nexport default config\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { FetchStatus } from 'config/constants/types'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { getFullDisplayBalance, formatBigNumber } from 'utils/formatBalance'\nimport tokens from 'config/constants/tokens'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { balance: cakeBalance, fetchStatus: cakeFetchStatus } = useTokenBalance(tokens.cake.address)\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        {fetchStatus !== FetchStatus.Fetched ? (\n          <Skeleton height=\"22px\" width=\"60px\" />\n        ) : (\n          <Text>{formatBigNumber(balance, 6)}</Text>\n        )}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('DENA Balance')}</Text>\n        {cakeFetchStatus !== FetchStatus.Fetched ? (\n          <Skeleton height=\"22px\" width=\"60px\" />\n        ) : (\n          <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n        )}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"textSubtle\">{t('NRT Balance')}</Text>\n        {cakeFetchStatus !== FetchStatus.Fetched ? (\n          <Skeleton height=\"22px\" width=\"60px\" />\n        ) : (\n          <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n        )}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on BscScan')}</LinkExternal>\n      </Flex>\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(Object.values(allTransactions).filter(isTransactionRecent), 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Skeleton, UserMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport history from 'routerHistory'\n\ninterface ProfileUserMenuItemProps {\n  isLoading: boolean\n  hasProfile: boolean\n}\n\nconst Dot = styled.div`\n  background-color: ${({ theme }) => theme.colors.secondary};\n  border-radius: 50%;\n  height: 8px;\n  width: 8px;\n`\n\nconst ProfileUserMenuItem: React.FC<ProfileUserMenuItemProps> = ({ isLoading, hasProfile }) => {\n  const { t } = useTranslation()\n\n  const handleClick = () => {\n    history.push('/profile')\n  }\n\n  if (isLoading) {\n    return (\n      <UserMenuItem>\n        <Skeleton height=\"24px\" width=\"35%\" />\n      </UserMenuItem>\n    )\n  }\n\n  if (!hasProfile) {\n    return (\n      <UserMenuItem as=\"button\" onClick={handleClick}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Make a Profile')}\n          <Dot />\n        </Flex>\n      </UserMenuItem>\n    )\n  }\n\n  return (\n    <UserMenuItem as=\"button\" onClick={handleClick}>\n      {t('Your Profile')}\n    </UserMenuItem>\n  )\n}\n\nexport default ProfileUserMenuItem\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { FetchStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile?.nft?.image?.thumbnail\n  const hasLowBnbBalance = fetchStatus === FetchStatus.Fetched && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuDivider />\n      <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} />\n      <UserMenuDivider />\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import { ConfigMenuItemsType } from './config/config'\n\nexport const getActiveMenuItem = ({ pathname, menuConfig }: { pathname: string; menuConfig: ConfigMenuItemsType[] }) =>\n  menuConfig.find((menuItem) => pathname.startsWith(menuItem.href) || getActiveSubMenuItem({ menuItem, pathname }))\n\nexport const getActiveSubMenuItem = ({ pathname, menuItem }: { pathname: string; menuItem?: ConfigMenuItemsType }) => {\n  const activeSubMenuItems = menuItem?.items.filter((subMenuItem) => pathname.startsWith(subMenuItem.href))\n\n  // Pathname doesn't include any submenu item href - return undefined\n  if (!activeSubMenuItems || activeSubMenuItems.length === 0) {\n    return undefined\n  }\n\n  // Pathname includes one sub menu item href - return it\n  if (activeSubMenuItems.length === 1) {\n    return activeSubMenuItems[0]\n  }\n\n  // Pathname includes multiple sub menu item hrefs - find the most specific match\n  const mostSpecificMatch = activeSubMenuItems.sort(\n    (subMenuItem1, subMenuItem2) => subMenuItem2.href.length - subMenuItem1.href.length,\n  )[0]\n\n  return mostSpecificMatch\n}\n","import { FooterLinkType } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nexport const footerLinks: (t: ContextApi['t']) => FooterLinkType[] = (t) => [\n  {\n    label: t('About'),\n    items: [\n      {\n        label: t('Contact'),\n        href: 'https://docs.gladiators.finance/contact-us',\n      },\n      // {\n      //   label: t('Blog'),\n      //   href: 'https://medium.com/@gladiators.finance/',\n      // },\n      {\n        label: t('Khaos Token'),\n        href: 'https://www.nftroyaltoken.com/',\n      },\n      // {\n      //   label: t('DENA token'),\n      //   href: 'https://docs.gladiators.finance/tokenomics/denarius-dena',\n      // },\n      // {\n      //   label: '—',\n      // },\n      // {\n      //   label: t('Online Store'),\n      //   href: '/nfts',\n      //   isHighlighted: true,\n      // },\n    ],\n  },\n  {\n    label: t('Help'),\n    items: [\n      {\n        label: t('Customer Support'),\n        href: 'https://docs.gladiators.finance/contact-us/customer-support',\n      },\n      {\n        label: t('Troubleshooting'),\n        href: 'https://docs.gladiators.finance/help/troubleshooting',\n      },\n      {\n        label: t('Guides'),\n        href: 'https://docs.gladiators.finance',\n      },\n      {\n        label: t('Community'),\n        href: 'https://docs.gladiators.finance/contact-us/telegram',\n      },\n    ],\n  },\n  {\n    label: t('Developers'),\n    items: [\n      {\n        label: 'Github',\n        href: 'https://github.com/gladiatorsfinance',\n      },\n      {\n        label: t('Documentation'),\n        href: 'https://docs.gladiators.finance',\n      },\n      {\n        label: t('Audits'),\n        href: 'https://docs.gladiators.finance/',\n      },\n    ],\n  },\n]\n","import React, { useEffect, useRef } from 'react'\nimport { useLocation } from 'react-router'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { useNrtBusdPrice, useDenaPrice } from 'hooks/useBUSDPrice'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config/config'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\nimport { getActiveMenuItem, getActiveSubMenuItem } from './utils'\nimport { footerLinks } from './config/footerConfig'\nimport styled from 'styled-components'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const nrtBusdPrice = useNrtBusdPrice()\n  const denaPrice = useDenaPrice()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n  const { pathname } = useLocation()\n\n  const activeMenuItem = getActiveMenuItem({ menuConfig: config(t), pathname })\n  const activeSubMenuItem = getActiveSubMenuItem({ menuItem: activeMenuItem, pathname })\n\n  const navRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const logoHtml: any = navRef.current.querySelector(`a > svg`).parentNode\n    logoHtml.setAttribute('aria-label', 'Khaos Home Page')\n    logoHtml.innerHTML = '<img src=\"/khaos.png\" alt=\"Khaos\" />'\n  }, [])\n\n  return (\n    <StyledMenu ref={navRef}>\n      <UikitMenu\n        userMenu={<UserMenu />}\n        globalMenu={<GlobalSettings />}\n        isDark={isDark}\n        toggleTheme={toggleTheme}\n        currentLang={currentLanguage.code}\n        langs={languageList}\n        setLang={setLanguage}\n        nrtPriceUsd={nrtBusdPrice}\n        denaPriceUsd={denaPrice}\n        links={config(t)}\n        subLinks={activeMenuItem?.hideSubNav ? [] : activeMenuItem?.items}\n        footerLinks={footerLinks(t)}\n        activeItem={activeMenuItem?.href}\n        activeSubItem={activeSubMenuItem?.href}\n        buyCakeLabel={t('Buy')}\n        profile={{\n          username: profile?.username,\n          image: profile?.nft?.image?.thumbnail,\n          profileLink: '/profile',\n          noProfileLink: '/profile',\n          showPip: !profile?.username,\n        }}\n        {...props}\n      />\n    </StyledMenu>\n  )\n}\n\nconst StyledMenu = styled.div`\n  nav {\n    background: #000 !important;\n  }\n  li {\n    color: #9a6aff !important;\n  }\n  ul + div {\n    display: none;\n  }\n`\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { DeserializedPool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprRowProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\n    pool\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      stakingTokenSymbol={stakingToken.symbol}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            onClick={onPresentApyModal}\n          />\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </ApyLabelContainer>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: DeserializedPool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address || ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            {performanceFee ? (\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            ) : (\n              <Skeleton width=\"90px\" height=\"21px\" />\n            )}\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`/info/token/${earningToken.address}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: DeserializedPool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport { mainnetTokens } from 'config/constants/tokens'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${mainnetTokens.cake.address}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport { Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'DENA' && stakingToken.symbol === 'DENA'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn DENA, stake DENA')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol })}\n          </ToastDescriptionWithTx>,\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [\n    account,\n    dispatch,\n    lpContract,\n    sousChefContract,\n    sousId,\n    earningTokenSymbol,\n    t,\n    toastError,\n    toastSuccess,\n    callWithGasPrice,\n  ])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(\n        t('Contract Enabled'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const currentAllowance = await cakeContract.allowance(account, cakeVaultContract.address)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { DeserializedPool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: DeserializedPool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst sousUnstake = async (sousChefContract: any, amount: string, decimals: number) => {\n  const gasPrice = getGasPrice()\n  const units = parseUnits(amount, decimals)\n\n  const tx = await sousChefContract.withdraw(units.toString(), {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract: any) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId: number, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  Link,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n  const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n  const userNotEnoughToken = isRemovingStake\n    ? userData.stakedBalance.lt(fullDecimalStakeAmount)\n    : userData.stakingTokenBalance.lt(fullDecimalStakeAmount)\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [\n    stakeAmount,\n    stakingLimit,\n    userData,\n    stakingToken,\n    isRemovingStake,\n    setHasReachedStakedLimit,\n    fullDecimalStakeAmount,\n  ])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      if (isRemovingStake) {\n        // unstaking\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n      } else {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n      }\n      setPendingTx(false)\n      onDismiss()\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit || userNotEnoughToken}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      {userNotEnoughToken && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Insufficient %symbol% balance', {\n            symbol: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || userNotEnoughToken}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from '@pancakeswap/sdk'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake DENA into pool.')}</Text>\n      <Text>{t('Harvest: collect DENA and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from '@pancakeswap/sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { DeserializedPool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: DeserializedPool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              {/* <ConnectWalletButton /> */}\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new DENA in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new DENA in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: DeserializedPool\n  stakingMax: BigNumber\n  performanceFee?: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\n  pool,\n  stakingMax,\n  performanceFee,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n    performanceFee,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await callWithGasPrice(\n          cakeVaultContract,\n          'withdraw',\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\n          callOptions,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Staked!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the pool')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n        performanceFee={performanceFee}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  performanceFee: number\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\n  )\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  performanceFee: number\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  performanceFee,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\n  )\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: DeserializedPool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n  performanceFee: number\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n            performanceFee={performanceFee}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" DENA\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: DeserializedPool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.cake}\n        stakingToken={tokens.cake}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions\n              pool={pool}\n              accountHasSharesStaked={accountHasSharesStaked}\n              isLoading={isLoading}\n              performanceFee={performanceFeeAsDecimal}\n            />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              {/* <ConnectWalletButton /> */}\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from 'state/user/actions'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ViewMode } from 'state/user/actions'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem id=\"finished-pools-button\" as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await callWithGasPrice(cakeVaultContract, 'harvest', undefined, { gasLimit: 300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Bounty collected!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('CAKE bounty has been sent to your wallet.')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto CAKE Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst Container = styled.div`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <Container>\n      <StyledLink external href=\"https://docs.gladiators.finance/syrup-pools/syrup-pool\">\n        <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n          <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n            {t('Help')}\n          </ButtonText>\n          <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n        </Button>\n      </StyledLink>\n    </Container>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\n\n  if (isAutoVault) {\n    title = t('Auto DENA')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual DENA')\n    subtitle = `${t('Earn')} DENA ${t('Stake').toLocaleLowerCase()} DENA`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isMobile} small={isMobile}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprProps extends FlexProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      apr={apr}\n      stakingTokenSymbol={stakingToken.symbol}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </AprLabelContainer>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APR')}\n        </Text>\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { DeserializedPool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\n  }\n}\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface HarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const actionTitle = (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n          {isCompoundPool ? t('Collect') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: DeserializedPool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer isAutoVault={isAutoVault}>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport { Text, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface AutoHarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst AutoHarvestAction: React.FunctionComponent<AutoHarvestActionProps> = ({ userDataLoaded, earningTokenPrice }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const earningTokenBalance = autoCakeToDisplay\n  const earningTokenDollarBalance = autoUsdToDisplay\n  const hasEarnings = hasAutoEarnings\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer isAutoVault>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n          <UnstakingFeeCountdownRow isTableVariant />\n          <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n            {tooltipVisible && tooltip}\n            <TooltipText ref={targetRef} small>\n              {t('Performance Fee')}\n            </TooltipText>\n            <Flex alignItems=\"center\">\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            </Flex>\n          </Flex>\n        </Flex>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default AutoHarvestAction\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\nimport AutoHarvest from './AutoHarvest'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n  isXxl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: DeserializedPool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    userData,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address || ''\n\n  const {\n    totalCakeInVault,\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const poolStakingTokenBalance = isAutoVault\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\n    : stakedBalance.plus(stakingTokenBalance)\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr\n        pool={pool}\n        showIcon\n        stakedBalance={poolStakingTokenBalance}\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\n      />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`/info/token/${earningToken.address}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} DENA ${t('Stake').toLocaleLowerCase()} DENA`}\n          </Text>\n        )}\n        {pool.isAutoVault ? (\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\n        ) : (\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        )}\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface AutoEarningsCellProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst AutoEarningsCell: React.FC<AutoEarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { earningTokenPrice } = pool\n\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const labelText = t('Recent DENA profit')\n  const earningTokenBalance = autoCakeToDisplay\n  const hasEarnings = hasAutoEarnings\n  const earningTokenDollarBalance = autoUsdToDisplay\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {hasEarnings && !isMobile && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoEarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\nimport { convertSharesToCake } from '../../../helpers'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AutoAprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  const {\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APY')}\n        </Text>\n        <Apr\n          pool={pool}\n          stakedBalance={cakeAsBigNumber}\n          performanceFee={performanceFeeAsDecimal}\n          showIcon={!isMobile}\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoAprCell\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\nimport AutoAprCell from './Cells/AutoAprCell'\n\ninterface PoolRowProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        {pool.isAutoVault ? (\n          <AutoEarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        ) : (\n          <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        )}\n        {pool.isAutoVault ? <AutoAprCell pool={pool} /> : <AprCell pool={pool} />}\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\n        {isDesktop && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: DeserializedPool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  scroll-margin-top: 64px;\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable id=\"pools-table\" role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport {\n  useFetchPublicPoolsData,\n  usePools,\n  useFetchUserPools,\n  useFetchCakeVault,\n  useCakeVault,\n} from 'state/pools/hooks'\nimport { usePollFarmsPublicData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { DeserializedPool } from 'state/types'\nimport { useUserPoolStakedOnly, useUserPoolsViewMode } from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools()\n  const [stakedOnly, setStakedOnly] = useUserPoolStakedOnly()\n  const [viewMode, setViewMode] = useUserPoolsViewMode()\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsPublicData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n  useFetchUserPools(account)\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n        if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n          return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n        }\n        return poolsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: DeserializedPool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => {\n            let totalStaked = Number.NaN\n            if (pool.isAutoVault) {\n              if (totalCakeInVault.isFinite()) {\n                totalStaked = +formatUnits(\n                  ethers.BigNumber.from(totalCakeInVault.toString()),\n                  pool.stakingToken.decimals,\n                )\n              }\n            } else if (pool.sousId === 0) {\n              if (pool.totalStaked?.isFinite() && totalCakeInVault.isFinite()) {\n                const manualCakeTotalMinusAutoVault = ethers.BigNumber.from(pool.totalStaked.toString()).sub(\n                  totalCakeInVault.toString(),\n                )\n                totalStaked = +formatUnits(manualCakeTotalMinusAutoVault, pool.stakingToken.decimals)\n              }\n            } else if (pool.totalStaked?.isFinite()) {\n              totalStaked = +formatUnits(ethers.BigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals)\n            }\n            return Number.isFinite(totalStaked) ? totalStaked : 0\n          },\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-dena\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Syrup Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onOptionChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={observerRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import { Token } from '@pancakeswap/sdk'\nimport tokens from 'config/constants/tokens'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningTokenList {\n  [key: string]: Token\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const { t } = useTranslation()\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">{t('Price')}</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? t('Minimum received') : t('Maximum sold')}\n            </Text>\n            <QuestionHelper\n              text={t(\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n              )}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Price Impact')}</Text>\n            <QuestionHelper\n              text={t('The difference between the market price and your price due to trade size.')}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Liquidity Provider Fee')}</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\n                  <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\n                  <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\n                  <Text>- {t('%amount% towards CAKE buyback and burn', { amount: '0.05%' })}</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? t('Swap Anyway') : t('Confirm Swap')}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport truncateHash from 'utils/truncateHash'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const { t } = useTranslation()\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const amount =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\n  const symbol =\n    trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n\n  const tradeInfoText =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? t('Output is estimated. You will receive at least %amount% %symbol% or the transaction will revert.', {\n          amount,\n          symbol,\n        })\n      : t('Input is estimated. You will sell at most %amount% %symbol% or the transaction will revert.', {\n          amount,\n          symbol,\n        })\n\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\n\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\n\n  const recipientInfoText = t('Output will be sent to %recipient%', {\n    recipient: truncatedRecipient,\n  })\n\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> {t('Price Updated')}</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n          {estimatedText}\n          <b>\n            {amount} {symbol}\n          </b>\n          {transactionRevertText}\n        </Text>\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            {recipientSentToText}\n            <b title={recipient}>{truncatedRecipient}</b>\n            {postSentToText}\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { t } = useTranslation()\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? t('Minimum received') : t('Maximum sold')}\n          </Text>\n          <QuestionHelper\n            text={t(\n              'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n            )}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Price Impact')}\n          </Text>\n          <QuestionHelper\n            text={t('The difference between the market price and estimated price due to trade size.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Liquidity Provider Fee')}\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\n                <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\n                <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\n                <Text>- {t('%amount% towards CAKE buyback and burn', { amount: '0.05%' })}</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const { t } = useTranslation()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    {t('Route')}\n                  </Text>\n                  <QuestionHelper\n                    text={t('Routing through these tokens resulted in the best price for your trade.')}\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  const { t } = useTranslation()\n  return (\n    <Modal\n      title={t('Import Token')}\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useGasPrice } from 'state/user/hooks'\nimport truncateHash from 'utils/truncateHash'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n  const gasPrice = useGasPrice()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          gasPrice,\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? truncateHash(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.raw.toString(16)}`,\n                  })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\n                    `0x${inputAmount.raw.toString(16)}`,\n                  ])\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [SwapWarningTokensConfig.safemoon.address]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [SwapWarningTokensConfig.bondly.address]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import { Box } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport const StyledPriceChart = styled(Box)<{ $isDark: boolean; $isExpanded: boolean }>`\n  border: none;\n  border-radius: 32px;\n  width: 100%;\n  padding-top: 36px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 8px;\n    /* background: ${({ $isDark }) => ($isDark ? 'black' : 'black')}; */\n    border: ${({ theme }) => `1px solid ${theme.colors.cardBorder}`};\n    border-radius: ${({ $isExpanded }) => ($isExpanded ? '0' : '16px')};\n    width: ${({ $isExpanded }) => ($isExpanded ? '100%' : '50%')};\n    height: ${({ $isExpanded }) => ($isExpanded ? 'calc(100vh - 100px)' : '516px')};\n  }\n  background: #7645d9;\n  * {\n    color: #fff !important;\n  }\n  svg {\n    fill: #fff !important;\n  }\n`\n\nStyledPriceChart.defaultProps = {\n  height: '70%',\n}\n// background: ${({ $isDark }) => ($isDark ? 'rgba(39, 38, 44, 0.5)' : 'rgba(255, 255, 255, 0.5)')};\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport { StyledPriceChart } from './styles'\n\ninterface BnbWbnbNoticeProps {\n  isDark: boolean\n  isChartExpanded: boolean\n}\n\nconst BnbWbnbNotice: React.FC<BnbWbnbNoticeProps> = ({ isDark, isChartExpanded }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledPriceChart $isDark={isDark} $isExpanded={isChartExpanded} p=\"24px\">\n      <Flex justifyContent=\"center\" alignItems=\"center\" height=\"100%\" flexDirection=\"column\">\n        <Text mb={['8px', '8px', '0px']} textAlign=\"center\">\n          {t('You can swap WBNB for BNB (and vice versa) with no trading fees.')}\n        </Text>\n        <Text mb={['8px', '8px', '0px']} textAlign=\"center\">\n          {t('Exchange rate is always 1 to 1.')}\n        </Text>\n      </Flex>\n    </StyledPriceChart>\n  )\n}\n\nexport default BnbWbnbNotice\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport React from 'react'\n\ninterface NoChartAvailableProps {\n  token0Address: string\n  token1Address: string\n  pairAddress: string\n  isMobile: boolean\n}\n\nconst NoChartAvailable: React.FC<NoChartAvailableProps> = ({ token0Address, token1Address, pairAddress, isMobile }) => {\n  const { t } = useTranslation()\n  return (\n    <>\n      <Flex justifyContent=\"center\" alignItems=\"center\" height=\"100%\" flexDirection=\"column\">\n        <Text mb={['8px', '8px', '0px']}>{t('Failed to load price chart for this pair')}</Text>\n        <Text\n          textAlign={isMobile ? 'center' : 'left'}\n          mb={['8px', '8px', '0px']}\n          color=\"textSubtle\"\n          small\n          style={isMobile && { wordSpacing: '100vw' }}\n        >\n          Token0: {token0Address ?? 'null'}\n        </Text>\n        <Text\n          textAlign={isMobile ? 'center' : 'left'}\n          mb={['8px', '8px', '0px']}\n          color=\"textSubtle\"\n          small\n          style={isMobile && { wordSpacing: '100vw' }}\n        >\n          Token1: {token1Address ?? 'null'}\n        </Text>\n        <Text\n          textAlign={isMobile ? 'center' : 'left'}\n          mb={['8px', '8px', '0px']}\n          color=\"textSubtle\"\n          small\n          style={isMobile && { wordSpacing: '100vw' }}\n        >\n          Pair: {pairAddress ?? 'null'}\n        </Text>\n      </Flex>\n    </>\n  )\n}\n\nexport default NoChartAvailable\n","import { Flex, FlexProps, Skeleton, Text } from '@pancakeswap/uikit'\nimport React, { FC } from 'react'\nimport { formatAmount, formatAmountNotation } from 'views/Info/utils/formatInfoNumbers'\n\nconst formatOptions = {\n  notation: 'standard' as formatAmountNotation,\n  displayThreshold: 0.001,\n  tokenPrecision: true,\n}\n\ninterface TokenDisplayProps extends FlexProps {\n  value?: number\n  inputSymbol?: string\n  outputSymbol?: string\n}\n\nconst TokenDisplay: FC<TokenDisplayProps> = ({ value, inputSymbol, outputSymbol, children, ...props }) => {\n  return value ? (\n    <Flex alignItems=\"flex-end\" flexWrap=\"wrap\" {...props}>\n      <Text fontSize=\"40px\" mr=\"8px\" bold>\n        {formatAmount(value, formatOptions)}\n      </Text>\n      {inputSymbol && outputSymbol && (\n        <Text color=\"textSubtle\" fontSize=\"20px\" mb=\"8px\" mr=\"8px\" bold>\n          {`${inputSymbol}/${outputSymbol}`}\n        </Text>\n      )}\n      {children}\n    </Flex>\n  ) : (\n    <Skeleton height=\"36px\" width=\"128px\" {...props} />\n  )\n}\n\nexport default TokenDisplay\n","import { Box, ButtonMenu, ButtonMenuItem, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport React, { useState , lazy, Suspense} from 'react'\nimport { useFetchPairPrices } from 'state/swap/hooks'\nimport { PairDataTimeWindowEnum } from 'state/swap/types'\nimport { LineChartLoader } from 'views/Info/components/ChartLoaders'\nimport NoChartAvailable from './NoChartAvailable'\nimport TokenDisplay from './TokenDisplay'\nimport { getTimeWindowChange } from './utils'\n\nconst SwapLineChart = lazy(() => import('./SwapLineChart'))\n\n\nconst BasicChart = ({\n  token0Address,\n  token1Address,\n  isChartExpanded,\n  inputCurrency,\n  outputCurrency,\n  isMobile,\n  currentSwapPrice,\n}) => {\n  const [timeWindow, setTimeWindow] = useState<PairDataTimeWindowEnum>(0)\n  const { pairPrices = [], pairId } = useFetchPairPrices({\n    token0Address,\n    token1Address,\n    timeWindow,\n    currentSwapPrice,\n  })\n\n  const [hoverValue, setHoverValue] = useState<number | undefined>()\n  const [hoverDate, setHoverDate] = useState<string | undefined>()\n  const valueToDisplay = hoverValue || pairPrices[pairPrices.length - 1]?.value\n  const { changePercentage, changeValue } = getTimeWindowChange(pairPrices)\n  const isChangePositive = changeValue >= 0\n  const chartHeight = isChartExpanded ? 'calc(100% - 120px)' : '378px'\n  const {\n    t,\n    currentLanguage: { locale },\n  } = useTranslation()\n  const currentDate = new Date().toLocaleString(locale, {\n    year: 'numeric',\n    month: 'short',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n  })\n\n  // Sometimes we might receive array full of zeros for obscure tokens while trying to derive data\n  // In that case chart is not useful to users\n  const isBadData =\n    pairPrices &&\n    pairPrices.length > 0 &&\n    pairPrices.every(\n      (price) => !price.value || price.value === 0 || price.value === Infinity || Number.isNaN(price.value),\n    )\n\n  if (isBadData) {\n    return (\n      <NoChartAvailable\n        token0Address={token0Address}\n        token1Address={token1Address}\n        pairAddress={pairId}\n        isMobile={isMobile}\n      />\n    )\n  }\n\n  return (\n    <>\n      <Flex\n        flexDirection={['column', null, null, null, null, null, 'row']}\n        alignItems={['flex-start', null, null, null, null, null, 'center']}\n        justifyContent=\"space-between\"\n        px=\"24px\"\n      >\n        <Flex flexDirection=\"column\" pt=\"12px\">\n          <TokenDisplay\n            value={pairPrices?.length > 0 && valueToDisplay}\n            inputSymbol={inputCurrency?.symbol}\n            outputSymbol={outputCurrency?.symbol}\n          >\n            <Text color={isChangePositive ? 'success' : 'failure'} fontSize=\"20px\" mt=\"-8px\" mb=\"8px\" bold>\n              {`${isChangePositive ? '+' : ''}${changeValue.toFixed(3)} (${changePercentage}%)`}\n            </Text>\n          </TokenDisplay>\n          <Text small color=\"secondary\">\n            {hoverDate || currentDate}\n          </Text>\n        </Flex>\n        <Box>\n          <ButtonMenu activeIndex={timeWindow} onItemClick={setTimeWindow} scale=\"sm\">\n            <ButtonMenuItem>{t('24H')}</ButtonMenuItem>\n            <ButtonMenuItem>{t('1W')}</ButtonMenuItem>\n            <ButtonMenuItem>{t('1M')}</ButtonMenuItem>\n            <ButtonMenuItem>{t('1Y')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Box>\n      </Flex>\n      <Box height={isMobile ? '100%' : chartHeight} p={isMobile ? '0px' : '16px'} width=\"100%\">\n      <Suspense fallback={<LineChartLoader />}>\n          <SwapLineChart\n            data={pairPrices}\n            setHoverValue={setHoverValue}\n            setHoverDate={setHoverDate}\n            isChangePositive={isChangePositive}\n            timeWindow={timeWindow}\n          />\n        </Suspense>\n      </Box>\n    </>\n  )\n}\n\nexport default React.memo(BasicChart, (prev, next) => {\n  return (\n    prev.token0Address === next.token0Address &&\n    prev.token1Address === next.token1Address &&\n    prev.isChartExpanded === next.isChartExpanded &&\n    prev.isMobile === next.isMobile &&\n    prev.isChartExpanded === next.isChartExpanded &&\n    ((prev.currentSwapPrice !== null &&\n      next.currentSwapPrice !== null &&\n      prev.currentSwapPrice[prev.token0Address] === next.currentSwapPrice[next.token0Address] &&\n      prev.currentSwapPrice[prev.token1Address] === next.currentSwapPrice[next.token1Address]) ||\n      (prev.currentSwapPrice === null && next.currentSwapPrice === null))\n  )\n})\n","import { Box, BunnyPlaceholderIcon, Flex, Text } from '@pancakeswap/uikit'\nimport TradingView, { useTradingViewEvent } from 'components/TradingView'\nimport { useTranslation } from 'contexts/Localization'\nimport useDebounce from 'hooks/useDebounce'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { BarChartLoader } from 'views/Info/components/ChartLoaders'\n\ninterface TradingViewChartProps {\n  outputSymbol: string\n  inputSymbol: string\n  isDark: boolean\n  onTwChartSymbol?: (symbol: string) => void\n}\n\nconst TradingViewWrapper = styled.div<{ $show: boolean }>`\n  opacity: ${({ $show }) => ($show ? 1 : 0)};\n  transition: opacity 0.2s ease-in;\n  height: 100%;\n`\n\nconst LoadingWrapper = styled.div<{ $isDark: boolean }>`\n  position: absolute;\n  inset: 0;\n  z-index: 1;\n  background: ${({ theme }) => theme.colors.backgroundAlt};\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    background: ${({ $isDark }) => ($isDark ? '#2E2E42' : '#F4FCFF')};\n  }\n`\n\nconst bnbToWBNBSymbol = (sym: string) => (sym === 'BNB' ? 'WBNB' : sym)\n\nconst ID = 'TV_SWAP_CHART'\nconst SYMBOL_PREFIX = 'PANCAKESWAP:'\n\nconst TradingViewChart = ({ outputSymbol, inputSymbol, isDark, onTwChartSymbol }: TradingViewChartProps) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const { t } = useTranslation()\n\n  const [hasNoData, setHasNoData] = useState(false)\n\n  const symbol = useMemo(() => {\n    if (!(inputSymbol && outputSymbol)) {\n      return null\n    }\n\n    const input = bnbToWBNBSymbol(inputSymbol)\n    const output = bnbToWBNBSymbol(outputSymbol)\n    return `${input}${output}`\n  }, [inputSymbol, outputSymbol])\n\n  const onNoDataEvent = useCallback(() => {\n    console.debug('No data from TV widget')\n    setHasNoData(true)\n  }, [])\n\n  const onLoadedEvent = useCallback(() => {\n    setIsLoading(false)\n  }, [])\n\n  useTradingViewEvent({\n    id: ID,\n    onNoDataEvent,\n    onLoadedEvent,\n  })\n\n  // debounce the loading to wait for no data event from TV widget.\n  // we cover the loading spinner over TV, let TV try to load data from pairs\n  // if there's no no-data event coming between the debounce time, we assume the chart is loaded\n  const debouncedLoading = useDebounce(isLoading, 800)\n\n  useEffect(() => {\n    if (!(isLoading || debouncedLoading) && !hasNoData && symbol) {\n      onTwChartSymbol(symbol)\n    } else {\n      onTwChartSymbol('')\n    }\n  }, [debouncedLoading, hasNoData, isLoading, onTwChartSymbol, symbol])\n\n  return (\n    <Box height=\"100%\" width=\"100%\" pt=\"4px\" position=\"relative\">\n      {hasNoData && (\n        <Flex height=\"100%\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n          <BunnyPlaceholderIcon width=\"96px\" height=\"96px\" />\n          <Text bold fontSize=\"20px\" color=\"textDisabled\" mt=\"16px\">\n            {t('TradingView chart not available')}\n          </Text>\n        </Flex>\n      )}\n      {(isLoading || debouncedLoading) && !hasNoData && (\n        <LoadingWrapper $isDark={isDark}>\n          <BarChartLoader />\n        </LoadingWrapper>\n      )}\n      {!hasNoData && (\n        <TradingViewWrapper $show={!isLoading}>\n          {symbol && <TradingView id={ID} symbol={`${SYMBOL_PREFIX}${symbol}`} />}\n        </TradingViewWrapper>\n      )}\n    </Box>\n  )\n}\n\nexport default React.memo(TradingViewChart)\n","import { Button, Flex, IconButton, SyncAltIcon, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { CurrencyLogo, DoubleCurrencyLogo } from 'components/Logo'\nimport { TradingViewLabel } from 'components/TradingView'\nimport { useTranslation } from 'contexts/Localization'\nimport React, { useCallback, useState } from 'react'\nimport { ChartViewMode } from 'state/user/actions'\nimport { useExchangeChartViewManager } from 'state/user/hooks'\nimport styled from 'styled-components'\nimport BasicChart from './BasicChart'\nimport { StyledPriceChart } from './styles'\nimport TradingViewChart from './TradingViewChart'\nimport TokenDisplay from './TokenDisplay'\n\nconst ChartButton = styled(Button)`\n  background-color: ${({ $active, theme }) => $active && `${theme.colors.primary}0f`};\n  padding: 4px 8px;\n  border-radius: 6px;\n  color: #dbbe62 !important;\n  font-weight: 400;\n`\n\nconst PriceChart = ({\n  inputCurrency,\n  outputCurrency,\n  onSwitchTokens,\n  isDark,\n  isChartExpanded,\n  setIsChartExpanded,\n  isMobile,\n  token0Address,\n  token1Address,\n  currentSwapPrice,\n}) => {\n  const { isDesktop } = useMatchBreakpoints()\n  const toggleExpanded = () => setIsChartExpanded((currentIsExpanded) => !currentIsExpanded)\n  const [chartView, setChartView] = useExchangeChartViewManager()\n  const [twChartSymbol, setTwChartSymbol] = useState('')\n  const { t } = useTranslation()\n\n  const handleTwChartSymbol = useCallback((symbol) => {\n    setTwChartSymbol(symbol)\n  }, [])\n\n  return (\n    <StyledPriceChart\n      height={chartView === ChartViewMode.TRADING_VIEW ? '100%' : '70%'}\n      overflow={chartView === ChartViewMode.TRADING_VIEW ? 'hidden' : 'unset'}\n      $isDark={isDark}\n      $isExpanded={isChartExpanded}\n    >\n      <Flex justifyContent=\"space-between\" px=\"24px\">\n        <Flex alignItems=\"center\">\n          {outputCurrency ? (\n            <DoubleCurrencyLogo currency0={inputCurrency} currency1={outputCurrency} size={24} margin />\n          ) : (\n            inputCurrency && <CurrencyLogo currency={inputCurrency} size=\"24px\" style={{ marginRight: '8px' }} />\n          )}\n          {inputCurrency && (\n            <Text color=\"text\" bold>\n              {outputCurrency ? `${inputCurrency.symbol}/${outputCurrency.symbol}` : inputCurrency.symbol}\n            </Text>\n          )}\n          <IconButton variant=\"text\" onClick={onSwitchTokens}>\n            <SyncAltIcon ml=\"6px\" color=\"primary\" />\n          </IconButton>\n          <Flex>\n            <ChartButton\n              aria-label={t('Basic')}\n              title={t('Basic')}\n              $active={chartView === ChartViewMode.BASIC}\n              scale=\"sm\"\n              variant=\"text\"\n              color=\"primary\"\n              onClick={() => setChartView(ChartViewMode.BASIC)}\n              mr=\"8px\"\n            >\n              {isDesktop && t('Basic')}\n            </ChartButton>\n            {/* <ChartButton\n              aria-label=\"TradingView\"\n              title=\"TradingView\"\n              $active={chartView === ChartViewMode.TRADING_VIEW}\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setChartView(ChartViewMode.TRADING_VIEW)}\n            >\n              {isDesktop && 'TradingView' }\n            </ChartButton> */}\n          </Flex>\n        </Flex>\n        {!isMobile && (\n          <Flex>\n            <IconButton variant=\"text\" onClick={toggleExpanded} />\n            {/* {isChartExpanded ? <ShrinkIcon color=\"text\" /> : <ExpandIcon color=\"text\" />} */}\n            {/* </IconButton> */}\n          </Flex>\n        )}\n      </Flex>\n      {chartView === ChartViewMode.BASIC && (\n        <BasicChart\n          token0Address={token0Address}\n          token1Address={token1Address}\n          isChartExpanded={isChartExpanded}\n          inputCurrency={inputCurrency}\n          outputCurrency={outputCurrency}\n          isMobile={isMobile}\n          currentSwapPrice={currentSwapPrice}\n        />\n      )}\n      {chartView === ChartViewMode.TRADING_VIEW && (\n        <Flex\n          flexDirection=\"column\"\n          justifyContent=\"space-between\"\n          height={isMobile ? '100%' : isChartExpanded ? 'calc(100% - 48px)' : '458px'}\n          pt=\"12px\"\n        >\n          <Flex justifyContent=\"space-between\" alignItems=\"baseline\" flexWrap=\"wrap\">\n            <TokenDisplay\n              value={currentSwapPrice?.[token0Address]}\n              inputSymbol={inputCurrency?.symbol}\n              outputSymbol={outputCurrency?.symbol}\n              mx=\"24px\"\n            />\n            {twChartSymbol && <TradingViewLabel symbol={twChartSymbol} />}\n          </Flex>\n          <TradingViewChart\n            // unmount the whole component when symbols is changed\n            key={`${inputCurrency?.symbol}-${outputCurrency?.symbol}`}\n            inputSymbol={inputCurrency?.symbol}\n            outputSymbol={outputCurrency?.symbol}\n            isDark={isDark}\n            onTwChartSymbol={handleTwChartSymbol}\n          />\n        </Flex>\n      )}\n    </StyledPriceChart>\n  )\n}\n\nexport default PriceChart\n","import { Currency } from '@pancakeswap/sdk'\nimport useTheme from 'hooks/useTheme'\nimport React, { useCallback, useState } from 'react'\nimport BnbWbnbNotice from './BnbWbnbNotice'\nimport { BNB_ADDRESS } from './constants'\nimport PriceChart from './PriceChart'\nimport { getTokenAddress } from './utils'\n\ntype PriceChartContainerProps = {\n  inputCurrencyId: string\n  inputCurrency: Currency\n  outputCurrencyId: string\n  outputCurrency: Currency\n  isChartExpanded: boolean\n  setIsChartExpanded: React.Dispatch<React.SetStateAction<boolean>>\n  isChartDisplayed: boolean\n  currentSwapPrice: {\n    [key: string]: number\n  }\n  isMobile?: boolean\n}\n\nconst PriceChartContainer: React.FC<PriceChartContainerProps> = ({\n  inputCurrencyId,\n  inputCurrency,\n  outputCurrency,\n  outputCurrencyId,\n  isChartExpanded,\n  setIsChartExpanded,\n  isChartDisplayed,\n  isMobile,\n  currentSwapPrice,\n}) => {\n  const token0Address = getTokenAddress(inputCurrencyId)\n  const token1Address = getTokenAddress(outputCurrencyId)\n  const [isPairReversed, setIsPairReversed] = useState(false)\n  const togglePairReversed = useCallback(() => setIsPairReversed((prePairReversed) => !prePairReversed), [])\n\n  const { isDark } = useTheme()\n\n  if (!isChartDisplayed) {\n    return null\n  }\n\n  const isBnbWbnb = token0Address === BNB_ADDRESS && token1Address === BNB_ADDRESS\n\n  if (isBnbWbnb) {\n    return <BnbWbnbNotice isDark={isDark} isChartExpanded={isChartExpanded} />\n  }\n\n  return (\n    <PriceChart\n      token0Address={isPairReversed ? token1Address : token0Address}\n      token1Address={isPairReversed ? token0Address : token1Address}\n      inputCurrency={isPairReversed ? outputCurrency : inputCurrency}\n      outputCurrency={isPairReversed ? inputCurrency : outputCurrency}\n      onSwitchTokens={togglePairReversed}\n      isDark={isDark}\n      isChartExpanded={isChartExpanded}\n      setIsChartExpanded={setIsChartExpanded}\n      isMobile={isMobile}\n      currentSwapPrice={currentSwapPrice}\n    />\n  )\n}\n\nexport default PriceChartContainer\n","import { Box, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport const StyledSwapContainer = styled(Flex)<{ $isChartExpanded: boolean }>`\n  flex-shrink: 0;\n  height: fit-content;\n  padding: 0 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0 40px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xxl} {\n    ${({ $isChartExpanded }) => ($isChartExpanded ? 'padding: 0 120px' : 'padding: 0 40px')};\n  }\n`\n\nexport const StyledInputCurrencyWrapper = styled(Box)`\n  width: 328px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChartIcon, Flex, Heading, HistoryIcon, IconButton, NotificationDot, Text, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from 'components/App/Transactions/TransactionsModal'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport { useExpertModeManager } from 'state/user/hooks'\n\ninterface Props {\n  title: string\n  subtitle: string\n  noConfig?: boolean\n  setIsChartDisplayed?: React.Dispatch<React.SetStateAction<boolean>>\n  isChartDisplayed?: boolean\n}\n\nconst CurrencyInputContainer = styled(Flex)`\n  align-items: center;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background: #fff;\n  svg {\n    fill: #000;\n  }\n`\n\nconst ColoredIconButton = styled(IconButton)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n\nconst CurrencyInputHeader: React.FC<Props> = ({ title, subtitle, setIsChartDisplayed, isChartDisplayed }) => {\n  const [expertMode] = useExpertModeManager()\n  const toggleChartDisplayed = () => {\n    setIsChartDisplayed((currentIsChartDisplayed) => !currentIsChartDisplayed)\n  }\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n\n  return (\n    <CurrencyInputContainer>\n      <Flex width=\"100%\" alignItems=\"flex-start\" justifyContent=\"space-between\">\n        {setIsChartDisplayed && <ColoredIconButton onClick={toggleChartDisplayed} variant=\"text\" scale=\"sm\" />}\n        <Flex flexDirection=\"column\" alignItems=\"center\">\n          <Heading as=\"h2\" color=\"primary\" mb=\"8px\" fontFamily=\"Good Times\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            <Text color=\"primary\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n        <Flex>\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <IconButton onClick={onPresentTransactionsModal} variant=\"text\" scale=\"sm\">\n            <HistoryIcon color=\"#000\" width=\"24px\" />\n          </IconButton>\n        </Flex>\n      </Flex>\n    </CurrencyInputContainer>\n  )\n}\n\nexport default CurrencyInputHeader\n","// import React, { useCallback, useEffect, useMemo, useState } from 'react'\n// import styled from 'styled-components'\n// import { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\n// import { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\n// import * as All from '@pancakeswap/uikit'\n// import { useIsTransactionUnsupported } from 'hooks/Trades'\n// import UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\n// import { RouteComponentProps } from 'react-router-dom'\n// import { useTranslation } from 'contexts/Localization'\n// import SwapWarningTokens from 'config/constants/swapWarningTokens'\n// import AddressInputPanel from './components/AddressInputPanel'\n// import { GreyCard } from '../../components/Card'\n// import Column, { AutoColumn } from '../../components/Layout/Column'\n// import ConfirmSwapModal from './components/ConfirmSwapModal'\n// import CurrencyInputPanel from '../../components/CurrencyInputPanel'\n// import { AutoRow, RowBetween } from '../../components/Layout/Row'\n// import AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\n// import confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\n// import { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\n// import TradePrice from './components/TradePrice'\n// import ImportTokenWarningModal from './components/ImportTokenWarningModal'\n// import ProgressSteps from './components/ProgressSteps'\n// import { AppHeader, AppBody } from '../../components/App'\n// import ConnectWalletButton from '../../components/ConnectWalletButton'\n\n// import { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\n// import useActiveWeb3React from '../../hooks/useActiveWeb3React'\n// import { useCurrency, useAllTokens } from '../../hooks/Tokens'\n// import { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\n// import { useSwapCallback } from '../../hooks/useSwapCallback'\n// import useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\n// import { Field } from '../../state/swap/actions'\n// import {\n//   useDefaultsFromURLSearch,\n//   useDerivedSwapInfo,\n//   useSwapActionHandlers,\n//   useSwapState,\n// } from '../../state/swap/hooks'\n// import { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\n// import { maxAmountSpend } from '../../utils/maxAmountSpend'\n// import { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\n// import CircleLoader from '../../components/Loader/CircleLoader'\n// import Page from '../Page'\n// import SwapWarningModal from './components/SwapWarningModal'\n// import PriceChartContainer from './components/Chart/PriceChartContainer'\n\n// console.log(\"All gladiators======\", All)\n// const Label = styled(Text)`\n//   font-size: 12px;\n//   font-weight: bold;\n//   color: ${({ theme }) => theme.colors.secondary};\n// `\n\n// export default function Swap({ history }: RouteComponentProps) {\n//   const loadedUrlParams = useDefaultsFromURLSearch()\n\n//   const { t } = useTranslation()\n\n//   // token warning stuff\n//   const [loadedInputCurrency, loadedOutputCurrency] = [\n//     useCurrency(loadedUrlParams?.inputCurrencyId),\n//     useCurrency(loadedUrlParams?.outputCurrencyId),\n//   ]\n//   const urlLoadedTokens: Token[] = useMemo(\n//     () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n//     [loadedInputCurrency, loadedOutputCurrency],\n//   )\n\n//   // dismiss warning if all imported tokens are in active lists\n//   const defaultTokens = useAllTokens()\n//   const importTokensNotInDefault =\n//     urlLoadedTokens &&\n//     urlLoadedTokens.filter((token: Token) => {\n//       return !(token.address in defaultTokens)\n//     })\n\n//   const { account } = useActiveWeb3React()\n\n//   // for expert mode\n//   const [isExpertMode] = useExpertModeManager()\n\n//   // get custom setting values for user\n//   const [allowedSlippage] = useUserSlippageTolerance()\n\n//   // swap state\n//   const { independentField, typedValue, recipient } = useSwapState()\n//   const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n//   const {\n//     wrapType,\n//     execute: onWrap,\n//     inputError: wrapInputError,\n//   } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n//   const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n//   const trade = showWrap ? undefined : v2Trade\n\n//   const parsedAmounts = showWrap\n//     ? {\n//         [Field.INPUT]: parsedAmount,\n//         [Field.OUTPUT]: parsedAmount,\n//       }\n//     : {\n//         [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n//         [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n//       }\n\n//   const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n//   const isValid = !swapInputError\n//   const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n//   const handleTypeInput = useCallback(\n//     (value: string) => {\n//       onUserInput(Field.INPUT, value)\n//     },\n//     [onUserInput],\n//   )\n//   const handleTypeOutput = useCallback(\n//     (value: string) => {\n//       onUserInput(Field.OUTPUT, value)\n//     },\n//     [onUserInput],\n//   )\n\n//   // modal and loading\n//   const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n//     tradeToConfirm: Trade | undefined\n//     attemptingTxn: boolean\n//     swapErrorMessage: string | undefined\n//     txHash: string | undefined\n//   }>({\n//     tradeToConfirm: undefined,\n//     attemptingTxn: false,\n//     swapErrorMessage: undefined,\n//     txHash: undefined,\n//   })\n\n//   const formattedAmounts = {\n//     [independentField]: typedValue,\n//     [dependentField]: showWrap\n//       ? parsedAmounts[independentField]?.toExact() ?? ''\n//       : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n//   }\n\n//   const route = trade?.route\n//   const userHasSpecifiedInputOutput = Boolean(\n//     currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n//   )\n//   const noRoute = !route\n\n//   // check whether the user has approved the router on the input token\n//   const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n//   // check if user has gone through approval process, used to show two step buttons, reset on token change\n//   const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n//   // mark when a user has submitted an approval, reset onTokenSelection for input field\n//   useEffect(() => {\n//     if (approval === ApprovalState.PENDING) {\n//       setApprovalSubmitted(true)\n//     }\n//   }, [approval, approvalSubmitted])\n\n//   const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n//   const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n//   // the callback to execute the swap\n//   const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n//   const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n//   const [singleHopOnly] = useUserSingleHopOnly()\n\n//   const handleSwap = useCallback(() => {\n//     if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee, t)) {\n//       return\n//     }\n//     if (!swapCallback) {\n//       return\n//     }\n//     setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n//     swapCallback()\n//       .then((hash) => {\n//         setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n//       })\n//       .catch((error) => {\n//         setSwapState({\n//           attemptingTxn: false,\n//           tradeToConfirm,\n//           swapErrorMessage: error.message,\n//           txHash: undefined,\n//         })\n//       })\n//   }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, t])\n\n//   // errors\n//   const [showInverted, setShowInverted] = useState<boolean>(false)\n\n//   // warnings on slippage\n//   const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n//   // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n//   // never show if price impact is above threshold in non expert mode\n//   const showApproveFlow =\n//     !swapInputError &&\n//     (approval === ApprovalState.NOT_APPROVED ||\n//       approval === ApprovalState.PENDING ||\n//       (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n//     !(priceImpactSeverity > 3 && !isExpertMode)\n\n//   const handleConfirmDismiss = useCallback(() => {\n//     setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n//     // if there was a tx hash, we want to clear the input\n//     if (txHash) {\n//       onUserInput(Field.INPUT, '')\n//     }\n//   }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n//   const handleAcceptChanges = useCallback(() => {\n//     setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n//   }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n//   // swap warning state\n//   const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n//   const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n//   const shouldShowSwapWarning = (swapCurrency) => {\n//     const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n//       const warningTokenData = warningTokenConfig[1]\n//       return swapCurrency.address === warningTokenData.address\n//     })\n//     return Boolean(isWarningToken)\n//   }\n\n//   useEffect(() => {\n//     if (swapWarningCurrency) {\n//       onPresentSwapWarningModal()\n//     }\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, [swapWarningCurrency])\n\n//   const handleInputSelect = useCallback(\n//     (inputCurrency) => {\n//       setApprovalSubmitted(false) // reset 2 step UI for approvals\n//       onCurrencySelection(Field.INPUT, inputCurrency)\n//       const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n//       if (showSwapWarning) {\n//         setSwapWarningCurrency(inputCurrency)\n//       } else {\n//         setSwapWarningCurrency(null)\n//       }\n//     },\n//     [onCurrencySelection],\n//   )\n\n//   const handleMaxInput = useCallback(() => {\n//     if (maxAmountInput) {\n//       onUserInput(Field.INPUT, maxAmountInput.toExact())\n//     }\n//   }, [maxAmountInput, onUserInput])\n\n//   const handleOutputSelect = useCallback(\n//     (outputCurrency) => {\n//       onCurrencySelection(Field.OUTPUT, outputCurrency)\n//       const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n//       if (showSwapWarning) {\n//         setSwapWarningCurrency(outputCurrency)\n//       } else {\n//         setSwapWarningCurrency(null)\n//       }\n//     },\n\n//     [onCurrencySelection],\n//   )\n\n//   const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n//   const [onPresentImportTokenWarningModal] = useModal(\n//     <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n//   )\n\n//   useEffect(() => {\n//     if (importTokensNotInDefault.length > 0) {\n//       onPresentImportTokenWarningModal()\n//     }\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//   }, [importTokensNotInDefault.length])\n\n//   const [onPresentConfirmModal] = useModal(\n//     <ConfirmSwapModal\n//       trade={trade}\n//       originalTrade={tradeToConfirm}\n//       onAcceptChanges={handleAcceptChanges}\n//       attemptingTxn={attemptingTxn}\n//       txHash={txHash}\n//       recipient={recipient}\n//       allowedSlippage={allowedSlippage}\n//       onConfirm={handleSwap}\n//       swapErrorMessage={swapErrorMessage}\n//       customOnDismiss={handleConfirmDismiss}\n//     />,\n//     true,\n//     true,\n//     'confirmSwapModal',\n//   )\n\n//   return (\n//     <>\n//        <PriceChartContainer\n//             inputCurrencyId={inputCurrencyId}\n//             inputCurrency={currencies[Field.INPUT]}\n//             outputCurrencyId={outputCurrencyId}\n//             outputCurrency={currencies[Field.OUTPUT]}\n//             isChartExpanded={isChartExpanded}\n//             setIsChartExpanded={setIsChartExpanded}\n//             isChartDisplayed={isChartDisplayed}\n//             currentSwapPrice={singleTokenPrice}\n//           />\n\n//     <Page>\n//       <AppBody>\n//         <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n//         <Wrapper id=\"swap-page\">\n//           <AutoColumn gap=\"md\">\n//             <CurrencyInputPanel\n//               label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n//               value={formattedAmounts[Field.INPUT]}\n//               showMaxButton={!atMaxAmountInput}\n//               currency={currencies[Field.INPUT]}\n//               onUserInput={handleTypeInput}\n//               onMax={handleMaxInput}\n//               onCurrencySelect={handleInputSelect}\n//               otherCurrency={currencies[Field.OUTPUT]}\n//               id=\"swap-currency-input\"\n//             />\n//             <AutoColumn justify=\"space-between\">\n//               <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n//                 <ArrowWrapper clickable>\n//                   <ArrowDownIcon\n//                     width=\"16px\"\n//                     onClick={() => {\n//                       setApprovalSubmitted(false) // reset 2 step UI for approvals\n//                       onSwitchTokens()\n//                     }}\n//                     color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n//                   />\n//                 </ArrowWrapper>\n//                 {recipient === null && !showWrap && isExpertMode ? (\n//                   <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n//                     {t('+ Add a send (optional)')}\n//                   </Button>\n//                 ) : null}\n//               </AutoRow>\n//             </AutoColumn>\n//             <CurrencyInputPanel\n//               value={formattedAmounts[Field.OUTPUT]}\n//               onUserInput={handleTypeOutput}\n//               label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n//               showMaxButton={false}\n//               currency={currencies[Field.OUTPUT]}\n//               onCurrencySelect={handleOutputSelect}\n//               otherCurrency={currencies[Field.INPUT]}\n//               id=\"swap-currency-output\"\n//             />\n\n//             {isExpertMode && recipient !== null && !showWrap ? (\n//               <>\n//                 <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n//                   <ArrowWrapper clickable={false}>\n//                     <ArrowDownIcon width=\"16px\" />\n//                   </ArrowWrapper>\n//                   <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n//                     {t('- Remove send')}\n//                   </Button>\n//                 </AutoRow>\n//                 <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n//               </>\n//             ) : null}\n\n//             {showWrap ? null : (\n//               <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n//                 {Boolean(trade) && (\n//                   <RowBetween align=\"center\">\n//                     <Label>{t('Price')}</Label>\n//                     <TradePrice\n//                       price={trade?.executionPrice}\n//                       showInverted={showInverted}\n//                       setShowInverted={setShowInverted}\n//                     />\n//                   </RowBetween>\n//                 )}\n//                 {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n//                   <RowBetween align=\"center\">\n//                     <Label>{t('Slippage Tolerance')}</Label>\n//                     <Text bold color=\"primary\">\n//                       {allowedSlippage / 100}%\n//                     </Text>\n//                   </RowBetween>\n//                 )}\n//               </AutoColumn>\n//             )}\n//           </AutoColumn>\n//           <Box mt=\"1rem\">\n//             {swapIsUnsupported ? (\n//               <Button width=\"100%\" disabled mb=\"4px\">\n//                 {t('Unsupported Asset')}\n//               </Button>\n//             ) : !account ? (\n//               <ConnectWalletButton width=\"100%\" />\n//             ) : showWrap ? (\n//               <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n//                 {wrapInputError ??\n//                   (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n//               </Button>\n//             ) : noRoute && userHasSpecifiedInputOutput ? (\n//               <GreyCard style={{ textAlign: 'center' }}>\n//                 <Text color=\"textSubtle\" mb=\"4px\">\n//                   {t('Insufficient liquidity for this trade.')}\n//                 </Text>\n//                 {singleHopOnly && (\n//                   <Text color=\"textSubtle\" mb=\"4px\">\n//                     {t('Try enabling multi-hop trades.')}\n//                   </Text>\n//                 )}\n//               </GreyCard>\n//             ) : showApproveFlow ? (\n//               <RowBetween>\n//                 <Button\n//                   variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n//                   onClick={approveCallback}\n//                   disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n//                   width=\"48%\"\n//                 >\n//                   {approval === ApprovalState.PENDING ? (\n//                     <AutoRow gap=\"6px\" justify=\"center\">\n//                       {t('Enabling')} <CircleLoader stroke=\"white\" />\n//                     </AutoRow>\n//                   ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n//                     t('Enabled')\n//                   ) : (\n//                     t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n//                   )}\n//                 </Button>\n//                 <Button\n//                   variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n//                   onClick={() => {\n//                     if (isExpertMode) {\n//                       handleSwap()\n//                     } else {\n//                       setSwapState({\n//                         tradeToConfirm: trade,\n//                         attemptingTxn: false,\n//                         swapErrorMessage: undefined,\n//                         txHash: undefined,\n//                       })\n//                       onPresentConfirmModal()\n//                     }\n//                   }}\n//                   width=\"48%\"\n//                   id=\"swap-button\"\n//                   disabled={\n//                     !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n//                   }\n//                 >\n//                   {priceImpactSeverity > 3 && !isExpertMode\n//                     ? t('Price Impact High')\n//                     : priceImpactSeverity > 2\n//                     ? t('Swap Anyway')\n//                     : t('Swap')}\n//                 </Button>\n//               </RowBetween>\n//             ) : (\n//               <Button\n//                 variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n//                 onClick={() => {\n//                   if (isExpertMode) {\n//                     handleSwap()\n//                   } else {\n//                     setSwapState({\n//                       tradeToConfirm: trade,\n//                       attemptingTxn: false,\n//                       swapErrorMessage: undefined,\n//                       txHash: undefined,\n//                     })\n//                     onPresentConfirmModal()\n//                   }\n//                 }}\n//                 id=\"swap-button\"\n//                 width=\"100%\"\n//                 disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n//               >\n//                 {swapInputError ||\n//                   (priceImpactSeverity > 3 && !isExpertMode\n//                     ? t('Price Impact Too High')\n//                     : priceImpactSeverity > 2\n//                     ? t('Swap Anyway')\n//                     : t('Swap'))}\n//               </Button>\n//             )}\n//             {showApproveFlow && (\n//               <Column style={{ marginTop: '1rem' }}>\n//                 <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n//               </Column>\n//             )}\n//             {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n//           </Box>\n//         </Wrapper>\n//       </AppBody>\n//       {!swapIsUnsupported ? (\n//         <AdvancedSwapDetailsDropdown trade={trade} />\n//       ) : (\n//         <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n//       )}\n//     </Page>\n//     </>\n//   )\n// }\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, IconButton, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport Footer from 'components/Menu/Footer'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n  useSingleTokenSwapInfo,\n} from '../../state/swap/hooks'\nimport {\n  useExpertModeManager,\n  useUserSlippageTolerance,\n  useUserSingleHopOnly,\n  useExchangeChartManager,\n} from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\nimport PriceChartContainer from './components/Chart/PriceChartContainer'\nimport { StyledInputCurrencyWrapper, StyledSwapContainer } from './styles'\nimport CurrencyInputHeader from './components/CurrencyInputHeader'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nconst SwitchIconButton = styled(IconButton)`\n  box-shadow: inset 0px -2px 0px rgba(0, 0, 0, 0.1);\n  .icon-up-down {\n    display: none;\n  }\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.primary};\n    .icon-down {\n      display: none;\n      fill: white;\n    }\n    .icon-up-down {\n      display: block;\n      fill: white;\n    }\n  }\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const [isChartExpanded, setIsChartExpanded] = useState(false)\n  const [userChartPreference, setUserChartPreference] = useExchangeChartManager(isMobile)\n  const [isChartDisplayed, setIsChartDisplayed] = useState(userChartPreference)\n\n  useEffect(() => {\n    setUserChartPreference(isChartDisplayed)\n  }, [isChartDisplayed, setUserChartPreference])\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  // Price data\n  const {\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n  } = useSwapState()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const singleTokenPrice = useSingleTokenSwapInfo()\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee, t)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, t])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      return swapCurrency.address === warningTokenData.address\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <Page>\n      <Flex width=\"100%\" justifyContent=\"center\" position=\"relative\">\n        {!isMobile && (\n          <PriceChartContainer\n            inputCurrencyId={inputCurrencyId}\n            inputCurrency={currencies[Field.INPUT]}\n            outputCurrencyId={outputCurrencyId}\n            outputCurrency={currencies[Field.OUTPUT]}\n            isChartExpanded={isChartExpanded}\n            setIsChartExpanded={setIsChartExpanded}\n            isChartDisplayed={isChartDisplayed}\n            currentSwapPrice={singleTokenPrice}\n          />\n        )}\n\n        <Flex flexDirection=\"column\">\n          <StyledSwapContainer $isChartExpanded={isChartExpanded}>\n            <StyledInputCurrencyWrapper mt={isChartExpanded ? '24px' : '0'}>\n              <AppBody>\n                <CurrencyInputHeader\n                  title={t('Swap')}\n                  subtitle={t('Trade tokens in an instant')}\n                  setIsChartDisplayed={setIsChartDisplayed}\n                  isChartDisplayed={isChartDisplayed}\n                />\n                <Wrapper\n                  id=\"swap-page\"\n                  style={{\n                    background: '#fff',\n                  }}\n                >\n                  <AutoColumn gap=\"md\">\n                    <CurrencyInputPanel\n                      label={\n                        independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')\n                      }\n                      value={formattedAmounts[Field.INPUT]}\n                      showMaxButton={!atMaxAmountInput}\n                      currency={currencies[Field.INPUT]}\n                      onUserInput={handleTypeInput}\n                      onMax={handleMaxInput}\n                      onCurrencySelect={handleInputSelect}\n                      otherCurrency={currencies[Field.OUTPUT]}\n                      id=\"swap-currency-input\"\n                    />\n\n                    <AutoColumn justify=\"space-between\">\n                      <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                        <SwitchIconButton\n                          variant=\"light\"\n                          scale=\"sm\"\n                          onClick={() => {\n                            setApprovalSubmitted(false) // reset 2 step UI for approvals\n                            onSwitchTokens()\n                          }}\n                          style={{\n                            background: '#EEEAF4',\n                          }}\n                        >\n                          <ArrowDownIcon\n                            className=\"icon-down\"\n                            style={{\n                              background: '#EEEAF4',\n                            }}\n                            color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                          />\n                        </SwitchIconButton>\n                        {recipient === null && !showWrap && isExpertMode ? (\n                          <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                            {t('+ Add a send (optional)')}\n                          </Button>\n                        ) : null}\n                      </AutoRow>\n                    </AutoColumn>\n                    <CurrencyInputPanel\n                      value={formattedAmounts[Field.OUTPUT]}\n                      onUserInput={handleTypeOutput}\n                      label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n                      showMaxButton={false}\n                      currency={currencies[Field.OUTPUT]}\n                      onCurrencySelect={handleOutputSelect}\n                      otherCurrency={currencies[Field.INPUT]}\n                      id=\"swap-currency-output\"\n                    />\n\n                    {isExpertMode && recipient !== null && !showWrap ? (\n                      <>\n                        <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                          <ArrowWrapper clickable={false}>\n                            <ArrowDownIcon width=\"16px\" />\n                          </ArrowWrapper>\n                          <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                            {t('- Remove send')}\n                          </Button>\n                        </AutoRow>\n                        <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n                      </>\n                    ) : null}\n\n                    {showWrap ? null : (\n                      <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                        {Boolean(trade) && (\n                          <RowBetween align=\"center\">\n                            <Label>{t('Price')}</Label>\n                            <TradePrice\n                              price={trade?.executionPrice}\n                              showInverted={showInverted}\n                              setShowInverted={setShowInverted}\n                            />\n                          </RowBetween>\n                        )}\n                        {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                          <RowBetween align=\"center\">\n                            <Label>{t('Slippage Tolerance')}</Label>\n                            <Text bold color=\"primary\">\n                              {allowedSlippage / 100}%\n                            </Text>\n                          </RowBetween>\n                        )}\n                      </AutoColumn>\n                    )}\n                  </AutoColumn>\n                  <Box mt=\"1rem\">\n                    {swapIsUnsupported ? (\n                      <Button width=\"100%\" disabled mb=\"4px\">\n                        {t('Unsupported Asset')}\n                      </Button>\n                    ) : !account ? (\n                      <ConnectWalletButton width=\"100%\" />\n                    ) : showWrap ? (\n                      <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                        {wrapInputError ??\n                          (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n                      </Button>\n                    ) : noRoute && userHasSpecifiedInputOutput ? (\n                      <GreyCard style={{ textAlign: 'center' }}>\n                        <Text color=\"textSubtle\" mb=\"4px\">\n                          {t('Insufficient liquidity for this trade.')}\n                        </Text>\n                        {singleHopOnly && (\n                          <Text color=\"textSubtle\" mb=\"4px\">\n                            {t('Try enabling multi-hop trades.')}\n                          </Text>\n                        )}\n                      </GreyCard>\n                    ) : showApproveFlow ? (\n                      <RowBetween>\n                        <Button\n                          variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                          onClick={approveCallback}\n                          disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                          width=\"48%\"\n                        >\n                          {approval === ApprovalState.PENDING ? (\n                            <AutoRow gap=\"6px\" justify=\"center\">\n                              {t('Enabling')} <CircleLoader stroke=\"white\" />\n                            </AutoRow>\n                          ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                            t('Enabled')\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                          )}\n                        </Button>\n                        <Button\n                          variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                          onClick={() => {\n                            if (isExpertMode) {\n                              handleSwap()\n                            } else {\n                              setSwapState({\n                                tradeToConfirm: trade,\n                                attemptingTxn: false,\n                                swapErrorMessage: undefined,\n                                txHash: undefined,\n                              })\n                              onPresentConfirmModal()\n                            }\n                          }}\n                          width=\"48%\"\n                          id=\"swap-button\"\n                          disabled={\n                            !isValid ||\n                            approval !== ApprovalState.APPROVED ||\n                            (priceImpactSeverity > 3 && !isExpertMode)\n                          }\n                        >\n                          {priceImpactSeverity > 3 && !isExpertMode\n                            ? t('Price Impact High')\n                            : priceImpactSeverity > 2\n                            ? t('Swap Anyway')\n                            : t('Swap')}\n                        </Button>\n                      </RowBetween>\n                    ) : (\n                      <Button\n                        variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                        onClick={() => {\n                          if (isExpertMode) {\n                            handleSwap()\n                          } else {\n                            setSwapState({\n                              tradeToConfirm: trade,\n                              attemptingTxn: false,\n                              swapErrorMessage: undefined,\n                              txHash: undefined,\n                            })\n                            onPresentConfirmModal()\n                          }\n                        }}\n                        id=\"swap-button\"\n                        width=\"100%\"\n                        disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n                      >\n                        {swapInputError ||\n                          (priceImpactSeverity > 3 && !isExpertMode\n                            ? t('Price Impact Too High')\n                            : priceImpactSeverity > 2\n                            ? t('Swap Anyway')\n                            : t('Swap'))}\n                      </Button>\n                    )}\n                    {showApproveFlow && (\n                      <Column style={{ marginTop: '1rem' }}>\n                        <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n                      </Column>\n                    )}\n                    {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n                  </Box>\n                </Wrapper>\n              </AppBody>\n              {!swapIsUnsupported ? (\n                trade && <AdvancedSwapDetailsDropdown trade={trade} />\n              ) : (\n                <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n              )}\n            </StyledInputCurrencyWrapper>\n          </StyledSwapContainer>\n          {isChartExpanded && (\n            <Box display={['none', null, null, 'block']} width=\"100%\" height=\"100%\">\n              <Footer />\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n * @param t Translation\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent, t: ContextApi['t']): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    const confirmWord = 'confirm'\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        t(\n          'This swap has a price impact of at least %amount%%. Please type the word \"%word%\" to continue with this swap.',\n          {\n            amount: PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0),\n            word: confirmWord,\n          },\n        ),\n      ) === confirmWord\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      t(\n        'This swap has a price impact of at least %amount%%. Please confirm that you would like to continue with this swap.',\n        {\n          amount: ALLOWED_PRICE_IMPACT_HIGH.toFixed(0),\n        },\n      ),\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { AutoRenewIcon, Box, Button, Flex, InjectedModalProps, Modal, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport confetti from 'canvas-confetti'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAnniversaryAchievementContract } from 'hooks/useContract'\nimport { delay } from 'lodash'\n\nconst AnniversaryImage = styled.img`\n  border-radius: 50%;\n  height: 128px;\n  margin-bottom: 24px;\n  margin-right: 8px;\n  width: 128px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\nconst AnniversaryAchievementModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { t } = useTranslation()\n  const [isLoading, setIsLoading] = useState(false)\n  const { claimAnniversaryPoints } = useAnniversaryAchievementContract()\n\n  const handleClick = async () => {\n    setIsLoading(true)\n    try {\n      await claimAnniversaryPoints()\n    } finally {\n      onDismiss()\n    }\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  return (\n    <Modal title={t('Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        <Box>\n          <AnniversaryImage src=\"/images/achievements/1-year.svg\" />\n        </Box>\n        <Text textAlign=\"center\" bold color=\"secondary\" maxWidth=\"400px\" fontSize=\"16px\" mb=\"24px\">\n          {t('You won points for joining PancakeSwap during the first year of our journey!')}\n        </Text>\n        <Button\n          disabled={isLoading}\n          onClick={handleClick}\n          endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n        >\n          {isLoading ? t('Claiming...') : t('Claim now')}\n        </Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default AnniversaryAchievementModal\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useModal } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getAnniversaryAchievementContract } from 'utils/contractHelpers'\nimport AnniversaryAchievementModal from './AnniversaryAchievementModal'\n\ninterface GlobalCheckClaimStatusProps {\n  excludeLocations: string[]\n}\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckClaimStatus: React.FC<GlobalCheckClaimStatusProps> = ({ excludeLocations }) => {\n  const hasDisplayedModal = useRef(false)\n  const [canClaimAnniversaryPoints, setCanClaimAnniversaryPoints] = useState(false)\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n  const [onPresentAnniversaryModal] = useModal(<AnniversaryAchievementModal />)\n\n  // Check claim status\n  useEffect(() => {\n    const fetchClaimAnniversaryStatus = async () => {\n      const { canClaim } = getAnniversaryAchievementContract()\n      const canClaimAnniversary = await canClaim(account)\n      setCanClaimAnniversaryPoints(canClaimAnniversary)\n    }\n\n    if (account) {\n      fetchClaimAnniversaryStatus()\n    }\n  }, [account])\n\n  // Check if we need to display the modal\n  useEffect(() => {\n    const matchesSomeLocations = excludeLocations.some((location) => pathname.includes(location))\n\n    if (canClaimAnniversaryPoints && !matchesSomeLocations && !hasDisplayedModal.current) {\n      onPresentAnniversaryModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, excludeLocations, hasDisplayedModal, onPresentAnniversaryModal, canClaimAnniversaryPoints])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckClaimStatus\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport useScrollOnRouteChange from 'hooks/useScrollOnRouteChange'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\nimport GlobalCheckClaimStatus from './components/GlobalCheckClaimStatus'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst PredictionsLeaderboard = lazy(() => import('./views/Predictions/Leaderboard'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst Info = lazy(() => import('./views/Info'))\nconst NftMarket = lazy(() => import('./views/Nft/market'))\nconst ProfileCreation = lazy(() => import('./views/ProfileCreation'))\n\nconst Gallery = lazy(() => import('./views/Gallery'))\nconst ArenaPools = lazy(() => import('./views/ArenaPools'))\nconst MyGladiators = lazy(() => import('./views/MyGladiators'))\nconst Arena = lazy(() => import('./views/PoolTour3D'))\nconst Battles = lazy(() => import('./views/Battles'))\nconst BattleStart = lazy(() => import('./views/BattleStart'))\nconst School = lazy(() => import('./views/School'))\nconst Referrals = lazy(() => import('./views/Referrals'))\nconst StakeGladiators = lazy(() => import('./views/StakeGladiators'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account } = useWeb3React()\n\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n  useScrollOnRouteChange()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <GlobalCheckClaimStatus excludeLocations={[]} />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifonotfoundfornow\">\n              <Ifos />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/create-profile\">\n              <ProfileCreation />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route exact path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route path=\"/prediction/leaderboard\">\n              <PredictionsLeaderboard />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n            {/* Info pages */}\n            <Route path=\"/info\">\n              <Info />\n            </Route>\n\n            <Route path=\"/gallery\">\n              <Gallery />\n            </Route>\n            <Route exact path=\"/room/pools\">\n              <ArenaPools />\n            </Route>\n            <Route exact path=\"/stakegladiator\">\n              <StakeGladiators />\n            </Route>\n            <Route exact path=\"/battles/join\">\n              <Battles />\n            </Route>\n            <Route exact path=\"/battles/start\">\n              <BattleStart />\n            </Route>\n            <Route path=\"/mygladiators\">\n              <Arena />\n            </Route>\n            <Route path=\"/tour/:id\">\n              <Arena />\n            </Route>\n            <Route path=\"/school\">\n              <Arena />\n            </Route>\n            <Route exact path=\"/battles/bet\">\n              <Predictions />\n            </Route>\n            {/* NFT */}\n            <Route path=\"/nfts\">\n              <NftMarket />\n            </Route>\n            {/* Re */}\n            <Route path=\"/referrals\">\n              <Referrals />\n            </Route>\n\n            {/* <Route path=\"/pancake-squad\">\n              <PancakeSquad />\n            </Route> */}\n\n            {/* Info pages */}\n            <Route path=\"/info\">\n              <Info />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Redirect to=\"/nfts\" />\n            </Route>\n            <Route path=\"/profile\">\n              <Redirect to={`${nftsBaseUrl}/profile/${account?.toLowerCase() || ''}`} />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark, darkColors } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { SWRConfig } from 'swr'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\nimport { fetchStatusMiddleware } from 'hooks/useSWRContract'\n\nconst ThemeProviderWrapper = (props) => {\n  // ignoring light theme for now.\n  // const [isDark] = useThemeManager()\n  // return <ThemeProvider theme={isDark ? dark : light} {...props} />\n  // const updatedTheme =\n  dark.colors.primary = '#7645D9'\n  dark.colors.secondary = '#7645D9'\n  return <ThemeProvider theme={dark} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <SWRConfig\n                    value={{\n                      use: [fetchStatusMiddleware],\n                    }}\n                  >\n                    <ModalProvider>{children}</ModalProvider>\n                  </SWRConfig>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","export default __webpack_public_path__ + \"static/media/GOODTIME.6a0c90de.TTF\";","import { createGlobalStyle } from 'styled-components'\r\n\r\nimport goodTimes from './GOODTIME.TTF'\r\n\r\nexport default createGlobalStyle`\r\n    @font-face {\r\n        font-family: 'Good Times';\r\n        src: url(${goodTimes})  format('truetype');\r\n    }\r\n`\r\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\nimport GlobalFonts from './fonts/good_times/font'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <GlobalFonts />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}