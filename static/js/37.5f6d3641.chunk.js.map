{"version":3,"sources":["../node_modules/lodash/_shuffleSelf.js","../node_modules/lodash/shuffle.js","../node_modules/lodash/_arrayShuffle.js","../node_modules/lodash/_baseShuffle.js","views/Nft/market/Collections/index.tsx"],"names":["baseRandom","require","module","exports","array","size","index","length","lastIndex","undefined","rand","value","arrayShuffle","baseShuffle","isArray","collection","copyArray","shuffleSelf","values","ITEMS_PER_PAGE","SORT_FIELD","PageButtons","styled","div","Arrow","theme","colors","primary","Collectible","t","useTranslation","collections","useGetCollections","isMobile","useMatchBreakpoints","useState","sortField","setSortField","sortDirection","setSortDirection","page","setPage","maxPage","setMaxPage","useEffect","setTimeout","window","scroll","top","left","behavior","extraPages","collectionValues","Object","Math","floor","sortedCollections","useMemo","sort","a","b","createdAt","Date","parse","parseFloat","shuffle","handleSort","useCallback","newField","arrow","field","as","scale","color","textAlign","style","cursor","onClick","map","volume","totalVolumeBNB","toLocaleString","minimumFractionDigits","maximumFractionDigits","to","nftsBaseUrl","address","alignItems","src","avatar","width","height","mr","name","ml","numberTokensListed","totalSupply","slice"],"mappings":"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","file":"static/js/37.5f6d3641.chunk.js","sourcesContent":["var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport {\n  Table,\n  Th,\n  Td,\n  Card,\n  Flex,\n  BnbUsdtPairTokenIcon,\n  Heading,\n  useMatchBreakpoints,\n  ProfileAvatar,\n  ArrowBackIcon,\n  Text,\n  ArrowForwardIcon,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { useGetCollections } from 'state/nftMarket/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport shuffle from 'lodash/shuffle'\n\nexport const ITEMS_PER_PAGE = 10\n\nconst SORT_FIELD = {\n  createdAt: 'createdAt',\n  volumeBNB: 'totalVolumeBNB',\n  items: 'numberTokensListed',\n  supply: 'totalSupply',\n}\n\nexport const PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0.2em;\n  margin-bottom: 1.2em;\n`\n\nexport const Arrow = styled.div`\n  color: ${({ theme }) => theme.colors.primary};\n  padding: 0 20px;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst Collectible = () => {\n  const { t } = useTranslation()\n  const collections = useGetCollections()\n  const { isMobile } = useMatchBreakpoints()\n  const [sortField, setSortField] = useState(null)\n  const [sortDirection, setSortDirection] = useState<boolean>(false)\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n\n  useEffect(() => {\n    setTimeout(() => {\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      })\n    }, 50)\n  }, [page])\n\n  useEffect(() => {\n    let extraPages = 1\n    const collectionValues = collections ? Object.values(collections) : []\n    if (collectionValues.length % ITEMS_PER_PAGE === 0) {\n      extraPages = 0\n    }\n    setMaxPage(Math.floor(collectionValues.length / ITEMS_PER_PAGE) + extraPages)\n  }, [collections])\n\n  const sortedCollections = useMemo(() => {\n    const collectionValues = collections ? Object.values(collections) : []\n\n    if (!sortField) {\n      return shuffle(collectionValues)\n    }\n\n    return collectionValues.sort((a, b) => {\n      if (a && b) {\n        if (sortField === SORT_FIELD.createdAt) {\n          if (a.createdAt && b.createdAt) {\n            return Date.parse(a.createdAt) - Date.parse(b.createdAt)\n              ? (sortDirection ? -1 : 1) * 1\n              : (sortDirection ? -1 : 1) * -1\n          }\n          return -1\n        }\n        return parseFloat(a[sortField]) > parseFloat(b[sortField])\n          ? (sortDirection ? -1 : 1) * 1\n          : (sortDirection ? -1 : 1) * -1\n      }\n      return -1\n    })\n  }, [collections, sortDirection, sortField])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField],\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      const directionArrow = !sortDirection ? '↑' : '↓'\n      return sortField === field ? directionArrow : ''\n    },\n    [sortDirection, sortField],\n  )\n\n  return (\n    <>\n      <PageHeader>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" data-test=\"nft-collections-title\">\n          {t('Collections')}\n        </Heading>\n      </PageHeader>\n      <Page>\n        <Card>\n          <Table>\n            <thead>\n              <tr>\n                <Th textAlign=\"left\" style={{ cursor: 'pointer' }} onClick={() => handleSort(SORT_FIELD.createdAt)}>\n                  {t('Collection')}\n                  {arrow(SORT_FIELD.createdAt)}\n                </Th>\n                <Th textAlign=\"left\" style={{ cursor: 'pointer' }} onClick={() => handleSort(SORT_FIELD.volumeBNB)}>\n                  {t('Volume')}\n                  {arrow(SORT_FIELD.volumeBNB)}\n                </Th>\n                {!isMobile && (\n                  <>\n                    <Th textAlign=\"left\" style={{ cursor: 'pointer' }} onClick={() => handleSort(SORT_FIELD.items)}>\n                      {t('Items')}\n                      {arrow(SORT_FIELD.items)}\n                    </Th>\n                    <Th textAlign=\"left\" style={{ cursor: 'pointer' }} onClick={() => handleSort(SORT_FIELD.supply)}>\n                      {t('Supply')}\n                      {arrow(SORT_FIELD.supply)}\n                    </Th>\n                  </>\n                )}\n              </tr>\n            </thead>\n            <tbody>\n              {sortedCollections\n                .map((collection) => {\n                  const volume = collection.totalVolumeBNB\n                    ? parseFloat(collection.totalVolumeBNB).toLocaleString(undefined, {\n                        minimumFractionDigits: 3,\n                        maximumFractionDigits: 3,\n                      })\n                    : '0'\n                  return (\n                    <tr key={collection.address} data-test=\"nft-collection-row\">\n                      <Td>\n                        <Link to={`${nftsBaseUrl}/collections/${collection.address}`}>\n                          <Flex alignItems=\"center\">\n                            <ProfileAvatar src={collection.avatar} width={48} height={48} mr=\"16px\" />\n                            {collection.name}\n                          </Flex>\n                        </Link>\n                      </Td>\n                      <Td>\n                        <Flex alignItems=\"center\">\n                          {volume}\n                          <BnbUsdtPairTokenIcon ml=\"8px\" />\n                        </Flex>\n                      </Td>\n                      {!isMobile && (\n                        <>\n                          <Td>{collection.numberTokensListed}</Td>\n                          <Td>{collection.totalSupply}</Td>\n                        </>\n                      )}\n                    </tr>\n                  )\n                })\n                .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)}\n            </tbody>\n          </Table>\n          <PageButtons>\n            <Arrow\n              onClick={() => {\n                setPage(page === 1 ? page : page - 1)\n              }}\n            >\n              <ArrowBackIcon color={page === 1 ? 'textDisabled' : 'primary'} />\n            </Arrow>\n\n            <Text>{t('Page %page% of %maxPage%', { page, maxPage })}</Text>\n\n            <Arrow\n              onClick={() => {\n                setPage(page === maxPage ? page : page + 1)\n              }}\n            >\n              <ArrowForwardIcon color={page === maxPage ? 'textDisabled' : 'primary'} />\n            </Arrow>\n          </PageButtons>\n        </Card>\n      </Page>\n    </>\n  )\n}\n\nexport default Collectible\n"],"sourceRoot":""}