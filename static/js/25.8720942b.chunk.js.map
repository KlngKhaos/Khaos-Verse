{"version":3,"sources":["views/Nft/market/Collection/TopBar.tsx","views/Nft/market/Collection/LowestPriceStatBoxItem.tsx","views/Nft/market/Collection/Header.tsx","views/Nft/market/Collection/Activity/index.tsx","components/AddressInputSelect/index.tsx","views/Nft/market/components/MarketPageHeader.tsx","views/Nft/market/components/StatBox.tsx","views/Nft/market/components/BannerHeader/AvatarImage.tsx","views/Nft/market/components/SearchBar.tsx","views/Nft/market/components/MarketPageTitle.tsx","views/Nft/market/components/BaseSubMenu.tsx","views/Nft/market/components/BannerHeader/BannerImage.tsx","views/Nft/market/components/BannerHeader/index.tsx"],"names":["BackLink","styled","RouterLink","theme","colors","primary","TopBar","t","useTranslation","alignItems","justifyContent","mb","to","nftsBaseUrl","color","width","SearchBar","LowestPriceStatBoxItem","collectionAddress","props","useState","lowestPrice","setLowestPrice","useEffect","a","getLowestPriceInCollection","lowestCollectionPrice","fetchLowestPrice","formattedLowestPrice","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","StatBox","title","symbol","stat","Header","collection","useParams","totalSupply","numberTokensListed","totalVolumeBNB","banner","avatar","useLocation","pathname","hash","volume","parseFloat","itemsConfig","label","href","MarketPageHeader","BannerHeader","bannerImage","large","AvatarImage","src","MarketPageTitle","name","description","formatNumber","Number","address","Container","BaseSubMenu","items","activeItem","mt","Activity","useGetCollection","ResultStatus","SubMenu","div","input","inputSecondary","radii","default","isOpen","AddressLink","Text","initialState","isFetching","resultFound","NOT_VALID","value","defaultValidAddressHandler","Promise","resolve","AddressInputSelect","onValidAddress","onAddressClick","state","setState","isAddress","prevState","hasResults","FOUND","NOT_FOUND","validAddressHandler","position","placeholder","subject","toLowerCase","onChange","evt","newValue","target","style","zIndex","paddingRight","top","right","onClick","px","fontWeight","Background","PageHeader","StatBoxItem","fontSize","textAlign","height","mx","Flex","card","attrs","alt","borderColor","history","useHistory","push","children","gridGap","gridTemplateColumns","as","scale","SubMenuItems","cardBorder","StyledBannerImage","mediaQueries","sm","md","bannerAlt","flexDirection","pb","BannerImage","bottom","left"],"mappings":"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","file":"static/js/25.8720942b.chunk.js","sourcesContent":["import React from 'react'\nimport { Box, ChevronLeftIcon, Flex } from '@pancakeswap/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport SearchBar from '../components/SearchBar'\n\nconst BackLink = styled(RouterLink)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: inline-flex;\n  font-weight: 600;\n`\n\nconst TopBar: React.FC = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n      <BackLink to={`${nftsBaseUrl}/collections`}>\n        <ChevronLeftIcon color=\"primary\" width=\"24px\" />\n        {t('All Collections')}\n      </BackLink>\n      <Box>\n        <SearchBar />\n      </Box>\n    </Flex>\n  )\n}\n\nexport default TopBar\n","import React, { useEffect, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { getLowestPriceInCollection } from 'state/nftMarket/helpers'\nimport { StatBoxItem, StatBoxItemProps } from '../components/StatBox'\n\ninterface LowestPriceStatBoxItemProps extends Omit<StatBoxItemProps, 'title' | 'stat'> {\n  collectionAddress: string\n}\n\nconst LowestPriceStatBoxItem: React.FC<LowestPriceStatBoxItemProps> = ({ collectionAddress, ...props }) => {\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    const fetchLowestPrice = async () => {\n      const lowestCollectionPrice = await getLowestPriceInCollection(collectionAddress)\n      setLowestPrice(lowestCollectionPrice)\n    }\n\n    fetchLowestPrice()\n  }, [collectionAddress, setLowestPrice])\n\n  const formattedLowestPrice =\n    lowestPrice === null\n      ? null\n      : lowestPrice.toLocaleString(undefined, {\n          minimumFractionDigits: 3,\n          maximumFractionDigits: 3,\n        })\n\n  return <StatBoxItem title={t('Lowest (%symbol%)', { symbol: 'BNB' })} stat={formattedLowestPrice} {...props} />\n}\n\nexport default LowestPriceStatBoxItem\n","import React from 'react'\nimport { useLocation, useParams } from 'react-router'\nimport { Text } from '@pancakeswap/uikit'\nimport { Collection } from 'state/nftMarket/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport MarketPageHeader from '../components/MarketPageHeader'\nimport MarketPageTitle from '../components/MarketPageTitle'\nimport StatBox, { StatBoxItem } from '../components/StatBox'\nimport BannerHeader from '../components/BannerHeader'\nimport AvatarImage from '../components/BannerHeader/AvatarImage'\nimport BaseSubMenu from '../components/BaseSubMenu'\nimport { nftsBaseUrl } from '../constants'\nimport TopBar from './TopBar'\nimport LowestPriceStatBoxItem from './LowestPriceStatBoxItem'\n\ninterface HeaderProps {\n  collection: Collection\n}\n\nconst Header: React.FC<HeaderProps> = ({ collection }) => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const { totalSupply, numberTokensListed, totalVolumeBNB, banner, avatar } = collection\n  const { t } = useTranslation()\n  const { pathname, hash } = useLocation()\n\n  const volume = totalVolumeBNB\n    ? parseFloat(totalVolumeBNB).toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })\n    : '0'\n\n  const itemsConfig = [\n    {\n      label: t('Items'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#items`,\n    },\n    {\n      label: t('Traits'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#traits`,\n    },\n    {\n      label: t('Activity'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#activity`,\n    },\n  ]\n\n  return (\n    <>\n      <MarketPageHeader>\n        <TopBar />\n        <BannerHeader bannerImage={banner.large} avatar={<AvatarImage src={avatar} />} />\n        <MarketPageTitle\n          title={collection.name}\n          description={collection.description ? <Text color=\"textSubtle\">{t(collection.description)}</Text> : null}\n        >\n          <StatBox>\n            <StatBoxItem title={t('Items')} stat={formatNumber(Number(totalSupply), 0, 0)} />\n            <StatBoxItem\n              title={t('Items listed')}\n              stat={numberTokensListed ? formatNumber(Number(numberTokensListed), 0, 0) : '0'}\n            />\n            <LowestPriceStatBoxItem collectionAddress={collection.address} />\n            <StatBoxItem title={t('Vol. (%symbol%)', { symbol: 'BNB' })} stat={volume} />\n          </StatBox>\n        </MarketPageTitle>\n      </MarketPageHeader>\n      <Container>\n        <BaseSubMenu items={itemsConfig} activeItem={`${pathname}${hash || '#items'}`} mt=\"24px\" mb=\"8px\" />\n      </Container>\n    </>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useGetCollection } from 'state/nftMarket/hooks'\nimport Header from '../Header'\nimport ActivityHistory from '../../ActivityHistory/ActivityHistory'\n\nconst Activity = () => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const collection = useGetCollection(collectionAddress)\n\n  return (\n    <>\n      <Header collection={collection} />\n      <ActivityHistory collection={collection} />\n    </>\n  )\n}\n\nexport default Activity\n","import React, { ChangeEvent, useState, useEffect } from 'react'\nimport { Box, BoxProps, Text, Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { isAddress } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport CircleLoader from 'components/Loader/CircleLoader'\n\nenum ResultStatus {\n  NOT_VALID,\n  FOUND,\n  NOT_FOUND,\n}\n\ninterface AddressInputSelectProps extends BoxProps {\n  onValidAddress?: (value: string) => Promise<boolean>\n  onAddressClick: (value: string) => void\n}\n\nconst SubMenu = styled.div<{ isOpen: boolean }>`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.input};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 0 0 ${({ theme }) => theme.radii.default} ${({ theme }) => theme.radii.default};\n  left: 0;\n  padding-bottom: 8px;\n  padding-top: 16px;\n  position: absolute;\n  top: calc(100% - 12px);\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  width: 100%;\n  z-index: 15;\n\n  ${({ isOpen }) =>\n    isOpen &&\n    `\n    height: auto;\n    opacity: 1;\n    transform: scaleY(1);\n  `}\n`\n\nconst AddressLink = styled(Text)`\n  cursor: pointer;\n  overflow-wrap: break-word;\n  font-weight: bold;\n  padding-left: 16px;\n  padding-right: 16px;\n`\n\nconst initialState = {\n  isFetching: false,\n  resultFound: ResultStatus.NOT_VALID,\n  value: '',\n}\n\nconst defaultValidAddressHandler = () => Promise.resolve(true)\n\nconst AddressInputSelect: React.FC<AddressInputSelectProps> = ({\n  onValidAddress = defaultValidAddressHandler,\n  onAddressClick,\n  ...props\n}) => {\n  const [state, setState] = useState(initialState)\n  const { t } = useTranslation()\n  const { isFetching, resultFound, value } = state\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value: newValue } = evt.target\n    setState((prevState) => ({\n      ...prevState,\n      value: newValue,\n    }))\n  }\n\n  const handleClick = () => {\n    setState(initialState)\n    onAddressClick(state.value)\n  }\n\n  // When we have a valid address fetch the data\n  useEffect(() => {\n    const isValidAddress = isAddress(value) !== false\n\n    const validAddressHandler = async () => {\n      try {\n        setState((prevState) => ({ ...prevState, isFetching: true }))\n        const hasResults = await onValidAddress(value)\n\n        setState((prevState) => ({\n          ...prevState,\n          isFetching: false,\n          resultFound: hasResults ? ResultStatus.FOUND : ResultStatus.NOT_FOUND,\n        }))\n      } catch {\n        setState((prevState) => ({ ...prevState, isFetching: false }))\n      }\n    }\n\n    if (isValidAddress) {\n      validAddressHandler()\n    } else {\n      setState((prevState) => ({ ...prevState, resultFound: ResultStatus.NOT_VALID }))\n    }\n  }, [value, onValidAddress, setState])\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Input\n        placeholder={t('Search %subject%', { subject: t('Address').toLowerCase() })}\n        value={state.value}\n        onChange={handleChange}\n        style={{ position: 'relative', zIndex: 16, paddingRight: '40px' }}\n      />\n      {isFetching && (\n        <Box position=\"absolute\" top=\"12px\" right=\"16px\" style={{ zIndex: 17 }}>\n          <CircleLoader />\n        </Box>\n      )}\n      <SubMenu isOpen={resultFound !== ResultStatus.NOT_VALID}>\n        {resultFound === ResultStatus.FOUND ? (\n          <AddressLink onClick={handleClick}>{state.value}</AddressLink>\n        ) : (\n          <Text px=\"16px\" fontWeight=\"bold\">\n            {t('No results found.')}\n          </Text>\n        )}\n      </SubMenu>\n    </Box>\n  )\n}\n\nexport default AddressInputSelect\n","import React from 'react'\nimport styled from 'styled-components'\nimport PageHeader, { PageHeaderProps } from 'components/PageHeader'\n\nconst Background = styled(PageHeader)`\n  background-image: url(/images/decorations/BG.png);\n  background-position: center;\n  object-fit: cover;\n`\n\nconst MarketPageHeader: React.FC<PageHeaderProps> = (props) => {\n  return <Background {...props} />\n}\n\nexport default MarketPageHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, BoxProps, Flex, Skeleton, Text } from '@pancakeswap/uikit'\n\nexport interface StatBoxItemProps extends BoxProps {\n  title: string\n  stat: string\n}\n\nexport const StatBoxItem: React.FC<StatBoxItemProps> = ({ title, stat, ...props }) => (\n  <Box {...props}>\n    <Text fontSize=\"12px\" color=\"#D9AB3A\" textAlign=\"center\">\n      {title}\n    </Text>\n    {stat === null ? (\n      <Skeleton height=\"24px\" width=\"50%\" mx=\"auto\" />\n    ) : (\n      <Text fontWeight=\"600\" textAlign=\"center\">\n        {stat}\n      </Text>\n    )}\n  </Box>\n)\n\nconst StatBox = styled(Flex)`\n  align-items: center;\n  background: #000;\n  border: 1px solid #D9AB3A;\n  border-radius: ${({ theme }) => theme.radii.card};\n  justify-content: space-around;\n  padding: 8px;\n  width: 100%;\n`\n\nexport default StatBox\n","import styled from 'styled-components'\n\ninterface AvatarImageProps {\n  src: string\n  borderColor?: string\n  alt?: string\n}\n\nconst AvatarImage = styled.div.attrs<AvatarImageProps>(({ alt }) => ({\n  alt,\n}))<AvatarImageProps>`\n  background: url('${({ src }) => src}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 96px;\n  height: 96px;\n  border: 4px ${({ borderColor }) => borderColor || '#f2ecf2'} solid;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n\nexport default AvatarImage\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport AddressInputSelect from 'components/AddressInputSelect'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nconst SearchBar: React.FC = (props) => {\n  const history = useHistory()\n\n  const handleAddressClick = (value: string) => {\n    history.push(`${nftsBaseUrl}/profile/${value}`)\n  }\n\n  return <AddressInputSelect onAddressClick={handleAddressClick} {...props} />\n}\n\nexport default SearchBar\n","import React, { ReactNode } from 'react'\nimport { Box, Grid, GridProps, Heading } from '@pancakeswap/uikit'\n\ninterface MarketPageTitleProps extends GridProps {\n  title: string\n  description?: ReactNode\n}\n\nconst MarketPageTitle: React.FC<MarketPageTitleProps> = ({ title, description, children, ...props }) => (\n  <Grid gridGap=\"16px\" alignItems=\"center\" gridTemplateColumns={['1fr', null, null, null, 'repeat(2, 1fr)']} {...props}>\n    <Box>\n      <Heading as=\"h1\" scale=\"xl\" color=\"secondary\" mb=\"16px\">\n        {title}\n      </Heading>\n      {description}\n    </Box>\n    <Box>{children}</Box>\n  </Grid>\n)\n\nexport default MarketPageTitle\n","import { SubMenuItems } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseSubMenu = styled(SubMenuItems)`\n  background-color: transparent;\n  border-bottom: 1px ${({ theme }) => theme.colors.cardBorder} solid;\n`\n\nexport default BaseSubMenu\n","import styled from 'styled-components'\n\ninterface StyledBannerImageProps {\n  src: string\n  alt?: string\n}\n\nconst StyledBannerImage = styled.div.attrs<StyledBannerImageProps>(({ alt }) => ({\n  alt,\n}))<StyledBannerImageProps>`\n  ${({ src, theme }) => (src ? `background-image: url('${src}')` : `background-color: ${theme.colors.cardBorder}`)};\n  background-image: url('${({ src }) => src}');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 100%;\n  border-radius: 32px;\n  height: 123px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 192px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 256px;\n  }\n`\n\nexport default StyledBannerImage\n","import React, { ReactNode } from 'react'\nimport { Flex, Box, FlexProps } from '@pancakeswap/uikit'\nimport BannerImage from './BannerImage'\n\ninterface BannerHeaderProps extends FlexProps {\n  bannerImage: string\n  bannerAlt?: string\n  avatar?: ReactNode\n}\n\nconst BannerHeader: React.FC<BannerHeaderProps> = ({ bannerImage, bannerAlt, avatar, children, ...props }) => {\n  return (\n    <Flex flexDirection=\"column\" mb=\"24px\" {...props}>\n      <Box position=\"relative\" pb=\"56px\">\n        <BannerImage src={bannerImage} alt={bannerAlt} />\n        <Box position=\"absolute\" bottom={0} left={-4}>\n          <Flex alignItems=\"flex-end\">\n            {avatar}\n            {children}\n          </Flex>\n        </Box>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default BannerHeader\n"],"sourceRoot":""}