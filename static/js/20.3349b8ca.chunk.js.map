{"version":3,"sources":["views/FarmAuction/hooks/useCurrentFarmAuction.ts","views/Configurator/components/ViewerSolo.tsx","views/Configurator/components/THREE/Model/index.tsx","utils/galleryHelpers.ts","views/Configurator/components/BackSelectorSolo.tsx","hooks/useApproveConfirmTransactionToBuyGladiator.ts","views/Gallery/components/QuickStartDropDowns.tsx","views/Gallery/components/QuickStart.tsx","views/Gallery/components/Configurator3DNftModal.tsx","views/Gallery/components/GalleryModelCard/NftCard/Preview.tsx","views/Gallery/components/GalleryModelCard/NftCard/Attributes.tsx","views/Gallery/components/GalleryModelCard/NftCard/Weapons.tsx","views/Gallery/components/GalleryModelCard/NftCard/Abilities.tsx","views/Gallery/components/GalleryModelCard/NftCard/index.tsx","views/Gallery/components/GalleryModelCard/GalleryModelCard.tsx","views/Gallery/components/FilterCard/PriceFilter.tsx","views/Gallery/components/FilterCard/RarityFilter.tsx","views/Gallery/components/FilterCard/AttributesFilter.tsx","views/Gallery/components/FilterCard/WeaponMasteryFilter.tsx","views/Gallery/components/FilterCard/AbilitiesFilter.tsx","views/Gallery/components/FilterCard/index.tsx","views/Gallery/Gallery.tsx","views/PoolTour3D/store/index.js","config/constants/gallery/gallery.ts","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx","config/constants/gallery/types.ts","views/Configurator/utils/constant.ts","utils/types.ts","views/FarmAuction/helpers.tsx","config/constants/farmAuctions.ts","views/Configurator/components/UI/Loader/index.tsx","components/Modal/Spacer.tsx","components/Modal/ModalActions.tsx","components/Modal/ModalInput.tsx","state/gallery/hooks.ts","views/Configurator/components/THREE/Controls/index.tsx","views/Configurator/store/store.js"],"names":["useCurrentFarmAuction","account","useState","currentAuction","setCurrentAuction","bidders","setBidders","connectedBidder","setConnectedBidder","useLastUpdated","lastUpdated","setLastUpdated","fastRefresh","useFastFresh","farmAuctionContract","useFarmAuctionContract","useEffect","a","currentAuctionId","auctionId","auctions","auctionData","processAuctionData","toNumber","processedAuctionData","console","error","fetchCurrentAuction","viewBidsPerAuction","id","AUCTION_BIDDERS_TO_FETCH","currentAuctionBidders","sortedBidders","sortAuctionBidders","fetchBidders","checkAccount","whitelisted","whitelistedStatus","isWhitelisted","bidderData","length","find","bidder","bidderInfo","getBidderInfo","position","samePositionAsAbove","isTopPosition","amount","BIG_ZERO","getBidderData","isEqual","refreshBidders","home2","capturerOptions","verbose","display","framerate","quality","format","timeLimit","frameLimit","autoSaveTime","workersPath","capturer","CCapture","Model","props","data","setModel","setCurName","curSpeed","nodes","colors","animations","nft","showToast","group","useRef","useThree","gl","scene","camera","actions","THREE","mixer","useStore","state","buyFlag","updateBuyFlag","buyStatus","updateBuyStatus","setNft","isRecording","updateIsRecording","setJsonHash","jsonHash","setPicHash","picHash","savePicToIPFS","blob","name","FormData","append","metadata","JSON","stringify","axios","post","process","headers","pinata_api_key","pinata_secret_api_key","then","response","image","IpfsHash","hash","pinataMetadata","pinataContent","attributes","pick","merge","description","external_url","dataForDb","temp","localStorage","getItem","parse","push","setItem","json","catch","err","saveNFTJSONToIPFS","gif","current","idle","clipAction","glTFAnimationIndex","play","forEach","clip","uncacheClip","x","y","z","rotation","quaternion","w","zoom","setSize","setTimeout","reset","render","domElement","toBlob","save","stop","useFrame","start","capture","getClientRects","width","height","_","delta","update","positionX","glTFPosition","positionY","positionZ","scaleX","glTFScale","scaleY","scaleZ","rotationX","glTFRotation","Math","PI","rotationY","rotationZ","ref","dispose","scale","glTFRootNode","object","Object","keys","map","isSkinnedMesh","castShadow","geometry","material","skeleton","morphTargetDictionary","morphTargetInfluences","onClick","e","stopPropagation","uuid","isMesh","StyledViewer","styled","div","StyledCanvasWrapper","StyledElementWrapper","StyledElement","ViewerSolo","curName","curBack","home","ShowModel","hideBackground","noCameraControl","model","useLoader","GLTFLoader","glTFPath","React","imageURL","bodyElements","ShowElements","style","backgroundImage","borderWidth","Dome","texture","BackPaths","attach","args","side","GroundPlane","wrapS","wrapT","repeat","set","anisotropy","receiveShadow","cameraProps","shadows","intensity","ambientLightProps","pointLightProps","decay","shadowMapSize","Controls","maxPolarAngle","minPolarAngle","controlsProps","maxDistance","minDistance","target","enableKeys","fallback","Loader","isArchivedGalleryNft","inactive","StyledBackSelector","StyledBackImage1","StyledBackImage2","StyledBackImage3","ColorPicker","HexColorPicker","BackSelectorSolo","setBack","setColor","curColor","t","useTranslation","color","onChange","mb","fontSize","initialState","approvalState","confirmState","approvalStateSGTU","confirmStateSGTU","reducer","type","resetColors","removeItem","useApproveConfirmTransaction","onDismiss","onApprove","onConfirm","onApproveSGTU","onConfirmSGTU","onRequiresApproval","onRequiresApprovalSGTU","onSuccess","noop","onSuccessSGTU","onApproveSuccess","onApproveSuccessSGTU","useStore2","setMyGladiators","setSchoolGladiators","setUsersGladiators","useWeb3React","useReducer","dispatch","handlePreApprove","handlePreApproveSGTU","useToast","toastError","toastSuccess","result","isApproving","isApproved","isApprovingFailed","isApprovingSGTU","isApprovingFailedSGTU","isApprovedSGTU","isConfirming","isConfirmed","isConfirmingFailed","isConfirmingSGTU","isConfirmedSGTU","isConfirmedFailedSGTU","handleApprove","tx","wait","receipt","status","handleConfirm","tokenId","logs","parseInt","customization3DJson","ipfsJson","addGladiatorsToDB","gladiatorAsdded","handlePriorConfirm","handleApproveSGTU","handleConfirmSGTU","topics","handlePriorConfirmSGTU","StyledHistory","theme","card","background","LabelWrapper","ExpandableText","NewFlex","Flex","QuickStartDropDowns","title","isExpanded","setIsExpanded","p","alignItems","justifyContent","expanded","prev","QuickStart","StyledMain","NewModal","Modal","NewViewerSolo","NewButton","Button","QuickStartPane","isQuickStart","MainModalContent","MainContentViewer","Configurator3DNftModal","history","toastInfo","clearHashes","finalNft","buyType","setBuyType","modal","setModal","setCurColor","setCurBack","setColors","loaded","setLoaded","profileContract","useProfileContract","getUserStatus","setCurrentName","GLTFExporter","content","minimumNrtRequired","parseUnits","initialLifeCycle","price","toString","minimumNrtRequiredSGTU","finalLifeCycle","nrtContract","useNrt","gladiatorNftContract","useGladiatorNft","callWithGasPrice","useCallWithGasPrice","click","setClick","allowance","address","gte","MaxUint256","Error","buyAction","num","spinnerIcon","spin","minWidth","back","col","anim","isLoading","variant","marginTop","backgroundColor","borderColor","endIcon","undefined","src","alt","marginRight","loading","Container","StyledImage","img","Preview","isOwned","glTF","userData","previewImageSrc","previewImage","href","ipfs","rel","FooterInner","Box","NewCardFooter","CardFooter","IconImage","LabelText","Attributes","handleAttributesFilter","flexDirection","strength","endurance","agility","precision","intelligance","willpower","Weapons","oneHand","twoHand","shield","ranged","dual","polearms","Abilities","leadership","coach","cook","medical","smith","torture","InfoRow","Header","Grid","attrs","GridPrice","mediaQueries","sm","Wrapper","Info","NftCard","canClaim","tokenIds","refresh","onClaim","useHistory","remainingSupply","setRemainingSupply","isOpen","useProfile","profile","walletOwnsNft","supply","ChevronUpIcon","ChevronDownIcon","useModal","onPresentConfigurator3DNftModal","initialCostFormatted","size","toLocaleString","maximumFractionDigits","sizeMeasure","weight","weightMeasure","initialCostExplained","periodInMinutes","finalCostFormatted","finalCostExplained","getGladiatorSupply","gladiator","resp","Number","gladiatorSupply","_hex","gladiatorCount","isActive","listingType","ListingType","COMMUNITY","PARTNER","outline","rarity","ml","token","mt","weapons","abilities","StyledCard","Card","GalleryModelCard","cardBorder","nftModel","removed","cakePrice","useAppDispatch","isPromotedFarm","isPromoted","fetchWalletGalleryNfts","PriceFilter","handleMinNRTsQuery","handleMaxNRTsQuery","handleCurrency","minInputRef","maxInputRef","pt","px","Select","options","label","value","onOptionChange","inputMode","pattern","placeholder","RarityFilter","handleChangeRarity","clearFilterStates","checked","userSelect","AttributesFilter","handleChangeAttributes","textTransform","WeaponMasteryFilter","handleChangeWeapons","AbilitiesFilter","handleChangeAbilities","FilterCardCard","NewCardHeader","CardHeader","NewHeading","Heading","ControlContainer","Text","FilterContainer","FilterCard","handleChangeQuery","handleSortOptionChange","freshwaterOnly","setFreshwaterOnly","saltwaterOnly","setSaltwaterOnly","handleChangeCharacteristics","useTheme","SearchInput","md","MainCharacter","StyledHeader","PageHeader","Left","Right","GalleryBackground","PageSection","GallerySearch","Gallery","nrtPriceUsd","useNrtBusdPrice","path","useRouteMatch","pathname","useLocation","useGetGallery","models","userDataLoaded","isInitialized","usePriceCakeBusd","query","setQuery","minNRTs","setMinNRTs","maxNRTs","setMaxNRTs","currency","setCurrency","characteristicsInitialState","minWeight","maxWeight","minSize","maxSize","minSupply","maxSupply","characteristics","setCharacteristics","attributeInitialState","minStrength","maxStrength","minEndurance","maxEndurance","minAgility","maxAgility","minPrecision","maxPrecision","minIntelligence","maxIntelligence","minWillPower","maxWillPower","setAttributes","weaponsInitialState","minOneHand","maxOneHand","minTwoHand","maxTwoHand","minShield","maxShield","minRanged","maxRanged","minDual","maxDual","minPolearms","maxPolearms","setWeapons","abilitiesInitialState","minLeadership","maxLeadership","minCoach","maxCoach","minCook","maxCook","minMedical","maxMedical","minSmith","maxSmith","minTorture","maxTorture","setAbilities","rarityInitialState","setRarity","useUserFarmsViewMode","sortOption","setSortOption","useIntersectionObserver","observerRef","isIntersecting","chosenNftModelsLength","isArchived","includes","usePollFarmsWithUserData","useUserFarmStakedOnly","stakedOnly","useUserGalleryFreshwaterOnly","useUserGallerySaltwaterOnly","activeFarms","filter","archivedFarms","stakedOnlyFarms","farm","BigNumber","stakedBalance","isGreaterThan","freshwaterOnlyFarms","NftToken","NRT","saltwaterOnlyFarms","stakedArchivedFarms","galleryList","useCallback","modelsToDisplay","modelsToDisplayWithAPR","log","lowercaseQuery","latinise","toLowerCase","galleryPriceFiltering","nrtPriceUsdDisplay","toFixed","galleryCharacteristicsFiltering","galleryAttributesFiltering","galleryWeaponsFiltering","galleryAbilitiesFiltering","galleryRarityFiltering","numberOfFarmsVisible","setNumberOfFarmsVisible","chosenNftModelsMemoized","useMemo","chosenNftModels","fresh","salt","union","nftModels","orderBy","sortFarms","slice","farmsCurrentlyVisible","as","my","innerProps","margin","index","concaveDivider","dividerPosition","clipFill","light","dark","event","option","test","exact","Loading","useCountStore","create","get","showStatics","updateShowStatics","currentStatics","updateCurrentStatics","currentHoverModel","updateCurrentHoverModel","myGladiators","schoolGladiators","usersGladiators","userNftHashes","settingUserNFTHashes","schoolNftHashes","settingSchoolNFTHashes","nftHashes","settingNFTHashes","totalSupplies","setTotalSupplies","GalleryNfts","Shield_Default_OBJ_0","Object_79","Object_80","Object_81","Object_82","SizeMeasure","METER","WeightMeasure","LBS","lifeCycle","LifeCycle","SLAVE","GLADIATOR","minTimeInSeconds","CORE","limitSupply","bestTerrain","staminaFillCoast","Object_7","M_LRG_BlackKnightmo_Hat_Commando_BlackKnight_0","Object_176","default__0","Object_14","warrior_warrior_0","sword_warrior_0","shield_warrior_0","Plane008_0","sharedStyles","clipPath","css","isDark","ConcaveContainer","ConvexContainer","ConvexTop","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","dividerFill","ComponentWrapper","CurvedDivider","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","getPadding","ChildrenWrapper","lg","children","svgFill","hasCurvedDivider","containerProps","NftType","fov","FarmAuctionContractStatus","FORM_ADDRESS","auction","sort","b","lt","gt","adjustedPosition","unadjustedBidders","ethersToBigNumber","eq","topLeaderboard","leaderboardThreshold","lte","getAuctionStatus","currentBlock","startBlock","endBlock","contractStatus","Pending","Close","AuctionStatus","Closed","Finished","Open","ToBeAnnounced","getDateForBlock","block","secondsUntilStart","BSC_BLOCK_TIME","simpleRpcProvider","getBlock","timestamp","toDate","add","Date","seconds","auctionResponse","leaderboard","initialBidAmount","DEFAULT_TOKEN_DECIMAL","getBlockNumber","startDate","endDate","auctionStatus","auctionDuration","differenceInHours","processBidderAuctions","bidderAuctions","auctionIds","bids","claimed","nextCursor","getLpAddress","tokenAddress","quoteToken","Token","Pair","getAddress","whitelistedBidders","farmName","tokens","wbnb","tokenName","projectSite","busd","bidderConfig","lpAddress","UNKNOWN_BIDDER","matchingBidder","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","attributeName","repeatCount","dur","values","keyTimes","StyledSpacer","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","l","Children","toArray","child","i","StyledTokenInput","input","isWarning","warning","inset","text","StyledInput","Input","xs","StyledErrorMessage","ModalInput","max","symbol","onSelectMax","addLiquidityUrl","inputTitle","decimals","isBalanceZero","pl","balance","balanceUnits","formatBigNumber","displayBalance","step","min","mr","bold","external","useSelector","gallery","identifiers","nftsInWallet","extend","OrbitControls","invalidate","addEventListener","old","joinBattleNftJSON","updateJoinBattleNFTJSON"],"mappings":"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","file":"static/js/20.3349b8ca.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport isEqual from 'lodash/isEqual'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { Auction, ConnectedBidder, Bidder } from 'config/constants/types'\nimport { getBidderInfo } from 'config/constants/farmAuctions'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useFastFresh } from 'hooks/useRefresh'\nimport { AUCTION_BIDDERS_TO_FETCH } from 'config'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { sortAuctionBidders, processAuctionData } from '../helpers'\n\nexport const useCurrentFarmAuction = (account: string) => {\n  const [currentAuction, setCurrentAuction] = useState<Auction | null>(null)\n  const [bidders, setBidders] = useState<Bidder[] | null>(null)\n  const [connectedBidder, setConnectedBidder] = useState<ConnectedBidder | null>(null)\n  // Used to force-refresh bidders after successful bid\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  const fastRefresh = useFastFresh()\n\n  const farmAuctionContract = useFarmAuctionContract()\n\n  // Get latest auction id and its data\n  useEffect(() => {\n    const fetchCurrentAuction = async () => {\n      try {\n        const auctionId = await farmAuctionContract.currentAuctionId()\n        const auctionData = await farmAuctionContract.auctions(auctionId)\n        const processedAuctionData = await processAuctionData(auctionId.toNumber(), auctionData)\n        setCurrentAuction(processedAuctionData)\n      } catch (error) {\n        console.error('Failed to fetch current auction', error)\n      }\n    }\n    fetchCurrentAuction()\n  }, [farmAuctionContract, fastRefresh])\n\n  // Fetch bidders for current auction\n  useEffect(() => {\n    const fetchBidders = async () => {\n      try {\n        const [currentAuctionBidders] = await farmAuctionContract.viewBidsPerAuction(\n          currentAuction.id,\n          0,\n          AUCTION_BIDDERS_TO_FETCH,\n        )\n        const sortedBidders = sortAuctionBidders(currentAuctionBidders, currentAuction)\n        setBidders(sortedBidders)\n      } catch (error) {\n        console.error('Failed to fetch bidders', error)\n      }\n    }\n    if (currentAuction) {\n      fetchBidders()\n    }\n  }, [currentAuction, farmAuctionContract, lastUpdated, fastRefresh])\n\n  // Check if connected wallet is whitelisted\n  useEffect(() => {\n    const checkAccount = async () => {\n      try {\n        const whitelistedStatus = await farmAuctionContract.whitelisted(account)\n        setConnectedBidder({\n          account,\n          isWhitelisted: whitelistedStatus,\n        })\n      } catch (error) {\n        console.error('Failed to check if account is whitelisted', error)\n      }\n    }\n    if (account && (!connectedBidder || connectedBidder.account !== account)) {\n      checkAccount()\n    }\n    // Refresh UI if user logs out\n    if (!account) {\n      setConnectedBidder(null)\n    }\n  }, [account, connectedBidder, farmAuctionContract])\n\n  // Attach bidder data to connectedBidder object\n  useEffect(() => {\n    const getBidderData = () => {\n      if (bidders && bidders.length > 0) {\n        const bidderData = bidders.find((bidder) => bidder.account === account)\n        if (bidderData) {\n          return bidderData\n        }\n      }\n      const bidderInfo = getBidderInfo(account)\n      const defaultBidderData = {\n        position: null,\n        samePositionAsAbove: false,\n        isTopPosition: false,\n        amount: BIG_ZERO,\n        ...bidderInfo,\n      }\n      return defaultBidderData\n    }\n    if (connectedBidder && connectedBidder.isWhitelisted) {\n      const bidderData = getBidderData()\n      if (!isEqual(bidderData, connectedBidder.bidderData)) {\n        setConnectedBidder({\n          account,\n          isWhitelisted: true,\n          bidderData,\n        })\n      }\n    }\n  }, [account, connectedBidder, bidders])\n\n  return {\n    currentAuction,\n    bidders,\n    connectedBidder,\n    refreshBidders: setLastUpdated,\n  }\n}\n","import React, { Suspense } from 'react';\nimport { Canvas, useLoader } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three'\nimport styled from 'styled-components'\nimport { GalleryNft } from 'config/constants/gallery/types'\nimport Controls from './THREE/Controls';\nimport Model from './THREE/Model';\nimport Loader from './UI/Loader';\n\nimport {\n    ambientLightProps,\n    cameraProps,\n    controlsProps,\n    pointLightProps,\n    BackPaths\n} from '../utils/constant';\n\n\nlet home2;\n\nconst StyledViewer = styled.div`\n    ${!home2 ? \"80%\" : \"100%\"};\n    padding: 5px;\n    text-align: center;\n`\nconst StyledCanvasWrapper = styled.div`\n    height: ${!home2 ? \"600px\" : \"478px\"};\n    background-color: transparent;\n    width: ${!home2 ? \"100%\" : \"500px\"};\n`\n\nconst StyledElementWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    text-align: center;\n    justify-content: center;\n    overflow: auto;\n`\nconst StyledElement = styled.div`\n    width: 150px;\n    background-size: contain;\n    background-repeat: no-repeat;\n    height: 100px;\n    border: 0px solid #f1416c;\n    margin-top: 10px;\n    margin-left: 15px;\n\n    &:hover {\n        cursor: pointer;\n        border: 5px solid #b84969;\n    }\n`\n\ntype ChildProps = {\n    setModel?: any,\n    nft: any | null,\n    curColor: string,\n    curName: string,\n    setCurName?: (arg0: string) => void,\n    curSpeed: any,\n    curBack: any,\n    colors: any,\n    showToast?: any,\n    home?: any,\n    hideBackground?: any,\n    noCameraControl?: any,\n}\n\nconst ViewerSolo: React.FC<ChildProps> = ({ nft, curName, setCurName, curSpeed, curBack, colors, setModel, showToast, home, hideBackground, noCameraControl }) => {\n    const ShowModel = () => {\n        const model = useLoader(GLTFLoader, nft.glTFPath);\n        const { nodes, animations } = model;\n        React.useEffect(() => {\n            if (home) {\n                home2 = home\n                // console.log(home2);\n            }\n            // eslint-disable-next-line\n        }, [home])\n        return (\n            <Model\n                data={{\n                    'setModel': setModel,\n                    'setColor': () => true,\n                    'setCurName': setCurName,\n                    'curSpeed': curSpeed,\n                    'animations': animations,\n                    'nodes': nodes,\n                    'colors': colors,\n                    'nft': nft,\n                    'showToast': showToast,\n                }}\n            />\n        );\n    }\n    const imageURL = (name) => `url(${nft.bodyElements[name]})`\n    const ShowElements = () => {\n        if (nft.bodyElements)\n            return (\n                <>\n                    {\n                        Object.keys(nft.bodyElements).map((name) => {\n                            return <StyledElement\n                                onClick={() => { setCurName(name) }}\n                                key={name}\n                                style={{ backgroundImage: imageURL(name), borderWidth: name === curName ? 5 : 0 }} />\n                        })\n                    }\n                </>\n            );\n        return null;\n    }\n\n    const Dome = () => {\n        const texture = useLoader(THREE.TextureLoader, BackPaths[curBack])\n        return (\n            <mesh>\n                <sphereBufferGeometry attach=\"geometry\" args={[50, 100, 100]} />\n                <meshBasicMaterial attach=\"material\" map={texture} side={THREE.BackSide} />\n            </mesh>\n        )\n    }\n\n    const GroundPlane = () => {\n        const texture = useLoader(THREE.TextureLoader, '/images/gallery/textures/1.jpg');\n        texture.wrapS = THREE.RepeatWrapping;\n        texture.wrapT = THREE.RepeatWrapping;\n        texture.repeat.set(64, 64);\n        texture.anisotropy = 16;\n\n        return (\n            <mesh receiveShadow rotation={[Math.PI / 2, 0, 0]} position={[0, -4, 0]}>\n                <planeBufferGeometry attach=\"geometry\" args={[500, 500]} />\n                <meshPhongMaterial attach=\"material\" map={texture} side={THREE.DoubleSide} />\n            </mesh>\n        );\n    }\n\n    return (\n        <StyledViewer style={{ width: \"100%\" }}>\n            <StyledCanvasWrapper>\n                <Canvas camera={cameraProps} shadows>\n                    <fog attach=\"fog\" args={[\"white\", 90, 150]} />\n\n                    <ambientLight intensity={ambientLightProps.intensity} />\n                    <pointLight\n                        position={pointLightProps.position}\n                        castShadow\n                        decay={pointLightProps.decay}\n                        shadow-mapSize-height={pointLightProps.shadowMapSize}\n                        shadow-mapSize-width={pointLightProps.shadowMapSize}\n                    />\n                    {!home && <Controls\n                        maxPolarAngle={Math.PI / 2}\n                        minPolarAngle={controlsProps.minPolarAngle}\n                        maxDistance={controlsProps.maxDistance}\n                        minDistance={controlsProps.minDistance}\n                        target={controlsProps.target}\n                        enableKeys\n                    />}\n                    <Suspense fallback={<Loader />}>\n                        {!home && <Dome />}\n                        {!home && <GroundPlane />}\n                        <ShowModel />\n                    </Suspense>\n                </Canvas>\n            </StyledCanvasWrapper>\n            <StyledElementWrapper>\n                {!home && <ShowElements />}\n            </StyledElementWrapper>\n        </StyledViewer>\n    )\n}\n\nexport default ViewerSolo","import React, { useEffect, useRef, useState } from 'react';\nimport { MeshProps, useFrame, useThree } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport useStore from '../../../store/store';\nimport CCapture from 'ccapture.js-npmfixed/src/CCapture';\nimport { pick, merge } from 'lodash';\nimport axios from 'axios';\n\ninterface ModelProps extends MeshProps {\n  data: {\n    setColor: (col: any) => void;\n    setCurName: (name: any) => void;\n    curSpeed: any;\n    nodes: any;\n    colors: any;\n    animations: any;\n    nft?: any;\n    setModel: any;\n    showToast: any;\n  };\n}\n\ninterface actions {\n  current: {\n    idle: {\n      play: () => void,\n      reset: () => void,\n    };\n  };\n}\n\nconst capturerOptions = {\n  verbose: false,\n  display: true,\n  framerate: 24,\n  quality: 99,\n  format: 'gif',\n  timeLimit: 10, // seconds recording.\n  frameLimit: 250, // max no of frames\n  autoSaveTime: 0,\n  workersPath: '/'\n}\n\nvar capturer = new CCapture( capturerOptions );\n\nconst Model: (props: ModelProps) => JSX.Element | null = (props) => {\n  const {\n    data: { setModel, setCurName, curSpeed, nodes, colors, animations, nft, showToast },\n  } = props;\n  const group = useRef()\n\n  const { gl, scene, camera } = useThree()\n\n  const actions: actions = useRef();\n\n  const [mixer] = useState(() => new THREE.AnimationMixer(group));\n\n  const {buyFlag, updateBuyFlag} = useStore(state => state);\n  const buyStatus = useStore( state => state.buyStatus );\n  const updateBuyStatus = useStore( state => state.updateBuyStatus );\n  const setNft = useStore(state => state.setNft)\n  const isRecording = useStore(state => state.isRecording);\n  const updateIsRecording = useStore(state => state.updateIsRecording);\n\n  const {jsonHash, setJsonHash, picHash, setPicHash} = useStore(state => state)\n\n  const exportPNG = () => {\n    camera.position.x = 40;\n    camera.position.y = 2.44;\n    camera.position.z = 2.44;\n\n    camera.rotation.x = -6.16;\n    camera.rotation.y = 1.57;\n    camera.rotation.z = 0;\n\n    camera.quaternion.x = -2.16;\n    camera.quaternion.y = 0.70;\n    camera.quaternion.z = 2.16;\n    camera.quaternion.w = 0.7;\n\n    camera.zoom = 1;\n\n    gl.setSize(1920, 1080, false);\n\n    setTimeout(() => {\n      if( animations.length ) {\n        actions.current = {\n          idle: mixer.clipAction(animations[nft.glTFAnimationIndex || 0], group.current),\n        };\n        actions.current.idle.reset();\n      }\n\n      gl.render(scene, camera);\n\n      gl.domElement.toBlob(\n        function (blob: any) {\n          // console.log(\"going to deploy savePicToIPFS\")\n            savePicToIPFS(blob, 'HDImage');\n\n            // var a = document.createElement(\"a\");\n            // document.body.appendChild(a);\n\n            // var url  = window.URL.createObjectURL(blob);\n\n            // a.href = url;\n            // a.download = 'screenshot';\n            // a.click();\n\n            // window.URL.revokeObjectURL(url);\n        },\n        'image/png',\n        1.0\n      )\n    })\n  }\n\n  const exportGIF = () => {\n    updateIsRecording(isRecording + 1);\n  }\n\n  const saveNFTJSONToIPFS = (hash) => {\n    const pinataApiKey = process.env.REACT_APP_pinataApiKey;\n    const pinataSecretApiKey = process.env.REACT_APP_pinataSecretApiKey;\n    const url = process.env.REACT_APP_pinJSONPostURL;\n// console.log(\"bhaaaaaaaaaaaiiiiiiiiiiii in saveNFTJSONToIPFS\")\n    const data = {\n      pinataMetadata: {\n        name: 'NFT Info JSON',\n      },\n      pinataContent: {\n        attributes: [\n          pick(merge({}, nft, {colors}), ['colors', 'name', 'glTF', 'glTFPath', 'description', 'rarity', 'supply', 'attributes', 'weapons', 'abilities', 'token']),\n        ],\n        name: nft.name || 'NFT Info JSON',\n        description: 'NFT Info JSON',\n        image: `ipfs://${hash}`,\n        external_url: \"https://testnet.gladiators.finance/\", \n      }\n    }\n    const dataForDb = {\n      nft: {\n        ...nft,\n        colors\n      }\n    }\nsetNft(dataForDb)\n    axios.post(url, data, {\n      headers: {\n        pinata_api_key: pinataApiKey,\n        pinata_secret_api_key: pinataSecretApiKey\n      }\n    }).then((response) => {\n      let temp = localStorage.getItem('myNfts') ? JSON.parse( localStorage.getItem('myNfts') ) : [];\n      temp.push( response.data.IpfsHash );\n      localStorage.setItem( 'myNfts', JSON.stringify(temp) );\n      updateBuyStatus({ ...buyStatus, json: true });\n      setJsonHash(response.data.IpfsHash)\n\n    }).catch((err) => {\n      showToast('error', 'Your purchase was not successful at this moment, please try again');\n    })\n  }\n\n  const savePicToIPFS = (blob, name) => {\n    const pinataApiKey : string = (process.env.REACT_APP_pinataApiKey as string);\n    const pinataSecretApiKey : string = (process.env.REACT_APP_pinataSecretApiKey as string);\n    const url : string = (process.env.REACT_APP_pinFilePostURL as string);\n    const data = new FormData();\n    data.append('file', blob);\n    \n    const metadata = JSON.stringify({\n      name: name,\n    });\n    data.append('pinataMetadata', metadata);\n\n    axios.post(url, data, {\n      headers: {\n        'Access-Control-Allow-Origin':'https://localhost:3000',\n        'Content-Type': `multipart/form-data; boundary=`,\n        pinata_api_key: pinataApiKey,\n        pinata_secret_api_key: pinataSecretApiKey\n      }\n    }).then((response) => {\n      if( name === 'HDImage' ){\n        updateBuyStatus({ image: true });\n        setPicHash(response.data.IpfsHash);\n        // console.log(\"going to deploy JSON\")\n        saveNFTJSONToIPFS(response.data.IpfsHash)\n      }\n      // else if( name === 'Gif Image' ){\n      updateBuyStatus({ gif: true });\n      // }\n    }).catch((err) => {\n      showToast('error', 'Your purchase was not successful at this moment, please try again');\n    })\n  }\n\n  useEffect(() => {\n    if( animations.length ) {\n      actions.current = {\n        idle: mixer.clipAction(animations[nft.glTFAnimationIndex || 0], group.current),\n      };\n      actions.current.idle.play();\n    }\n\n    return () => animations.forEach((clip) => mixer.uncacheClip(clip))\n\n  }, [animations, mixer]);\n\n  useEffect(() => {\n    if( buyFlag) {\n      // console.log(\"buyFlagbuyFlagbuyFlag\", buyFlag)\n      const scene = group.current;\n      setModel(scene, animations);\n      exportPNG();\n      updateBuyFlag(false)\n      // exportGIF();\n    }\n  }, [buyFlag]);\n\n  useEffect(() => {\n    if( isRecording === 48 ) {\n      capturer.save((blob) => {\n        savePicToIPFS(blob, 'Gif Image');\n\n        capturer.stop();\n        capturer = new CCapture( capturerOptions );\n      });\n    }\n  }, [ isRecording ])\n\n  useFrame((state) => {\n    if( isRecording === 1 ) {\n      capturer.start();\n    }\n\n    if( isRecording >= 1 ) {\n      state.gl.setSize(480, 320, false);\n      state.gl.render(scene, camera);\n\n      capturer.capture(state.gl.domElement)\n      updateIsRecording(isRecording + 1);\n\n      if( isRecording === 48 ) {\n        updateIsRecording(0);\n        capturer.stop();\n\n        state.gl.setSize(state.gl.domElement.getClientRects()[0].width, state.gl.domElement.getClientRects()[0].height, false);\n      }\n    }\n  });\n\n  useFrame((_, delta) => mixer.update(delta * curSpeed));\n  const positionX = nft.glTFPosition?.x || 0;\n  const positionY = nft.glTFPosition?.y || 0;\n  const positionZ = nft.glTFPosition?.z || 0;\n  \n  const scaleX = nft.glTFScale?.x || 1;\n  const scaleY = nft.glTFScale?.y || 1;\n  const scaleZ = nft.glTFScale?.z || 1;\n\n  const rotationX = nft.glTFRotation?.x || -Math.PI / 2;\n  const rotationY = nft.glTFRotation?.y || 0;\n  const rotationZ = nft.glTFRotation?.z || 0;\n  \n  return (\n    <group position={[positionX, positionY, positionZ]}>\n      <group ref={group} dispose={null} scale={[scaleX, scaleY, scaleZ]}>\n        <group rotation={[rotationX, rotationY, rotationZ]}>\n          <group >\n            { nodes[nft.glTFRootNode || 'Armature_rootJoint'] ? \n              <primitive object={nodes[nft.glTFRootNode || 'Armature_rootJoint']} /> : null\n            }\n            {\n              Object.keys(nodes).map((name) => {\n                // console.log(`isSkin [${nodes[name].isSkinnedMesh}] name [${name}], uuid [${nodes[name].uuid}], color [${colors[name]}]`)\n                return nodes[name].isSkinnedMesh ? (\n                  <skinnedMesh\n                    castShadow\n                    key={nodes[name].uuid}\n                    geometry={nodes[name].geometry}\n                    material={nodes[name].material}\n                    skeleton={nodes[name].skeleton}\n                    morphTargetDictionary={nodes[name].morphTargetDictionary}\n                    morphTargetInfluences={nodes[name].morphTargetInfluences}\n                    material-color={colors[name] ? colors[name] : '#ffffff'}\n                    onClick={(e) => { setCurName(name); e.stopPropagation() }}\n                  />\n                ) : nodes[name].isMesh ? (\n                  <mesh\n                    castShadow\n                    key={nodes[name].uuid}\n                    material={nodes[name].material}\n                    material-color={colors[name] ? colors[name] : '#ffffff'}\n                    onClick={(e) => { setCurName(name); e.stopPropagation() }}\n                  />\n                ) : null;\n              })\n            }\n            </group>\n        </group>\n      </group>\n    </group>\n  );\n};\n\nexport default Model;\n","import { GalleryNft } from 'config/constants/gallery/types'\n\nconst isArchivedGalleryNft = (nft: GalleryNft) => nft.inactive\n\nexport default isArchivedGalleryNft\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { HexColorPicker } from \"react-colorful\";\n\nimport {\n    BackPaths\n} from '../utils/constant';\n\ntype ChildProps = {\n    curBack: any,\n    setBack: (arg0: any) => void,\n    setColor?: (arg0: string) => void,\n    curColor?: string,\n}\n\nconst StyledBackSelector = styled.div`\n        width: 20%;\n        padding: 10px;\n        text-align: center;\n\n        @media (min-width: 320px) and (max-width: 480px) {\n            padding: 0;\n          }\n    \n        @media (min-width: 480px) and (max-width: 786px) {\n            \n          }\n    `\nconst StyledBackImage1 = styled.div`\n    width: 90%;\n    margin-left: 5%;\n    background-image: url(${BackPaths[0]});\n    background-size: cover;\n    height: 130px;\n    margin-bottom: 10px;\n    margin-top: 10px;\n    border: 0px solid #f1416c;\n    border-radius: 10px;\n\n    &:hover {\n        cursor: pointer;\n        border: 5px solid #b84969;\n    }\n    @media (min-width: 320px) and (max-width: 480px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 75px;\n      }\n\n    @media (min-width: 480px) and (max-width: 786px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 100px;\n      }\n      @media (min-width: 786px) and (max-width: 1224px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 150px;\n      }\n`\nconst StyledBackImage2 = styled.div`\n    width: 90%;\n    margin-left: 5%;\n    background-image: url(${BackPaths[1]});\n    background-size: cover;\n    height: 130px;\n    margin-bottom: 10px;\n    border: 0px solid #f1416c;\n    border-radius: 10px;\n\n    &:hover {\n        cursor: pointer;\n        border: 5px solid #b84969;\n        border-width: 5px;\n        height: 75px;\n    }\n\n    @media (min-width: 320px) and (max-width: 480px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 75px;\n      }\n\n    @media (min-width: 480px) and (max-width: 786px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 100px;\n      }\n      @media (min-width: 786px) and (max-width: 1224px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 150px;\n      }\n`\nconst StyledBackImage3 = styled.div`\n    width: 90%;\n    margin-left: 5%;\n    background-image: url(${BackPaths[2]});\n    background-size: cover;\n    height: 130px;\n    border: 0px solid #f1416c;\n    border-radius: 10px;\n    margin-bottom: 10%;\n\n    &:hover {\n        cursor: pointer;\n        border: 5px solid #b84969;\n    }\n\n    @media (min-width: 320px) and (max-width: 480px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 75px;\n      }\n\n    @media (min-width: 480px) and (max-width: 786px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 100px;\n      }\n    @media (min-width: 786px) and (max-width: 1224px) {\n        margin-top: 0;\n        margin-left: 0;\n        width: 100%;\n        height: 150px;\n      }\n`\nconst ColorPicker = styled(HexColorPicker)`\n    margin-left: 50%;\n    transform: translate3d(-50%, 0, 0);\n    @media (min-width: 320px) and (max-width: 480px) {\n        width: 65px !important;\n        height: 75px!important;\n      }\n      @media (min-width: 480px) and (max-width: 786px) {\n        width: 100px !important;\n        height: 100px!important;\n      }\n      @media (min-width: 786px) and (max-width: 1224px) {\n        width: 150px !important;\n        height: 150px!important;\n      }\n`\n\nconst BackSelectorSolo: React.FC<ChildProps> = ({ curBack, setBack, setColor, curColor }) => {\n    const { t } = useTranslation()\n    const handleChangeComplete = (color) => {\n        setColor(color);\n    };\n\n    return (\n        <StyledBackSelector>\n            {/* <Text mb=\"10px\" fontSize=\"20px\">\n                { t('Select Background') }\n            </Text> */}\n\n            <StyledBackImage1\n                style={{ borderWidth: curBack === 0 || curBack === '0' ? 5 : 0 }}\n                onClick={() => { setBack(0) }}>\n                {/* first Back */}\n            </StyledBackImage1>\n            <StyledBackImage2\n                style={{ borderWidth: curBack === 1 || curBack === '1' ? 5 : 0 }}\n                onClick={() => { setBack(1) }}>\n                {/* second Back */}\n            </StyledBackImage2>\n            <StyledBackImage3\n                style={{ borderWidth: curBack === 2 || curBack === '2' ? 5 : 0 }}\n                onClick={() => { setBack(2) }}>\n                {/* third Back */}\n            </StyledBackImage3>\n\n            <ColorPicker\n                color={curColor}\n                onChange={handleChangeComplete}\n            />\n            <Text mb=\"10px\" fontSize=\"20px\">\n                {t(curColor)}\n            </Text>\n\n        </StyledBackSelector>\n    )\n}\n\nexport default BackSelectorSolo","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport useStore from '../views/Configurator/store/store';\nimport {addGladiatorsToDB} from \"../state/nftMarket/helpers\"\nimport useStore2 from \"../views/PoolTour3D/store\"\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail' | 'fail2'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'requires_approval_to_user' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt' }\n  | { type: 'approve_error' }\n  | { type: 'approve_error2' }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt' }\n  | { type: 'confirm_error' }\n  | { type: 'confirm_error2' }\n  | { type: 'approve_sending_to_user' }\n  | { type: 'approve_receipt_to_user' }\n  | { type: 'approve_error_to_user' }\n  | { type: 'approve_error2_to_user' }\n  | { type: 'confirm_sending_to_user' }\n  | { type: 'confirm_receipt_to_user' }\n  | { type: 'confirm_error_to_user' }\n  | { type: 'confirm_error2_to_user' }\n  | { type: 'approve_idle' }\n  | { type: 'approve_idle_to_user' }\n\ninterface State {\n  approvalState: LoadingState\n  confirmState: LoadingState\n  approvalStateSGTU: LoadingState\n  confirmStateSGTU: LoadingState\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  confirmState: 'idle',\n  approvalStateSGTU: \"idle\",\n  confirmStateSGTU: \"idle\"\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'requires_approval_to_user':\n      return {\n        ...state,\n        approvalStateSGTU: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_idle':\n      return {\n        ...state,\n        approvalState: 'idle',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n      }\n    case 'approve_error2':\n      return {\n        ...state,\n        approvalState: 'fail2',\n      }\n    case 'approve_sending_to_user':\n      return {\n        ...state,\n        approvalStateSGTU: 'loading',\n      }\n    case 'approve_receipt_to_user':\n      return {\n        ...state,\n        approvalStateSGTU: 'success',\n      }\n    case 'approve_idle_to_user':\n      return {\n        ...state,\n        approvalStateSGTU: 'idle',\n      }\n    case 'approve_error_to_user':\n      return {\n        ...state,\n        approvalStateSGTU: 'fail',\n      }\n    case 'approve_error2_to_user':\n      return {\n        ...state,\n        approvalStateSGTU: 'fail2',\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n      }\n    case 'confirm_error2':\n      return {\n        ...state,\n        confirmState: 'fail2',\n      }\n    case 'confirm_sending_to_user':\n      return {\n        ...state,\n        confirmStateSGTU: 'loading',\n      }\n    case 'confirm_receipt_to_user':\n      return {\n        ...state,\n        confirmStateSGTU: 'success',\n      }\n    case 'confirm_error_to_user':\n      return {\n        ...state,\n        confirmStateSGTU: 'fail',\n      }\n    case 'confirm_error2_to_user':\n      return {\n        ...state,\n        confirmStateSGTU: 'fail2',\n      }\n    default:\n      return state\n  }\n}\n\ninterface OnSuccessProps {\n  state: State\n  receipt: ethers.providers.TransactionReceipt\n}\n\ninterface ApproveConfirmTransaction {\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\n  onApproveSGTU?: () => Promise<ethers.providers.TransactionResponse> // onApproveSendGladiatorToUser\n  onConfirm?: () => Promise<ethers.providers.TransactionResponse>\n  onConfirmSGTU?: () => Promise<ethers.providers.TransactionResponse>  // onConfirmSendGladiatorToUser\n  onRequiresApproval?: () => Promise<boolean>\n  onRequiresApprovalSGTU?: () => Promise<boolean>\n  onSuccess?: ({ state, receipt }: OnSuccessProps) => void\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\n  onSuccessSGTU?: ({ state, receipt }: OnSuccessProps) => void\n  onApproveSuccessSGTU?: ({ state, receipt }: OnSuccessProps) => void\n  onDismiss?: any\n}\n\n\n// const [curColor, setCurColor] = useState(localStorage.getItem('con_curColor') ? localStorage.getItem('con_curColor') : '#ffffff');\n// const [curName, setCurName] = useState(localStorage.getItem('con_curName') ? localStorage.getItem('con_curName') : 'None selected.');\n// const [curSpeed, setCurSpeed] = useState(localStorage.getItem('con_curSpeed') ? localStorage.getItem('con_curSpeed') : 1);\n// const [curBack, setCurBack] = useState(localStorage.getItem('con_curBack') ? localStorage.getItem('con_curBack') : 0);\n// const [colors, setColors] = useState(JSON.parse(localStorage.getItem('con_colors')) ? JSON.parse(localStorage.getItem('con_colors')) : {});\n\nconst resetColors = () => {\n  const resetting= {0:\"#fdfdfd\"}\n  localStorage.removeItem('con_curColor')\n  localStorage.removeItem('con_curName')\n  localStorage.removeItem('con_curSpeed')\n  localStorage.removeItem('con_curBack')\n  localStorage.removeItem('con_colors')\n}\nconst useApproveConfirmTransaction = ({\n  onDismiss,\n  onApprove,\n  onConfirm,\n  onApproveSGTU,\n  onConfirmSGTU,\n  onRequiresApproval,\n  onRequiresApprovalSGTU,\n  onSuccess = noop,\n  onSuccessSGTU = noop,\n  onApproveSuccess = noop,\n  onApproveSuccessSGTU = noop,\n}: ApproveConfirmTransaction) => {\n  const {nft, setNft} = useStore(state => state)\n  const {setMyGladiators, setSchoolGladiators, setUsersGladiators} = useStore2(state => state)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const handlePreApproveSGTU = useRef(onRequiresApprovalSGTU)\n  const { toastError, toastSuccess } = useToast()\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n  useEffect(() => {\n    if (account && handlePreApproveSGTU.current) {\n      handlePreApproveSGTU.current().then((result) => {\n          if (result) {\n          dispatch({ type: 'requires_approval_to_user' })\n        }\n      })\n    }\n  }, [account, handlePreApproveSGTU, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isApprovingFailed: state.approvalState === 'fail',\n\n    isApprovingSGTU: state.approvalStateSGTU === 'loading',\n    isApprovingFailedSGTU: state.approvalStateSGTU === 'fail',\n    isApprovedSGTU: state.approvalStateSGTU === 'success',\n\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    isConfirmingFailed: state.confirmState === \"fail2\",\n\n    isConfirmingSGTU: state.confirmStateSGTU === 'loading',\n    isConfirmedSGTU: state.confirmStateSGTU === 'success',\n    isConfirmedFailedSGTU: state.confirmStateSGTU === 'fail2',\n    handleApprove: async () => {\n      try {\n        dispatch({ type: 'approve_sending' })\n        const tx = await onApprove()\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt' })\n          dispatch({ type: 'approve_receipt_to_user' })\n          toastSuccess(t('success'), t('Gladiator is approved successfully and ready to buy'))\n          //this has to be the last thing to run otherwhise state issues\n          onApproveSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error' })\n        toastError(t('Error'), t('You have rejected the transaction'))\n      }\n    },\n    handleConfirm: async () => {\n      try {\n        dispatch({ type: 'confirm_sending' })\n        const tx = await onConfirm()\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          const tokenId = receipt.logs[receipt.logs.length - 1].data\n          const id = parseInt(tokenId, 16);\n          const data = {\n            tokenId: id,\n            customization3DJson: {},\n            ipfsJson: nft\n          }\n          const gladiatorAsdded = await addGladiatorsToDB(data)\n          // console.log(\"dataaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\", data)\n\n          if(id == gladiatorAsdded.tokenId){\n            setSchoolGladiators(null)\n            setMyGladiators(null)\n            setNft(null)\n            dispatch({ type: 'confirm_receipt' })\n            dispatch({ type: 'approve_idle' })\n            dispatch({ type: 'confirm_error2_to_user' })\n            resetColors()\n            toastSuccess(t('success'), t('Gladiator is Bought successfully and sent to school'))\n            //this has to be the last thing to run otherwhise state issues\n            onSuccess({ state, receipt })\n          }\n        }\n      } catch (error) {\n        // console.log(\"eeeeeerrrrrrrrrrooooooor11111111111\", error)\n        dispatch({ type: 'approve_receipt' })\n        dispatch({ type: 'approve_receipt_to_user' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handlePriorConfirm: async () => {\n        dispatch({ type: 'confirm_sending' })\n    },\n    handleApproveSGTU: async () => {\n      try {\n        dispatch({ type: 'approve_sending_to_user' })\n        const tx = await onApproveSGTU()\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt_to_user' })\n          dispatch({ type: 'approve_receipt' })\n          toastSuccess(t('success'), t('Gladiator is approved successfully and ready to buy'))\n          //this has to be the last thing to run otherwhise state issues\n          onApproveSuccessSGTU({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error_to_user' })\n        toastError(t('Error'), t('You have rejected the transaction' ))\n      }\n    },\n    handleConfirmSGTU: async () => {\n      try {\n        dispatch({ type: 'confirm_sending_to_user' })\n        const tx = await onConfirmSGTU()\n        const receipt = await tx.wait()\n\n        if (receipt.status) {\n          const tokenId = receipt.logs[receipt.logs.length - 1].topics[receipt.logs[receipt.logs.length - 1].topics.length - 1]\n          const id = parseInt(tokenId, 16);\n          const data = {\n            tokenId: id,\n            customization3DJson: {},\n            ipfsJson: nft\n          }\n// console.log(\"dataaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\", data)\n          const gladiatorAsdded = await addGladiatorsToDB(data)\n\n          if(id == gladiatorAsdded.tokenId){\n            setNft(null)\n            setMyGladiators(null)\n            setUsersGladiators(null)\n            dispatch({ type: 'confirm_receipt_to_user' })\n            dispatch({ type: 'approve_idle_to_user' })\n            dispatch({ type: 'confirm_error2' })\n            resetColors()\n            toastSuccess(t('success'), t('Gladiator is Bought successfully and sent to battle'))\n\n            //this has to be the last thing to run otherwhise state issues\n            onSuccessSGTU({ state, receipt })\n          }\n        }\n      } catch (error) {\n        // console.log(\"eeeeeerrrrrrrrrrooooooor222222222\", error)\n\n        dispatch({ type: 'approve_receipt' })\n        dispatch({ type: 'approve_receipt_to_user' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handlePriorConfirmSGTU: async () => {\n        dispatch({ type: 'confirm_sending_to_user' })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import React, { useState } from 'react'\nimport { Flex, Text, ExpandableLabel } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst StyledHistory = styled.div`\n  background-color: ${({ theme }) => theme.card.background};\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\nconst LabelWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px 24px;\n`\nconst ExpandableText = styled.div`\n  color:  #D9AB3A;\n  width: 100%;\n  text-align: left;\n`\nconst NewFlex = styled(Flex)`\n  & > button {\n      width: 100% !important;\n      padding: 0px 0pc !important;\n  }\n`\ninterface QuickStartDropDownsProps {\n    title: string;\n    description: string;\n}\n\nconst QuickStartDropDowns: React.FC<QuickStartDropDownsProps> = ({ title, description }) => {\n    const { t } = useTranslation()\n    const [isExpanded, setIsExpanded] = useState(false)\n\n    return (\n        <StyledHistory>\n            <NewFlex p=\"8px\" alignItems=\"center\" justifyContent=\"space-betwen\" width=\"100%\">\n                <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n                    <ExpandableText>\n                        {title}\n                    </ExpandableText>\n                </ExpandableLabel>\n            </NewFlex>\n            {isExpanded && (\n                <LabelWrapper>\n                    <Text>{description}</Text>\n                </LabelWrapper>\n            )}\n        </StyledHistory>\n    )\n}\n\nexport default QuickStartDropDowns\n","import React from 'react'\nimport styled from 'styled-components'\nimport QuickStartDropDowns from './QuickStartDropDowns'\n\nconst StyledHistory = styled.div`\n  background-color: ${({ theme }) => theme.card.background};\n  display: flex;\n  flex-direction: column;\n//   height: 100%;\n  justify-content: start\n`\n\nconst QuickStart = () => {\n\n    return (\n        <StyledHistory>\n            <QuickStartDropDowns title=\"Personalize Gladiator body\" description=\"Tips how to personilized Gladiator body\" />\n            <QuickStartDropDowns title=\"Personalize Colors\" description=\"Tips how to personilized Gladiator colors\" />\n            <QuickStartDropDowns title=\"Personalize Arena\" description=\"Tips how to personilized Gladiator colors\" />\n            <QuickStartDropDowns title=\"Send to School\" description=\"Tips how to personilized Gladiator colors\" />\n            <QuickStartDropDowns title=\"Gladiator Ready\" description=\"Tips how to personilized Gladiator colors\" />\n            <QuickStartDropDowns title=\"More Help\" description=\"Tips how to personilized Gladiator colors\" />\n        </StyledHistory>\n    )\n}\n\nexport default QuickStart\n","import React, { useState, useEffect } from 'react'\nimport { Button, Modal, AutoRenewIcon, Flex } from '@pancakeswap/uikit'\nimport { ModalActions } from 'components/Modal'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport BackSelectorSolo from 'views/Configurator/components/BackSelectorSolo'\nimport ViewerSolo from 'views/Configurator/components/ViewerSolo'\nimport { GalleryNft } from 'config/constants/gallery/types'\nimport { GLTFExporter } from 'three/examples/jsm/exporters/GLTFExporter'\nimport axios from 'axios'\nimport useToast from 'hooks/useToast'\n\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransactionToBuyGladiator'\nimport { useCake, useGladiatorNft, useNrt } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { parseUnits } from '@ethersproject/units'\nimport pinataSdk from '@pinata/sdk'\nimport useStore from '../../Configurator/store/store'\nimport { MaxUint256 } from '@ethersproject/constants'\nimport { useProfileContract } from 'hooks/useContract'\nimport { addGladiatorsToDB } from \"../../../state/nftMarket/helpers\"\nimport QuickStart from './QuickStart'\n\n\ninterface Configurator3DNftModalProps {\n  nft: GalleryNft\n  onDismiss?: () => void\n  history?: any\n}\n\nconst StyledMain = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  @media (min-width: 320px) and (max-width: 480px) {\n    width: 325px !important;\n    align-items: start;\n  }\n  @media (min-width: 480px) and (max-width: 786px) {\n    width: 86% !important;\n    align-items: start;\n  }\n  @media (min-width: 786px) and (max-width: 1224px) {\n    width: 85% !important;\n  }\n`\nconst NewModal = styled(Modal)`\n  @media (min-width: 320px) and (max-width: 480px) {\n    width: 100%;\n    min-width: 100% !important;\n  }\n  @media (min-width: 480px) and (max-width: 786px) {\n    width: 100%;\n    min-width: 100% !important;\n  }\n  @media (min-width: 786px) and (max-width: 1224px) {\n    width: 100%;\n    min-width: 100% !important;\n  }\n`\nconst NewViewerSolo = styled(ViewerSolo)`\n  @media (min-width: 320px) and (max-width: 480px) {\n    width: 375px !important;\n  }\n`\nconst NewButton = styled(Button)`\n  @media (min-width: 320px) and (max-width: 390px) {\n    height: 75px !important;\n  }\n  @media (min-width: 390px) and (max-width: 425px) {\n    height: 65px !important;\n  }\n  @media (min-width: 425px) and (max-width: 515px) {\n    height: 55px !important;\n  }\n`\nconst QuickStartPane = styled.div<{ isQuickStart: boolean }>`\n  flex: none;\n  overflow: hidden;\n  transition: width 200ms ease-in-out;\n  width: ${({ isQuickStart }) => (isQuickStart ? '330px' : 0)};\n  height: ${({ isQuickStart }) => (isQuickStart ? 'auto' : 0)};\n  margin-left: 20px;\n`\nconst MainModalContent = styled.div`\n  display: flex;\n  flex-direction: row;\n`\nconst MainContentViewer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Configurator3DNftModal: React.FC<Configurator3DNftModalProps> = ({ onDismiss, nft, history }) => {\n\n  localStorage.setItem(\"NFT\", JSON.stringify(nft))\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { toastInfo, toastSuccess, toastError } = useToast()\n  const updateBuyFlag = useStore((state) => state.updateBuyFlag)\n  const buyFlag = useStore((state) => state.buyFlag)\n  const { picHash, jsonHash, clearHashes, nft: finalNft } = useStore((state) => state)\n  const [buyType, setBuyType] = useState<number>(0)\n  const [modal, setModal] = useState(true);\n  // if buyType === 0, it will call handleConfirm\n  // if buyType === 1, it will call handleConfirmSGTU\n  // console.log(\"picHashpicHashpicHashpicHashpicHashpicHashpicHash\", picHash)\n  // console.log(\"jsonHashjsonHashjsonHashjsonHashjsonHashjsonHash\", jsonHash)\n\n  const resetColors = () => {\n    const resetting = { 0: \"#fdfdfd\" }\n    localStorage.removeItem('con_curColor')\n    localStorage.removeItem('con_curName')\n    localStorage.removeItem('con_curSpeed')\n    localStorage.removeItem('con_curBack')\n    localStorage.removeItem('con_colors')\n    setModal(false);\n    setTimeout(() => {\n      setModal(true)\n      localStorage.removeItem(\"NFT\")\n    }, 1000);\n\n  }\n  const buyStatus = useStore((state) => state.buyStatus)\n  const updateBuyStatus = useStore((state) => state.updateBuyStatus)\n\n  const [curColor, setCurColor] = useState(\n    localStorage.getItem('con_curColor') ? localStorage.getItem('con_curColor') : '#ffffff',\n  )\n  const [curName, setCurName] = useState(\n    localStorage.getItem('con_curName') ? localStorage.getItem('con_curName') : 'None selected.',\n  )\n  const [curSpeed, setCurSpeed] = useState(\n    localStorage.getItem('con_curSpeed') ? localStorage.getItem('con_curSpeed') : 1,\n  )\n  const [curBack, setCurBack] = useState(localStorage.getItem('con_curBack') ? localStorage.getItem('con_curBack') : 0)\n  const [colors, setColors] = useState(\n    JSON.parse(localStorage.getItem('con_colors')) ? JSON.parse(localStorage.getItem('con_colors')) : {},\n  )\n  const [loaded, setLoaded] = useState(false)\n\n  const isButtonEnable = buyStatus.model && buyStatus.json && buyStatus.image && buyStatus.gif\n\n  useEffect(() => {\n    if (loaded && buyStatus.model && buyStatus.json && buyStatus.image && buyStatus.gif) {\n      toastSuccess(t('Success!'), t('You have successfully purchased the NFT.'))\n      onDismiss()\n    }\n    setLoaded(true)\n    // eslint-disable-next-line\n  }, [buyStatus])\n\n  const profileContract = useProfileContract()\n  const getUserStatus = async () => {\n    const data = await profileContract.getUserStatus(account)\n    if (!data) {\n      onDismiss()\n      history.push('/create-profile')\n    }\n  }\n\n  useEffect(() => {\n    getUserStatus()\n  }, [])\n  const setCurrentColor = (col) => {\n    setCurColor(col)\n    localStorage.setItem('con_curColor', col)\n\n    const temp = { ...colors }\n    temp[curName] = col\n    setColors(temp)\n    localStorage.setItem('con_colors', JSON.stringify(colors))\n  }\n\n  const setCurrentName = (name) => {\n    setCurName(name)\n    setCurColor(colors[name] ? colors[name] : '#ffffff')\n\n    localStorage.setItem('con_curName', name)\n  }\n\n  const setCurrentBack = (back) => {\n    setCurBack(back)\n    localStorage.setItem('con_curBack', back)\n  }\n\n  const exporter = new GLTFExporter()\n\n  const exportModel = (scene, animation) => {\n    const link = document.createElement('a')\n    link.style.display = 'none'\n    document.body.appendChild(link)\n\n    exporter.parse(\n      scene,\n      (gltf) => {\n        const output = JSON.stringify(gltf, null, 2)\n\n        const blob = new Blob([output], { type: 'text/plain' })\n        const data = new FormData()\n        data.append('file', blob)\n\n        const metadata = JSON.stringify({\n          name: 'GLTF model',\n        })\n        data.append('pinataMetadata', metadata)\n\n        const pinataApiKey = process.env.REACT_APP_pinataApiKey\n        const pinataSecretApiKey = process.env.REACT_APP_pinataSecretApiKey\n        const url = process.env.REACT_APP_pinFilePostURL\n\n        axios\n          .post(url, data, {\n            headers: {\n              'Content-Type': `multipart/form-data; boundary=`,\n              pinata_api_key: pinataApiKey,\n              pinata_secret_api_key: pinataSecretApiKey,\n            },\n          })\n          .then((response) => {\n            updateBuyStatus({ model: true })\n          })\n          .catch((err) => {\n            showToast('error', 'Your purchase was not successful at this moment, please try again')\n            onDismiss()\n          })\n      },\n      { trs: true, forceIndices: true, includeCustomExtensions: true, animations: animation },\n    )\n  }\n\n  const setModel = (scene, anim) => {\n    if (buyFlag) {\n      const model = scene\n      const animation = anim\n\n      // exportModel(model, animation)\n\n      updateBuyFlag(false)\n    }\n  }\n\n  const showToast = (type, content) => {\n    if (type === 'success') {\n      toastSuccess(t('Success!'), t(content))\n    } else if (type === 'error') {\n      toastError(t('Sorry'), t(content))\n    }\n  }\n\n  // Enable and Buy Gladiator\n\n  const minimumNrtRequired = parseUnits(nft.initialLifeCycle.price.toString())\n  const allowance = minimumNrtRequired\n  const minimumNrtRequiredSGTU = parseUnits(nft.finalLifeCycle.price.toString())\n  const allowanceSGTU = minimumNrtRequiredSGTU\n  const nrtContract = useNrt()\n  const gladiatorNftContract = useGladiatorNft()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const [click, setClick] = useState(false)\n\n  const handleClick = () => {\n    setClick(!click)\n  }\n\n  const {\n    isApproving,\n    isApproved,\n    isApprovingFailed,\n\n    handleApprove,\n    isConfirmed,\n    isConfirming,\n    isConfirmingFailed,\n\n    handleConfirm,\n    handlePriorConfirm,\n    isApprovedSGTU,\n    isApprovingSGTU,\n    isApprovingFailedSGTU,\n\n    isConfirmedSGTU,\n    isConfirmingSGTU,\n    isConfirmedFailedSGTU,\n\n    handleApproveSGTU,\n    handleConfirmSGTU,\n    handlePriorConfirmSGTU,\n  } = useApproveConfirmTransaction({\n    onDismiss: onDismiss,\n    onRequiresApproval: async () => {\n      // TODO: Move this to a helper, this check will be probably be used many times\n      try {\n        const response = await nrtContract.allowance(account, gladiatorNftContract.address)\n        // console.log(\"responseeeeeeeeeeeeeeeeeeeeeeeeeeee===================\", response)\n        return response.gte(minimumNrtRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onRequiresApprovalSGTU: async () => {\n      // TODO: Move this to a helper, this check will be probably be used many times\n      try {\n        const response = await nrtContract.allowance(account, gladiatorNftContract.address)\n        return response.gte(minimumNrtRequiredSGTU)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return callWithGasPrice(nrtContract, 'approve', [gladiatorNftContract.address, MaxUint256.toString()])\n    },\n    onApproveSuccess: () => {\n      toastSuccess(t('Enabled'), t('Gladiator is approved successfully and ready to buy'))\n    },\n    onConfirm: async () => {\n      try {\n        // const pinata = pinataSdk(\n        //   process.env.REACT_APP_pinataApiKey,\n        //   process.env.REACT_APP_pinataSecretApiKey,\n        // )\n        // const deployed = await pinata.pinJSONToIPFS({...nft, curColor,  curName, curSpeed, curBack, colors}) //\n        const data = await callWithGasPrice(gladiatorNftContract, 'buyGladiator', [\n          nft.name, // id of gladiator\n          1, // price of gladiator\n          '0x0000000000000000000000000000000000000000', // URI\n          `ipfs://${jsonHash}`,\n        ])\n        // console.log(\"dataaaaaaaaaaaaaaaaaaaaa\", data)\n        return data\n      } catch (error: any) {\n        throw new Error(error)\n      }\n    },\n    onApproveSGTU: () => {\n      return callWithGasPrice(nrtContract, 'approve', [gladiatorNftContract.address, MaxUint256.toString()])\n    },\n    onConfirmSGTU: async () => {\n      try {\n        // const pinata = pinataSdk(\n        //   process.env.REACT_APP_pinataApiKey,\n        //   process.env.REACT_APP_pinataSecretApiKey,\n        // )\n        // const deployed = await pinata.pinJSONToIPFS({...nft, curColor,  curName, curSpeed, curBack, colors})\n        const data = await callWithGasPrice(gladiatorNftContract, 'buyGladiator', [\n          nft.name,\n          2,\n          '0x0000000000000000000000000000000000000000',\n          `ipfs://${jsonHash}`,\n        ])\n        return data\n      } catch (error: any) {\n        throw new Error(error)\n      }\n    },\n    onSuccess: () => {\n      toastSuccess(t('success'), t('Gladiator is Bought successfully and sent to school'))\n    },\n  })\n  const buyAction = (num) => {\n    if (!account) {\n      toastInfo(t('Unable to find wallet'), t('Please connect the wallet first'))\n    } else {\n      setBuyType(num)\n      if (num === 0) {\n        handlePriorConfirm()\n      } else if (num === 1) {\n        handlePriorConfirmSGTU()\n      }\n      updateBuyFlag(true)\n      updateBuyStatus({\n        model: false,\n        json: false,\n        image: false,\n        gif: false,\n      })\n    }\n  }\n  useEffect(() => {\n    if (isConfirmed) {\n      onDismiss()\n      setTimeout(() => {\n        history.push('/school')\n      }, 6000)\n    }\n    if (isConfirmedSGTU) {\n      onDismiss()\n      setTimeout(() => {\n        history.push('/mygladiators')\n      }, 6000)\n    }\n  }, [isConfirmed, isConfirmedSGTU, isApproved, isApprovedSGTU])\n\n  useEffect(() => {\n    if (jsonHash && buyStatus.json) {\n      // console.log(\"jsonHashjsonHashjsonHashjsonHashjsonHash nnnnnnnnnnnnn\", jsonHash)\n      if (buyType === 0) {\n        handleConfirm()\n      } else if (buyType === 1) {\n        handleConfirmSGTU()\n      }\n    }\n  }, [jsonHash])\n\n  useEffect(() => {\n    return () => {\n      clearHashes()\n    }\n  }, [])\n  useEffect(() => { }, [finalNft])\n  const spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n  // console.log(\"curBackcurBackcurBackcurBackcurBackcurBackcurBackcurBack\", curBack)\n\n  useEffect(() => {\n\n    return () => {\n      resetColors()\n    }\n  }, [])\n\n\n  return (<>\n    {modal && <NewModal title={nft.name} onDismiss={onDismiss} minWidth=\"1200px\">\n      <MainModalContent>\n        <MainContentViewer>\n          <StyledMain>\n            <BackSelectorSolo curBack={curBack} setBack={setCurrentBack} curColor={curColor} setColor={setCurrentColor} />\n            <NewViewerSolo\n              setModel={setModel}\n              nft={nft}\n              curColor={curColor}\n              curName={curName}\n              setCurName={(name) => setCurrentName(name)}\n              curSpeed={curSpeed}\n              curBack={curBack}\n              colors={colors}\n              showToast={showToast}\n            />\n          </StyledMain>\n          <Flex justifyContent=\"end\">\n            <Button isLoading={\n              (!isApprovingFailed ? (isApproving || isConfirming ? true : false) : !isApprovingFailed) ||\n              (!isApprovingFailedSGTU ? (isApprovingSGTU || isConfirmingSGTU ? true : false) : !isApprovingFailedSGTU)\n            } variant=\"secondary\" scale=\"sm\" onClick={resetColors} style={{ marginTop: '10px' }}>\n              {t('Reset')}\n            </Button>\n            <div style={{ width: '24px', height: '24px' }}>{ }</div>\n            <Button\n              isLoading={\n                (!isApprovingFailed ? (isApproving || isConfirming ? true : false) : !isApprovingFailed) ||\n                (!isApprovingFailedSGTU ? (isApprovingSGTU || isConfirmingSGTU ? true : false) : !isApprovingFailedSGTU)\n              }\n              variant=\"secondary\"\n              scale=\"sm\"\n              onClick={handleClick}\n              style={{ marginTop: '10px', backgroundColor: 'green', color: 'white', borderColor: 'green' }}\n            >\n              {t('Quick Start')}\n            </Button>\n          </Flex>\n          <ModalActions>\n            {/* buy Action */}\n            {/* <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={ !isButtonEnable }>\n          {t('Close')}\n        </Button>\n        <Button onClick={buyAction} width=\"100%\" disabled={ !isButtonEnable }>\n          { isButtonEnable ? t('Buy') : t('Buying')} */}\n            <NewButton isLoading={\n              (!isApprovingFailed ? (isApproving || isConfirming ? true : false) : !isApprovingFailed) ||\n              (!isApprovingFailedSGTU ? (isApprovingSGTU || isConfirmingSGTU ? true : false) : !isApprovingFailedSGTU)\n            } variant=\"secondary\" onClick={onDismiss} width=\"100%\" style={{ marginTop: '10px' }}>\n              {t('Close')}\n            </NewButton>\n            <NewButton\n              endIcon={!isApprovingFailed ? (isConfirming || isApproving ? spinnerIcon : undefined) : undefined}\n              isLoading={\n                (!isApprovingFailed ? (isApproving || isConfirming ? true : false) : !isApprovingFailed) ||\n                (!isApprovingFailedSGTU ? (isApprovingSGTU || isConfirmingSGTU ? true : false) : !isApprovingFailedSGTU)\n              }\n              onClick={!isApproved ? handleApprove : () => buyAction(0)}\n              width=\"100%\"\n              style={{ marginTop: '10px' }}\n            >\n              <img\n                src=\"/images/gallery/going-to-school.png\"\n                alt=\"Ready for Battle\"\n                width=\"36px\"\n                style={{ marginRight: '5px' }}\n                loading=\"lazy\"\n              />\n              {!isApproved\n                ? t(\n                  `Approve ${nft.initialLifeCycle.price} NRT Gladiator Stays in Battle School, You will be rewarded with DENA while in School`,\n                )\n                : t(\n                  `Buy ${nft.initialLifeCycle.price} NRT Gladiator Stays in Battle School, You will be rewarded with DENA while in School`,\n                )}\n              {/* \n          {!isApproved\n            ? t(\n                `Enable ${nft.initialLifeCycle.price} NRT Gladiator Stays in Battle School, You will be rewarded with DENA while in School`,\n              )\n            : t(\n                `Buy ${nft.initialLifeCycle.price} NRT Gladiator Stays in Battle School, You will be rewarded with DENA while in School`,\n              )} */}\n            </NewButton>\n            <NewButton\n              variant=\"secondary\"\n              endIcon={!isApprovingFailedSGTU ? (isConfirmingSGTU || isApprovingSGTU ? spinnerIcon : undefined) : undefined}\n              isLoading={\n                (!isApprovingFailed ? (isApproving || isConfirming ? true : false) : !isApprovingFailed) ||\n                (!isApprovingFailedSGTU ? (isApprovingSGTU || isConfirmingSGTU ? true : false) : !isApprovingFailedSGTU)\n              }\n              onClick={!isApprovedSGTU ? handleApproveSGTU : () => buyAction(1)}\n              width=\"100%\"\n              style={{ marginTop: '10px', backgroundColor: 'green', color: 'white', borderColor: 'green' }}\n            >\n              <img\n                src=\"/images/gallery/ready-to-battle.png\"\n                alt=\"Ready for Battle\"\n                width=\"36px\"\n                style={{ marginRight: '10px' }}\n              />\n              {!isApprovedSGTU\n                ? t(`Approve ${nft.finalLifeCycle.price} NRT Skip School, Gladiator is ready for battle`)\n                : t(`Buy ${nft.finalLifeCycle.price} NRT Skip School, Gladiator is ready for battle`)}\n            </NewButton>\n          </ModalActions>\n        </MainContentViewer>\n        <QuickStartPane isQuickStart={click}>\n          <QuickStart />\n        </QuickStartPane>\n      </MainModalContent>\n    </NewModal>\n    }\n  </>\n  )\n}\n\nexport default Configurator3DNftModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { GalleryNft } from 'config/constants/gallery/types'\n\ninterface PreviewProps {\n  nft: GalleryNft\n  isOwned?: boolean\n}\n\nconst Container = styled.div`\n  background-color: #000;\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  padding-bottom: 100%;\n`\n\nconst StyledImage = styled.img`\n  transition: opacity 1s linear;\n  object-fit: scale-down;\n  border-radius: 24px 24px 0 0;\n  max-height: 100%;\n  max-width: 100%;\n  width: auto;\n  height: auto;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n`\n\nconst Preview: React.FC<PreviewProps> = ({ nft, isOwned = false }) => {\n  const { glTF, name, userData } = nft\n  const previewImageSrc = `/gallery/${glTF}/preview.png`\n\n  const previewImage = <StyledImage src={previewImageSrc} alt={name} />\n\n  return (\n    <Container>\n      {isOwned ? (\n        <a href={userData.ipfs} target=\"_blank\" rel=\"noreferrer noopener\">\n          {/* {previewImage} */}\n        </a>\n      ) : (\n        previewImage\n      )}\n    </Container>\n  )\n}\n\nexport default Preview\n","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\nimport { GalleryNft } from 'config/constants/gallery/types'\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\nconst LabelWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px 0px;\n`\nconst ExpandableText = styled.div`\n  color:  #D9AB3A;\n`\nconst NewCardFooter = styled(CardFooter)`\n//   border-top: none !important;\n`\nconst IconImage = styled.div`\n  width: 24px;\n  margin-right: 8px;\n`\nconst LabelText = styled.div`\n  display: flex;\n`\n\ninterface AttributesProps {\n    handleAttributesFilter?: (e: React.ChangeEvent<HTMLInputElement>) => void\n    attributes: GalleryNft[\"attributes\"]\n}\n\nconst Attributes: React.FC<AttributesProps> = ({ handleAttributesFilter, attributes }) => {\n    const [isExpanded, setIsExpanded] = useState(false)\n    const { t } = useTranslation()\n    const minInputRef = useRef<HTMLInputElement | null>(null)\n    const maxInputRef = useRef<HTMLInputElement | null>(null)\n    // const { topLeaderboard, status } = auction\n\n    // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n\n    return (\n        <NewCardFooter p=\"0\">\n            {isExpanded && (\n                <FooterInner>\n                    <Flex p=\"24px\" flexDirection=\"column\">\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/strength.png\" alt=\"strength\" />\n                                </IconImage>\n                                <Text>{t('Strength')}</Text>\n                            </LabelText>\n                            <Text>{attributes.strength}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/endurance.png\" alt=\"Endurance\" />\n                                </IconImage>\n                                <Text>{t('Endurance')}</Text>\n                            </LabelText>\n                            <Text>{attributes.endurance}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/agility.png\" alt=\"Agility\" />\n                                </IconImage>\n                                <Text>{t('Agility')}</Text>\n                            </LabelText>\n                            <Text>{attributes.agility}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/precision.png\" alt=\"Precision\" />\n                                </IconImage>\n                                <Text>{t('Precision')}</Text>\n                            </LabelText>\n                            <Text>{attributes.precision}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/intelligence.png\" alt=\"Intelligance\" />\n                                </IconImage>\n                                <Text>{t('Intelligance')}</Text>\n                            </LabelText>\n                            <Text>{attributes.intelligance}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/willpower.png\" alt=\"Willpower\" />\n                                </IconImage>\n                                <Text>{t('Willpower')}</Text>\n                            </LabelText>\n                            <Text>{attributes.willpower}</Text>\n                        </LabelWrapper>\n                    </Flex>\n                </FooterInner>\n            )}\n            <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n                <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n                    <ExpandableText>\n                        {isExpanded ? t('Hide Attributes') : t('Attributes')}\n                    </ExpandableText>\n                </ExpandableLabel>\n            </Flex>\n        </NewCardFooter>\n    )\n}\n\nexport default Attributes","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\nimport { GalleryNft } from 'config/constants/gallery/types'\n\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\nconst LabelWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px 0px;\n`\nconst ExpandableText = styled.div`\n  color:  #D9AB3A;\n`\nconst NewCardFooter = styled(CardFooter)`\n//   border-top: none !important;\n`\nconst IconImage = styled.div`\n  width: 24px;\n  margin-right: 8px;\n`\nconst LabelText = styled.div`\n  display: flex;\n`\n\ninterface WeaponsProps {\n    handleAttributesFilter?: (e: React.ChangeEvent<HTMLInputElement>) => void\n    attributes: GalleryNft[\"weapons\"]\n}\n\nconst Weapons: React.FC<WeaponsProps> = ({ handleAttributesFilter, attributes }) => {\n    const [isExpanded, setIsExpanded] = useState(false)\n    const { t } = useTranslation()\n    const minInputRef = useRef<HTMLInputElement | null>(null)\n    const maxInputRef = useRef<HTMLInputElement | null>(null)\n    // const { topLeaderboard, status } = auction\n\n    // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n\n    return (\n        <NewCardFooter p=\"0\">\n            {isExpanded && (\n                <FooterInner>\n                    <Flex p=\"24px\" flexDirection=\"column\">\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/one-handed.png\" alt=\"One-hand\" />\n                                </IconImage>\n                                <Text>{t('One-hand')}</Text>\n                            </LabelText>\n                            <Text>{attributes.oneHand}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/two-handed.png\" alt=\"Two-hand\" />\n                                </IconImage>\n                                <Text>{t('Two-hand')}</Text>\n                            </LabelText>\n                            <Text>{attributes.twoHand}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/shield.png\" alt=\"Shield\" />\n                                </IconImage>\n                                <Text>{t('Shield')}</Text>\n                            </LabelText>\n                            <Text>{attributes.shield}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/ranged.png\" alt=\"Ranged\" />\n                                </IconImage>\n                                <Text>{t('Ranged')}</Text>\n                            </LabelText>\n                            <Text>{attributes.ranged}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/dual.png\" alt=\"Dual\" />\n                                </IconImage>\n                                <Text>{t('Dual')}</Text>\n                            </LabelText>\n                            <Text>{attributes.dual}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/polearms.png\" alt=\"Polearms\" />\n                                </IconImage>\n                                <Text>{t('Polearms')}</Text>\n                            </LabelText>\n                            <Text>{attributes.polearms}</Text>\n                        </LabelWrapper>\n                    </Flex>\n                </FooterInner>\n            )}\n            <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n                <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n                    <ExpandableText>\n                        {isExpanded ? t('Hide Weapons') : t('Weapons')}\n                    </ExpandableText>\n                </ExpandableLabel>\n            </Flex>\n        </NewCardFooter>\n    )\n}\n\nexport default Weapons","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\nimport { GalleryNft } from 'config/constants/gallery/types'\n\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\nconst LabelWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px 0px;\n`\nconst ExpandableText = styled.div`\n  color:  #D9AB3A;\n`\nconst NewCardFooter = styled(CardFooter)`\n//   border-top: none !important;\n`\nconst IconImage = styled.div`\n  width: 24px;\n  margin-right: 8px;\n`\nconst LabelText = styled.div`\n  display: flex;\n`\n\ninterface AbilitiesProps {\n    handleAttributesFilter?: (e: React.ChangeEvent<HTMLInputElement>) => void\n    attributes: GalleryNft[\"abilities\"]\n}\n\nconst Abilities: React.FC<AbilitiesProps> = ({ handleAttributesFilter, attributes }) => {\n    const [isExpanded, setIsExpanded] = useState(false)\n    const { t } = useTranslation()\n    const minInputRef = useRef<HTMLInputElement | null>(null)\n    const maxInputRef = useRef<HTMLInputElement | null>(null)\n    // const { topLeaderboard, status } = auction\n\n    // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n\n    return (\n        <NewCardFooter p=\"0\">\n            {isExpanded && (\n                <FooterInner>\n                    <Flex p=\"24px\" flexDirection=\"column\">\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/leadership.png\" alt=\"Leadership\" />\n                                </IconImage>\n                                <Text>{t('Leadership')}</Text>\n                            </LabelText>\n                            <Text>{attributes.leadership}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/coach.png\" alt=\"Coach\" />\n                                </IconImage>\n                                <Text>{t('Coach')}</Text>\n                            </LabelText>\n                            <Text>{attributes.coach}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/cook.png\" alt=\"Cook\" />\n                                </IconImage>\n                                <Text>{t('Cook')}</Text>\n                            </LabelText>\n                            <Text>{attributes.cook}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/medical.png\" alt=\"Medical\" />\n                                </IconImage>\n                                <Text>{t('Medical')}</Text>\n                            </LabelText>\n                            <Text>{attributes.medical}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/smith.png\" alt=\"Smith\" />\n                                </IconImage>\n                                <Text>{t('Smith')}</Text>\n                            </LabelText>\n                            <Text>{attributes.smith}</Text>\n                        </LabelWrapper>\n                        <LabelWrapper>\n                            <LabelText>\n                                <IconImage>\n                                    <img src=\"/images/battles/icons/torture.png\" alt=\"Torture\" />\n                                </IconImage>\n                                <Text>{t('Torture')}</Text>\n                            </LabelText>\n                            <Text>{attributes.torture}</Text>\n                        </LabelWrapper>\n                    </Flex>\n                </FooterInner>\n            )}\n            <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n                <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n                    <ExpandableText>\n                        {isExpanded ? t('Hide Abilities') : t('Abilities')}\n                    </ExpandableText>\n                </ExpandableLabel>\n            </Flex>\n        </NewCardFooter>\n    )\n}\n\nexport default Abilities","import React, { Suspense, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport { ethers } from 'ethers'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  Skeleton,\n  Text,\n  Button,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  useTooltip,\n  CardFooter,\n  useModal,\n  Box,\n  Flex,\n  ArrowForwardIcon,\n} from '@pancakeswap/uikit'\nimport { CommunityTag, CoreTag, PartnerTag } from 'components/Tags'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { GalleryNft, ListingType } from 'config/constants/gallery/types'\nimport Loader from 'views/Configurator/components/UI/Loader'\nimport { useGladiatorNft } from 'hooks/useContract'\nimport { parseUnits } from '@ethersproject/units'\n\n// import InfoRow from '../InfoRow'\n// import TransferNftModal from '../TransferNftModal'\n// import ClaimNftModal from '../ClaimNftModal'\n// import View3DNftModal from '../../View3DNftModal'\nimport Configurator3DNftModal from '../../Configurator3DNftModal'\n// import LifeCycleModal from './LifeCycleModal'\n\nimport DetailsSection from './DetailsSection'\nimport Preview from './Preview'\nimport Attributes from './Attributes'\nimport Weapons from './Weapons'\nimport Abilities from './Abilities'\nimport { useHistory } from 'react-router-dom'\n\nexport interface NftCardProps {\n  nft: GalleryNft\n  canClaim?: boolean\n  tokenIds?: number[]\n  onClaim?: () => Promise<ethers.providers.TransactionResponse>\n  refresh: () => void\n}\n\nconst InfoRow = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Header = styled(InfoRow)`\n  min-height: 28px;\n`\n\nconst DetailsButton = styled(Button).attrs({ variant: 'text' })`\n  height: auto;\n  padding: 16px 24px;\n\n  &:hover:not(:disabled):not(:active) {\n    background-color: transparent;\n  }\n\n  &:focus:not(:active) {\n    box-shadow: none;\n  }\n`\n\nconst InfoBlock = styled.div`\n  padding: 24px;\n`\n\nconst Grid = styled(Box)`\n  display: grid;\n  grid-template-columns: 75fr 2fr;\n  cursor: pointer;\n`\n\nconst GridPrice = styled.div`\n  display: grid;\n  grid-gap: 16px 8px;\n  margin-top: 24px;\n  grid-template-columns: repeat(2, auto);\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 16px;\n  }\n`\n\nconst LifeCycleGrid = styled(Box)`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr) auto;\n  cursor: pointer;\n`\nconst Wrapper = styled.div``\nconst Info = styled(Box)`\n  font-size: 10px;\n`\nconst NftCard: React.FC<NftCardProps> = ({ nft, canClaim = false, tokenIds = [], onClaim, refresh }) => {\n  const history = useHistory()\n  const [remainingSupply, setRemainingSupply] = useState<number>(0)\n  const [isOpen, setIsOpen] = useState(false)\n  const { t } = useTranslation()\n  const { profile } = useProfile()\n  const { name, description, supply } = nft\n  const walletOwnsNft = tokenIds.length > 0\n  const Icon = isOpen ? ChevronUpIcon : ChevronDownIcon\n\n  const handleClick = async () => {\n    setIsOpen(!isOpen)\n  }\n\n  const handleSuccess = () => {\n    refresh()\n  }\n\n  // const { targetRef, tooltip, tooltipVisible } = useTooltip(\n  //   t('Initial stage'),\n  //   { placement: 'top-end', tooltipOffset: [20, 10] },\n  // )\n\n  // const [onPresentTransferModal] = useModal(\n  //   <TransferNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />,\n  // )\nconst [modal, setModal]=useState(true)\n  // const [onPresentLifeCycleModal] = useModal(<LifeCycleModal nft={nft} onDismiss={handleSuccess} />)\n\n  // const [onPresentView3DNftModal] = useModal(<View3DNftModal nft={nft} onDismiss={handleSuccess} />)\n\n  const [onPresentConfigurator3DNftModal] = useModal(\n    <Configurator3DNftModal nft={nft} onDismiss={handleSuccess} history={history} />,\n  )\n  const sizeFormatted = `${nft.size.toLocaleString(undefined, { maximumFractionDigits: 0 })} ${nft.sizeMeasure}`\n  const weightFormatted = `${nft.weight.toLocaleString(undefined, { maximumFractionDigits: 0 })} ${nft.weightMeasure}`\n  const initialCostFormatted = `${nft.initialLifeCycle.price.toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n  const initialCostExplained = `${t('School time: ')}${nft.initialLifeCycle.periodInMinutes / 60}h`\n  const finalCostFormatted = `${nft.finalLifeCycle.price.toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n  const finalCostExplained = `${t('Gladiator Ready')}`\n  const gladiatorNftContract = useGladiatorNft()\n\n  const getGladiatorSupply = async () => {\n    const resp = await gladiatorNftContract.gladiator(nft.name)\n    // console.log(\"parseUnitsparseUnits\", parseInt(resp.gladiatorCount._hex.toString(), 16));\n    // console.log(\"parseUnitsparseUnits\", parseInt(resp.gladiatorSupply._hex.toString(), 16));\n    setRemainingSupply(\n      Number(parseInt(resp.gladiatorSupply._hex.toString(), 16) - parseInt(resp.gladiatorCount._hex.toString(), 16)),\n    )\n\n    // console.log(nft.name, resp.gladiatorCount, resp.gladiatorSupply)\n  }\n\n  useEffect(() => {\n    getGladiatorSupply()\n  }, [nft, useGladiatorNft])\n  useEffect(() => {\n    if (remainingSupply) {\n      nft.supply = remainingSupply\n    }\n  }, [remainingSupply])\n  //   useEffect(() => {\n  //     (async () => {\n  // const {data} = await axios.get(\"https://gateway.pinata.cloud/ipfs/QmZHnVZTjGjY3fdSPrJHHqwdgitbtvx9ZBiW9RrhZn2ruT\")\n  // console.log(\"datadatadatadatadatadata\", data);\n  //     })()\n  //   }, [])\n\n  return (\n    <Card isActive={walletOwnsNft} key={nft.glTF} style={{ background: '#d9ab3a' }}>\n      <Preview nft={nft} isOwned={walletOwnsNft} />\n      <CardBody>\n        <Header>\n          <Heading>\n            <Grid>\n              <Flex>{name}</Flex>\n              <Flex>\n                {nft.listingType === ListingType.COMMUNITY ? (\n                  <CommunityTag />\n                ) : nft.listingType === ListingType.PARTNER ? (\n                  <PartnerTag />\n                ) : (\n                  <CoreTag />\n                )}\n              </Flex>\n              {/* <Flex onClick={onPresentView3DNftModal}>\n                <Tag ml=\"5px\" mt=\"5px\" variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />}>\n                  {t('View 3D')}\n                </Tag>\n              </Flex> */}\n            </Grid>\n          </Heading>\n          {walletOwnsNft && (\n            <Tag outline variant=\"secondary\">\n              {t('In Wallet')}\n            </Tag>\n          )}\n\n          {/* {profile?.nft?.identifier === identifier && (\n            <Tag outline variant=\"success\">\n              {t('Profile Pic')}\n            </Tag>\n          )} */}\n        </Header>\n\n        <Wrapper>\n          <Flex justifyContent=\"space-between\">\n            <Text>{t('Rarity')}:</Text>\n            <Text>{nft.rarity}</Text>\n          </Flex>\n          <Flex justifyContent=\"space-between\">\n            <Text>{t('Supply')}:</Text>\n            <Text>{nft.supply}</Text>\n          </Flex>\n          {/* <Flex justifyContent=\"space-between\">\n          <Text>{t('Size')}:</Text>\n          {sizeFormatted ? <Text>{sizeFormatted}</Text> : <Skeleton width={75} height={25} />}\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Weight')}:</Text>\n          {weightFormatted ? <Text>{weightFormatted}</Text> : <Skeleton width={75} height={25} />}\n        </Flex>  */}\n        </Wrapper>\n\n        <GridPrice>\n          <Flex>\n            <img src=\"/nrtlogo.png\" width=\"32px\" height=\"32px\" alt=\"\" />\n            <Box>\n              <Flex>\n                <Heading ml=\"10px\">{initialCostFormatted}</Heading>\n                {nft.token}\n              </Flex>\n              <Info ml=\"10px\">{initialCostExplained}</Info>\n            </Box>\n          </Flex>\n\n          <Flex justifyContent=\"right\">\n            <img src=\"/nrtlogo.png\" width=\"32px\" height=\"32px\" alt=\"\" />\n            <Box>\n              <Flex>\n                <Heading ml=\"10px\">{finalCostFormatted}</Heading>\n                {nft.token}\n              </Flex>\n              <Info ml=\"10px\">{finalCostExplained}</Info>\n            </Box>\n          </Flex>\n        </GridPrice>\n\n        {/* <Tag outline variant=\"secondary\">\n            {t('In Wallet')}\n          </Tag>\n          <Tag outline variant=\"success\">\n            {t('In Wallet')}\n          </Tag> */}\n\n        <Suspense fallback={<Loader />}>\n          <Button width=\"100%\" mt=\"24px\" onClick={onPresentConfigurator3DNftModal}>\n            {t('Personalize & Buy')}\n          </Button>\n        </Suspense>\n\n        {/* {canClaim && (\n          <Button width=\"100%\" mt=\"24px\" onClick={onPresentClaimModal}>\n            {t('Claim this NFT')}\n          </Button>\n        )} */}\n        {/* {walletOwnsNft && (\n          <Button width=\"100%\" variant=\"secondary\" mt=\"24px\" onClick={onPresentTransferModal}>\n            {t('Transfer')}\n          </Button>\n        )} */}\n      </CardBody>\n      <Attributes attributes={nft.attributes} />\n      <Weapons attributes={nft.weapons} />\n      <Abilities attributes={nft.abilities} />\n      {/* <CardFooter p=\"0\">\n        <DetailsButton width=\"100%\" endIcon={<Icon width=\"24px\" color=\"primary\" />} onClick={handleClick}>\n          {t('Details')}\n        </DetailsButton>\n        {isOpen && (\n          <InfoBlock>\n            <DetailsSection nftModel={nft} />\n          </InfoBlock>\n        )}\n      </CardFooter> */}\n    </Card>\n  )\n}\n\nexport default NftCard\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Card, Flex } from '@pancakeswap/uikit'\nimport { GalleryNft } from 'config/constants/gallery/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { fetchWalletGalleryNfts } from 'state/gallery'\nimport { useAppDispatch } from 'state'\nimport NftCard from './NftCard'\n\nconst StyledCard = styled(Card)`\n  align-self: baseline;\n`\n\nconst FarmCardInnerContainer = styled(Flex)`\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n`\n\nconst ExpandingWrapper = styled.div`\n  padding: 24px;\n  border-top: 2px solid ${({ theme }) => theme.colors.cardBorder};\n  overflow: hidden;\n`\n\ninterface GalleryModelCardProps {\n  nftModel: GalleryNft\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst GalleryModelCard: React.FC<GalleryModelCardProps> = ({ nftModel, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n\n  const isPromotedFarm = nftModel.isPromoted\n  const handleRefresh = () => {\n    dispatch(fetchWalletGalleryNfts(account))\n  }\n\n  return (\n    <>\n      \n      <StyledCard isActive={isPromotedFarm} style={{ background: '#d9ab3a' }}>\n        <div key={nftModel.name}>\n          <NftCard nft={nftModel} refresh={handleRefresh} />\n        </div>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default GalleryModelCard\n","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Input, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\nimport Select, { OptionProps } from 'components/Select/Select'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\n\nconst ExpandableText = styled.div`\n  color: #d9ab3a;\n`\n\ninterface PriceFilterProps {\n  handlePriceFilter?: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleMinNRTsQuery?: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleMaxNRTsQuery?: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleCurrency?:(e:string)=>void\n}\n\nconst PriceFilter: React.FC<PriceFilterProps> = ({ handleMinNRTsQuery, handleMaxNRTsQuery,handleCurrency }) => {\n  const [isExpanded, setIsExpanded] = useState(true)\n  const { t } = useTranslation()\n  const minInputRef = useRef<HTMLInputElement | null>(null)\n  const maxInputRef = useRef<HTMLInputElement | null>(null)\n  // const { topLeaderboard, status } = auction\n\n  // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n  return (\n    <CardFooter p=\"0\">\n      {isExpanded && (\n        <FooterInner>\n          <Flex p=\"16px\" flexDirection=\"column\">\n            <Flex width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Select\n                options={[\n                  {\n                    label: t('NFT Royal Token (NRT)'),\n                    value: 'ow',\n                  },\n                  {\n                    label: t('United States Dollar (USD)'),\n                    value: 'usd',\n                  },\n\n                  // {\n                  // label: t('Denarius (DENA)'),\n                  // value: 'aqua',\n                  // },\n                  // {\n                  //   label: t('Earned'),\n                  //   value: 'earned',\n                  // },\n                  // {\n                  // label: t('Etherium (ETH)'),\n                  // value: 'eth',\n                  // },\n                ]}\n                onOptionChange={(e) => handleCurrency(e.value)}\n              />\n            </Flex>\n            <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Input\n                ref={minInputRef}\n                type=\"text\"\n                inputMode=\"decimal\"\n                pattern=\"\\d*\"\n                scale=\"sm\"\n                placeholder=\"Min\"\n                // name=\"minNRT\"\n                onChange={(e) => {\n                  handleMinNRTsQuery(e)\n                }}\n              />\n              <Flex pt=\"8px\" px=\"5px\">\n                {t('to')}\n              </Flex>\n              <Input\n                ref={maxInputRef}\n                type=\"text\"\n                inputMode=\"decimal\"\n                pattern=\"\\d*\"\n                scale=\"sm\"\n                placeholder=\"Max\"\n                onChange={(e) => handleMaxNRTsQuery(e)}\n              />\n            </Flex>\n          </Flex>\n        </FooterInner>\n      )}\n      <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n          <ExpandableText>{isExpanded ? t('Hide Price') : t('Price')}</ExpandableText>\n        </ExpandableLabel>\n      </Flex>\n    </CardFooter>\n  )\n}\n\nexport default PriceFilter\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Box, CardFooter, ExpandableLabel, Checkbox } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\n\nconst ExpandableText = styled.div`\n  color: #d9ab3a;\n`\ninterface RarityI {\n  1: Boolean\n  2: Boolean\n  3: Boolean\n  4: Boolean\n  5: Boolean\n  6: Boolean\n}\ntype ValueI = 'ability' | 'weapon' | 'attributes' | 'characteristics' | 'rarity'\n\ninterface RarityFilterProps {\n  handleChangeRarity: (e: React.ChangeEvent<HTMLInputElement>) => void\n  rarity: RarityI\n  clearFilterStates: (value: ValueI) => void\n}\n\nconst RarityFilter: React.FC<RarityFilterProps> = ({ handleChangeRarity, rarity, clearFilterStates }) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  // const { topLeaderboard, status } = auction\n\n  // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n  return (\n    <CardFooter p=\"0\">\n      {isExpanded && (\n        <FooterInner>\n          <Flex p=\"16px\" flexDirection=\"column\">\n            <Flex width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Checkbox\n                name=\"Common\"\n                type=\"checkbox\"\n                value=\"1\"\n                checked={rarity[1] ? true : false}\n                onChange={(e) => handleChangeRarity(e)}\n                scale=\"sm\"\n              />\n              <Text ml=\"10px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('Recruit')}\n              </Text>\n              <Text ml=\"83px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('( level 1 )')}\n              </Text>\n            </Flex>\n            <Flex width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Checkbox\n                name=\"Uncommon\"\n                type=\"checkbox\"\n                value=\"2\"\n                checked={rarity[2] ? true : false}\n                onChange={(e) => handleChangeRarity(e)}\n                scale=\"sm\"\n              />\n              <Text ml=\"10px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('False Gladiator')}\n              </Text>\n              <Text ml=\"25px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('( level 2 )')}\n              </Text>\n            </Flex>\n            <Flex width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Checkbox\n                name=\"Rare\"\n                type=\"checkbox\"\n                value=\"3\"\n                checked={rarity[3] ? true : false}\n                onChange={(e) => handleChangeRarity(e)}\n                scale=\"sm\"\n              />\n              <Text ml=\"10px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('Gladiator')}\n              </Text>\n              <Text ml=\"66px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('( level 3 )')}\n              </Text>\n            </Flex>\n            <Flex width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Checkbox\n                name=\"SuperRare\"\n                type=\"checkbox\"\n                value=\"4\"\n                checked={rarity[4] ? true : false}\n                onChange={(e) => handleChangeRarity(e)}\n                scale=\"sm\"\n              />\n              <Text ml=\"10px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('Veteran Gladiator')}\n              </Text>\n              <Text ml=\"6px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('( level 4 )')}\n              </Text>\n            </Flex>\n            <Flex width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Checkbox\n                name=\"Deep\"\n                type=\"checkbox\"\n                value=\"5\"\n                checked={rarity[5] ? true : false}\n                onChange={(e) => handleChangeRarity(e)}\n                scale=\"sm\"\n              />\n              <Text ml=\"10px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('Champion')}\n              </Text>\n              <Text ml=\"60px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('( level 5 )')}\n              </Text>\n            </Flex>\n            <Flex width=\"100%\" pt=\"8px\" px=\"8px\">\n              <Checkbox\n                name=\"SuperDeep\"\n                type=\"checkbox\"\n                value=\"6\"\n                checked={rarity[6] ? true : false}\n                onChange={(e) => handleChangeRarity(e)}\n                scale=\"sm\"\n              />\n              <Text ml=\"10px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('Doctore')}\n              </Text>\n              <Text ml=\"76px\" mt=\"5px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n                {t('( level 6 )')}\n              </Text>\n            </Flex>\n          </Flex>\n        </FooterInner>\n      )}\n      <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n        <ExpandableLabel\n          expanded={isExpanded}\n          onClick={() => {\n            if (isExpanded) {\n              clearFilterStates('rarity')\n            }\n            setIsExpanded((prev) => !prev)\n          }}\n        >\n          <ExpandableText>{isExpanded ? t('Hide Rarity') : t('Rarity')}</ExpandableText>\n        </ExpandableLabel>\n      </Flex>\n    </CardFooter>\n  )\n}\n\nexport default RarityFilter\n","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\nconst LabelWrapper = styled.div``\nconst ExpandableText = styled.div`\n  color: #d9ab3a;\n`\nconst IconImage = styled.div`\n  width: 24px;\n  margin-right: 8px;\n`\nconst LabelText = styled.div`\n  margin-top: 5px;\n  display: flex;\n`\ntype ValueI = 'ability' | 'weapon' | 'attributes' | 'characteristics' | 'rarity'\n\ninterface AttributesFilterProps {\n  handleChangeAttributes: (e: React.ChangeEvent<HTMLInputElement>) => void\n  clearFilterStates: (value: ValueI) => void\n}\n\nconst AttributesFilter: React.FC<AttributesFilterProps> = ({ handleChangeAttributes, clearFilterStates }) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const minInputRef = useRef<HTMLInputElement | null>(null)\n  const maxInputRef = useRef<HTMLInputElement | null>(null)\n  // const { topLeaderboard, status } = auction\n\n  // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n  return (\n    <CardFooter p=\"0\">\n      {isExpanded && (\n        <FooterInner>\n          <Flex p=\"16px\" flexDirection=\"column\">\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/strength.png\" alt=\"strength\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Strength')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  \n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minStrength\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n\n                {/* <input type=\"number\" onChange={(e) => handleChangeAttributes(e)} \n                  ref={minInputRef}\n                  /> */}\n\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxStrength\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/endurance.png\" alt=\"Endurance\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Endurance')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minEndurance\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxEndurance\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/agility.png\" alt=\"Agility\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Agility')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minAgility\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxAgility\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/precision.png\" alt=\"Precision\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Precision')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minPrecision\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxPrecision\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/intelligence.png\" alt=\"Intelligance\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Intelligance')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minIntelligence\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxIntelligence\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/willpower.png\" alt=\"Willpower\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Willpower')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minWillPower\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxWillPower\"\n                  onChange={(e) => handleChangeAttributes(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n          </Flex>\n        </FooterInner>\n      )}\n      <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n        <ExpandableLabel\n          expanded={isExpanded}\n          onClick={() => {\n            if (isExpanded) {\n              clearFilterStates('attributes')\n            }\n            setIsExpanded((prev) => !prev)\n          }}\n        >\n          <ExpandableText>{isExpanded ? t('Hide Attributes') : t('Attributes')}</ExpandableText>\n        </ExpandableLabel>\n      </Flex>\n    </CardFooter>\n  )\n}\n\nexport default AttributesFilter\n","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\nconst LabelWrapper = styled.div``\nconst ExpandableText = styled.div`\n  color: #d9ab3a;\n`\nconst IconImage = styled.div`\n  width: 24px;\n  margin-right: 8px;\n`\nconst LabelText = styled.div`\n  margin-top: 5px;\n  display: flex;\n`\ntype ValueI = 'ability' | 'weapon' | 'attributes' | 'characteristics' | 'rarity'\n\ninterface WeaponMasteryFilterProps {\n  handleChangeWeapons: (e: React.ChangeEvent<HTMLInputElement>) => void\n  clearFilterStates: (value: ValueI) => void\n}\n\nconst WeaponMasteryFilter: React.FC<WeaponMasteryFilterProps> = ({ handleChangeWeapons, clearFilterStates }) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const minInputRef = useRef<HTMLInputElement | null>(null)\n  const maxInputRef = useRef<HTMLInputElement | null>(null)\n  // const { topLeaderboard, status } = auction\n\n  // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n  return (\n    <CardFooter p=\"0\">\n      {isExpanded && (\n        <FooterInner>\n          <Flex p=\"16px\" flexDirection=\"column\">\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/one-handed.png\" alt=\"One-hand\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('One-hand')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minOneHand\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxOneHand\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/two-handed.png\" alt=\"Two-hand\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Two-hand')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minTwoHand\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxTwoHand\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/shield.png\" alt=\"Shield\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Shield')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minShield\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxShield\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/ranged.png\" alt=\"Ranged\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Ranged')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minRanged\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxRanged\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/dual.png\" alt=\"Dual\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Dual')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minDual\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxDual\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/polearms.png\" alt=\"Polearms\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Polearms')}</Text>\n              </LabelText>\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minPolearms\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxPolearms\"\n                  onChange={(e) => handleChangeWeapons(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n          </Flex>\n        </FooterInner>\n      )}\n      <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n        <ExpandableLabel\n          expanded={isExpanded}\n          onClick={() => {\n            if (isExpanded) {\n              clearFilterStates('weapon')\n            }\n            setIsExpanded((prev) => !prev)\n          }}\n        >\n          <ExpandableText>{isExpanded ? t('Hide Weapon Mastery') : t('Weapon Mastery')}</ExpandableText>\n        </ExpandableLabel>\n      </Flex>\n    </CardFooter>\n  )\n}\n\nexport default WeaponMasteryFilter\n","import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Flex, Box, CardFooter, ExpandableLabel } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus } from 'config/constants/types'\n// import WhitelistedBiddersButton from '../WhitelistedBiddersButton'\n\nconst FooterInner = styled(Box)`\n  background-color: #000000;\n`\nconst LabelWrapper = styled.div``\nconst ExpandableText = styled.div`\n  color: #d9ab3a;\n`\nconst IconImage = styled.div`\n  width: 24px;\n  margin-right: 8px;\n`\nconst LabelText = styled.div`\n  margin-top:5px;\n  display: flex;\n`\n\ntype ValueI = 'ability' | 'weapon' | 'attributes' | 'characteristics' | 'rarity'\n\ninterface AbilitiesFilterProps {\n  handleChangeAbilities: (e: React.ChangeEvent<HTMLInputElement>) => void\n  clearFilterStates: (value: ValueI) => void\n}\n\nconst AbilitiesFilter: React.FC<AbilitiesFilterProps> = ({ handleChangeAbilities, clearFilterStates }) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const minInputRef = useRef<HTMLInputElement | null>(null)\n  const maxInputRef = useRef<HTMLInputElement | null>(null)\n  // const { topLeaderboard, status } = auction\n\n  // const isLiveOrPendingAuction = status === AuctionStatus.Pending || status === AuctionStatus.Open\n  return (\n    <CardFooter p=\"0\">\n      {isExpanded && (\n        <FooterInner>\n          <Flex p=\"16px\" flexDirection=\"column\">\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/leadership.png\" alt=\"Leadership\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Leadership')}</Text>\n              </LabelText>\n\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minLeadership\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxLeadership\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/coach.png\" alt=\"Coach\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Coach')}</Text>\n              </LabelText>\n\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minCoach\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxCoach\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/cook.png\" alt=\"Cook\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Cook')}</Text>\n              </LabelText>\n\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minCook\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxCook\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/medical.png\" alt=\"Medical\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Medical')}</Text>\n              </LabelText>\n\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minMedical\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxMedical\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/smith.png\" alt=\"Smith\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Smith')}</Text>\n              </LabelText>\n\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minSmith\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxSmith\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n            <LabelWrapper>\n              <LabelText>\n                <IconImage>\n                  <img src=\"/images/battles/icons/torture.png\" alt=\"Torture\" />\n                </IconImage>\n                <Text textTransform=\"uppercase\">{t('Torture')}</Text>\n              </LabelText>\n\n              <Flex width=\"100%\" pt=\"8px\" px=\"6px\">\n                <Input\n                  ref={minInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Min\"\n                  name=\"minTorture\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n                <Flex pt=\"8px\" px=\"5px\">\n                  {t('to')}\n                </Flex>\n                <Input\n                  ref={maxInputRef}\n                  type=\"text\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  placeholder=\"Max\"\n                  name=\"maxTorture\"\n                  onChange={(e) => handleChangeAbilities(e)}\n                />\n              </Flex>\n            </LabelWrapper>\n          </Flex>\n        </FooterInner>\n      )}\n      <Flex p=\"8px\" alignItems=\"center\" justifyContent=\"center\">\n        <ExpandableLabel\n          expanded={isExpanded}\n          onClick={() => {\n            if (isExpanded) {\n              clearFilterStates('ability')\n            }\n            setIsExpanded((prev) => !prev)\n          }}\n        >\n          <ExpandableText>{isExpanded ? t('Hide Abilities') : t('Abilities')}</ExpandableText>\n        </ExpandableLabel>\n      </Flex>\n    </CardFooter>\n  )\n}\n\nexport default AbilitiesFilter\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  Text,\n  Heading,\n  Card,\n  CardHeader,\n  CardBody,\n  Flex,\n  Spinner,\n  Skeleton,\n  Tag,\n  Button,\n  Toggle,\n  useModal,\n} from '@pancakeswap/uikit'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus, ConnectedBidder } from 'config/constants/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\n// import PlaceBidModal from '../PlaceBidModal'\nimport AuctionSchedule from './AuctionSchedule'\nimport CannotBidMessage from './CannotBidMessage'\nimport PriceFilter from './PriceFilter'\nimport RarityFilter from './RarityFilter'\nimport CharacteristicsFilter from './CharacteristicsFilter'\nimport useTheme from '../../../../hooks/useTheme'\nimport AttributesFilter from './AttributesFilter'\nimport WeaponMasteryFilter from './WeaponMasteryFilter'\nimport AbilitiesFilter from './AbilitiesFilter'\n\nconst FilterCardCard = styled(Card)`\n  flex: 1;\n  background-color: #d9ab3a;\n`\n\nconst NewCardHeader = styled(CardHeader)`\n  background: linear-gradient(166.77deg, #d9ab3a 100%, #d9ab3a 100%);\n`\n\nconst NewHeading = styled(Heading)`\n  color: #000;\n  text-align: center;\n  font-size: 24px;\n`\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin-bottom: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 20px;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 5px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  margin-bottom: 10px;\n\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n  z-index: 12;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\ninterface RarityI {\n  1: Boolean\n  2: Boolean\n  3: Boolean\n  4: Boolean\n  5: Boolean\n  6: Boolean\n}\ntype ValueI = 'ability' | 'weapon' | 'attributes' | 'characteristics' | 'rarity'\n\ninterface FilterCardProps {\n  handleCurrency: (e: string) => void\n  handleChangeQuery: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleMinNRTsQuery: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleMaxNRTsQuery: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleChangeAttributes: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleChangeWeapons: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleChangeCharacteristics: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleChangeAbilities: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleChangeRarity: (e: React.ChangeEvent<HTMLInputElement>) => void\n  handleSortOptionChange: (option: OptionProps) => void\n  clearFilterStates: (value: ValueI) => void\n  rarity: RarityI\n  freshwaterOnly: boolean\n  saltwaterOnly: boolean\n  setFreshwaterOnly: (a: boolean) => void\n  setSaltwaterOnly: (a: boolean) => void\n}\n\nconst FilterCard: React.FC<FilterCardProps> = ({\n  handleChangeQuery,\n  handleSortOptionChange,\n  freshwaterOnly,\n  setFreshwaterOnly,\n  saltwaterOnly,\n  setSaltwaterOnly,\n  handleMinNRTsQuery,\n  handleMaxNRTsQuery,\n  handleChangeCharacteristics,\n  handleChangeAttributes,\n  handleChangeWeapons,\n  handleChangeAbilities,\n  handleChangeRarity,\n  clearFilterStates,\n  handleCurrency,\n  rarity,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  return (\n    <FilterCardCard mb={['24px', null, null, '0']}>\n      <NewCardHeader>\n        <NewHeading>{t('Filter')}</NewHeading>\n      </NewCardHeader>\n      <CardBody>\n        <ControlContainer>\n          {/* <ViewControls>\n            <ToggleWrapper>\n              <Toggle checked={freshwaterOnly} onChange={() => setFreshwaterOnly(!freshwaterOnly)} scale=\"sm\"/>  */}\n          {/* <Toggle checked scale=\"sm\" /> */}\n          {/* <Text> {t('Core Arenas')}</Text>\n            </ToggleWrapper>\n            <ToggleWrapper>\n              <Toggle checked={saltwaterOnly} onChange={() => setSaltwaterOnly(!saltwaterOnly)} scale=\"sm\" /> */}\n          {/* <Toggle checked scale=\"sm\" /> */}\n          {/* <Text> {t('Community Arenas')}</Text>\n            </ToggleWrapper>\n          </ViewControls> */}\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\n              <SearchInput onChange={handleChangeQuery} placeholder=\"Search Gallery\" />\n            </LabelWrapper>\n          </FilterContainer>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\n              <Select\n                z-index=\"auto\"\n                options={[\n                  {\n                    label: t('Hot'),\n                    value: 'hot',\n                  },\n                  {\n                    label: t('Rarity'),\n                    value: 'rarity',\n                  },\n                  {\n                    label: t('Supply'),\n                    value: 'supply',\n                  },\n                  // {\n                  //   label: t('Earned'),\n                  //   value: 'earned',\n                  // },\n                  {\n                    label: t('School Price'),\n                    value: 'school price',\n                  },\n                  {\n                    label: t('Gladiator Ready'),\n                    value: 'gladiator ready',\n                  },\n                ]}\n                onOptionChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n      </CardBody>\n      <PriceFilter handleCurrency={handleCurrency} handleMinNRTsQuery={handleMinNRTsQuery} handleMaxNRTsQuery={handleMaxNRTsQuery} />\n\n      <RarityFilter rarity={rarity} handleChangeRarity={handleChangeRarity} clearFilterStates={clearFilterStates} />\n      {/* <CharacteristicsFilter  \n      handleChangeCharacteristics={ handleChangeCharacteristics}\n      clearFilterStates={clearFilterStates}\n      /> */}\n\n      <AttributesFilter handleChangeAttributes={handleChangeAttributes} clearFilterStates={clearFilterStates} />\n\n      <WeaponMasteryFilter handleChangeWeapons={handleChangeWeapons} clearFilterStates={clearFilterStates} />\n\n      <AbilitiesFilter handleChangeAbilities={handleChangeAbilities} clearFilterStates={clearFilterStates} />\n    </FilterCardCard>\n  )\n}\n\nexport default FilterCard\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\nimport { Route, useRouteMatch, useLocation, NavLink } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text, Button, ArrowForwardIcon, Flex } from '@pancakeswap/uikit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/Layout/Flex'\nimport PageSection from 'components/PageSection'\nimport useTheme from 'hooks/useTheme'\nimport { usePollFarmsWithUserData, usePriceCakeBusd } from 'state/farms/hooks'\nimport { useGetGallery } from 'state/gallery/hooks'\nimport { GalleryNft, NftToken } from 'config/constants/gallery/types'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport { DeserializedFarm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy, union } from 'lodash'\nimport isArchivedGalleryNft from 'utils/galleryHelpers'\nimport { latinise } from 'utils/latinise'\nimport {\n  useUserFarmStakedOnly,\n  useUserFarmsViewMode,\n  useUserGalleryFreshwaterOnly,\n  useUserGallerySaltwaterOnly,\n} from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport Loading from 'components/Loading'\nimport { useCurrentFarmAuction } from 'views/FarmAuction/hooks/useCurrentFarmAuction'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport GalleryModelCard from './components/GalleryModelCard/GalleryModelCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema } from './components/types'\nimport FilterCard from './components/FilterCard'\nimport { useProfileContract } from 'hooks/useContract'\nimport { useHistory } from 'react-router-dom'\nimport { useNrtBusdPrice } from 'hooks/useBUSDPrice'\n\nconst FilterContainer = styled(Flex)`\n  width: 100%;\n  align-items: flex-start;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    gap: 24px;\n  }\n`\n\nconst StyledImage = styled.img`\n  margin-top: 58px;\n  width: 170px;\n  height: auto;\n`\n\nconst MainCharacter = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`\n\nconst StyledHeader = styled(PageHeader)`\n  max-height: max-content;\n  margin-bottom: -85px;\n  padding-bottom: 40px;\n  overflow: hidden;\n  ${({ theme }) => theme.mediaQueries.md} {\n    max-height: 600px;\n  }\n`\n\nconst Left = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n`\n\nconst Right = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  flex: 0.5;\n  & img {\n    height: 50%;\n    width: 50%;\n    max-height: 325px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & img {\n      height: auto;\n      width: auto;\n    }\n  }\n`\n\nconst GalleryBackground = styled(PageSection)`\n  background-image: url(/images/decorations/BG.png);\n  background-position: center;\n  background-attachment: fixed;\n  object-fit: cover;\n`\nconst NewHeading = styled(Heading)`\n  color: #d9ab3a;\n`\nconst GallerySearch = styled.div`\n  color: white;\n  font-size: 30px;\n  text-align: center;\n  position: relative;\n  top: 250px;\n  width: 100%;\n  height: 100%;\n`\n\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst Gallery: React.FC = () => {\n  const nrtPriceUsd = useNrtBusdPrice()\n  const history = useHistory()\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { models, isInitialized: userDataLoaded } = useGetGallery()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState('')\n  //Price States\n  const [minNRTs, setMinNRTs] = useState(null)\n  const [maxNRTs, setMaxNRTs] = useState(null)\n  const [currency, setCurrency] = useState('ow')\n  // characteristics states\n  const characteristicsInitialState = {\n    minWeight: '',\n    maxWeight: '',\n    minSize: '',\n    maxSize: '',\n    minSupply: '',\n    maxSupply: '',\n  }\n  const [characteristics, setCharacteristics] = useState(characteristicsInitialState)\n\n  // Attributes states\n  interface AttributesI {\n    minStrength: Number\n    maxStrength: Number\n    minEndurance: Number\n    maxEndurance: Number\n    minAgility: Number\n    maxAgility: Number\n    minPrecision: Number\n    maxPrecision: Number\n    minIntelligence: Number\n    maxIntelligence: Number\n    minWillPower: Number\n    maxWillPower: Number\n  }\n  const attributeInitialState = {\n    minStrength: 0,\n    maxStrength: 0,\n    minEndurance: 0,\n    maxEndurance: 0,\n    minAgility: 0,\n    maxAgility: 0,\n    minPrecision: 0,\n    maxPrecision: 0,\n    minIntelligence: 0,\n    maxIntelligence: 0,\n    minWillPower: 0,\n    maxWillPower: 0,\n  }\n  const [attributes, setAttributes] = useState<AttributesI>(attributeInitialState)\n\n  // Weapon State\n  interface WeaponsI {\n    minOneHand: Number\n    maxOneHand: Number\n    minTwoHand: Number\n    maxTwoHand: Number\n    minShield: Number\n    maxShield: Number\n    minRanged: Number\n    maxRanged: Number\n    minDual: Number\n    maxDual: Number\n    minPolearms: Number\n    maxPolearms: Number\n  }\n  const weaponsInitialState = {\n    minOneHand: 0,\n    maxOneHand: 0,\n    minTwoHand: 0,\n    maxTwoHand: 0,\n    minShield: 0,\n    maxShield: 0,\n    minRanged: 0,\n    maxRanged: 0,\n    minDual: 0,\n    maxDual: 0,\n    minPolearms: 0,\n    maxPolearms: 0,\n  }\n  const [weapons, setWeapons] = useState<WeaponsI>(weaponsInitialState)\n\n  // abilities state\n  interface AbilitiesI {\n    minLeadership: Number\n    maxLeadership: Number\n    minCoach: Number\n    maxCoach: Number\n    minCook: Number\n    maxCook: Number\n    minMedical: Number\n    maxMedical: Number\n    minSmith: Number\n    maxSmith: Number\n    minTorture: Number\n    maxTorture: Number\n  }\n  const abilitiesInitialState = {\n    minLeadership: 0,\n    maxLeadership: 0,\n    minCoach: 0,\n    maxCoach: 0,\n    minCook: 0,\n    maxCook: 0,\n    minMedical: 0,\n    maxMedical: 0,\n    minSmith: 0,\n    maxSmith: 0,\n    minTorture: 0,\n    maxTorture: 0,\n  }\n  const [abilities, setAbilities] = useState<AbilitiesI>(abilitiesInitialState)\n\n  const rarityInitialState = {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n  }\n  // Rarity State\n  const [rarity, setRarity] = useState(rarityInitialState)\n\n  const [viewMode, setViewMode] = useUserFarmsViewMode()\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const chosenNftModelsLength = useRef(0)\n  const { currentAuction, bidders, connectedBidder, refreshBidders } = useCurrentFarmAuction(account)\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n\n  usePollFarmsWithUserData(isArchived)\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\n  const [freshwaterOnly, setFreshwaterOnly] = useUserGalleryFreshwaterOnly(isActive)\n  const [saltwaterOnly, setSaltwaterOnly] = useUserGallerySaltwaterOnly(isActive)\n\n  const activeFarms = models.filter((nft) => !isArchivedGalleryNft(nft))\n  const archivedFarms = models.filter((nft) => isArchivedGalleryNft(nft))\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const freshwaterOnlyFarms = activeFarms.filter((farm) => farm.token === NftToken.NRT)\n\n  const saltwaterOnlyFarms = activeFarms.filter((farm) => farm.token === NftToken.NRT)\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const galleryList = useCallback(\n    (modelsToDisplay: GalleryNft[]): GalleryNft[] => {\n      // let modelsToDisplayWithAPR: GalleryNft[] = modelsToDisplay.map((nft) => {\n      //   // if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\n      //   //   return farm\n      //   // }\n      //   // const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\n      //   // const { cakeRewardsApr, lpRewardsApr } = isActive\n      //   //   ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\n      //   //   : { cakeRewardsApr: 0, lpRewardsApr: 0 }\n\n      //   // return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\n      //   return { ...nft }\n      // })\n      // console.log(\"modelsToDisplayWithAPR\",modelsToDisplay)\n\n\n      let modelsToDisplayWithAPR = modelsToDisplay\n      if (query) {\n        console.log(\"query\", query)\n        const lowercaseQuery = latinise(query.toLowerCase())\n        modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter((nft: GalleryNft) => {\n\n          return latinise(nft.name.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n      return modelsToDisplayWithAPR\n    },\n    [query],\n  )\n  const galleryPriceFiltering = useCallback(\n    (modelsToDisplay: GalleryNft[]): GalleryNft[] => {\n      // let modelsToDisplayWithAPR: GalleryNft[] = modelsToDisplay.map((nft) => {\n      //   // if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\n      //   //   return farm\n      //   // }\n      //   // const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\n      //   // const { cakeRewardsApr, lpRewardsApr } = isActive\n      //   //   ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\n      //   //   : { cakeRewardsApr: 0, lpRewardsApr: 0 }\n\n      //   // return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\n      //   return { ...nft }\n      // })\n\n      let modelsToDisplayWithAPR = modelsToDisplay\n      if (minNRTs && maxNRTs) {\n        const nrtPriceUsdDisplay = nrtPriceUsd ? Number(nrtPriceUsd.toFixed(3)) : 0\n        if (currency === 'usd') {\n          modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter((nft: GalleryNft) => {\n            return (\n              nft.initialLifeCycle.price >= nrtPriceUsdDisplay * Number(minNRTs) &&\n              nft.finalLifeCycle.price <= nrtPriceUsdDisplay * Number(maxNRTs)\n            )\n          })\n        } else {\n          modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter((nft: GalleryNft) => {\n            return nft.initialLifeCycle.price >= Number(minNRTs) && nft.finalLifeCycle.price <= Number(maxNRTs)\n          })\n        }\n      }\n      return modelsToDisplayWithAPR\n    },\n    [minNRTs, maxNRTs],\n  )\n  const galleryCharacteristicsFiltering = useCallback(\n    (modelsToDisplay: GalleryNft[]): GalleryNft[] => {\n      let modelsToDisplayWithAPR = modelsToDisplay\n      const { minSize, minSupply, minWeight, maxSize, maxSupply, maxWeight } = characteristics\n      // minSize && minSupply&& minWeight&& maxSize&& maxSupply&& maxWeight\n      if (minSize && minSupply && minWeight && maxSize && maxSupply && maxWeight) {\n        // console.log(minSize, minSupply, minWeight, maxSize, maxSupply, maxWeight)\n        // const lowercaseQuery = latinise(query.toLowerCase())\n        modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter(\n          (nft: GalleryNft) =>\n            nft.size >= minSize &&\n            nft.size <= maxSize &&\n            nft.supply >= minSupply &&\n            nft.supply <= maxSupply &&\n            nft.weight >= minWeight &&\n            nft.weight <= maxWeight,\n        )\n        // console.log(\"modelsToDisplayWithAPRmodelsToDisplayWithAPR\", modelsToDisplayWithAPR)\n      }\n      return modelsToDisplayWithAPR\n    },\n    [characteristics],\n  )\n  const galleryAttributesFiltering = useCallback(\n    (modelsToDisplay: GalleryNft[]): GalleryNft[] => {\n      let modelsToDisplayWithAPR = modelsToDisplay\n      const {\n        minAgility,\n        minEndurance,\n        minIntelligence,\n        minPrecision,\n        minStrength,\n        minWillPower,\n        maxIntelligence,\n        maxPrecision,\n        maxAgility,\n        maxEndurance,\n        maxStrength,\n        maxWillPower,\n      } = attributes\n\n      if (\n        (minAgility >= 0 &&\n          minEndurance >= 0 &&\n          minIntelligence >= 0 &&\n          minPrecision >= 0 &&\n          minStrength >= 0 &&\n          minWillPower >= 0 &&\n          maxIntelligence) ||\n        maxPrecision ||\n        maxAgility ||\n        maxEndurance ||\n        maxStrength ||\n        maxWillPower\n      ) {\n        // console.log(\n        //   minAgility,\n        //   minEndurance,\n        //   minIntelligence,\n        //   minPrecision,\n        //   minStrength,\n        //   minWillPower,\n        //   maxIntelligence,\n        //   maxPrecision,\n        //   maxAgility,\n        //   maxEndurance,\n        //   maxStrength,\n        //   maxWillPower\n        // )\n        // const lowercaseQuery = latinise(query.toLowerCase())\n        modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter(\n          (nft: GalleryNft) =>\n            (nft.attributes.agility >= minAgility && nft.attributes.agility <= maxAgility) ||\n            (nft.attributes.endurance >= minEndurance && nft.attributes.endurance <= maxEndurance) ||\n            (nft.attributes.intelligance >= minIntelligence && nft.attributes.intelligance <= maxIntelligence) ||\n            (nft.attributes.precision >= minPrecision && nft.attributes.precision <= maxPrecision) ||\n            (nft.attributes.strength >= minStrength && nft.attributes.strength <= maxStrength) ||\n            (nft.attributes.willpower >= minWillPower && nft.attributes.willpower <= maxWillPower),\n        )\n        // console.log(\"modelsToDisplayWithAPRmodelsToDisplayWithAPR\", modelsToDisplayWithAPR)\n      }\n      return modelsToDisplayWithAPR\n    },\n    [attributes],\n  )\n\n  const galleryWeaponsFiltering = useCallback(\n    (modelsToDisplay: GalleryNft[]): GalleryNft[] => {\n      let modelsToDisplayWithAPR = modelsToDisplay\n      const {\n        minOneHand,\n        minDual,\n        minTwoHand,\n        minPolearms,\n        minRanged,\n        minShield,\n        maxDual,\n        maxOneHand,\n        maxPolearms,\n        maxRanged,\n        maxShield,\n        maxTwoHand,\n      } = weapons\n\n      if (\n        (minOneHand >= 0 &&\n          minDual >= 0 &&\n          minTwoHand >= 0 &&\n          minPolearms >= 0 &&\n          minRanged >= 0 &&\n          minShield >= 0 &&\n          maxDual) ||\n        maxOneHand ||\n        maxPolearms ||\n        maxRanged ||\n        maxShield ||\n        maxTwoHand\n      ) {\n        modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter(\n          (nft: GalleryNft) =>\n            (nft.weapons.oneHand >= minOneHand && nft.weapons.oneHand <= maxOneHand) ||\n            (nft.weapons.dual >= minDual && nft.weapons.dual <= maxDual) ||\n            (nft.weapons.twoHand >= minTwoHand && nft.weapons.twoHand <= maxTwoHand) ||\n            (nft.weapons.polearms >= minPolearms && nft.weapons.polearms <= maxPolearms) ||\n            (nft.weapons.ranged >= minRanged && nft.weapons.ranged <= maxRanged) ||\n            (nft.weapons.shield >= minShield && nft.weapons.shield <= maxShield),\n        )\n        // console.log(\"modelsToDisplayWithAPRmodelsToDisplayWithAPR\", modelsToDisplayWithAPR)\n      }\n      return modelsToDisplayWithAPR\n    },\n    [weapons],\n  )\n\n  const galleryAbilitiesFiltering = useCallback(\n    (modelsToDisplay: GalleryNft[]): GalleryNft[] => {\n      let modelsToDisplayWithAPR = modelsToDisplay\n      const {\n        minLeadership,\n        minCoach,\n        minCook,\n        minMedical,\n        minSmith,\n        minTorture,\n        maxCoach,\n        maxLeadership,\n        maxMedical,\n        maxSmith,\n        maxTorture,\n        maxCook,\n      } = abilities\n\n      if (\n        (minLeadership >= 0 &&\n          minCoach >= 0 &&\n          minCook >= 0 &&\n          minMedical >= 0 &&\n          minSmith >= 0 &&\n          minTorture >= 0 &&\n          maxCoach) ||\n        maxLeadership ||\n        maxMedical ||\n        maxSmith ||\n        maxTorture ||\n        maxCook\n      ) {\n        modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter(\n          (nft: GalleryNft) =>\n            (nft.abilities.leadership >= minLeadership && nft.abilities.leadership <= maxLeadership) ||\n            (nft.abilities.coach >= minCoach && nft.abilities.coach <= maxCoach) ||\n            (nft.abilities.cook >= minCook && nft.abilities.cook <= maxCook) ||\n            (nft.abilities.medical >= minMedical && nft.abilities.medical <= maxMedical) ||\n            (nft.abilities.smith >= minSmith && nft.abilities.smith <= maxSmith) ||\n            (nft.abilities.torture >= minTorture && nft.abilities.torture <= maxTorture),\n        )\n        // console.log(\"modelsToDisplayWithAPRmodelsToDisplayWithAPR\", modelsToDisplayWithAPR)\n      }\n      return modelsToDisplayWithAPR\n    },\n    [abilities],\n  )\n\n  const galleryRarityFiltering = useCallback(\n    (modelsToDisplay: GalleryNft[]): GalleryNft[] => {\n      let modelsToDisplayWithAPR = modelsToDisplay\n\n      if (rarity[1] || rarity[2] || rarity[3] || rarity[4] || rarity[5] || rarity[6]) {\n        modelsToDisplayWithAPR = modelsToDisplayWithAPR.filter(\n          (nft: GalleryNft) =>\n            (rarity[1] && nft.rarity === 1) ||\n            (rarity[2] && nft.rarity === 2) ||\n            (rarity[3] && nft.rarity === 3) ||\n            (rarity[4] && nft.rarity === 4) ||\n            (rarity[5] && nft.rarity === 5) ||\n            (rarity[6] && nft.rarity === 6),\n        )\n        // console.log(\"modelsToDisplayWithAPRmodelsToDisplayWithAPR\", modelsToDisplayWithAPR)\n      }\n      return modelsToDisplayWithAPR\n    },\n    [rarity],\n  )\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"gallery filter onchange\")\n    setQuery(event.target.value)\n  }\n\n  // price filter handlers\n  const handleMinNRTsQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    // console.log(\"setMinNRTs(event.target.value)\", event.target.value)\n    const rejexPositiveValue = /^[0-9\\b]+$/\n\n    if (event.target.value === '' || rejexPositiveValue.test(event.target.value)) {\n      const value = Number(event.target.value)\n      // console.log(typeof value)\n\n      setMinNRTs(value)\n    } else {\n      event.target.value = ''\n    }\n  }\n  // console.log(minNRTs)\n\n  const handleMaxNRTsQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    // console.log(\"setMaxNRTs(event.target.value)\", event.target.value)\n    const rejexPositiveValue = /^[0-9\\b]+$/\n\n    if (event.target.value === '' || rejexPositiveValue.test(event.target.value)) {\n      const value = Number(event.target.value)\n      // console.log(typeof value)\n\n      setMaxNRTs(value)\n    } else {\n      event.target.value = ''\n    }\n  }\n\n  // console.log(maxNRTs)\n\n  // characteristics filter handelers\n  const handleChangeCharacteristics = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const data = { ...characteristics }\n    data[event.target.name] = event.target.value\n    setCharacteristics(data)\n  }\n\n  // characteristics filter handelers\n  const handleChangeAttributes = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const data = { ...attributes }\n    const rejexPositiveValue = /^[0-9\\b]+$/\n\n    if (event.target.value === '' || rejexPositiveValue.test(event.target.value)) {\n      const value = Number(event.target.value)\n      data[event.target.name] = value\n      setAttributes(data)\n    } else {\n      event.target.value = ''\n    }\n  }\n  // Weapons filter handelers\n  const handleChangeWeapons = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const data = { ...weapons }\n    const rejexPositiveValue = /^[0-9\\b]+$/\n\n    if (event.target.value === '' || rejexPositiveValue.test(event.target.value)) {\n      const value = Number(event.target.value)\n      data[event.target.name] = value\n      setWeapons(data)\n    } else {\n      event.target.value = ''\n    }\n  }\n  // Abilities filter handelers\n  const handleChangeAbilities = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const data = { ...abilities }\n    const rejexPositiveValue = /^[0-9\\b]+$/\n\n    if (event.target.value === '' || rejexPositiveValue.test(event.target.value)) {\n      const value = Number(event.target.value)\n      data[event.target.name] = value\n      setAbilities(data)\n    } else {\n      event.target.value = ''\n    }\n  }\n\n  // Rarity filter handelers\n  const handleChangeRarity = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const data = { ...rarity }\n    // console.log(\"e.target.name\". event.target.name)\n    data[event.target.value] = event.target.checked\n    // console.log(event.target.checked)\n    // console.log(\"e.target.value\". event)\n    setRarity(data)\n  }\n  // useEffect(() => {\n  // console.log(\"rarityyyyyyyy\", rarity)\n  // }, [rarity])\n  type ValueI = 'ability' | 'weapon' | 'attributes' | 'characteristics' | 'rarity'\n\n  const clearFilterStates = (value: ValueI) => {\n    // console.log(\"value\", value)\n    if (value === 'ability') {\n      setAbilities(abilitiesInitialState)\n    }\n    if (value === 'weapon') {\n      setWeapons(weaponsInitialState)\n    }\n    if (value === 'attributes') {\n      setAttributes(attributeInitialState)\n    }\n    if (value === 'characteristics') {\n      setCharacteristics(characteristicsInitialState)\n    }\n    if (value === 'rarity') {\n      setRarity(rarityInitialState)\n    }\n  }\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n  const chosenNftModelsMemoized = useMemo(() => {\n    let chosenNftModels = []\n    const sortFarms = (nftModels: GalleryNft[]): GalleryNft[] => {\n      switch (sortOption) {\n        case 'hot':\n          return orderBy(nftModels, (nft: GalleryNft) => nft.orderBy, 'asc')\n        case 'rarity':\n          return orderBy(nftModels, (nft: GalleryNft) => nft.rarity, 'desc')\n        case 'supply':\n          return orderBy(nftModels, (nft: GalleryNft) => nft.supply, 'desc')\n        case 'school price':\n          return orderBy(nftModels, (nft: GalleryNft) => nft.finalLifeCycle.price, 'desc')\n        case 'gladiator ready':\n          return orderBy(nftModels, (nft: GalleryNft) => nft.finalLifeCycle.price, 'desc')\n        default:\n          return nftModels\n      }\n    }\n\n    if (isActive) {\n      const stake = stakedOnly ? galleryList(stakedOnlyFarms) : galleryList(activeFarms)\n      const fresh = freshwaterOnly ? galleryList(freshwaterOnlyFarms) : []\n      const salt = saltwaterOnly ? galleryList(saltwaterOnlyFarms) : []\n      chosenNftModels = union(fresh, salt)\n    }\n    if (isActive) {\n      const stake = chosenNftModels ? galleryPriceFiltering(chosenNftModels) : galleryPriceFiltering(chosenNftModels)\n      const fresh = chosenNftModels ? galleryPriceFiltering(chosenNftModels) : []\n      const salt = chosenNftModels ? galleryPriceFiltering(chosenNftModels) : []\n      chosenNftModels = union(fresh, salt)\n    }\n    if (isActive) {\n      const stake = chosenNftModels\n        ? galleryCharacteristicsFiltering(chosenNftModels)\n        : galleryCharacteristicsFiltering(chosenNftModels)\n      const fresh = chosenNftModels ? galleryCharacteristicsFiltering(chosenNftModels) : []\n      const salt = chosenNftModels ? galleryCharacteristicsFiltering(chosenNftModels) : []\n      chosenNftModels = union(fresh, salt)\n    }\n    if (isActive) {\n      const stake = chosenNftModels\n        ? galleryAttributesFiltering(chosenNftModels)\n        : galleryAttributesFiltering(chosenNftModels)\n      const fresh = chosenNftModels ? galleryAttributesFiltering(chosenNftModels) : []\n      const salt = chosenNftModels ? galleryAttributesFiltering(chosenNftModels) : []\n      chosenNftModels = union(fresh, salt)\n    }\n    if (isActive) {\n      const stake = chosenNftModels\n        ? galleryWeaponsFiltering(chosenNftModels)\n        : galleryWeaponsFiltering(chosenNftModels)\n      const fresh = chosenNftModels ? galleryWeaponsFiltering(chosenNftModels) : []\n      const salt = chosenNftModels ? galleryWeaponsFiltering(chosenNftModels) : []\n      chosenNftModels = union(fresh, salt)\n    }\n    if (isActive) {\n      const stake = chosenNftModels\n        ? galleryAbilitiesFiltering(chosenNftModels)\n        : galleryAbilitiesFiltering(chosenNftModels)\n      const fresh = chosenNftModels ? galleryAbilitiesFiltering(chosenNftModels) : []\n      const salt = chosenNftModels ? galleryAbilitiesFiltering(chosenNftModels) : []\n      chosenNftModels = union(fresh, salt)\n    }\n    if (isActive) {\n      const stake = chosenNftModels ? galleryRarityFiltering(chosenNftModels) : galleryRarityFiltering(chosenNftModels)\n      const fresh = chosenNftModels ? galleryRarityFiltering(chosenNftModels) : []\n      const salt = chosenNftModels ? galleryRarityFiltering(chosenNftModels) : []\n      chosenNftModels = union(fresh, salt)\n    }\n\n    // if (isInactive) {\n    //   chosenNftModels = stakedOnly ? galleryList(stakedInactiveFarms) : galleryList(inactiveFarms)\n    // }\n    if (isArchived) {\n      chosenNftModels = stakedOnly ? galleryList(stakedArchivedFarms) : galleryList(archivedFarms)\n    }\n    // console.log(\"sortFarmssortFarmssortFarmssortFarms\", sortFarms(chosenNftModels))\n    return sortFarms(chosenNftModels).slice(0, numberOfFarmsVisible)\n  }, [\n    query,\n    sortOption,\n    activeFarms,\n    galleryList,\n    archivedFarms,\n    isActive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    freshwaterOnly,\n    freshwaterOnlyFarms,\n    saltwaterOnly,\n    saltwaterOnlyFarms,\n    numberOfFarmsVisible,\n    minNRTs,\n    maxNRTs,\n    characteristics,\n    attributes,\n    weapons,\n  ])\n\n  chosenNftModelsLength.current = chosenNftModelsMemoized.length\n  const profileContract = useProfileContract()\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfFarmsVisible((farmsCurrentlyVisible) => {\n        if (farmsCurrentlyVisible <= chosenNftModelsLength.current) {\n          return farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE\n        }\n        return farmsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n\n  const getUserStatus = async () => {\n    // console.log(\"profileContractprofileContract\", profileContract)\n    const data = await profileContract.getUserStatus(account)\n    if (!data) {\n      // history.push(\"/create-profile\")\n    }\n  }\n\n  useEffect(() => {\n    getUserStatus()\n  }, [])\n  const renderContent = (): JSX.Element => {\n    //GF-227\n    return (\n      <>\n        {chosenNftModelsMemoized.length > 0 ? (\n          <FlexLayout>\n            <Route exact path={`${path}`}>\n              {chosenNftModelsMemoized.map((nftModel) => (\n                <GalleryModelCard\n                  key={nftModel.glTF}\n                  nftModel={nftModel}\n                  // displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n                  cakePrice={cakePrice}\n                  account={account}\n                  removed={false}\n                />\n              ))}\n            </Route>\n            {/* <Route exact path={`${path}/history`}>\n          {chosenNftModelsMemoized.map((nftModel) => (\n            <GalleryModelCard\n              key={nftModel.glTF}\n              nftModel={nftModel}\n              // displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed={false}\n            />\n          ))}\n        </Route>\n        <Route exact path={`${path}/archived`}>\n          {chosenNftModelsMemoized.map((nftModel) => (\n            <GalleryModelCard\n              key={nftModel.glTF}\n              nftModel={nftModel}\n              // displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed={false}\n            />\n          ))}\n        </Route> */}\n          </FlexLayout>\n        ) : (\n          <GallerySearch>No result found</GallerySearch>\n        )}\n      </>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    // console.log(\"optionoptionoptionoptionoptionoptionoption\", option)\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <StyledHeader>\n        <Flex flexDirection={['column-reverse', null, 'row']}>\n          <Left>\n            <NewHeading as=\"h1\" scale=\"xxl\" my=\"24px\">\n              {t('Gladiators 3D Gallery')}\n            </NewHeading>\n            <Text color=\"textSubtle\" mb=\"24px\">\n              {t(\n                \"This is where you will find our ecosystem's 3D models for purchase. Browse, personalize and buy, as simple as 1, 2, 3.\",\n              )}\n            </Text>\n            <Text color=\"textSubtle\">\n              {t(\n                \"Click on Personalize & Buy to visualize and personalize, you won't be charged until you make up your mind.\",\n              )}\n            </Text>\n            <Text color=\"textSubtle\" mb=\"24px\">\n              {t(\"Make sure you visit your creature's evolution life cycle.\")}\n            </Text>\n            {/* <Link external href={FORM_ADDRESS}>\n              <Button>\n                <Text color=\"white\" bold fontSize=\"16px\" mr=\"4px\">\n                  {t('Apply for a Farm/Pool')}\n                </Text>\n              </Button>\n            </Link> */}\n          </Left>\n          <Right>\n            <img src=\"/images/decorations/gladiator.png\" alt={t('gallery gladiator')} />\n          </Right>\n        </Flex>\n      </StyledHeader>\n      <GalleryBackground\n        innerProps={{ style: { margin: '0', width: '100%' } }}\n        p=\"24px 0\"\n        index={2}\n        concaveDivider\n        dividerPosition=\"top\"\n        clipFill={{ light: 'url(/images/decorations/bgmin.png)', dark: 'url(/images/decorations/bgmin.png)' }}\n      >\n        <FilterContainer flexDirection={['column', null, null, 'row']}>\n          <Flex flexDirection=\"column\" width=\"288px\" minWidth=\"288px\">\n            <FilterCard\n              handleCurrency={setCurrency}\n              handleChangeQuery={handleChangeQuery}\n              handleSortOptionChange={handleSortOptionChange}\n              freshwaterOnly={freshwaterOnly}\n              saltwaterOnly={saltwaterOnly}\n              setFreshwaterOnly={setFreshwaterOnly}\n              setSaltwaterOnly={setSaltwaterOnly}\n              handleMinNRTsQuery={handleMinNRTsQuery}\n              handleMaxNRTsQuery={handleMaxNRTsQuery}\n              handleChangeCharacteristics={handleChangeCharacteristics}\n              handleChangeAttributes={handleChangeAttributes}\n              handleChangeWeapons={handleChangeWeapons}\n              handleChangeAbilities={handleChangeAbilities}\n              handleChangeRarity={handleChangeRarity}\n              rarity={rarity}\n              clearFilterStates={clearFilterStates}\n            />\n          </Flex>\n\n          {renderContent()}\n          {account && !userDataLoaded && stakedOnly && (\n            <Flex justifyContent=\"center\">\n              <Loading />\n            </Flex>\n          )}\n        </FilterContainer>\n        <div ref={observerRef} />\n        <MainCharacter>\n          <StyledImage src=\"/images/decorations/3dpan.png\" alt=\"Gladiators illustration\" />\n        </MainCharacter>\n      </GalleryBackground>\n    </>\n  )\n}\n\nexport default Gallery\n","import create from 'zustand';\n\nexport const useCountStore = create((set, get) => ({\n\tshowStatics: false,\n\tupdateShowStatics: ( value ) => {\n\t\tset({ showStatics: value });\n\t},\n\tcurrentStatics: null,\n\tupdateCurrentStatics: (value) => {\n\t\tset({ currentStatics: value });\n\t},\n\tcurrentHoverModel: null,\n\tupdateCurrentHoverModel: (value) => {\n\t\tset({ currentHoverModel: value });\n\t},\n\tmyGladiators: null,\n\tsetMyGladiators: data => {\n\t\tset({myGladiators: data})\n\t},\n\tschoolGladiators: null,\n\tsetSchoolGladiators: data => {\n\t\tset({schoolGladiators: data})\n\t},\n\tusersGladiators: null,\n\tsetUsersGladiators: data => {\n\t\tset({usersGladiators: data})\n\t},\n\tuserNftHashes: [],\n\tsettingUserNFTHashes: data => {\n\t\tset({userNftHashes: data})\n\t},\n\tschoolNftHashes: [],\n\tsettingSchoolNFTHashes: data => {\n\t\tset({schoolNftHashes: data})\n\t},\n\tnftHashes: [],\n\tsettingNFTHashes: data => {\n\t\tset({nftHashes: data})\n\t},\n\ttotalSupplies: 0,\n\tsetTotalSupplies: data => {\n\t\tset({totalSupplies: data})\n\t}\n}))\n\nexport default useCountStore;","import { GalleryNft, SizeMeasure, WeightMeasure, LifeCycle, NftToken, ListingType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\nconst GalleryNfts: GalleryNft[] = [\n  {\n    name: 'Fuse Warrior',\n    glTF: 'fuse_warrior',\n    glTFPath: '/gallery/fuse_warrior/scene.gltf',\n    glTFScale: {\n      x: 0.05,\n      y: 0.05,\n      z: 0.05\n    },\n    glTFAnimationIndex: 1,\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      Shield_Default_OBJ_0: '/gallery/fuse_warrior/elements/OBJ_0.png',\n      Object_79: '/gallery/fuse_warrior/elements/obj79.png',\n      Object_80: '/gallery/fuse_warrior/elements/obj80.png',\n      Object_81: '/gallery/fuse_warrior/elements/obj81.png',\n      Object_82: '/gallery/fuse_warrior/elements/obj82.png'\n    },\n    description: '',\n    rarity: 1,\n    supply: null,\n    size: 6.05,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2400,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 500,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 2,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 150,\n    attributes: {\n      strength: 4,\n      endurance: 5,\n      agility: 10,\n      precision: 6,\n      intelligance: 7,\n      willpower: 8\n    },\n    weapons: {\n      oneHand: 9,\n      twoHand: 4,\n      shield: 5,\n      ranged: 10,\n      dual: 6,\n      polearms: 7\n    },\n    abilities: {\n      leadership: 8,\n      coach: 9,\n      cook: 4,\n      medical: 5,\n      smith: 10,\n      torture: 6\n    },\n  },\n  {\n    name: 'Ol Veteran',\n    glTF: 'ol_veteran',\n    glTFPath: '/gallery/ol_veteran/scene.gltf',\n    glTFScale: {\n      x: 0.05,\n      y: 0.05,\n      z: 0.05\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      Object_7: '/gallery/ol_veteran/elements/body.png'\n    },\n    description: '',\n    rarity: 1,\n    supply: null,\n    size: 6.05,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2400,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 500,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 2,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 150,\n    attributes: {\n      strength: 4,\n      endurance: 5,\n      agility: 10,\n      precision: 6,\n      intelligance: 7,\n      willpower: 8\n    },\n    weapons: {\n      oneHand: 9,\n      twoHand: 4,\n      shield: 5,\n      ranged: 10,\n      dual: 6,\n      polearms: 7\n    },\n    abilities: {\n      leadership: 8,\n      coach: 9,\n      cook: 4,\n      medical: 5,\n      smith: 10,\n      torture: 6\n    },\n  },\n  {\n    name: 'Knight Battle',\n    glTF: 'knight_battle',\n    glTFPath: '/gallery/knight_battle/scene.gltf',\n    glTFScale: {\n      x: 0.06,\n      y: 0.06,\n      z: 0.06\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: 0,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      M_LRG_BlackKnightmo_Hat_Commando_BlackKnight_0: '/gallery/knight_battle/elements/head.png',\n      Object_176: '/gallery/knight_battle/elements/body.png'\n    },\n    description: '',\n    rarity: 1,\n    supply: null,\n    size: 6.05,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2400,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 500,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 2,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 150,\n    attributes: {\n      strength: 4,\n      endurance: 5,\n      agility: 10,\n      precision: 6,\n      intelligance: 7,\n      willpower: 8\n    },\n    weapons: {\n      oneHand: 9,\n      twoHand: 4,\n      shield: 5,\n      ranged: 10,\n      dual: 6,\n      polearms: 7\n    },\n    abilities: {\n      leadership: 8,\n      coach: 9,\n      cook: 4,\n      medical: 5,\n      smith: 10,\n      torture: 6\n    },\n  },\n  {\n    name: 'Gladiator Aware',\n    glTF: 'gladiator-aware',\n    glTFPath: '/gallery/gladiator-aware/scene.gltf',\n    glTFScale: {\n      x: 0.05,\n      y: 0.05,\n      z: 0.05\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      'Shield_Shield#Mat0_0': '/gallery/gladiator-aware/elements/shield.png',\n      'Weapon_Weapon#Mat0_0': '/gallery/gladiator-aware/elements/weapon.png',\n      'MHead_MHead#Mat0_0': '/gallery/gladiator-aware/elements/head.png',\n      'MArmor_MArmor#Mat0_0': '/gallery/gladiator-aware/elements/armor.png',\n      'MBody_MBody#Mat0_0': '/gallery/gladiator-aware/elements/arms.png',\n      'MBoots_MBoots#Mat0_0': '/gallery/gladiator-aware/elements/boots.png',\n      'MGauntlets_MGauntlets#Mat0_0': '/gallery/gladiator-aware/elements/gauntlets.png'\n    },\n    description: '',\n    rarity: 4,\n    supply: null,\n    size: 6.01,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2200,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 350,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 875\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 5,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 90,\n    attributes: {\n      strength: 7,\n      endurance: 8,\n      agility: 5,\n      precision: 10,\n      intelligance: 9,\n      willpower: 4\n    },\n    weapons: {\n      oneHand: 6,\n      twoHand: 7,\n      shield: 8,\n      ranged: 5,\n      dual: 10,\n      polearms: 9\n    },\n    abilities: {\n      leadership: 4,\n      coach: 6,\n      cook: 7,\n      medical: 8,\n      smith: 5,\n      torture: 10\n    },\n  },\n  {\n    name: 'Heimjil',\n    glTF: 'heimjil',\n    glTFPath: '/gallery/heimjil/scene.gltf',\n    glTFScale: {\n      x: 0.1,\n      y: 0.1,\n      z: 0.1\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    }\n    , glTFRootNode: \"_rootJoint\"\n    , bodyElements: {\n      \"SK_Dual_Blade_Axe5_M_Dual_Blade_Axe5_0\": \"/gallery/heimjil/elements/weapon.png\",\n      \"6\": \"/gallery/heimjil/elements/armor.png\",\n      \"5\": \"/gallery/heimjil/elements/boots.png\",\n      \"0\": \"/gallery/heimjil/elements/body.png\",\n    }\n    , description: \"\"\n    , rarity: 3\n    , supply: null\n    , size: 6.15\n    , sizeMeasure: SizeMeasure.METER\n    , weight: 2300\n    , weightMeasure: WeightMeasure.LBS\n    , initialLifeCycle: {\n\n      lifeCycle: LifeCycle.SLAVE,\n      price: 100,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 8,\n    bestTerrain: 'Desert',\n    staminaFillCoast: 30,\n    attributes: {\n      strength: 10,\n      endurance: 9,\n      agility: 8,\n      precision: 7,\n      intelligance: 6,\n      willpower: 5\n    },\n    weapons: {\n      oneHand: 4,\n      twoHand: 10,\n      shield: 9,\n      ranged: 8,\n      dual: 7,\n      polearms: 6\n    },\n    abilities: {\n      leadership: 5,\n      coach: 4,\n      cook: 10,\n      medical: 9,\n      smith: 8,\n      torture: 7\n    },\n  },\n  {\n    name: 'Hero Warrior',\n    glTF: 'hero_warrior',\n    glTFPath: '/gallery/hero_warrior/scene.gltf',\n    glTFScale: {\n      x: 0.25,\n      y: 0.25,\n      z: 0.25\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      default__0: '/gallery/hero_warrior/elements/body.png'\n    },\n    description: '',\n    rarity: 3,\n    supply: null,\n    size: 6.09,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2100,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 400,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1000\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 4,\n    bestTerrain: 'Mountains',\n    staminaFillCoast: 110,\n    attributes: {\n      strength: 6,\n      endurance: 7,\n      agility: 4,\n      precision: 5,\n      intelligance: 8,\n      willpower: 9\n    },\n    weapons: {\n      oneHand: 10,\n      twoHand: 6,\n      shield: 7,\n      ranged: 4,\n      dual: 5,\n      polearms: 8\n    },\n    abilities: {\n      leadership: 9,\n      coach: 10,\n      cook: 6,\n      medical: 7,\n      smith: 4,\n      torture: 5\n    },\n  },\n  {\n    name: 'Taunt Battlecry',\n    glTF: 'standing_taunt_battlecry',\n    glTFPath: '/gallery/standing_taunt_battlecry/scene.gltf',\n    glTFScale: {\n      x: 0.06,\n      y: 0.06,\n      z: 0.06\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      // Object_9: '/gallery/standing_taunt_battlecry/elements/obj9.png',\n      // Object_10: '/gallery/standing_taunt_battlecry/elements/obj10.png',\n      // Object_12: '/gallery/standing_taunt_battlecry/elements/obj12.png',\n      // Object_14: '/gallery/standing_taunt_battlecry/elements/obj14.png',\n      Object_14: '/gallery/standing_taunt_battlecry/elements/preview.png',\n    },\n    description: '',\n    rarity: 1,\n    supply: null,\n    size: 6.05,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2400,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 500,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 2,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 150,\n    attributes: {\n      strength: 4,\n      endurance: 5,\n      agility: 10,\n      precision: 6,\n      intelligance: 7,\n      willpower: 8\n    },\n    weapons: {\n      oneHand: 9,\n      twoHand: 4,\n      shield: 5,\n      ranged: 10,\n      dual: 6,\n      polearms: 7\n    },\n    abilities: {\n      leadership: 8,\n      coach: 9,\n      cook: 4,\n      medical: 5,\n      smith: 10,\n      torture: 6\n    },\n  },\n  {\n    name: 'Fantasy Warrior',\n    glTF: 'fantasy_warrior',\n    glTFPath: '/gallery/fantasy_warrior/scene.gltf',\n    glTFScale: {\n      x: 4,\n      y: 4,\n      z: 4\n    },\n    glTFRotation: {\n      x: Math.PI / 2,\n      y: -Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      warrior_warrior_0: '/gallery/fantasy_warrior/elements/body.png',\n      sword_warrior_0: '/gallery/fantasy_warrior/elements/weapon.png',\n      shield_warrior_0: '/gallery/fantasy_warrior/elements/shield.png'\n    },\n    description: '',\n    rarity: 6,\n    supply: null,\n    size: 6.14,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2700,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 200,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 500,\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 7,\n    bestTerrain: 'Mountain',\n    staminaFillCoast: 50,\n    attributes: {\n      strength: 9,\n      endurance: 10,\n      agility: 7,\n      precision: 8,\n      intelligance: 4,\n      willpower: 6\n    },\n    weapons: {\n      oneHand: 5,\n      twoHand: 9,\n      shield: 10,\n      ranged: 7,\n      dual: 8,\n      polearms: 4\n    },\n    abilities: {\n      leadership: 6,\n      coach: 5,\n      cook: 9,\n      medical: 10,\n      smith: 7,\n      torture: 8\n    },\n  },\n  {\n    name: 'Third Legion Legionnaire',\n    glTF: 'third_legion_legionnaire',\n    glTFPath: '/gallery/third_legion_legionnaire/scene.gltf',\n    glTFScale: {\n      x: 0.04,\n      y: 0.04,\n      z: 0.04\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: 0,\n      z: Math.PI / 3\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      Plane008_0: '/gallery/third_legion_legionnaire/elements/body.png'\n    },\n    description: '',\n    rarity: 1,\n    supply: null,\n    size: 6.05,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2400,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 500,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 2,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 150,\n    attributes: {\n      strength: 4,\n      endurance: 5,\n      agility: 10,\n      precision: 6,\n      intelligance: 7,\n      willpower: 8\n    },\n    weapons: {\n      oneHand: 9,\n      twoHand: 4,\n      shield: 5,\n      ranged: 10,\n      dual: 6,\n      polearms: 7\n    },\n    abilities: {\n      leadership: 8,\n      coach: 9,\n      cook: 4,\n      medical: 5,\n      smith: 10,\n      torture: 6\n    },\n  },\n]\n\nexport default GalleryNfts\n","import React from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport { ClipFill } from '../types'\n\ninterface CurveProps {\n  clipFill?: ClipFill\n}\n\ninterface ContainerProps extends CurveProps {\n  clipPath: string\n}\n\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\n  width: 100%;\n  height: 20px;\n  clip-path: url(${clipPath});\n\n  background: ${() => {\n    if (theme.isDark) {\n      return clipFill?.dark || clipFill?.light || theme.colors.background\n    }\n    return clipFill?.light || theme.colors.background\n  }};\n\n  & svg {\n    display: block;\n  }\n`\n\nconst ConcaveContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\n`\n\nconst ConvexContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\n`\n\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\nimport { DividerFill, ClipFill } from './types'\n\ninterface CurvedDividerProps extends WrapperProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  dividerPosition?: 'top' | 'bottom'\n  concave?: boolean\n  clipFill?: ClipFill\n}\ninterface WrapperProps {\n  index: number\n  dividerFill?: DividerFill\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  background: ${({ theme, dividerFill }) => {\n    if (theme.isDark) {\n      return dividerFill?.dark || dividerFill?.light || 'none'\n    }\n    return dividerFill?.light || dividerFill?.dark || 'none'\n  }};\n  z-index: ${({ index }) => index};\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nconst ComponentWrapper = styled.div<WrapperProps>`\n  z-index: ${({ index }) => index + 1};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\n  index,\n  dividerPosition,\n  dividerComponent,\n  concave,\n  clipFill,\n  dividerFill,\n}) => {\n  const showConvexTop = dividerPosition === 'top' && !concave\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\n  const showConcaveTop = dividerPosition === 'top' && concave\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\n\n  const getConcaveDivider = () => {\n    return (\n      <>\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  const getConvexDivider = () => {\n    return (\n      <>\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  return (\n    <Wrapper index={index} dividerFill={dividerFill}>\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\n      {getConcaveDivider()}\n      {getConvexDivider()}\n    </Wrapper>\n  )\n}\n\nexport default CurvedDivider\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\nimport Container from 'components/Layout/Container'\nimport CurvedDivider from './CurvedDivider'\nimport { ClipFill, DividerFill } from './types'\n\ninterface PageSectionProps extends BackgroundColorProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  hasCurvedDivider?: boolean\n  dividerPosition?: 'top' | 'bottom'\n  concaveDivider?: boolean\n  containerProps?: BoxProps\n  innerProps?: BoxProps\n  clipFill?: ClipFill\n  dividerFill?: DividerFill\n}\n\ninterface BackgroundColorProps extends FlexProps {\n  index: number\n  background?: string\n  getPadding?: () => string\n}\n\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  z-index: ${({ index }) => index - 1};\n  background: ${({ background, theme }) => background || theme.colors.background};\n  padding: ${({ getPadding }) => getPadding()};\n`\n\nconst ChildrenWrapper = styled(Container)`\n  min-height: auto;\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 48px;\n    padding-bottom: 48px;\n  }\n`\n\nconst PageSection: React.FC<PageSectionProps> = ({\n  children,\n  background,\n  svgFill,\n  index = 1,\n  dividerComponent,\n  dividerPosition = 'bottom',\n  hasCurvedDivider = true,\n  concaveDivider = false,\n  clipFill,\n  dividerFill,\n  containerProps,\n  innerProps,\n  ...props\n}) => {\n  const getPadding = () => {\n    // No curved divider\n    if (!hasCurvedDivider) {\n      return '48px 0'\n    }\n    // Bottom curved divider\n    // Less bottom padding, as the divider is present there\n    if (dividerPosition === 'bottom') {\n      return '48px 0 14px'\n    }\n    // Top curved divider\n    // Less top padding, as the divider is present there\n    if (dividerPosition === 'top') {\n      return '14px 0 48px'\n    }\n    return '48px 0'\n  }\n\n  return (\n    <Box {...containerProps}>\n      {hasCurvedDivider && dividerPosition === 'top' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\n      </BackgroundColor>\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default PageSection\n","export enum SizeMeasure {\n  CM = \"centimeters\",\n  METER = \"meters\"\n}\n\nexport enum WeightMeasure {\n  GRAMS = \"grams\",\n  LBS = \"lbs\",\n  TONS = \"tons\",\n}\n\nexport enum LifeCycle {\n  SLAVE = \"slave\",\n  GLADIATOR = \"gladiator\"\n}\n\nexport type LifeCyclePricing = {\n  lifeCycle: LifeCycle,\n  price: number,\n  periodInMinutes?: number\n}\n\nexport enum NftToken {\n  NRT = \"NRT\",\n  DENA = \"DENA\",\n}\n\nexport enum ListingType {\n  CORE,\n  COMMUNITY,\n  PARTNER\n}\n\nexport interface GltfXyz {\n  x: number\n  y: number\n  z: number\n}\n\nexport type GalleryNft = {\n  name: string\n  orderBy: number\n  description: string\n  glTF: string\n  glTFRootNode?: string\n  glTFPath: string\n  glTFPosition?: GltfXyz\n  glTFScale?: GltfXyz\n  glTFRotation?: GltfXyz\n  glTFAnimationIndex?: number\n  bodyElements: any\n  rarity: number | string\n  supply: number | string\n  size: number | string\n  sizeMeasure: SizeMeasure\n  weight: number | string\n  weightMeasure: WeightMeasure\n  initialLifeCycle: LifeCyclePricing\n  finalLifeCycle: LifeCyclePricing\n  token: NftToken\n  minTimeInSeconds: number | string\n  inactive?: boolean\n  isPromoted?: boolean\n  listingType?: ListingType\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n    ipfs: string\n  }\n  limitSupply: number\n  bestTerrain: string\n  staminaFillCoast: number\n  attributes?: {\n    strength: number\n    endurance: number\n    agility: number\n    precision: number\n    intelligance: number\n    willpower: number\n  }\n  weapons?: {\n    oneHand: number\n    twoHand: number\n    shield: number\n    ranged: number\n    dual: number\n    polearms: number\n  }\n  abilities?: {\n    leadership: number\n    coach: number\n    cook: number\n    medical: number\n    smith: number\n    torture: number\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n","export const ambientLightProps = { intensity: 0.55 };\nexport const cameraProps = { fov: 20, position: [40, 0, 0] };\nexport const pixelRatio = 1;\nexport const pointLightProps = { decay: 2, position: [10, 20, 15], shadowMapSize: 512 };\n\nexport const controlsProps = { maxPolarAngle: 2 *Math.PI, minPolarAngle: 0, target: [0, 0, 0], maxDistance: 130, minDistance: 10 };\n\nexport const modelProps = { position: [0, 1, 8] };\n\nexport const groundProps = { posiiton: [0, 0, 0], rotation: [-Math.PI / 2, 0, 0] };\n\nexport const BackPaths = [\n    \"/images/gallery/arena1.jpg\",\n    \"/images/gallery/arena2.jpg\",\n    \"/images/gallery/arena3.jpg\"\n];","import ethers, { Contract, ContractFunction } from 'ethers'\n\nexport type MultiCallResponse<T> = T | null\n\n// Predictions\nexport type PredictionsClaimableResponse = boolean\n\nexport interface PredictionsLedgerResponse {\n  position: 0 | 1\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport type PredictionsRefundableResponse = boolean\n\nexport interface PredictionsRoundsResponse {\n  epoch: ethers.BigNumber\n  startTimestamp: ethers.BigNumber\n  lockTimestamp: ethers.BigNumber\n  closeTimestamp: ethers.BigNumber\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  lockOracleId: ethers.BigNumber\n  closeOracleId: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\n// [rounds, ledgers, count]\nexport type PredictionsGetUserRoundsResponse = [ethers.BigNumber[], PredictionsLedgerResponse[], ethers.BigNumber]\n\nexport type PredictionsGetUserRoundsLengthResponse = ethers.BigNumber\n\nexport interface PredictionsContract extends Contract {\n  claimable: ContractFunction<PredictionsClaimableResponse>\n  getUserRounds: ContractFunction<PredictionsGetUserRoundsResponse>\n  getUserRoundsLength: ContractFunction<PredictionsGetUserRoundsLengthResponse>\n  ledger: ContractFunction<PredictionsLedgerResponse>\n  refundable: ContractFunction<PredictionsRefundableResponse>\n  rounds: ContractFunction<PredictionsRoundsResponse>\n}\n\n// Chainlink Orance\nexport type ChainLinkOracleLatestAnswerResponse = ethers.BigNumber\n\nexport interface ChainLinkOracleContract extends Contract {\n  latestAnswer: ContractFunction<ChainLinkOracleLatestAnswerResponse>\n}\n\n// Farm Auction\n\n// Note: slightly different from AuctionStatus used throughout UI\nexport enum FarmAuctionContractStatus {\n  Pending,\n  Open,\n  Close,\n}\n\nexport interface AuctionsResponse {\n  status: FarmAuctionContractStatus\n  startBlock: ethers.BigNumber\n  endBlock: ethers.BigNumber\n  initialBidAmount: ethers.BigNumber\n  leaderboard: ethers.BigNumber\n  leaderboardThreshold: ethers.BigNumber\n}\n\nexport interface BidsPerAuction {\n  account: string\n  amount: ethers.BigNumber\n}\n\nexport type ViewBidsPerAuctionResponse = [BidsPerAuction[], ethers.BigNumber]\n\n// [auctionId, bids, claimed, nextCursor]\nexport type ViewBidderAuctionsResponse = [ethers.BigNumber[], ethers.BigNumber[], boolean[], ethers.BigNumber]\n\ntype GetWhitelistedAddressesResponse = [\n  {\n    account: string\n    lpToken: string\n    token: string\n  }[],\n  ethers.BigNumber,\n]\n\ninterface AuctionsHistoryResponse {\n  totalAmount: ethers.BigNumber\n  hasClaimed: boolean\n}\n\nexport interface FarmAuctionContract extends Contract {\n  currentAuctionId: ContractFunction<ethers.BigNumber>\n  viewBidders: ContractFunction<[string[], ethers.BigNumber]>\n  totalCollected: ContractFunction<ethers.BigNumber>\n  auctions: ContractFunction<AuctionsResponse>\n  claimable: ContractFunction<boolean>\n  viewBidsPerAuction: ContractFunction<ViewBidsPerAuctionResponse>\n  viewBidderAuctions: ContractFunction<ViewBidderAuctionsResponse>\n  whitelisted: ContractFunction<boolean>\n  getWhitelistedAddresses: ContractFunction<GetWhitelistedAddressesResponse>\n  auctionsHistory: ContractFunction<AuctionsHistoryResponse>\n}\n\n// Profile contract\n// [userId, points, teamId, tokenId, nftAddress isActive]\nexport type GetUserProfileResponse = [\n  ethers.BigNumber,\n  ethers.BigNumber,\n  ethers.BigNumber,\n  string,\n  ethers.BigNumber,\n  boolean,\n]\n\nexport interface GladiatorProfileContract extends Contract {\n  getUserProfile: ContractFunction<GetUserProfileResponse>\n  hasRegistered: ContractFunction<boolean>\n}\n","import { toDate, add, differenceInHours } from 'date-fns'\nimport { BSC_BLOCK_TIME, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { getBidderInfo } from 'config/constants/farmAuctions'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { AuctionsResponse, FarmAuctionContractStatus, BidsPerAuction, ViewBidderAuctionsResponse } from 'utils/types'\nimport { Auction, AuctionStatus, Bidder, BidderAuction } from 'config/constants/types'\nimport { ethersToBigNumber } from 'utils/bigNumber'\n\nexport const FORM_ADDRESS =\n  'https://docs.google.com/forms/d/e/1FAIpQLScUkwbsMWwg7L5jjGjEcmv6RsoCNhFDkV3xEpRu2KcJrr47Sw/viewform'\n\n// Sorts bidders received from smart contract by bid amount in descending order (biggest -> smallest)\n// Also amends bidder information with getBidderInfo\n// auction is required if data will be used for table display, hence in reclaim and congratulations card its omitted\nexport const sortAuctionBidders = (bidders: BidsPerAuction[], auction?: Auction): Bidder[] => {\n  const sortedBidders = [...bidders]\n    .sort((a, b) => {\n      if (a.amount.lt(b.amount)) {\n        return 1\n      }\n      if (a.amount.gt(b.amount)) {\n        return -1\n      }\n      return 0\n    })\n    .map((bidder, index) => {\n      const bidderInfo = getBidderInfo(bidder.account)\n      return {\n        ...bidderInfo,\n        position: index + 1,\n        account: bidder.account,\n        amount: bidder.amount,\n      }\n    })\n\n  // Positions need to be adjusted in case 2 bidders has the same bid amount\n  // adjustedPosition will always increase by 1 in the following block for the first bidder\n  let adjustedPosition = 0\n\n  return sortedBidders.map((bidder, index, unadjustedBidders) => {\n    const amount = ethersToBigNumber(bidder.amount)\n    const samePositionAsAbove = index === 0 ? false : bidder.amount.eq(unadjustedBidders[index - 1].amount)\n    adjustedPosition = samePositionAsAbove ? adjustedPosition : adjustedPosition + 1\n    // Reclaim and congratulations card don't need auction data or isTopPosition\n    // in this case it is set to false just to avoid TS errors\n    let isTopPosition = auction ? index + 1 <= auction.topLeaderboard : false\n    // This is here in case we closed auction with less/more winners for some reason\n    if (auction && auction.leaderboardThreshold.gt(0)) {\n      isTopPosition = auction.leaderboardThreshold.lte(amount)\n    }\n    return {\n      ...bidder,\n      position: adjustedPosition,\n      isTopPosition,\n      samePositionAsAbove,\n      amount,\n    }\n  })\n}\n\n// Determine if the auction is:\n// - Live and biddable\n// - Has been scheduled for specific future date\n// - Not announced yet\n// - Recently Finished/Closed\nconst getAuctionStatus = (\n  currentBlock: number,\n  startBlock: number,\n  endBlock: number,\n  contractStatus: FarmAuctionContractStatus,\n) => {\n  if (contractStatus === FarmAuctionContractStatus.Pending && !startBlock && !endBlock) {\n    return AuctionStatus.ToBeAnnounced\n  }\n  if (contractStatus === FarmAuctionContractStatus.Close) {\n    return AuctionStatus.Closed\n  }\n  if (currentBlock >= endBlock) {\n    return AuctionStatus.Finished\n  }\n  if (contractStatus === FarmAuctionContractStatus.Open && currentBlock < startBlock) {\n    return AuctionStatus.Pending\n  }\n  if (contractStatus === FarmAuctionContractStatus.Open && currentBlock > startBlock) {\n    return AuctionStatus.Open\n  }\n  return AuctionStatus.ToBeAnnounced\n}\n\nconst getDateForBlock = async (currentBlock: number, block: number) => {\n  const blocksUntilBlock = block - currentBlock\n  const secondsUntilStart = blocksUntilBlock * BSC_BLOCK_TIME\n  // if block already happened we can get timestamp via .getBlock(block)\n  if (currentBlock > block) {\n    try {\n      const { timestamp } = await simpleRpcProvider.getBlock(block)\n      return toDate(timestamp * 1000)\n    } catch {\n      add(new Date(), { seconds: secondsUntilStart })\n    }\n  }\n  return add(new Date(), { seconds: secondsUntilStart })\n}\n\n// Get additional auction information based on the date received from smart contract\nexport const processAuctionData = async (auctionId: number, auctionResponse: AuctionsResponse): Promise<Auction> => {\n  const processedAuctionData = {\n    ...auctionResponse,\n    topLeaderboard: auctionResponse.leaderboard.toNumber(),\n    initialBidAmount: ethersToBigNumber(auctionResponse.initialBidAmount).div(DEFAULT_TOKEN_DECIMAL).toNumber(),\n    leaderboardThreshold: ethersToBigNumber(auctionResponse.leaderboardThreshold),\n    startBlock: auctionResponse.startBlock.toNumber(),\n    endBlock: auctionResponse.endBlock.toNumber(),\n  }\n\n  // Get all required data and blocks\n  const currentBlock = await simpleRpcProvider.getBlockNumber()\n  const startDate = await getDateForBlock(currentBlock, processedAuctionData.startBlock)\n  const endDate = await getDateForBlock(currentBlock, processedAuctionData.endBlock)\n\n  const auctionStatus = getAuctionStatus(\n    currentBlock,\n    processedAuctionData.startBlock,\n    processedAuctionData.endBlock,\n    processedAuctionData.status,\n  )\n\n  return {\n    id: auctionId,\n    startDate,\n    endDate,\n    auctionDuration: differenceInHours(endDate, startDate),\n    ...processedAuctionData,\n    status: auctionStatus,\n  }\n}\n\nexport const processBidderAuctions = (\n  bidderAuctions: ViewBidderAuctionsResponse,\n): { auctions: BidderAuction[]; nextCursor: number } => {\n  const [auctionIds, bids, claimed, nextCursor] = bidderAuctions\n  const auctions = auctionIds.map((auctionId, index) => ({\n    id: auctionId.toNumber(),\n    amount: ethersToBigNumber(bids[index]),\n    claimed: claimed[index],\n  }))\n  return { auctions, nextCursor: nextCursor.toNumber() }\n}\n","import { Token, Pair, ChainId } from '@pancakeswap/sdk'\nimport tokens from './tokens'\nimport { FarmAuctionBidderConfig } from './types'\n\nconst getLpAddress = (tokenAddress: string, quoteToken: Token) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const token = new Token(Number(chainId), tokenAddress, 18)\n  return Pair.getAddress(token, quoteToken)\n}\n\nexport const whitelistedBidders: FarmAuctionBidderConfig[] = [\n  {\n    account: '0x9Ed5a62535A5Dd2dB2d9bB21bAc42035Af47F630',\n    farmName: 'NAV-BNB',\n    tokenAddress: '0xBFEf6cCFC830D3BaCA4F6766a0d4AaA242Ca9F3D',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Navcoin',\n    projectSite: 'https://navcoin.org/en',\n  },\n  {\n    account: '0x33723811B0FCa2a751f3912B80603Fe11499D894',\n    farmName: 'WSG-BNB',\n    tokenAddress: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Wall Street Games',\n    projectSite: 'https://wsg.gg/',\n  },\n  {\n    account: '0xD1C35C3F5D9d373A3F7c0668Fbe75801886e060f',\n    farmName: 'SWIRGE-BNB',\n    tokenAddress: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Swirge Network',\n    projectSite: 'https://swirge.com/',\n  },\n  {\n    account: '0x58092273a044D6e1d23B5095AE873F6E24E906ed',\n    farmName: 'rUSD-BUSD',\n    tokenAddress: '0x07663837218A003e66310a01596af4bf4e44623D',\n    quoteToken: tokens.busd,\n    tokenName: 'RAMP DEFI',\n    projectSite: 'https://www.rampdefi.com/',\n  },\n  {\n    account: '0xfAd3B5FeAC1aAF86B3f66D105F2fa9607164D86b',\n    farmName: 'FEED-BNB',\n    tokenAddress: '0x67d66e8Ec1Fd25d98B3Ccd3B19B7dc4b4b7fC493',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Feeder Finance',\n    projectSite: 'https://www.feeder.finance/',\n  },\n  {\n    account: '0x6a2d41c87c3F28C2C0b466424DE8e08FC2E23eDc',\n    farmName: 'BBT-BNB',\n    tokenAddress: '0xD48474E7444727bF500a32D5AbE01943f3A59A64',\n    quoteToken: tokens.wbnb,\n    tokenName: 'BitBook',\n    projectSite: 'https://www.bitbook.network/',\n  },\n  {\n    account: '0xAe126B90d2835c5A2D720b0687EC59f59b768183',\n    farmName: 'WOW-BUSD',\n    tokenAddress: '0x4DA996C5Fe84755C80e108cf96Fe705174c5e36A',\n    quoteToken: tokens.busd,\n    tokenName: 'WOWswap',\n    projectSite: 'https://wowswap.io/',\n  },\n  {\n    account: '0x88F0A6cb89909838d69E4E6e76eC21e2a7bdcA66',\n    farmName: 'BREW-BNB',\n    tokenAddress: '0x790Be81C3cA0e53974bE2688cDb954732C9862e1',\n    quoteToken: tokens.wbnb,\n    tokenName: 'CafeSwap Finance',\n    projectSite: 'https://app.cafeswap.finance/',\n  },\n  {\n    account: '0x0Cf86283ad1a1B7D04669696eD13BAE3d5925a0a',\n    farmName: 'SAKE-BNB',\n    tokenAddress: '0x8BD778B12b15416359A227F0533Ce2D91844e1eD',\n    quoteToken: tokens.wbnb,\n    tokenName: 'SakeSwap',\n    projectSite: 'https://bsc.sakeswap.finance/',\n  },\n  {\n    account: '0xCe059E8af96a654d4afe630Fa325FBF70043Ab11',\n    farmName: 'XBLZD-BNB',\n    tokenAddress: '0x9a946c3Cb16c08334b69aE249690C236Ebd5583E',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Blizzard',\n    projectSite: 'https://www.blizzard.money/',\n  },\n  {\n    account: '0x7A4BAE68836f486e2c99dca0fBda1845d4532194',\n    farmName: 'HERO-BNB',\n    tokenAddress: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Metahero',\n    projectSite: 'https://metahero.io/',\n  },\n  {\n    account: '0x46D8e47b9A6487FDAB0a700b269A452cFeED49Aa',\n    farmName: 'MCRN-BNB',\n    tokenAddress: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n    quoteToken: tokens.wbnb,\n    tokenName: 'MacaronSwap',\n    projectSite: 'https://www.macaronswap.finance/',\n  },\n  {\n    account: '0x1bA962acab22Be9e49C4cEBE7710c9201A72dFcc',\n    farmName: 'BABYCAKE-BNB',\n    tokenAddress: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Babycake',\n    projectSite: 'https://babycake.app/',\n  },\n  {\n    account: '0xCCcC0b22799E82A79007814Dbc6A194410DCcEA5',\n    farmName: 'BMON-BNB',\n    tokenAddress: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Binamon',\n    projectSite: 'https://binamon.org/',\n  },\n  {\n    account: '0x71eE6DE14c90700eE06C81aaBdBacD684cfe30fe',\n    farmName: 'BMON-BUSD',\n    tokenAddress: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n    quoteToken: tokens.busd,\n    tokenName: 'Binamon',\n    projectSite: 'https://binamon.org/',\n  },\n  {\n    account: '0x6cfA3ff4e96abe93a290dc3d7A911A483C194758',\n    farmName: 'ANY-BNB',\n    tokenAddress: '0xF68C9Df95a18B2A5a5fa1124d79EEEffBaD0B6Fa',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Anyswap',\n    projectSite: 'https://anyswap.exchange/',\n  },\n  {\n    account: '0xe596470D291Cb2D32ec111afC314B07006690c72',\n    farmName: 'PHX-BNB',\n    tokenAddress: '0xac86e5f9bA48d680516df50C72928c2ec50F3025',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Phoenix Finance',\n    projectSite: 'https://www.phoenixprotocol.net/',\n  },\n  {\n    account: '0x8f8c77987C0ea9dd2400383b623d9cbcBbAf98CF',\n    farmName: 'GMR-BNB',\n    tokenAddress: '0x0523215DCafbF4E4aA92117d13C6985a3BeF27D7',\n    quoteToken: tokens.wbnb,\n    tokenName: 'GMR Finance',\n    projectSite: 'https://www.gmr.finance/',\n  },\n  {\n    account: '0x786B313b01A25eddbF7f7461b48D60AF680d758C',\n    farmName: 'BP-BNB',\n    tokenAddress: '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1',\n    quoteToken: tokens.wbnb,\n    tokenName: 'BunnyPark',\n    projectSite: 'https://www.bunnypark.com/',\n  },\n  {\n    account: '0x70d7eCEE276Ad5fDFc91B3C30d2c1cDb9dD442Fb',\n    farmName: 'DPET-BNB',\n    tokenAddress: '0xfb62AE373acA027177D1c18Ee0862817f9080d08',\n    quoteToken: tokens.wbnb,\n    tokenName: 'MyDefiPet',\n    projectSite: 'https://mydefipet.com/',\n  },\n  {\n    account: '0x8aC06b55C9812e3E574CF5A5F3b49619dF33099C',\n    farmName: 'NMX-BUSD',\n    tokenAddress: '0xd32d01A43c869EdcD1117C640fBDcfCFD97d9d65',\n    quoteToken: tokens.busd,\n    tokenName: 'Nominex',\n    projectSite: 'https://nominex.io/',\n  },\n  {\n    account: '0xd27E57Ff5dD3d78B03c85e2A2bB8dc37E67c5140',\n    farmName: 'POOLZ-BNB',\n    tokenAddress: '0x77018282fD033DAF370337A5367E62d8811Bc885',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Poolz Finance',\n    projectSite: 'https://poolz.finance/',\n  },\n  {\n    account: '0x0767a2f9c644b364Bc88Eea5a535afE506Ba6802',\n    farmName: 'ODDZ-BNB',\n    tokenAddress: '0xCD40F2670CF58720b694968698A5514e924F742d',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Oddz Finance',\n    projectSite: 'https://oddz.fi',\n  },\n  {\n    account: '0x2B6b2701d7F7b65BA2E1ec2d2dAa17d46B85A4fe',\n    farmName: 'UBXT-BUSD',\n    tokenAddress: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n    quoteToken: tokens.busd,\n    tokenName: 'UpBots',\n    projectSite: 'https://upbots.com/',\n  },\n  {\n    account: '0x875831249bA511a6f1E49c84D66E1A6F5601f7C6',\n    farmName: 'DND-BUSD',\n    tokenAddress: '0x14c358b573a4cE45364a3DBD84BBb4Dae87af034',\n    quoteToken: tokens.busd,\n    tokenName: 'DungeonSwap',\n    projectSite: 'https://dungeonswap.app/',\n  },\n  {\n    account: '0xb7d303BbaE2573513801C5F94aE0B61Fa5b3426F',\n    farmName: 'ZOON-BNB',\n    tokenAddress: '0x9D173E6c594f479B4d47001F8E6A95A7aDDa42bC',\n    quoteToken: tokens.wbnb,\n    tokenName: 'CryptoZoon',\n    projectSite: 'https://cryptozoon.io/',\n  },\n  {\n    account: '0x22d56946c6cc1d4ed09f02858ddb990fcc981c55',\n    farmName: 'HGET-BUSD',\n    tokenAddress: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n    quoteToken: tokens.busd,\n    tokenName: 'Hedget',\n    projectSite: 'https://www.hedget.com/',\n  },\n  {\n    account: '0x027D50F36fe3b64630170B3ba82FC64BfC9bc088',\n    farmName: 'FAN-BNB',\n    tokenAddress: '0xFAc3A1ED2480Da8F5c34576C0Da13F245239717d',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Fanadise',\n    projectSite: 'https://fanadise.com/',\n  },\n  {\n    account: '0x73f9eb8eB7109b171396C8cbffcb29839c8b3064',\n    farmName: 'PKMON-BUSD',\n    tokenAddress: '0x609D183Fb91a0fce59550b62ab7d2c931b0Bb1BE',\n    quoteToken: tokens.busd,\n    tokenName: 'PolkaMonster',\n    projectSite: 'https://polkamonster.game/',\n  },\n  {\n    account: '0x88Dba2cF8911A80cc50A1B392b5fF6b47B930330',\n    farmName: 'SFUND-BNB',\n    tokenAddress: '0x477bC8d23c634C154061869478bce96BE6045D12',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Seedify',\n    projectSite: 'https://launchpad.seedify.fund/',\n  },\n  {\n    account: '0xf1dD352EF3a94F60b3047B607C2Bd976401F538c',\n    farmName: 'GNT-BNB',\n    tokenAddress: '0xF750A26EB0aCf95556e8529E72eD530f3b60f348',\n    quoteToken: tokens.wbnb,\n    tokenName: 'GreenTrust',\n    projectSite: 'https://www.greentrusttoken.com/',\n  },\n  {\n    account: '0x3992D7D9Ed721257d8bD7501d280b857eD7F9C24',\n    farmName: 'TT-BUSD',\n    tokenAddress: '0x990E7154bB999FAa9b2fa5Ed29E822703311eA85',\n    quoteToken: tokens.busd,\n    tokenName: 'ThunderCore',\n    projectSite: 'https://www.thundercore.com/',\n  },\n  {\n    account: '0x2Ef317299888DD4a4F57FFf99FF2685D544fEAf1',\n    farmName: 'TT-BNB',\n    tokenAddress: '0x990E7154bB999FAa9b2fa5Ed29E822703311eA85',\n    quoteToken: tokens.wbnb,\n    tokenName: 'ThunderCore',\n    projectSite: 'https://www.thundercore.com/',\n  },\n  {\n    account: '0xB9a32da7F33731FfDa8e7ecCB91325eee8A524AC',\n    farmName: 'SMG-BNB',\n    tokenAddress: '0x6bfd576220e8444CA4Cc5f89Efbd7f02a4C94C16',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Smaugs NFT',\n    projectSite: 'https://smaugs.com',\n  },\n  {\n    account: '0x5ed6B80F0e8b1c7fdB783202d4a926BbED2d49ee',\n    farmName: 'TENFI-BNB',\n    tokenAddress: '0xd15C444F1199Ae72795eba15E8C1db44E47abF62',\n    quoteToken: tokens.wbnb,\n    tokenName: 'TEN Finance',\n    projectSite: 'https://ten.finance/',\n  },\n  {\n    account: '0x75015B56dA228A5367d313866f6520495344C65c',\n    farmName: 'BNX-BUSD',\n    tokenAddress: '0x8C851d1a123Ff703BD1f9dabe631b69902Df5f97',\n    quoteToken: tokens.busd,\n    tokenName: 'BinaryX',\n    projectSite: 'https://www.binaryx.pro/#/',\n  },\n  {\n    account: '0xCbD932aC66f645a3764733aACD30Ce50e522Fac1',\n    farmName: 'DVI-BNB',\n    tokenAddress: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Dvision',\n    projectSite: 'https://dvision.network/',\n  },\n  {\n    account: '0xeA96c1970b9E3d4258620F68Af95ddDEB5fbD68F',\n    farmName: 'SALE-BNB',\n    tokenAddress: '0x97bb08ba41f033beaac315169fc566ac9e0daf52',\n    quoteToken: tokens.wbnb,\n    tokenName: 'DxSale Network',\n    projectSite: 'https://dxsale.app',\n  },\n  {\n    account: '0xaDB2d11817Cd16595E4454aD03F95575c3B388f2',\n    farmName: 'MONI-BNB',\n    tokenAddress: '0x9573c88ae3e37508f87649f87c4dd5373c9f31e0',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Monsta Infinite',\n    projectSite: 'https://monstainfinite.com/',\n  },\n  {\n    account: '0xDa6e741A7f7d4d88d4210340069348704FDf21bf',\n    farmName: 'PROS-BNB',\n    tokenAddress: '0xed8c8aa8299c10f067496bb66f8cc7fb338a3405',\n    quoteToken: tokens.wbnb,\n    tokenName: 'Prosper',\n    projectSite: 'https://prosper.so/',\n  },\n].map((bidderConfig) => ({\n  ...bidderConfig,\n  lpAddress: getLpAddress(bidderConfig.tokenAddress, bidderConfig.quoteToken),\n}))\n\nconst UNKNOWN_BIDDER: FarmAuctionBidderConfig = {\n  account: '',\n  tokenAddress: '',\n  quoteToken: tokens.wbnb,\n  farmName: 'Unknown',\n  tokenName: 'Unknown',\n}\n\nexport const getBidderInfo = (account: string): FarmAuctionBidderConfig => {\n  const matchingBidder = whitelistedBidders.find((bidder) => bidder.account.toLowerCase() === account.toLowerCase())\n  if (matchingBidder) {\n    return matchingBidder\n  }\n  return { ...UNKNOWN_BIDDER, account }\n}\n","import React from 'react';\nimport { Html } from '@react-three/drei';\n\nconst Loader: () => JSX.Element = () => (\n  <Html>\n    <svg width='100' height='100'>\n      <circle\n        cx='50'\n        cy='50'\n        fill='none'\n        stroke='#262323'\n        strokeWidth='5'\n        r='40'\n        strokeDasharray='164.93361431346415 56.97787143782138'\n      >\n        <animateTransform\n          attributeName='transform'\n          type='rotate'\n          repeatCount='indefinite'\n          dur='1s'\n          values='0 50 50;360 50 50'\n          keyTimes='0;1'\n        />\n      </circle>\n    </svg>\n  </Html>\n);\n\nexport default Loader;\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\nimport Spacer from './Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    display: flex;\n    flex-direction: column !important;\n  }\n  @media (min-width: 480px) and (max-width: 786px) {\n    display: flex;\n    flex-direction: column !important;\n  }\n  @media (min-width: 786px) and (max-width: 1224px) {\n    display: flex;\n    flex-direction: column !important;\n  }\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  width: 100%;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { formatBigNumber } from 'utils/formatBalance'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  decimals?: number\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n  border: none;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  decimals = 18,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n\n    const balanceUnits = parseUnits(balance, decimals)\n    return formatBigNumber(balanceUnits, decimals, decimals)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport GalleryNfts from 'config/constants/gallery/gallery'\nimport { State } from '../types'\nimport { fetchWalletGalleryNfts } from './index'\n\nexport const useGetGallery = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.gallery)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletGalleryNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    data,\n    models: GalleryNfts,\n    nftsInWallet: GalleryNfts.filter((nft) => identifiers.includes(nft.glTF)),\n  }\n}\n","import React, { useEffect, useRef } from 'react';\nimport { extend, useThree, ReactThreeFiber } from '@react-three/fiber';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      orbitControls: ReactThreeFiber.Object3DNode<\n        OrbitControls,\n        typeof OrbitControls\n      >;\n    }\n  }\n}\n\nextend({ OrbitControls });\n\nconst Controls: (props: any) => JSX.Element = (props) => {\n  const { camera, gl, invalidate } = useThree();\n  const ref = useRef<OrbitControls | undefined>(undefined);\n\n  useEffect(() => {\n    ref.current?.update();\n    ref.current?.addEventListener('change', invalidate);\n  });\n\n  return <orbitControls ref={ref} args={[camera, gl.domElement]} {...props} />;\n};\n\nexport default Controls;\n","import create from 'zustand';\n\nexport const useCountStore = create((set, get) => ({\n\tbuyFlag: false,\n\tupdateBuyFlag: (value) =>  {\n\t\tset({ buyFlag: value });\n\t},\n\tisRecording: 0,\n\tupdateIsRecording: (value) => {\n\t\tset({ isRecording: value });\n\t},\n\tbuyStatus: {\n\t\tmodel: true,\n\t\tjson: false,\n\t\timage: false,\n\t\tgif: true,\n\t},\n\tupdateBuyStatus: ( value ) => {\n\t\tconst old = get().buyStatus;\n\t\tset({ buyStatus: { ...old, ...value } });\n\t},\n\tjsonHash: \"\",\n\tsetJsonHash: (value) => {\n\t\tset({jsonHash: value})\n\t},\n\tpicHash: \"\",\n\tsetPicHash: (value) => {\n\t\tset({picHash: value})\n\t},\n\tclearHashes: () => {\n\t\tset({jsonHash: \"\"})\n\t\tset({picHash: \"\"})\n\t},\n\tnft: null,\n\tsetNft: (data) => {\n\t\tset({nft: data})\n\t},\n\tjoinBattleNftJSON: null,\n\tupdateJoinBattleNFTJSON: data => {\n\t\t// console.log(\"function is Callingggggggg\", data)\n\t\tset({joinBattleNftJSON: data})\n\t}\n}))\n\nexport default useCountStore;"],"sourceRoot":""}