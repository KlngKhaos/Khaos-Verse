{"version":3,"sources":["config/constants/gallery/gallery.ts","config/constants/gallery/types.ts","utils/sentry.ts","views/Predictions/components/History/Header.tsx","views/Predictions/components/ChartDisclaimer.tsx","views/Predictions/components/CollectWinningsPopup.tsx","views/Predictions/components/Container.tsx","views/Predictions/components/RiskDisclaimer.tsx","views/Predictions/context/SwiperProvider.tsx","views/Predictions/components/History/helpers.ts","views/Predictions/components/CollectRoundWinningsModal.tsx","views/Predictions/components/CollectWinningsButton.tsx","views/Predictions/components/ReclaimPositionButton.tsx","views/Predictions/helpers.ts","views/Predictions/components/PositionTag.tsx","views/Predictions/components/RoundResult/styles.tsx","views/Predictions/components/RoundResult/RoundResultHistory.tsx","views/Predictions/hooks/useIsRefundable.ts","views/Predictions/components/History/BetResult.tsx","views/Predictions/components/History/BetDetails.tsx","views/Predictions/components/History/HistoricalBet.tsx","views/Predictions/components/v1/helpers.ts","views/Predictions/components/v1/NothingToClaimModal.tsx","views/Predictions/components/v1/V1ClaimCheck.tsx","views/Predictions/components/History/RoundsTab.tsx","views/Predictions/components/History/PnlTab/PnlChartStyles.tsx","views/Predictions/components/History/PnlTab/PnlChart.tsx","views/Predictions/components/History/PnlTab/SummaryRow.tsx","views/Predictions/components/History/PnlTab/PnlTab.tsx","views/Predictions/History.tsx","views/Predictions/hooks/useCountdown.ts","components/RoundProgress.tsx","views/Predictions/components/RoundCard/CardHeader.tsx","views/Predictions/components/RoundCard/GladiatorAttributesRow.tsx","views/Predictions/components/RoundCard/EquipmentModal.tsx","views/Predictions/components/RoundCard/Equipment.tsx","views/Predictions/components/RoundCard/EquipmentImages.tsx","views/Predictions/store/index.js","views/Predictions/components/RoundCard/CalculatingCard.tsx","views/Predictions/components/RoundCard/LiveBattle.tsx","views/Predictions/components/RoundCard/ExpiredBattle.tsx","views/Predictions/components/RoundCard/ModalComponent.tsx","views/Predictions/components/RoundCard/SoonBattle.tsx","views/Predictions/components/RoundCard/LaterBattle.tsx","views/Predictions/components/RoundCard/index.tsx","views/Predictions/components/FlexRow.tsx","views/Predictions/components/Label.tsx","views/Predictions/hooks/useSwiper.ts","views/Predictions/components/PrevNextNav.tsx","views/Predictions/components/HistoryButton.tsx","views/Predictions/components/Menu.tsx","views/Predictions/hooks/useOnNextRound.ts","views/Predictions/hooks/useOnViewChange.ts","views/Predictions/Positions.tsx","views/Predictions/types.ts","views/Predictions/Desktop.tsx","views/Predictions/hooks/useGetLatestOraclePrice.ts","views/Predictions/hooks/usePollOraclePrice.ts","views/Predictions/hooks/usePollPredictions.ts","views/Predictions/components/MobileMenu.tsx","views/Predictions/components/TradingView.tsx","views/Predictions/Chart.tsx","views/Predictions/components/Notification/Notification.tsx","views/Predictions/components/Notification/ErrorNotification.tsx","views/Predictions/components/Notification/PauseNotification.tsx","views/Predictions/Mobile.tsx","views/Predictions/index.tsx","state/predictions/hooks.ts","hooks/useApproveConfirmTransaction.ts"],"names":["GalleryNfts","name","glTF","glTFPath","glTFScale","x","y","z","glTFAnimationIndex","glTFRotation","Math","PI","glTFPosition","glTFRootNode","bodyElements","Shield_Default_OBJ_0","Object_79","Object_80","Object_81","Object_82","description","rarity","supply","size","sizeMeasure","SizeMeasure","METER","weight","weightMeasure","WeightMeasure","LBS","initialLifeCycle","lifeCycle","LifeCycle","SLAVE","price","periodInMinutes","finalLifeCycle","GLADIATOR","token","NftToken","NRT","minTimeInSeconds","listingType","ListingType","CORE","orderBy","limitSupply","bestTerrain","staminaFillCoast","attributes","strength","endurance","agility","precision","intelligance","willpower","weapons","oneHand","twoHand","shield","ranged","dual","polearms","abilities","leadership","coach","cook","medical","smith","torture","Object_7","M_LRG_BlackKnightmo_Hat_Commando_BlackKnight_0","Object_176","default__0","Object_14","warrior_warrior_0","sword_warrior_0","shield_warrior_0","Plane008_0","NftType","logError","error","Error","Sentry","maybeError","message","String","stack","code","assignError","console","HistoryTabs","Ul","styled","ul","theme","colors","textSubtle","ChartDisclaimer","onDismiss","useUserPredictionChartDisclaimerShow","showDisclaimer","setShowDisclaimer","t","useTranslation","minWidth","p","maxWidth","justifyContent","mb","src","width","height","as","fontSize","color","href","external","onClick","htmlFor","style","display","cursor","marginBottom","alignItems","flex","id","scale","checked","onChange","ml","bounceInKeyframe","keyframes","bounceOutKeyframe","bounceInAnimation","css","bounceOutAnimation","Wrapper","div","mediaQueries","md","Popup","secondary","CollectWinningsPopup","useState","isOpen","setIsOpen","ref","useRef","timer","account","useWeb3React","predictionStatus","useGetPredictionsStatus","isHistoryPaneOpen","useIsHistoryPaneOpen","dispatch","useAppDispatch","useEffect","isCancelled","current","setInterval","a","getBetHistory","user","toLowerCase","claimed","bets","winnerBets","filter","bet","position","round","length","clearInterval","CSSTransition","in","unmountOnExit","nodeRef","timeout","classNames","mr","setHistoryPaneState","variant","Container","GradientModalHeader","ModalHeader","gradients","bubblegum","RiskDisclaimer","onSuccess","acknowledgeRisk","setAcknowledgeRisk","acknowledgeBeta","setAcknowledgeBeta","title","maxHeight","overflowY","disabled","SwiperContext","createContext","undefined","SwiperProvider","children","swiper","setSwiper","Provider","value","destroySwiper","destroy","formatUsd","usd","formatNumber","formatBnb","bnb","toLocaleString","minimumFractionDigits","maximumFractionDigits","getMultiplier","total","amount","getPayout","rewardRate","bullAmount","bearAmount","totalAmount","multiplier","BetPosition","BULL","getNetPayout","payout","Modal","ModalContainer","BunnyDecoration","CollectRoundWinningsModal","isPendingTx","setIsPendingTx","useToast","toastSuccess","toastError","callWithGasPrice","useCallWithGasPrice","predictionsContract","usePredictionsContract","bnbBusdPrice","useBNBBusdPrice","isLoadingHistory","useGetIsFetchingHistory","history","useGetHistory","reduce","accum","betPayout","REWARD_RATE","epochs","epoch","calculateClaimableRounds","totalBnb","multiplyPriceByAmount","fetchNodeHistory","handleClick","tx","Toast","txHash","hash","wait","receipt","markAsCollected","transactionHash","data","mt","alt","mx","textAlign","toFixed","rounds","join","isLoading","endIcon","spin","CollectWinningsButton","hasClaimed","props","useModal","onPresentCollectWinningsModal","ReclaimPositionButton","handleReclaim","status","padTime","BigNumber","from","num","toString","padStart","formatRoundTime","secondsBetweenBlocks","getTimePeriods","hours","minutes","seconds","minutesSeconds","StyledTag","Flex","bg","Tag","startIcon","icon","borderRadius","py","px","textTransform","PositionTag","betPosition","isUpPosition","useTooltip","bold","placement","targetRef","tooltip","tooltipVisible","HOUSE","fontWeight","Row","PayoutRow","positionLabel","formattedMultiplier","lineHeight","Background","Box","isNext","isLive","hasEntered","success","BEAR","failure","textDisabled","cardBorder","StyledRoundResultBox","card","background","RoundResultBox","getPrizePoolAmountHistory","PrizePoolHistoryRow","LockPriceHistoryRow","lockPrice","RoundResult","closePrice","isPositionUp","priceDifference","failed","useIsRefundable","isRefundable","setIsRefundable","getPredictionsContract","refundable","ledger","fetchRefundableStatus","StyledBetResult","Divider","hr","BetResult","result","canClaim","useGetIsClaimable","fee","isWinner","Result","WIN","totalPayout","returned","getHeaderColor","LOSE","CANCELED","handleSuccess","fetchLedgerData","getHeaderText","getHeaderIcon","claimedHash","getBscScanLink","getResultColor","StyledBetDetails","dropdown","BetDetails","bullMultiplier","bearMultiplier","LIVE","RoundResultHistory","lockBlock","closeBlock","StyledBet","attrs","YourResult","HistoricalBet","currentEpoch","useGetCurrentEpoch","roundResult","getRoundResult","resultTextColor","getRoundColor","resultTextPrefix","isOpenRound","isLiveRound","PredictionStatus","role","Filter","label","StyledHeader","ButtonMenuContainer","Header","activeTab","setActiveTab","historyFilter","useGetHistoryFilter","isFetchingHistory","handleChange","newFilter","setHistoryFilter","switchTab","tabIndex","HistoryFilter","ALL","activeIndex","onItemClick","ROUNDS","COLLECTED","UNCOLLECTED","getV1History","skip","where","request","GRAPH_API_PREDICTION_V1","gql","response","getAllV1History","Promise","resolve","reject","getHistoryChunk","betHistory","flatten","Object","values","isFetching","setIsFetching","setHistory","fetchAllHistory","header","rows","totalBets","anchor","document","createElement","blob","Blob","type","URL","createObjectURL","target","download","body","appendChild","click","removeChild","StyledClaimCheck","ClaimCheck","NothingToClaimModal","onPresentNothingToClaimModal","Loading","RoundsTab","hasBetHistory","hasHistoryLoaded","useGetHasHistoryLoaded","currentHistoryPage","useGetCurrentHistoryPage","V1ClaimCheck","map","page","DrawAnimation","OffsetAnimation","offset","SVG","svg","DefaultSlice","circle","LostSlice","WonSlice","Info","CIRCUMFERENCE","PnlChart","lost","won","percentageWon","paintLost","paintWon","viewBox","r","cx","cy","small","summaryTypeColors","entered","summaryTypeSigns","SummaryRow","summary","roundsInPercents","typeTranslationKey","charAt","toUpperCase","slice","displayAmount","amountInUsd","flexDirection","toLocaleLowerCase","backgroundDisabled","initialPnlSummary","bestRound","PnlTab","getPnlSummary","netResultAmount","netResultIsPositive","avgPositionEntered","avgBnbWonPerRound","avgBnbWonIsPositive","hasBestRound","netResultInUsd","avgBnbWonInUsd","betRoundInUsd","avgPositionEnteredInUsd","pb","pl","roundId","StyledHistory","BetWrapper","SpinnerWrapper","History","results","getFilteredBets","activeTabComponent","PNL","ConnectWalletButton","getNow","floor","Date","now","useCountdown","timestamp","secondsRemaining","setSecondsRemaining","isPaused","setIsPaused","isWindowVisible","useIsWindowVisible","pause","useCallback","unpause","setTimeout","prevSecondsRemaining","clearTimeout","RoundProgress","lockTimestamp","closeTimestamp","remainingTime","openCalculatingModal","primaryStep","HEADER_HEIGHT","getTextColorByStatus","fallback","StyledCardHeader","cardHeader","warning","getBackgroundColor","Round","CardHeader","textColor","GladiatorAttributes","LeftValues","RightValues","IconImage","img","GladiatorAttributesRow","attacker","defender","image","tooltipValue","tooltipName","setTooltipName","onMouseEnter","NewModal","StyledMain","EquipmentsList","Equipment","EquipmentImage","AttackBackground","DefenseBackground","AnimalBackground","EquipmentAttributes","EquipmentModal","onehand","twohand","range","Equipmentt","onEquipmentClick","EquipmentImages","element","useImageStore","create","set","get","setImage","Card","CalculatingCard","NewCard","CardInner","GladiatorBattle","loading","GladiatorWar","GladiatorRight","GladiatorLeft","Bet","BetValue","Statistics","Heading","ArenaTitle","GladiatorsStats","GladiatorArena","ArenaImage","GladiatorEquipments","AttackLable","DefenseLable","ArenaPrize","LiveBattle","currentBattle","setLoading","attackerNft","setAttackerNft","defenderNft","setDefenderNft","areena","setAreena","attackerEquipmentsImages","setAttackerEquipmentsImages","defenderEquipmentsImages","setDefenderEquipmentsImages","totalRewardAmount","setTotalRewardAmount","battleContract","useBattleNft","predictionNft","usePredictionNft","getGladiatorsFromDb","findAmount","attackerId","parseInt","_hex","defenderId","getSpecificGladiators2","gladiators","attackerGladiator","find","nft","tokenId","defenderGladiator","attackerFromConfig","galleryNfts","ipfsJson","defenderFromConfig","playerInfo","attackerPlayer","attackerAttackId","attackEqId","attackerDefenseId","defenceEqId","attackerAnimalId","animalId","getSpecificJoinPageNfts","attackerEquipments","eq","imagePath","level","defenderPlayer","defenderAttackId","defenderdefenseId","defenderAnimalId","defenderEquipments","log","useStore","state","totalReward","ethValue1","ethers","utils","formatEther","attackerAmount","ethValue2","defenderAmount","Number","left","leftTooltip","leftTooltipVisible","right","rightTooltip","rightTooltipVisible","arena","isActive","replace","borderBottom","replaceAll","terrain","marginLeft","AttackWinner","DefenceWinner","ResultsCard","ExpiredBattle","winner","setWinner","setAttacker","setDefender","CardFlip","InnerCard","CardFront","PrizeCard","PrizeHeading","EnterAttack","EnterDefense","CardBack","BetInput","BalanceInput","ModalComponent","setAmount","denaBalance","setDenaBalance","flip","predictionContract","cakeContract","useCake","toastInfo","selectedType","setSelectedType","value1","getElementById","transform","useApproveConfirmTransaction","onRequiresApproval","allowance","address","currentAllowance","ethersToBigNumber","gt","onApprove","MaxUint256","onApproveSuccess","onConfirm","ethToWei","parseEther","isAttackerApproving","isApproving","isAttackerApproved","isApproved","isAttackerConfirming","isConfirmed","isConfirming","attackerHandleApprove","handleApprove","attackerHandleConfirm","handleConfirm","isDefenderApproving","isDefenderApproved","isDefenderConfirming","defenderHandleApprove","defenderHandleConfirm","payBitAmount","balanceOf","ethValue","clicked","onUserInput","e","button","disable","SoonBattle","setDisable","onBet","LaterBattle","laterBattle","index","countdown","RoundCard","battles","FlexRow","Token","lg","Title","Text","ClosingTitle","sm","Interval","Label","shadows","level1","dir","radii","TimerLabel","interval","unit","pr","useSwiper","swiperContext","useContext","StyledPrevNextNav","default","Icon","GladiatorImage","PrevNextButton","PrevNextNav","liveCard","useGetSortedRounds","slideTo","update","slidePrev","marginRight","slideNext","NewIconButton","IconButton","HistoryButton","SetCol","HelpButtonWrapper","TimerLabelWrapper","ButtonWrapper","Button","Menu","rel","backgroundColor","order","useOnNextRound","previousEpoch","usePreviousValue","findIndex","useOnViewChange","liveSwiperIndex","view","prevView","usePrevious","SwiperCore","use","Keyboard","Mousewheel","PageView","StyledSwiper","Positions","previousRound","swiperIndex","indexOf","useHistory","battlaContract","useReducer","action","payload","upcomingBattlee","previousBattles","state2","dispatch1","bgImage","setBgImage","preBattlesCount","setPreBattleCount","getCurrentBattleCount","currentBattleCount","upcomingBattle","previousBattle1","previousBattle2","previousBattle3","previousBattle4","previousBattle5","push","count","battle","overflow","pt","initialSlide","onSwiper","spaceBetween","slidesPerView","freeMode","freeModeSticky","centeredSlides","freeModeMomentumRatio","freeModeMomentumVelocityRatio","mousewheel","keyboard","resizeObserver","PageLoader","SplitWrapper","text","HistoryPane","StyledDesktop","PositionPane","Desktop","splitWrapperRef","chartRef","gutterRef","useIsChartPaneOpen","handleDrag","debounce","getBoundingClientRect","setChartPaneState","split","Split","dragInterval","snapOffset","onDrag","rowGutters","track","useGetLatestOraclePrice","setPrice","useLastUpdated","lastUpdated","refresh","setLastUpdated","contract","getChainlinkOracleContract","latestAnswer","fetchPrice","usePollOraclePrice","setLastOraclePrice","toJSON","usePollPredictions","earliestEpoch","useGetEarliestEpoch","INITIAL","liveCurrentAndRecent","fetchRounds","fetchMarketData","epochRange","fetchClaimableStatuses","POLL_TIME_IN_SECONDS","ButtonNav","TabNav","StyledMobileMenu","MobileMenu","isHistoryOpen","isChartOpen","getActiveIndex","TradingView","symbol","MenuWrapper","ChartWrapper","Chart","CardWrapper","Notification","ErrorNotification","PauseNotification","StyledMobile","xl","View","isVisible","Mobile","isChartPaneOpen","HISTORY","CHART","POSITIONS","getView","ERROR","PAUSED","Predictions","isDesktop","useMatchBreakpoints","useUserPredictionAcceptedRisk","hasAcceptedRisk","setHasAcceptedRisk","initialBlock","useInitialBlock","onPresentRiskDisclaimer","onPresentChartDisclaimer","onPresentRiskDisclaimerRef","onPresentChartDisclaimerRef","initializePredictions","Page","backgroundImage","backgroundRepeat","backgroundSize","useGetRounds","useSelector","predictions","keys","parseBigNumberObj","roundData","claimableStatuses","earliestRound","minBy","useGetLastOraclePrice","lastOraclePrice","useMemo","useGetLeaderboardLoadingState","leaderboard","loadingState","useGetLeaderboardResults","useGetLeaderboardFilters","filters","useGetLeaderboardSkip","useGetLeaderboardHasMoreResults","hasMoreResults","useGetOrFetchLeaderboardAddressResult","addressResult","addressResults","useGetAddressResult","isAddress","fetchAddressResult","useGetSelectedAddress","selectedAddress","initialState","approvalState","confirmState","reducer","actions","noop","handlePreApprove","then"],"mappings":"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","file":"static/js/32.c3d21fa8.chunk.js","sourcesContent":["import { GalleryNft, SizeMeasure, WeightMeasure, LifeCycle, NftToken, ListingType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\nconst GalleryNfts: GalleryNft[] = [\n  {\n    name: 'Fuse Warrior',\n    glTF: 'fuse_warrior',\n    glTFPath: '/gallery/fuse_warrior/scene.gltf',\n    glTFScale: {\n      x: 0.05,\n      y: 0.05,\n      z: 0.05\n    },\n    glTFAnimationIndex: 1,\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      Shield_Default_OBJ_0: '/gallery/fuse_warrior/elements/OBJ_0.png',\n      Object_79: '/gallery/fuse_warrior/elements/obj79.png',\n      Object_80: '/gallery/fuse_warrior/elements/obj80.png',\n      Object_81: '/gallery/fuse_warrior/elements/obj81.png',\n      Object_82: '/gallery/fuse_warrior/elements/obj82.png'\n    },\n    description: '',\n    rarity: 1,\n    supply: null,\n    size: 6.05,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2400,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 500,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 2,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 150,\n    attributes: {\n      strength: 4,\n      endurance: 5,\n      agility: 10,\n      precision: 6,\n      intelligance: 7,\n      willpower: 8\n    },\n    weapons: {\n      oneHand: 9,\n      twoHand: 4,\n      shield: 5,\n      ranged: 10,\n      dual: 6,\n      polearms: 7\n    },\n    abilities: {\n      leadership: 8,\n      coach: 9,\n      cook: 4,\n      medical: 5,\n      smith: 10,\n      torture: 6\n    },\n  },\n  {\n    name: 'Ol Veteran',\n    glTF: 'ol_veteran',\n    glTFPath: '/gallery/ol_veteran/scene.gltf',\n    glTFScale: {\n      x: 0.05,\n      y: 0.05,\n      z: 0.05\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      Object_7: '/gallery/ol_veteran/elements/body.png'\n    },\n    description: '',\n    rarity: 1,\n    supply: null,\n    size: 6.05,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2400,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 500,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 2,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 150,\n    attributes: {\n      strength: 4,\n      endurance: 5,\n      agility: 10,\n      precision: 6,\n      intelligance: 7,\n      willpower: 8\n    },\n    weapons: {\n      oneHand: 9,\n      twoHand: 4,\n      shield: 5,\n      ranged: 10,\n      dual: 6,\n      polearms: 7\n    },\n    abilities: {\n      leadership: 8,\n      coach: 9,\n      cook: 4,\n      medical: 5,\n      smith: 10,\n      torture: 6\n    },\n  },\n  {\n    name: 'Knight Battle',\n    glTF: 'knight_battle',\n    glTFPath: '/gallery/knight_battle/scene.gltf',\n    glTFScale: {\n      x: 0.06,\n      y: 0.06,\n      z: 0.06\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: 0,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      M_LRG_BlackKnightmo_Hat_Commando_BlackKnight_0: '/gallery/knight_battle/elements/head.png',\n      Object_176: '/gallery/knight_battle/elements/body.png'\n    },\n    description: '',\n    rarity: 1,\n    supply: null,\n    size: 6.05,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2400,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 500,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 2,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 150,\n    attributes: {\n      strength: 4,\n      endurance: 5,\n      agility: 10,\n      precision: 6,\n      intelligance: 7,\n      willpower: 8\n    },\n    weapons: {\n      oneHand: 9,\n      twoHand: 4,\n      shield: 5,\n      ranged: 10,\n      dual: 6,\n      polearms: 7\n    },\n    abilities: {\n      leadership: 8,\n      coach: 9,\n      cook: 4,\n      medical: 5,\n      smith: 10,\n      torture: 6\n    },\n  },\n  {\n    name: 'Gladiator Aware',\n    glTF: 'gladiator-aware',\n    glTFPath: '/gallery/gladiator-aware/scene.gltf',\n    glTFScale: {\n      x: 0.05,\n      y: 0.05,\n      z: 0.05\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      'Shield_Shield#Mat0_0': '/gallery/gladiator-aware/elements/shield.png',\n      'Weapon_Weapon#Mat0_0': '/gallery/gladiator-aware/elements/weapon.png',\n      'MHead_MHead#Mat0_0': '/gallery/gladiator-aware/elements/head.png',\n      'MArmor_MArmor#Mat0_0': '/gallery/gladiator-aware/elements/armor.png',\n      'MBody_MBody#Mat0_0': '/gallery/gladiator-aware/elements/arms.png',\n      'MBoots_MBoots#Mat0_0': '/gallery/gladiator-aware/elements/boots.png',\n      'MGauntlets_MGauntlets#Mat0_0': '/gallery/gladiator-aware/elements/gauntlets.png'\n    },\n    description: '',\n    rarity: 4,\n    supply: null,\n    size: 6.01,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2200,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 350,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 875\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 5,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 90,\n    attributes: {\n      strength: 7,\n      endurance: 8,\n      agility: 5,\n      precision: 10,\n      intelligance: 9,\n      willpower: 4\n    },\n    weapons: {\n      oneHand: 6,\n      twoHand: 7,\n      shield: 8,\n      ranged: 5,\n      dual: 10,\n      polearms: 9\n    },\n    abilities: {\n      leadership: 4,\n      coach: 6,\n      cook: 7,\n      medical: 8,\n      smith: 5,\n      torture: 10\n    },\n  },\n  {\n    name: 'Heimjil',\n    glTF: 'heimjil',\n    glTFPath: '/gallery/heimjil/scene.gltf',\n    glTFScale: {\n      x: 0.1,\n      y: 0.1,\n      z: 0.1\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    }\n    , glTFRootNode: \"_rootJoint\"\n    , bodyElements: {\n      \"SK_Dual_Blade_Axe5_M_Dual_Blade_Axe5_0\": \"/gallery/heimjil/elements/weapon.png\",\n      \"6\": \"/gallery/heimjil/elements/armor.png\",\n      \"5\": \"/gallery/heimjil/elements/boots.png\",\n      \"0\": \"/gallery/heimjil/elements/body.png\",\n    }\n    , description: \"\"\n    , rarity: 3\n    , supply: null\n    , size: 6.15\n    , sizeMeasure: SizeMeasure.METER\n    , weight: 2300\n    , weightMeasure: WeightMeasure.LBS\n    , initialLifeCycle: {\n\n      lifeCycle: LifeCycle.SLAVE,\n      price: 100,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 8,\n    bestTerrain: 'Desert',\n    staminaFillCoast: 30,\n    attributes: {\n      strength: 10,\n      endurance: 9,\n      agility: 8,\n      precision: 7,\n      intelligance: 6,\n      willpower: 5\n    },\n    weapons: {\n      oneHand: 4,\n      twoHand: 10,\n      shield: 9,\n      ranged: 8,\n      dual: 7,\n      polearms: 6\n    },\n    abilities: {\n      leadership: 5,\n      coach: 4,\n      cook: 10,\n      medical: 9,\n      smith: 8,\n      torture: 7\n    },\n  },\n  {\n    name: 'Hero Warrior',\n    glTF: 'hero_warrior',\n    glTFPath: '/gallery/hero_warrior/scene.gltf',\n    glTFScale: {\n      x: 0.25,\n      y: 0.25,\n      z: 0.25\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      default__0: '/gallery/hero_warrior/elements/body.png'\n    },\n    description: '',\n    rarity: 3,\n    supply: null,\n    size: 6.09,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2100,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 400,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1000\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 4,\n    bestTerrain: 'Mountains',\n    staminaFillCoast: 110,\n    attributes: {\n      strength: 6,\n      endurance: 7,\n      agility: 4,\n      precision: 5,\n      intelligance: 8,\n      willpower: 9\n    },\n    weapons: {\n      oneHand: 10,\n      twoHand: 6,\n      shield: 7,\n      ranged: 4,\n      dual: 5,\n      polearms: 8\n    },\n    abilities: {\n      leadership: 9,\n      coach: 10,\n      cook: 6,\n      medical: 7,\n      smith: 4,\n      torture: 5\n    },\n  },\n  {\n    name: 'Taunt Battlecry',\n    glTF: 'standing_taunt_battlecry',\n    glTFPath: '/gallery/standing_taunt_battlecry/scene.gltf',\n    glTFScale: {\n      x: 0.06,\n      y: 0.06,\n      z: 0.06\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      // Object_9: '/gallery/standing_taunt_battlecry/elements/obj9.png',\n      // Object_10: '/gallery/standing_taunt_battlecry/elements/obj10.png',\n      // Object_12: '/gallery/standing_taunt_battlecry/elements/obj12.png',\n      // Object_14: '/gallery/standing_taunt_battlecry/elements/obj14.png',\n      Object_14: '/gallery/standing_taunt_battlecry/elements/preview.png',\n    },\n    description: '',\n    rarity: 1,\n    supply: null,\n    size: 6.05,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2400,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 500,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 2,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 150,\n    attributes: {\n      strength: 4,\n      endurance: 5,\n      agility: 10,\n      precision: 6,\n      intelligance: 7,\n      willpower: 8\n    },\n    weapons: {\n      oneHand: 9,\n      twoHand: 4,\n      shield: 5,\n      ranged: 10,\n      dual: 6,\n      polearms: 7\n    },\n    abilities: {\n      leadership: 8,\n      coach: 9,\n      cook: 4,\n      medical: 5,\n      smith: 10,\n      torture: 6\n    },\n  },\n  {\n    name: 'Fantasy Warrior',\n    glTF: 'fantasy_warrior',\n    glTFPath: '/gallery/fantasy_warrior/scene.gltf',\n    glTFScale: {\n      x: 4,\n      y: 4,\n      z: 4\n    },\n    glTFRotation: {\n      x: Math.PI / 2,\n      y: -Math.PI / 2,\n      z: Math.PI / 2\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      warrior_warrior_0: '/gallery/fantasy_warrior/elements/body.png',\n      sword_warrior_0: '/gallery/fantasy_warrior/elements/weapon.png',\n      shield_warrior_0: '/gallery/fantasy_warrior/elements/shield.png'\n    },\n    description: '',\n    rarity: 6,\n    supply: null,\n    size: 6.14,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2700,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 200,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 500,\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 7,\n    bestTerrain: 'Mountain',\n    staminaFillCoast: 50,\n    attributes: {\n      strength: 9,\n      endurance: 10,\n      agility: 7,\n      precision: 8,\n      intelligance: 4,\n      willpower: 6\n    },\n    weapons: {\n      oneHand: 5,\n      twoHand: 9,\n      shield: 10,\n      ranged: 7,\n      dual: 8,\n      polearms: 4\n    },\n    abilities: {\n      leadership: 6,\n      coach: 5,\n      cook: 9,\n      medical: 10,\n      smith: 7,\n      torture: 8\n    },\n  },\n  {\n    name: 'Third Legion Legionnaire',\n    glTF: 'third_legion_legionnaire',\n    glTFPath: '/gallery/third_legion_legionnaire/scene.gltf',\n    glTFScale: {\n      x: 0.04,\n      y: 0.04,\n      z: 0.04\n    },\n    glTFRotation: {\n      x: -Math.PI / 2,\n      y: 0,\n      z: Math.PI / 3\n    },\n    glTFPosition: {\n      x: 0,\n      y: -4,\n      z: 0\n    },\n    glTFRootNode: '_rootJoint',\n    bodyElements: {\n      Plane008_0: '/gallery/third_legion_legionnaire/elements/body.png'\n    },\n    description: '',\n    rarity: 1,\n    supply: null,\n    size: 6.05,\n    sizeMeasure: SizeMeasure.METER,\n    weight: 2400,\n    weightMeasure: WeightMeasure.LBS,\n    initialLifeCycle: {\n      lifeCycle: LifeCycle.SLAVE,\n      price: 500,\n      periodInMinutes: 120\n    },\n    finalLifeCycle: {\n      lifeCycle: LifeCycle.GLADIATOR,\n      price: 1250\n    },\n    token: NftToken.NRT,\n    minTimeInSeconds: 7200,\n    listingType: ListingType.CORE,\n    orderBy: 0,\n    limitSupply: 2,\n    bestTerrain: 'Glacial',\n    staminaFillCoast: 150,\n    attributes: {\n      strength: 4,\n      endurance: 5,\n      agility: 10,\n      precision: 6,\n      intelligance: 7,\n      willpower: 8\n    },\n    weapons: {\n      oneHand: 9,\n      twoHand: 4,\n      shield: 5,\n      ranged: 10,\n      dual: 6,\n      polearms: 7\n    },\n    abilities: {\n      leadership: 8,\n      coach: 9,\n      cook: 4,\n      medical: 5,\n      smith: 10,\n      torture: 6\n    },\n  },\n]\n\nexport default GalleryNfts\n","export enum SizeMeasure {\n  CM = \"centimeters\",\n  METER = \"meters\"\n}\n\nexport enum WeightMeasure {\n  GRAMS = \"grams\",\n  LBS = \"lbs\",\n  TONS = \"tons\",\n}\n\nexport enum LifeCycle {\n  SLAVE = \"slave\",\n  GLADIATOR = \"gladiator\"\n}\n\nexport type LifeCyclePricing = {\n  lifeCycle: LifeCycle,\n  price: number,\n  periodInMinutes?: number\n}\n\nexport enum NftToken {\n  NRT = \"NRT\",\n  DENA = \"DENA\",\n}\n\nexport enum ListingType {\n  CORE,\n  COMMUNITY,\n  PARTNER\n}\n\nexport interface GltfXyz {\n  x: number\n  y: number\n  z: number\n}\n\nexport type GalleryNft = {\n  name: string\n  orderBy: number\n  description: string\n  glTF: string\n  glTFRootNode?: string\n  glTFPath: string\n  glTFPosition?: GltfXyz\n  glTFScale?: GltfXyz\n  glTFRotation?: GltfXyz\n  glTFAnimationIndex?: number\n  bodyElements: any\n  rarity: number | string\n  supply: number | string\n  size: number | string\n  sizeMeasure: SizeMeasure\n  weight: number | string\n  weightMeasure: WeightMeasure\n  initialLifeCycle: LifeCyclePricing\n  finalLifeCycle: LifeCyclePricing\n  token: NftToken\n  minTimeInSeconds: number | string\n  inactive?: boolean\n  isPromoted?: boolean\n  listingType?: ListingType\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n    ipfs: string\n  }\n  limitSupply: number\n  bestTerrain: string\n  staminaFillCoast: number\n  attributes?: {\n    strength: number\n    endurance: number\n    agility: number\n    precision: number\n    intelligance: number\n    willpower: number\n  }\n  weapons?: {\n    oneHand: number\n    twoHand: number\n    shield: number\n    ranged: number\n    dual: number\n    polearms: number\n  }\n  abilities?: {\n    leadership: number\n    coach: number\n    cook: number\n    medical: number\n    smith: number\n    torture: number\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n","import * as Sentry from '@sentry/react'\n\nconst assignError = (maybeError: any) => {\n  if (typeof maybeError === 'string') {\n    return new Error(maybeError)\n  }\n  if (typeof maybeError === 'object') {\n    const error = new Error(maybeError?.message ?? String(maybeError))\n    if (maybeError?.stack) {\n      error.stack = maybeError.stack\n    }\n    if (maybeError?.code) {\n      error.name = maybeError.code\n    }\n    return error\n  }\n  return maybeError\n}\n\nexport const isUserRejected = (err) => {\n  // provider user rejected error code\n  return typeof err === 'object' && 'code' in err && err.code === 4001\n}\n\nexport const logError = (error: Error | unknown) => {\n  if (error instanceof Error) {\n    Sentry.captureException(error)\n  } else {\n    Sentry.captureException(assignError(error), error)\n  }\n  console.error(error)\n}\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  ArrowForwardIcon,\n  Box,\n  Button,\n  Radio,\n  Flex,\n  Heading,\n  Text,\n  ButtonMenu,\n  ButtonMenuItem,\n} from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport { HistoryFilter } from 'state/types'\nimport { setHistoryFilter, setHistoryPaneState } from 'state/predictions'\nimport { useGetHistoryFilter, useGetIsFetchingHistory } from 'state/predictions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\n\nconst Filter = styled.label`\n  align-items: center;\n  cursor: pointer;\n  display: inline-flex;\n  margin-right: 16px;\n`\n\nconst StyledHeader = styled(Box)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n  flex: none;\n  padding: 16px;\n`\n\nconst ButtonMenuContainer = styled.div`\n  margin-bottom: 16px;\n  width: 100%;\n  & > div {\n    width: 100%;\n  }\n\n  & button {\n    width: 100%;\n  }\n`\n\ninterface HeaderProps {\n  activeTab: HistoryTabs\n  setActiveTab: (value: HistoryTabs) => void\n}\n\nexport enum HistoryTabs {\n  ROUNDS,\n  PNL,\n}\n\nconst Header: React.FC<HeaderProps> = ({ activeTab, setActiveTab }) => {\n  const historyFilter = useGetHistoryFilter()\n  const isFetchingHistory = useGetIsFetchingHistory()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  const handleClick = () => {\n    dispatch(setHistoryPaneState(false))\n  }\n\n  const handleChange = (newFilter: HistoryFilter) => async () => {\n    if (newFilter !== historyFilter) {\n      dispatch(setHistoryFilter(newFilter))\n    }\n  }\n\n  const switchTab = async (tabIndex: number) => {\n    setActiveTab(tabIndex)\n    await handleChange(HistoryFilter.ALL)()\n  }\n\n  return (\n    <StyledHeader>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\n        <Heading as=\"h3\" size=\"md\">\n          {t('History')}\n        </Heading>\n        <Button onClick={handleClick} variant=\"text\" endIcon={<ArrowForwardIcon color=\"textSubtle\" />} px=\"0\">\n          <Text color=\"textSubtle\" fontWeight=\"bold\" fontSize=\"16px\">\n            {t('Close')}\n          </Text>\n        </Button>\n      </Flex>\n      <ButtonMenuContainer>\n        <ButtonMenu activeIndex={activeTab} scale=\"sm\" variant=\"subtle\" onItemClick={switchTab}>\n          <ButtonMenuItem>{t('Rounds')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('PNL')}</ButtonMenuItem>\n        </ButtonMenu>\n      </ButtonMenuContainer>\n      {activeTab === HistoryTabs.ROUNDS && (\n        <>\n          <Text color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n            {t('Filter')}\n          </Text>\n          <Flex alignItems=\"center\">\n            <Filter>\n              <Radio\n                scale=\"sm\"\n                checked={historyFilter === HistoryFilter.ALL}\n                disabled={isFetchingHistory || !account}\n                onChange={handleChange(HistoryFilter.ALL)}\n              />\n              <Text ml=\"4px\">{t('All')}</Text>\n            </Filter>\n            <Filter>\n              <Radio\n                scale=\"sm\"\n                checked={historyFilter === HistoryFilter.COLLECTED}\n                disabled={isFetchingHistory || !account}\n                onChange={handleChange(HistoryFilter.COLLECTED)}\n              />\n              <Text ml=\"4px\">{t('Collected')}</Text>\n            </Filter>\n            <Filter>\n              <Radio\n                scale=\"sm\"\n                checked={historyFilter === HistoryFilter.UNCOLLECTED}\n                disabled={isFetchingHistory || !account}\n                onChange={handleChange(HistoryFilter.UNCOLLECTED)}\n              />\n              <Text ml=\"4px\">{t('Uncollected')}</Text>\n            </Filter>\n          </Flex>\n        </>\n      )}\n    </StyledHeader>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport {\n  ModalContainer,\n  ModalBody,\n  Text,\n  Button,\n  InjectedModalProps,\n  LinkExternal,\n  Flex,\n  Image,\n  Heading,\n  Checkbox,\n  Box,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserPredictionChartDisclaimerShow } from 'state/user/hooks'\n\nconst Ul = styled.ul`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  list-style-position: outside;\n  margin-left: 16px;\n\n  & > li {\n    font-size: 14px;\n    line-height: 1.5;\n  }\n`\n\nconst ChartDisclaimer: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showDisclaimer, setShowDisclaimer] = useUserPredictionChartDisclaimerShow()\n  const { t } = useTranslation()\n\n  const handleConfirm = () => {\n    onDismiss()\n  }\n\n  return (\n    <ModalContainer minWidth=\"320px\">\n      <ModalBody p=\"24px\" maxWidth=\"400px\">\n        <Flex justifyContent=\"center\" mb=\"32px\">\n          <Image src=\"/images/chartwarning.svg\" width={190} height={118} />\n        </Flex>\n        <Heading as=\"h3\" size=\"sm\">\n          {t('Warning')}:\n        </Heading>\n        <Heading as=\"h4\" size=\"sm\" mb=\"24px\">\n          {t('Prices shown on cards and charts are different')}:\n        </Heading>\n        <Text as=\"p\" fontSize=\"14px\" color=\"textSubtle\">\n          {t('The price you see come from difference places')}:\n        </Text>\n        <Ul>\n          <li>{t('Prices on cards come from Chainlink’s verifiable price oracle.')}</li>\n          <li>{t(\"Prices on charts come from Binance.com. Chart's are provided for your reference only.\")}</li>\n        </Ul>\n        <Text as=\"p\" mb=\"16px\" fontSize=\"14px\" color=\"textSubtle\">\n          {t(\"Only the price from Chainlink (shown on the cards) determines the round's result.\")}\n        </Text>\n        <LinkExternal\n          href=\"https://docs.pancakeswap.finance/products/prediction/prediction-faq#what-are-you-using-for-your-price-feed\"\n          external\n          mb=\"24px\"\n        >\n          {t('Learn More')}\n        </LinkExternal>\n        <Box>\n          <Button width=\"100%\" onClick={handleConfirm} mb=\"16px\">\n            {t('I understand')}\n          </Button>\n        </Box>\n        <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n          <Flex alignItems=\"center\">\n            <div style={{ flex: 'none' }}>\n              <Checkbox\n                id=\"checkbox\"\n                scale=\"sm\"\n                checked={!showDisclaimer}\n                onChange={() => setShowDisclaimer(!showDisclaimer)}\n              />\n            </div>\n            <Text ml=\"8px\">{t(\"Don't show this again\")}</Text>\n          </Flex>\n        </label>\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default ChartDisclaimer\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled, { css, keyframes } from 'styled-components'\nimport { Button, CloseIcon, IconButton, TrophyGoldIcon } from '@pancakeswap/uikit'\nimport { CSSTransition } from 'react-transition-group'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBetHistory } from 'state/predictions/helpers'\nimport { useGetPredictionsStatus, useIsHistoryPaneOpen } from 'state/predictions/hooks'\nimport { useAppDispatch } from 'state'\nimport { setHistoryPaneState } from 'state/predictions'\n\n/**\n * @see https://github.com/animate-css/animate.css/tree/main/source\n */\nconst bounceInKeyframe = keyframes`\n  from,\n  60%,\n  75%,\n  90%,\n  to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n\n  from {\n    opacity: 0;\n    transform: translate3d(0, 3000px, 0) scaleY(5);\n  }\n\n  60% {\n    opacity: 1;\n    transform: translate3d(0, -20px, 0) scaleY(0.9);\n  }\n\n  75% {\n    transform: translate3d(0, 10px, 0) scaleY(0.95);\n  }\n\n  90% {\n    transform: translate3d(0, -5px, 0) scaleY(0.985);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n`\n\nconst bounceOutKeyframe = keyframes`\n  20% {\n    transform: translate3d(0, 10px, 0) scaleY(0.985);\n  }\n\n  40%,\n  45% {\n    opacity: 1;\n    transform: translate3d(0, -20px, 0) scaleY(0.9);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(0, 2000px, 0) scaleY(3);\n  }\n`\n\nconst bounceInAnimation = css`\n  animation: ${bounceInKeyframe} 1s;\n`\n\nconst bounceOutAnimation = css`\n  animation: ${bounceOutKeyframe} 1s;\n`\n\nconst Wrapper = styled.div`\n  align-items: center;\n  bottom: 72px;\n  color: #ffffff;\n  display: flex;\n  justify-content: center;\n  left: 0;\n  padding-left: 16px;\n  padding-right: 16px;\n  position: absolute;\n  width: 100%;\n  z-index: 50;\n\n  &.popup-enter-active {\n    ${bounceInAnimation}\n  }\n\n  &.popup-enter-done {\n    bottom: 72px;\n  }\n\n  &.popup-exit-done {\n    bottom: -2000px;\n  }\n\n  &.popup-exit-active {\n    ${bounceOutAnimation}\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    bottom: 16px;\n    justify-content: flex-end;\n\n    &.popup-enter-done {\n      bottom: 16px;\n    }\n  }\n`\n\nconst Popup = styled.div`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.secondary};\n  border-radius: 32px;\n  color: #ffffff;\n  display: flex;\n  max-width: 320px;\n  padding: 16px 8px;\n`\n\nconst CollectWinningsPopup = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const { t } = useTranslation()\n  const ref = useRef(null)\n  const timer = useRef(null)\n  const { account } = useWeb3React()\n  const predictionStatus = useGetPredictionsStatus()\n  const isHistoryPaneOpen = useIsHistoryPaneOpen()\n  const dispatch = useAppDispatch()\n\n  const handleOpenHistory = () => {\n    dispatch(setHistoryPaneState(true))\n  }\n\n  const handleClick = () => {\n    setIsOpen(false)\n    clearInterval(timer.current)\n  }\n\n  // Check user's history for unclaimed winners\n  useEffect(() => {\n    let isCancelled = false\n    if (account) {\n      timer.current = setInterval(async () => {\n        const bets = await getBetHistory({ user: account.toLowerCase(), claimed: false })\n\n        if (!isCancelled) {\n          // Filter out bets that were not winners\n          const winnerBets = bets.filter((bet) => {\n            return bet.position === bet.round.position\n          })\n\n          if (!isHistoryPaneOpen) {\n            setIsOpen(winnerBets.length > 0)\n          }\n        }\n      }, 30000)\n    }\n\n    return () => {\n      clearInterval(timer.current)\n      isCancelled = true\n    }\n  }, [account, timer, predictionStatus, setIsOpen, isHistoryPaneOpen])\n\n  // Any time the history pane is open make sure the popup closes\n  useEffect(() => {\n    if (isHistoryPaneOpen) {\n      setIsOpen(false)\n    }\n  }, [isHistoryPaneOpen, setIsOpen])\n\n  return (\n    <CSSTransition in={isOpen} unmountOnExit nodeRef={ref} timeout={1000} classNames=\"popup\">\n      <Wrapper ref={ref}>\n        <Popup>\n          <TrophyGoldIcon width=\"64px\" style={{ flex: 'none' }} mr=\"8px\" />\n          <Button style={{ flex: 1 }} onClick={handleOpenHistory}>\n            {t('Collect Winnings')}\n          </Button>\n          <IconButton variant=\"text\" onClick={handleClick}>\n            <CloseIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n        </Popup>\n      </Wrapper>\n    </CSSTransition>\n  )\n}\n\nexport default CollectWinningsPopup\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  // height: calc(100vh - 100px);\n  overflow: hidden;\n  position: relative;\n`\n\nexport default Container\n","import React, { useState } from 'react'\nimport {\n  ModalContainer,\n  ModalBody,\n  Text,\n  Button,\n  Flex,\n  InjectedModalProps,\n  Checkbox,\n  ModalHeader,\n  ModalTitle,\n  Heading,\n  Box,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\n\ninterface RiskDisclaimerProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nconst GradientModalHeader = styled(ModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n  padding-bottom: 24px;\n  padding-top: 24px;\n`\n\nconst RiskDisclaimer: React.FC<RiskDisclaimerProps> = ({ onSuccess, onDismiss }) => {\n  const [acknowledgeRisk, setAcknowledgeRisk] = useState(false)\n  const [acknowledgeBeta, setAcknowledgeBeta] = useState(false)\n  const { t } = useTranslation()\n\n  const handleSetAcknowledgeRisk = () => {\n    setAcknowledgeRisk(!acknowledgeRisk)\n  }\n\n  const handleSetAcknowledgeBeta = () => {\n    setAcknowledgeBeta(!acknowledgeBeta)\n  }\n\n  const handleConfirm = () => {\n    onSuccess()\n    onDismiss()\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\" id=\"predictions-risk-disclaimer\">\n      <GradientModalHeader>\n        <ModalTitle>\n          <Heading scale=\"lg\">{t('Welcome!')}</Heading>\n        </ModalTitle>\n      </GradientModalHeader>\n      <ModalBody p=\"24px\" maxWidth=\"400px\">\n        <Box maxHeight=\"300px\" overflowY=\"auto\">\n          <Heading as=\"h3\" mb=\"24px\">\n            {t('This Product is in beta.')}\n          </Heading>\n\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Once you enter a position, you cannot cancel or adjust it.')}\n          </Text>\n\n          <label\n            htmlFor=\"responsibility-checkbox\"\n            style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}\n          >\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox\n                  id=\"responsibility-checkbox\"\n                  scale=\"sm\"\n                  checked={acknowledgeRisk}\n                  onChange={handleSetAcknowledgeRisk}\n                />\n              </div>\n              <Text ml=\"8px\">\n                {t(\n                  'I understand that I am using this product at my own risk. Any losses incurred due to my actions are my own responsibility.',\n                )}\n              </Text>\n            </Flex>\n          </label>\n          <label htmlFor=\"beta-checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"beta-checkbox\" scale=\"sm\" checked={acknowledgeBeta} onChange={handleSetAcknowledgeBeta} />\n              </div>\n              <Text ml=\"8px\">\n                {t('I understand that this product is still in beta. I am participating at my own risk')}\n              </Text>\n            </Flex>\n          </label>\n        </Box>\n        <Button\n          id=\"prediction-disclaimer-continue\"\n          width=\"100%\"\n          onClick={handleConfirm}\n          disabled={!acknowledgeRisk || !acknowledgeBeta}\n        >\n          {t('Continue')}\n        </Button>\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default RiskDisclaimer\n","import React, { createContext, Dispatch, useState } from 'react'\nimport SwiperCore from 'swiper'\n\ninterface Context {\n  swiper: SwiperCore\n  setSwiper: Dispatch<React.SetStateAction<SwiperCore>>\n  destroySwiper: () => void\n}\n\nexport const SwiperContext = createContext<Context>(undefined)\n\nconst SwiperProvider = ({ children }) => {\n  const [swiper, setSwiper] = useState<SwiperCore>(null)\n\n  const destroySwiper = () => {\n    if (swiper) {\n      swiper.destroy()\n      setSwiper(null)\n    }\n  }\n\n  return <SwiperContext.Provider value={{ swiper, setSwiper, destroySwiper }}>{children}</SwiperContext.Provider>\n}\n\nexport default SwiperProvider\n","import { Bet, BetPosition } from 'state/types'\nimport { formatNumber } from 'utils/formatBalance'\n\nexport const formatUsd = (usd: number) => {\n  return `$${formatNumber(usd || 0, 3, 3)}`\n}\n\nexport const formatBnb = (bnb: number) => {\n  return bnb ? bnb.toLocaleString(undefined, { minimumFractionDigits: 3, maximumFractionDigits: 3 }) : '0'\n}\n\nexport const getMultiplier = (total: number, amount: number) => {\n  if (total === 0 || amount === 0) {\n    return 0\n  }\n\n  return total / amount\n}\n\n/**\n * Calculates the total payout given a bet\n */\nexport const getPayout = (bet: Bet, rewardRate = 1) => {\n  if (!bet || !bet.round) {\n    return 0\n  }\n\n  const { bullAmount, bearAmount, totalAmount } = bet.round\n  const multiplier = getMultiplier(totalAmount, bet.position === BetPosition.BULL ? bullAmount : bearAmount)\n  return bet.amount * multiplier * rewardRate\n}\n\nexport const getNetPayout = (bet: Bet, rewardRate = 1): number => {\n  if (!bet || !bet.round) {\n    return 0\n  }\n\n  const payout = getPayout(bet, rewardRate)\n  return payout - bet.amount\n}\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  ModalContainer,\n  ModalBody,\n  ModalTitle,\n  ModalHeader,\n  InjectedModalProps,\n  Button,\n  AutoRenewIcon,\n  TrophyGoldIcon,\n  Text,\n  Flex,\n  Heading,\n  Box,\n  ModalCloseButton,\n  Skeleton,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { REWARD_RATE } from 'state/predictions/config'\nimport { fetchNodeHistory, markAsCollected } from 'state/predictions'\nimport { Bet } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\nimport useToast from 'hooks/useToast'\nimport { usePredictionsContract } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useGetHistory, useGetIsFetchingHistory } from 'state/predictions/hooks'\nimport { multiplyPriceByAmount } from 'utils/prices'\nimport { formatNumber } from 'utils/formatBalance'\nimport { logError } from 'utils/sentry'\nimport { getPayout } from './History/helpers'\n\ninterface CollectRoundWinningsModalProps extends InjectedModalProps {\n  onSuccess?: () => Promise<void>\n}\n\nconst Modal = styled(ModalContainer)`\n  overflow: visible;\n`\n\nconst BunnyDecoration = styled.div`\n  position: absolute;\n  top: -116px; // line up bunny at the top of the modal\n  left: 0px;\n  text-align: center;\n  width: 100%;\n`\n\ninterface ClaimableRounds {\n  epochs: number[]\n  total: number\n}\n\nconst calculateClaimableRounds = (history): ClaimableRounds => {\n  if (!history) {\n    return { epochs: [], total: 0 }\n  }\n\n  return history.reduce(\n    (accum: ClaimableRounds, bet: Bet) => {\n      if (!bet.claimed && bet.position === bet.round.position) {\n        const betPayout = getPayout(bet, REWARD_RATE)\n        return {\n          ...accum,\n          epochs: [...accum.epochs, bet.round.epoch],\n          total: accum.total + betPayout,\n        }\n      }\n\n      return accum\n    },\n    { epochs: [], total: 0 },\n  )\n}\n\nconst CollectRoundWinningsModal: React.FC<CollectRoundWinningsModalProps> = ({ onDismiss, onSuccess }) => {\n  const [isPendingTx, setIsPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const predictionsContract = usePredictionsContract()\n  const bnbBusdPrice = useBNBBusdPrice()\n  const dispatch = useAppDispatch()\n  const isLoadingHistory = useGetIsFetchingHistory()\n  const history = useGetHistory()\n\n  const { epochs, total } = calculateClaimableRounds(history)\n  const totalBnb = multiplyPriceByAmount(bnbBusdPrice, total)\n\n  useEffect(() => {\n    // Fetch history if they have not opened the history pane yet\n    if (history.length === 0) {\n      dispatch(fetchNodeHistory({ account }))\n    }\n  }, [account, history, dispatch])\n\n  const handleClick = async () => {\n    try {\n      const tx = await callWithGasPrice(predictionsContract, 'claim', [epochs])\n      toastSuccess(`${t('Transaction Submitted')}!`, <ToastDescriptionWithTx txHash={tx.hash} />)\n      setIsPendingTx(true)\n      const receipt = await tx.wait()\n\n      // Immediately mark rounds as claimed\n      dispatch(\n        markAsCollected(\n          epochs.reduce((accum, epoch) => {\n            return { ...accum, [epoch]: true }\n          }, {}),\n        ),\n      )\n\n      if (onSuccess) {\n        await onSuccess()\n      }\n\n      onDismiss()\n      setIsPendingTx(false)\n      toastSuccess(\n        t('Winnings collected!'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('Your prizes have been sent to your wallet')}\n        </ToastDescriptionWithTx>,\n      )\n    } catch (error) {\n      console.error('Unable to claim winnings', error)\n      logError(error)\n      toastError(\n        t('Error'),\n        (error as any)?.data?.message ||\n          t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n      )\n    } finally {\n      setIsPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal minWidth=\"288px\" position=\"relative\" mt=\"124px\">\n      <BunnyDecoration>\n        <img src=\"/images/decorations/prize-bunny.png\" alt=\"bunny decoration\" height=\"124px\" width=\"168px\" />\n      </BunnyDecoration>\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Collect Winnings')}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <TrophyGoldIcon width=\"96px\" mx=\"auto\" mb=\"24px\" />\n        <Flex alignItems=\"start\" justifyContent=\"space-between\" mb=\"8px\">\n          <Text>{t('Collecting')}</Text>\n          <Box style={{ textAlign: 'right' }}>\n            <Text>{`${formatNumber(total, 0, 4)} BNB`}</Text>\n            <Text fontSize=\"12px\" color=\"textSubtle\">\n              {`~$${totalBnb.toFixed(2)}`}\n            </Text>\n          </Box>\n        </Flex>\n        <Flex alignItems=\"start\" justifyContent=\"center\" mb=\"24px\">\n          {isLoadingHistory ? (\n            <Skeleton height=\"21\" width=\"140px\" />\n          ) : (\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {epochs.length === 1\n                ? t('From round %round%', { round: epochs[0] })\n                : t('From rounds %rounds%', { rounds: epochs.join(', ') })}\n            </Text>\n          )}\n        </Flex>\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={handleClick}\n          isLoading={isPendingTx || isLoadingHistory}\n          endIcon={isPendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        >\n          {t('Confirm')}\n        </Button>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default CollectRoundWinningsModal\n","import React from 'react'\nimport { Button, ButtonProps, useModal } from '@pancakeswap/uikit'\nimport CollectRoundWinningsModal from './CollectRoundWinningsModal'\n\ninterface CollectWinningsButtonProps extends ButtonProps {\n  hasClaimed: boolean\n  onSuccess?: () => Promise<void>\n}\n\nconst CollectWinningsButton: React.FC<CollectWinningsButtonProps> = ({ hasClaimed, onSuccess, children, ...props }) => {\n  const [onPresentCollectWinningsModal] = useModal(<CollectRoundWinningsModal onSuccess={onSuccess} />, false)\n\n  return (\n    <Button onClick={onPresentCollectWinningsModal} disabled={hasClaimed} {...props}>\n      {children}\n    </Button>\n  )\n}\n\nexport default CollectWinningsButton\n","import React, { ReactNode, useState } from 'react'\nimport { AutoRenewIcon, Button, ButtonProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePredictionsContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\ninterface ReclaimPositionButtonProps extends ButtonProps {\n  epoch: number\n  onSuccess?: () => Promise<void>\n  children?: ReactNode\n}\n\nconst ReclaimPositionButton: React.FC<ReclaimPositionButtonProps> = ({ epoch, onSuccess, children, ...props }) => {\n  const [isPendingTx, setIsPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const predictionsContract = usePredictionsContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleReclaim = async () => {\n    const tx = await callWithGasPrice(predictionsContract, 'claim', [[epoch]])\n    toastSuccess(`${t('Transaction Submitted')}!`, <ToastDescriptionWithTx txHash={tx.hash} />)\n    setIsPendingTx(true)\n\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      if (onSuccess) {\n        await onSuccess()\n      }\n      setIsPendingTx(false)\n      toastSuccess(t('Position reclaimed!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n    } else {\n      setIsPendingTx(false)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }\n\n  return (\n    <Button\n      onClick={handleReclaim}\n      isLoading={isPendingTx}\n      endIcon={isPendingTx ? <AutoRenewIcon spin color=\"white\" /> : null}\n      {...props}\n    >\n      {children || t('Reclaim Position')}\n    </Button>\n  )\n}\n\nexport default ReclaimPositionButton\n","import { BigNumber, ethers } from 'ethers'\nimport { BetPosition, NodeRound } from 'state/types'\nimport { formatBigNumberToFixed } from 'utils/formatBalance'\nimport getTimePeriods from 'utils/getTimePeriods'\n\nconst MIN_PRICE_USD_DISPLAYED = BigNumber.from(100000)\nconst MIN_PRICE_BNB_DISPLAYED = BigNumber.from('1000000000000000')\nconst DISPLAYED_DECIMALS = 3\n\ntype formatPriceDifferenceProps = {\n  price?: BigNumber\n  minPriceDisplayed: BigNumber\n  unitPrefix: string\n  decimals: number\n}\n\nconst formatPriceDifference = ({\n  price = BigNumber.from(0),\n  minPriceDisplayed,\n  unitPrefix,\n  decimals,\n}: formatPriceDifferenceProps) => {\n  const sign = price.isNegative() ? BigNumber.from(-1) : BigNumber.from(1)\n\n  if (price.abs().lt(minPriceDisplayed)) {\n    const signedPriceToFormat = minPriceDisplayed.mul(sign)\n    return `<${unitPrefix}${formatBigNumberToFixed(signedPriceToFormat, DISPLAYED_DECIMALS, decimals)}`\n  }\n\n  return `${unitPrefix}${formatBigNumberToFixed(price, DISPLAYED_DECIMALS, decimals)}`\n}\n\nexport const formatUsdv2 = (usd: BigNumber) => {\n  return formatPriceDifference({ price: usd, minPriceDisplayed: MIN_PRICE_USD_DISPLAYED, unitPrefix: '$', decimals: 8 })\n}\n\nexport const formatBnbv2 = (bnb: BigNumber) => {\n  return formatPriceDifference({ price: bnb, minPriceDisplayed: MIN_PRICE_BNB_DISPLAYED, unitPrefix: '', decimals: 18 })\n}\n\nexport const padTime = (num: number) => num.toString().padStart(2, '0')\n\nexport const formatRoundTime = (secondsBetweenBlocks: number) => {\n  const { hours, minutes, seconds } = getTimePeriods(secondsBetweenBlocks)\n  const minutesSeconds = `${padTime(minutes)}:${padTime(seconds)}`\n\n  if (hours > 0) {\n    return `${padTime(hours)}:${minutesSeconds}`\n  }\n\n  return minutesSeconds\n}\n\nexport const getHasRoundFailed = (round: NodeRound, buffer: number) => {\n  const closeTimestampMs = (round.closeTimestamp + buffer) * 1000\n  const now = Date.now()\n\n  if (closeTimestampMs !== null && now > closeTimestampMs && !round.oracleCalled) {\n    return true\n  }\n\n  return false\n}\n\nexport const getMultiplierV2 = (total: ethers.BigNumber, amount: ethers.BigNumber) => {\n  if (!total) {\n    return ethers.FixedNumber.from(0)\n  }\n\n  if (total.eq(0) || amount.eq(0)) {\n    return ethers.FixedNumber.from(0)\n  }\n\n  const rewardAmountFixed = ethers.FixedNumber.from(total)\n  const multiplierAmountFixed = ethers.FixedNumber.from(amount)\n\n  return rewardAmountFixed.divUnsafe(multiplierAmountFixed)\n}\n\nexport const getPriceDifference = (price: ethers.BigNumber, lockPrice: ethers.BigNumber) => {\n  if (!price || !lockPrice) {\n    return ethers.BigNumber.from(0)\n  }\n\n  return price.sub(lockPrice)\n}\n\nexport const getRoundPosition = (lockPrice: ethers.BigNumber, closePrice: ethers.BigNumber) => {\n  if (!closePrice) {\n    return null\n  }\n\n  if (closePrice.eq(lockPrice)) {\n    return BetPosition.HOUSE\n  }\n\n  return closePrice.gt(lockPrice) ? BetPosition.BULL : BetPosition.BEAR\n}\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport {\n  ArrowUpIcon,\n  ArrowDownIcon,\n  Flex,\n  FlexProps,\n  Text,\n  useTooltip,\n  TooltipText,\n  InfoIcon,\n} from '@pancakeswap/uikit'\nimport { BetPosition } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface TagProps extends FlexProps {\n  bg?: string\n  startIcon?: ReactNode\n}\n\nconst StyledTag = styled(Flex)<{ bg: TagProps['bg'] }>`\n  background-color: ${({ bg, theme }) => theme.colors[bg]};\n  display: inline-flex;\n`\n\nexport const Tag: React.FC<TagProps> = ({ bg = 'success', startIcon, children, onClick, ...props }) => {\n  const icon = startIcon || <ArrowUpIcon color=\"white\" />\n\n  return (\n    <StyledTag\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      borderRadius=\"4px\"\n      bg={bg}\n      py=\"4px\"\n      px=\"8px\"\n      onClick={onClick}\n      style={{ cursor: onClick ? 'pointer' : 'normal' }}\n      {...props}\n    >\n      {icon}\n      <Text textTransform=\"uppercase\" color=\"white\" ml=\"4px\">\n        {children}\n      </Text>\n    </StyledTag>\n  )\n}\n\ninterface PositionTagProps extends FlexProps {\n  betPosition: BetPosition\n}\n\nconst PositionTag: React.FC<PositionTagProps> = ({ betPosition, children, ...props }) => {\n  const { t } = useTranslation()\n  const isUpPosition = betPosition === BetPosition.BULL\n  const icon = isUpPosition ? <ArrowUpIcon color=\"white\" /> : <ArrowDownIcon color=\"white\" />\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Neither side wins this round')}\n      </Text>\n      <Text>\n        {t(\n          'The Locked Price & Closed Price are exactly the same (within 8 decimals), so neither side wins. All funds entered into UP and DOWN positions will go to the weekly CAKE burn.',\n        )}\n      </Text>\n    </>,\n    { placement: 'right' },\n  )\n\n  if (betPosition === BetPosition.HOUSE) {\n    return (\n      <>\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} color=\"secondary\" fontWeight=\"300\" textTransform=\"uppercase\">\n          <Flex alignItems=\"center\">\n            {t('To Burn')}\n            <InfoIcon width=\"16px\" ml=\"4px\" color=\"secondary\" />\n          </Flex>\n        </TooltipText>\n      </>\n    )\n  }\n\n  return (\n    <Tag bg={isUpPosition ? 'success' : 'failure'} startIcon={icon} {...props}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default PositionTag\n","import React from 'react'\nimport styled, { DefaultTheme } from 'styled-components'\nimport { ethers } from 'ethers'\nimport { Box, Flex, FlexProps, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BetPosition, NodeRound, Round } from 'state/types'\nimport { formatUsdv2, formatBnbv2, getRoundPosition, getPriceDifference } from '../../helpers'\nimport { formatBnb, formatUsd } from '../History/helpers'\nimport PositionTag from '../PositionTag'\n\n// PrizePoolRow\ninterface PrizePoolRowProps extends FlexProps {\n  totalAmount: NodeRound['totalAmount']\n}\n\nconst getPrizePoolAmount = (totalAmount: PrizePoolRowProps['totalAmount']) => {\n  if (!totalAmount) {\n    return '0'\n  }\n\n  return formatBnbv2(totalAmount)\n}\n\nconst Row = ({ children, ...props }) => {\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {children}\n    </Flex>\n  )\n}\n\nexport const PrizePoolRow: React.FC<PrizePoolRowProps> = ({ totalAmount, ...props }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Row {...props}>\n      <Text bold>{t('Prize Pool')}:</Text>\n      <Text bold>{`${getPrizePoolAmount(totalAmount)} BNB`}</Text>\n    </Row>\n  )\n}\n\n// Payout Row\ninterface PayoutRowProps extends FlexProps {\n  positionLabel: string\n  multiplier: number\n  amount: number\n}\n\nexport const PayoutRow: React.FC<PayoutRowProps> = ({ positionLabel, multiplier, amount, ...props }) => {\n  const { t } = useTranslation()\n  const formattedMultiplier = `${multiplier.toLocaleString(undefined, { maximumFractionDigits: 2 })}x`\n\n  return (\n    <Row height=\"18px\" {...props}>\n      <Text fontSize=\"12px\" textTransform=\"uppercase\">\n        {positionLabel}:\n      </Text>\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"12px\" lineHeight=\"18px\" bold>\n          {t('%multiplier% Payout', { multiplier: formattedMultiplier })}\n        </Text>\n        <Text mx=\"4px\">|</Text>\n        <Text fontSize=\"12px\" lineHeight=\"18px\">{`${formatBnb(amount)} BNB`}</Text>\n      </Flex>\n    </Row>\n  )\n}\n\ninterface LockPriceRowProps extends FlexProps {\n  lockPrice: NodeRound['lockPrice']\n}\n\nexport const LockPriceRow: React.FC<LockPriceRowProps> = ({ lockPrice, ...props }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Row {...props}>\n      <Text fontSize=\"14px\">{t('Locked Price')}:</Text>\n      <Text fontSize=\"14px\">{formatUsdv2(lockPrice)}</Text>\n    </Row>\n  )\n}\n\n// RoundResultBox\ninterface RoundResultBoxProps {\n  betPosition?: BetPosition\n  isNext?: boolean\n  isLive?: boolean\n  hasEntered?: boolean\n}\n\nconst getBackgroundColor = ({\n  theme,\n  betPosition,\n  isNext,\n  isLive,\n  hasEntered,\n}: RoundResultBoxProps & { theme: DefaultTheme }) => {\n  if (isNext) {\n    return 'linear-gradient(180deg, #53DEE9 0%, #7645D9 100%)'\n  }\n\n  if (hasEntered || isLive) {\n    return theme.colors.secondary\n  }\n\n  switch (betPosition) {\n    case BetPosition.BULL:\n      return theme.colors.success\n    case BetPosition.BEAR:\n      return theme.colors.failure\n    case BetPosition.HOUSE:\n      return theme.colors.textDisabled\n    default:\n      return theme.colors.cardBorder\n  }\n}\n\nconst Background = styled(Box)<RoundResultBoxProps>`\n  background: ${getBackgroundColor};\n  border-radius: 16px;\n  padding: 2px;\n`\n\nconst StyledRoundResultBox = styled.div`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 14px;\n  padding: 16px;\n`\n\nexport const RoundResultBox: React.FC<RoundResultBoxProps> = ({\n  isNext = false,\n  hasEntered = false,\n  isLive = false,\n  children,\n  ...props\n}) => {\n  return (\n    <Background isNext={isNext} hasEntered={hasEntered} isLive={isLive} {...props}>\n      <StyledRoundResultBox>{children}</StyledRoundResultBox>\n    </Background>\n  )\n}\n\ninterface RoundPriceProps {\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n}\n\nexport const RoundPrice: React.FC<RoundPriceProps> = ({ lockPrice, closePrice }) => {\n  const betPosition = getRoundPosition(lockPrice, closePrice)\n  const priceDifference = getPriceDifference(closePrice, lockPrice)\n\n  const getTextColor = () => {\n    switch (betPosition) {\n      case BetPosition.BULL:\n        return 'success'\n      case BetPosition.BEAR:\n        return 'failure'\n      case BetPosition.HOUSE:\n      default:\n        return 'textDisabled'\n    }\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\n      {closePrice ? (\n        <Text color={getTextColor()} bold fontSize=\"24px\">\n          {formatUsdv2(closePrice)}\n        </Text>\n      ) : (\n        <Skeleton height=\"34px\" my=\"1px\" />\n      )}\n      <PositionTag betPosition={betPosition}>{formatUsdv2(priceDifference)}</PositionTag>\n    </Flex>\n  )\n}\n\n/**\n * TODO: Remove\n *\n * This is a temporary function until we consolidate the data coming from the graph versus the node\n */\ninterface PrizePoolHistoryRowProps extends FlexProps {\n  totalAmount: number\n}\n\nconst getPrizePoolAmountHistory = (totalAmount: PrizePoolHistoryRowProps['totalAmount']) => {\n  if (!totalAmount) {\n    return '0'\n  }\n\n  return formatBnb(totalAmount)\n}\n\nexport const PrizePoolHistoryRow: React.FC<PrizePoolHistoryRowProps> = ({ totalAmount, ...props }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Row {...props}>\n      <Text bold>{t('Prize Pool')}:</Text>\n      <Text bold>{`${getPrizePoolAmountHistory(totalAmount)} BNB`}</Text>\n    </Row>\n  )\n}\n\ninterface LockPriceHistoryRowProps extends FlexProps {\n  lockPrice: Round['lockPrice']\n}\n\nexport const LockPriceHistoryRow: React.FC<LockPriceHistoryRowProps> = ({ lockPrice, ...props }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Row {...props}>\n      <Text fontSize=\"14px\">{t('Locked Price')}:</Text>\n      <Text fontSize=\"14px\">{formatUsd(lockPrice)}</Text>\n    </Row>\n  )\n}\n/**\n * END TEMPORARY COMPONENTS\n */\n","import React from 'react'\nimport { BoxProps, Flex, Text } from '@pancakeswap/uikit'\nimport { BetPosition, Round } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatUsd } from '../History/helpers'\nimport PositionTag from '../PositionTag'\nimport { LockPriceHistoryRow, PrizePoolHistoryRow, RoundResultBox } from './styles'\n\ninterface RoundResultProps extends BoxProps {\n  round: Round\n}\n\nconst RoundResult: React.FC<RoundResultProps> = ({ round, children, ...props }) => {\n  const { lockPrice, closePrice, totalAmount } = round\n  const betPosition = closePrice > lockPrice ? BetPosition.BULL : BetPosition.BEAR\n  const isPositionUp = betPosition === BetPosition.BULL\n  const { t } = useTranslation()\n  const priceDifference = closePrice - lockPrice\n\n  return (\n    <RoundResultBox betPosition={betPosition} {...props}>\n      <Text color=\"textSubtle\" fontSize=\"12px\" bold textTransform=\"uppercase\" mb=\"8px\">\n        {t('Closed Price')}\n      </Text>\n      {round.failed ? (\n        <Text bold textTransform=\"uppercase\" color=\"textDisabled\" mb=\"16px\" fontSize=\"24px\">\n          {t('Canceled')}\n        </Text>\n      ) : (\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\n          <Text color={isPositionUp ? 'success' : 'failure'} bold fontSize=\"24px\">\n            {formatUsd(closePrice)}\n          </Text>\n          <PositionTag betPosition={betPosition}>{formatUsd(priceDifference)}</PositionTag>\n        </Flex>\n      )}\n      {lockPrice && <LockPriceHistoryRow lockPrice={lockPrice} />}\n      <PrizePoolHistoryRow totalAmount={totalAmount} />\n      {children}\n    </RoundResultBox>\n  )\n}\n\nexport default RoundResult\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { getPredictionsContract } from 'utils/contractHelpers'\n\nconst useIsRefundable = (epoch: number) => {\n  const [isRefundable, setIsRefundable] = useState(false)\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const fetchRefundableStatus = async () => {\n      const predictionsContract = getPredictionsContract()\n      const refundable = await predictionsContract.refundable(epoch, account)\n\n      if (refundable) {\n        // Double check they have not already claimed\n        const ledger = await predictionsContract.ledger(epoch, account)\n        setIsRefundable(ledger.claimed === false)\n      } else {\n        setIsRefundable(false)\n      }\n    }\n\n    if (account) {\n      fetchRefundableStatus()\n    }\n  }, [account, epoch, setIsRefundable])\n\n  return { isRefundable, setIsRefundable }\n}\n\nexport default useIsRefundable\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Box, Flex, Heading, Text, PrizeIcon, BlockIcon, LinkExternal, useTooltip, InfoIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\nimport { REWARD_RATE } from 'state/predictions/config'\nimport { Bet, BetPosition } from 'state/types'\nimport { fetchLedgerData, markAsCollected } from 'state/predictions'\nimport { Result } from 'state/predictions/helpers'\nimport { useGetIsClaimable } from 'state/predictions/hooks'\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\nimport { getBscScanLink } from 'utils'\nimport { multiplyPriceByAmount } from 'utils/prices'\nimport useIsRefundable from '../../hooks/useIsRefundable'\nimport { formatBnb, getNetPayout } from './helpers'\nimport CollectWinningsButton from '../CollectWinningsButton'\nimport PositionTag from '../PositionTag'\nimport ReclaimPositionButton from '../ReclaimPositionButton'\n\ninterface BetResultProps {\n  bet: Bet\n  result: Result\n}\n\nconst StyledBetResult = styled(Box)`\n  border: 2px solid ${({ theme }) => theme.colors.textDisabled};\n  border-radius: 16px;\n  margin-bottom: 24px;\n  padding: 16px;\n`\n\nconst Divider = styled.hr`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst BetResult: React.FC<BetResultProps> = ({ bet, result }) => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const { isRefundable } = useIsRefundable(bet.round.epoch)\n  const canClaim = useGetIsClaimable(bet.round.epoch)\n  const bnbBusdPrice = useBNBBusdPrice()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <Text as=\"p\">{t('Includes your original position and your winnings, minus the %fee% fee.', { fee: '3%' })}</Text>,\n    { placement: 'auto' },\n  )\n\n  const isWinner = result === Result.WIN\n\n  // Winners get the payout, otherwise the claim what they put it if it was canceled\n  const payout = isWinner ? getNetPayout(bet, REWARD_RATE) : bet.amount\n  const totalPayout = multiplyPriceByAmount(bnbBusdPrice, payout)\n  const returned = payout + bet.amount\n\n  const getHeaderColor = () => {\n    switch (result) {\n      case Result.WIN:\n        return 'warning'\n      case Result.LOSE:\n        return 'textSubtle'\n      case Result.CANCELED:\n        return 'textDisabled'\n      case Result.HOUSE:\n        return 'textDisabled'\n      default:\n        return 'text'\n    }\n  }\n\n  const getHeaderText = () => {\n    switch (result) {\n      case Result.WIN:\n        return t('Win')\n      case Result.LOSE:\n        return t('Lose')\n      case Result.CANCELED:\n        return t('Canceled')\n      case Result.HOUSE:\n        return t('To Burn')\n      default:\n        return ''\n    }\n  }\n\n  const getHeaderIcon = () => {\n    switch (result) {\n      case Result.WIN:\n        return <PrizeIcon color={getHeaderColor()} />\n      case Result.LOSE:\n      case Result.CANCELED:\n        return <BlockIcon color={getHeaderColor()} />\n      default:\n        return null\n    }\n  }\n\n  const getResultColor = () => {\n    switch (result) {\n      case Result.WIN:\n        return 'success'\n      case Result.LOSE:\n        return 'failure'\n      case Result.CANCELED:\n      case Result.HOUSE:\n      default:\n        return 'text'\n    }\n  }\n\n  const handleSuccess = async () => {\n    // We have to mark the bet as claimed immediately because it does not update fast enough\n    dispatch(markAsCollected({ [bet.round.epoch]: true }))\n    dispatch(fetchLedgerData({ account, epochs: [bet.round.epoch] }))\n  }\n\n  return (\n    <>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Heading>{t('Your History')}</Heading>\n        <Flex alignItems=\"center\">\n          <Heading as=\"h3\" color={getHeaderColor()} textTransform=\"uppercase\" bold mr=\"4px\">\n            {getHeaderText()}\n          </Heading>\n          {getHeaderIcon()}\n        </Flex>\n      </Flex>\n      <StyledBetResult>\n        {result === Result.WIN && !canClaim && (\n          <CollectWinningsButton hasClaimed={!canClaim} width=\"100%\" mb=\"16px\" onSuccess={handleSuccess}>\n            {bet.claimed ? t('Already Collected') : t('Collect Winnings')}\n          </CollectWinningsButton>\n        )}\n        {bet.claimed && bet.claimedHash && (\n          <Flex justifyContent=\"center\">\n            <LinkExternal href={getBscScanLink(bet.claimedHash, 'transaction')} mb=\"16px\">\n                {t('View on Pulse chain')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {result === Result.CANCELED && isRefundable && (\n          <ReclaimPositionButton epoch={bet.round.epoch} width=\"100%\" mb=\"16px\" />\n        )}\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\n          <Text>{t('Your direction')}:</Text>\n          <PositionTag betPosition={bet.position}>\n            {bet.position === BetPosition.BULL ? t('Up') : t('Down')}\n          </PositionTag>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\n          <Text>{t('Your position')}</Text>\n          <Text>{`${formatBnb(bet.amount)} BNB`}</Text>\n        </Flex>\n        <Flex alignItems=\"start\" justifyContent=\"space-between\">\n          <Text bold>{isWinner ? t('Your winnings') : t('Your Result')}:</Text>\n          <Box style={{ textAlign: 'right' }}>\n            <Text bold color={getResultColor()}>{`${isWinner ? '+' : '-'}${formatBnb(payout)} BNB`}</Text>\n            <Text fontSize=\"12px\" color=\"textSubtle\">\n              {`~$${totalPayout.toFixed(2)}`}\n            </Text>\n          </Box>\n        </Flex>\n        {isWinner && (\n          <>\n            <Divider />\n            <Flex alignItems=\"start\" justifyContent=\"space-between\">\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {t('Amount to collect')}:\n              </Text>\n              <Flex justifyContent=\"end\">\n                <Text fontSize=\"14px\" color=\"textSubtle\">{`${formatBnb(returned)} BNB`}</Text>\n                <span ref={targetRef}>\n                  <InfoIcon color=\"textSubtle\" ml=\"4px\" />\n                </span>\n              </Flex>\n              {tooltipVisible && tooltip}\n            </Flex>\n          </>\n        )}\n      </StyledBetResult>\n    </>\n  )\n}\n\nexport default BetResult\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Bet } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { Flex, Text, Link, Heading } from '@pancakeswap/uikit'\nimport { Result } from 'state/predictions/helpers'\nimport { PayoutRow, RoundResultHistory } from '../RoundResult'\nimport BetResult from './BetResult'\nimport { getMultiplier } from './helpers'\n\ninterface BetDetailsProps {\n  bet: Bet\n  result: Result\n}\n\nconst StyledBetDetails = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 24px;\n`\n\nconst BetDetails: React.FC<BetDetailsProps> = ({ bet, result }) => {\n  const { t } = useTranslation()\n  const { totalAmount, bullAmount, bearAmount } = bet.round\n  const bullMultiplier = getMultiplier(totalAmount, bullAmount)\n  const bearMultiplier = getMultiplier(totalAmount, bearAmount)\n\n  return (\n    <StyledBetDetails>\n      {result === Result.CANCELED && (\n        <Text as=\"p\" color=\"failure\" mb=\"24px\">\n          {t(\n            'This round was automatically canceled due to an error. If you entered a position, please reclaim your funds below.',\n          )}\n        </Text>\n      )}\n      {result !== Result.LIVE && <BetResult bet={bet} result={result} />}\n      <Heading mb=\"8px\">{t('Round History')}</Heading>\n      <RoundResultHistory round={bet.round} mb=\"24px\">\n        <PayoutRow positionLabel={t('Up')} multiplier={bullMultiplier} amount={bullAmount} />\n        <PayoutRow positionLabel={t('Down')} multiplier={bearMultiplier} amount={bearAmount} />\n      </RoundResultHistory>\n      {bet.round.lockBlock && (\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n          <Text>{t('Opening Block')}</Text>\n          <Link href={getBscScanLink(bet.round.lockBlock, 'block')} external>\n            {bet.round.lockBlock}\n          </Link>\n        </Flex>\n      )}\n      {bet.round.closeBlock && (\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Text>{t('Closing Block')}</Text>\n          <Link href={getBscScanLink(bet.round.closeBlock, 'block')} external>\n            {bet.round.closeBlock}\n          </Link>\n        </Flex>\n      )}\n    </StyledBetDetails>\n  )\n}\n\nexport default BetDetails\n","import React, { useState } from 'react'\nimport {\n  Box,\n  ChevronDownIcon,\n  ChevronUpIcon,\n  Flex,\n  IconButton,\n  InfoIcon,\n  PlayCircleOutlineIcon,\n  Text,\n  useTooltip,\n  WaitIcon,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { useAppDispatch } from 'state'\nimport { Bet, PredictionStatus } from 'state/types'\nimport { REWARD_RATE } from 'state/predictions/config'\nimport { useGetCurrentEpoch, useGetIsClaimable, useGetPredictionsStatus } from 'state/predictions/hooks'\nimport { fetchLedgerData, markAsCollected } from 'state/predictions'\nimport { getRoundResult, Result } from 'state/predictions/helpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatBnb, getNetPayout } from './helpers'\nimport CollectWinningsButton from '../CollectWinningsButton'\nimport ReclaimPositionButton from '../ReclaimPositionButton'\nimport BetDetails from './BetDetails'\n\ninterface BetProps {\n  bet: Bet\n}\n\nconst StyledBet = styled(Flex).attrs({ alignItems: 'center', p: '16px' })`\n  background-color: ${({ theme }) => theme.card.background};\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\n  cursor: pointer;\n`\n\nconst YourResult = styled(Box)`\n  flex: 1;\n`\n\nconst HistoricalBet: React.FC<BetProps> = ({ bet }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const { amount, round } = bet\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Neither side wins this round')}\n      </Text>\n      <Text>\n        {t(\n          'The Locked Price & Closed Price are exactly the same (within 8 decimals), so neither side wins. All funds entered into UP and DOWN positions will go to the weekly CAKE burn.',\n        )}\n      </Text>\n    </>,\n    { placement: 'right' },\n  )\n\n  const currentEpoch = useGetCurrentEpoch()\n  const status = useGetPredictionsStatus()\n  const canClaim = useGetIsClaimable(bet.round.epoch)\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  const toggleOpen = () => setIsOpen(!isOpen)\n\n  const getRoundColor = (result) => {\n    switch (result) {\n      case Result.WIN:\n        return 'success'\n      case Result.LOSE:\n        return 'failure'\n      case Result.CANCELED:\n        return 'textDisabled'\n      case Result.HOUSE:\n        return 'textDisabled'\n      default:\n        return 'text'\n    }\n  }\n\n  const getRoundPrefix = (result) => {\n    if (result === Result.LOSE) {\n      return '-'\n    }\n\n    if (result === Result.WIN) {\n      return '+'\n    }\n\n    return ''\n  }\n\n  const roundResult = getRoundResult(bet, currentEpoch)\n  const resultTextColor = getRoundColor(roundResult)\n  const resultTextPrefix = getRoundPrefix(roundResult)\n  const isOpenRound = round.epoch === currentEpoch\n  const isLiveRound = status === PredictionStatus.LIVE && round.epoch === currentEpoch - 1\n\n  // Winners get the payout, otherwise the claim what they put it if it was canceled\n  const payout = roundResult === Result.WIN ? getNetPayout(bet, REWARD_RATE) : amount\n\n  const renderBetLabel = () => {\n    if (isOpenRound) {\n      return (\n        <Flex alignItems=\"center\">\n          <WaitIcon color=\"primary\" mr=\"6px\" width=\"24px\" />\n          <Text color=\"primary\" bold>\n            {t('Starting Soon')}\n          </Text>\n        </Flex>\n      )\n    }\n\n    if (isLiveRound) {\n      return (\n        <Flex alignItems=\"center\">\n          <PlayCircleOutlineIcon color=\"secondary\" mr=\"6px\" width=\"24px\" />\n          <Text color=\"secondary\" bold>\n            {t('Live Now')}\n          </Text>\n        </Flex>\n      )\n    }\n\n    return (\n      <>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {t('Your Result')}\n        </Text>\n        <Text bold color={resultTextColor} lineHeight={1}>\n          {roundResult === Result.CANCELED ? (\n            t('Canceled')\n          ) : roundResult === Result.HOUSE ? (\n            <>\n              {tooltipVisible && tooltip}\n              <Flex alignItems=\"center\" ref={targetRef}>\n                {t('To Burn')}\n                <InfoIcon width=\"16px\" ml=\"4px\" color=\"secondary\" />\n              </Flex>\n            </>\n          ) : (\n            `${resultTextPrefix}${formatBnb(payout)}`\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  const handleSuccess = async () => {\n    // We have to mark the bet as claimed immediately because it does not update fast enough\n    dispatch(markAsCollected({ [bet.round.epoch]: true }))\n    dispatch(fetchLedgerData({ account, epochs: [bet.round.epoch] }))\n  }\n\n  return (\n    <>\n      <StyledBet onClick={toggleOpen} role=\"button\">\n        <Box width=\"48px\">\n          <Text textAlign=\"center\">\n            <Text fontSize=\"12px\" color=\"textSubtle\">\n              {t('Round')}\n            </Text>\n            <Text bold lineHeight={1}>\n              {round.epoch.toLocaleString()}\n            </Text>\n          </Text>\n        </Box>\n        <YourResult px=\"24px\">{renderBetLabel()}</YourResult>\n        {roundResult === Result.WIN && canClaim && (\n          <CollectWinningsButton hasClaimed={!canClaim} onSuccess={handleSuccess} scale=\"sm\" mr=\"8px\">\n            {t('Collect')}\n          </CollectWinningsButton>\n        )}\n        {roundResult === Result.CANCELED && canClaim && (\n          <ReclaimPositionButton epoch={bet.round.epoch} scale=\"sm\" mr=\"8px\">\n            {t('Reclaim')}\n          </ReclaimPositionButton>\n        )}\n        {!isOpenRound && !isLiveRound && (\n          <IconButton variant=\"text\" scale=\"sm\">\n            {isOpen ? <ChevronUpIcon /> : <ChevronDownIcon />}\n          </IconButton>\n        )}\n      </StyledBet>\n      {isOpen && <BetDetails bet={bet} result={getRoundResult(bet, currentEpoch)} />}\n    </>\n  )\n}\n\nexport default HistoricalBet\n","import request, { gql } from 'graphql-request'\nimport flatten from 'lodash/flatten'\nimport { GRAPH_API_PREDICTION_V1 } from 'config/constants/endpoints'\n\nexport const getV1History = async (skip = 0, where = {}): Promise<Record<string, any>[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION_V1,\n    gql`\n      query getV1BetHistory($skip: Int!, $where: Bet_filter) {\n        bets(first: 1000, skip: $skip, where: $where, orderBy: createdAt, orderDirection: desc) {\n          hash\n          amount\n          position\n          claimed\n          claimedAmount\n          claimedHash\n          round {\n            epoch\n            position\n            failed\n            totalAmount\n            lockPrice\n            closePrice\n            totalBets\n            totalAmount\n          }\n        }\n      }\n    `,\n    { skip, where },\n  )\n  return response.bets\n}\n\nexport const getAllV1History = (where = {}): Promise<Record<string, any>[]> => {\n  return new Promise((resolve, reject) => {\n    const bets = {}\n\n    const getHistoryChunk = async (skip: number) => {\n      try {\n        const betHistory = await getV1History(skip, where)\n        bets[skip] = betHistory\n\n        if (betHistory.length === 0) {\n          resolve(flatten(Object.values(bets)))\n        } else {\n          getHistoryChunk(skip + 1000)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    getHistoryChunk(0)\n  })\n}\n","import React, { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport {\n  ModalContainer,\n  ModalBody,\n  ModalTitle,\n  ModalHeader,\n  InjectedModalProps,\n  Text,\n  Heading,\n  ModalCloseButton,\n  Button,\n  AutoRenewIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAllV1History } from './helpers'\n\nconst Modal = styled(ModalContainer)`\n  overflow: visible;\n`\n\nconst BunnyDecoration = styled.div`\n  position: absolute;\n  top: -152px;\n  left: 0px;\n  text-align: center;\n  width: 100%;\n`\n\nconst CollectRoundWinningsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [isFetching, setIsFetching] = useState(false)\n  const [history, setHistory] = useState([])\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const handleClick = () => {\n    const header = [\n      'Round',\n      'Result',\n      'Your Position',\n      'Bet Amount',\n      'Transaction',\n      'Claimed Transaction',\n      'Lock Price',\n      'Close Price',\n      'Total Bets',\n      'Total Amount',\n      'Round Failed',\n    ].join(',')\n\n    const rows = history.reduce((accum, bet) => {\n      return [\n        ...accum,\n        [\n          bet.round.epoch,\n          bet.round.position,\n          bet.position,\n          bet.amount,\n          bet.hash,\n          bet.claimedHash || '',\n          bet.round.lockPrice,\n          bet.round.closePrice,\n          bet.round.totalBets,\n          bet.round.totalAmount,\n          bet.round.failed,\n        ].join(','),\n      ]\n    }, [])\n\n    const anchor = document.createElement('a')\n    const blob = new Blob([`${header}\\n${rows.join('\\n')}`], {\n      type: 'text/csv;charset=utf-8;',\n    })\n\n    anchor.href = URL.createObjectURL(blob)\n    anchor.target = '_blank'\n    anchor.download = 'pancakeswap-prediction-v1-history.csv'\n\n    document.body.appendChild(anchor)\n    anchor.click()\n    document.body.removeChild(anchor)\n  }\n\n  useEffect(() => {\n    const fetchAllHistory = async () => {\n      setIsFetching(true)\n\n      try {\n        const response = await getAllV1History({ user: account.toLowerCase() })\n        setHistory(response)\n      } catch (error) {\n        console.error('Unable to fetch history', error)\n      } finally {\n        setIsFetching(false)\n      }\n    }\n\n    if (account) {\n      fetchAllHistory()\n    }\n  }, [account, setHistory, setIsFetching])\n\n  return (\n    <Modal minWidth=\"288px\" position=\"relative\" mt=\"124px\">\n      <ModalHeader>\n        <BunnyDecoration>\n          <img src=\"/images/decorations/modal-bg.png\" alt=\"Gladiator\" width=\"168px\" />\n        </BunnyDecoration>\n        <ModalTitle>\n          <Heading>{t('Nothing to Collect')}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <Text as=\"p\" fontSize=\"14px\">\n          {t('You have no unclaimed v0.1 prizes.')}\n        </Text>\n        <Text as=\"p\" fontSize=\"14px\" mb=\"24px\">\n          {t('Download your v0.1 Prediction history below.')}\n        </Text>\n        <Button\n          onClick={handleClick}\n          isLoading={isFetching}\n          endIcon={isFetching ? <AutoRenewIcon spin width=\"24px\" color=\"white\" /> : null}\n        >\n          {t('Download .CSV')}\n        </Button>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default CollectRoundWinningsModal\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Box, Flex, Text, ChevronRightIcon, useModal } from '@pancakeswap/uikit'\nimport Loading from 'components/Loading'\nimport CollectRoundWinningsModal from '../CollectRoundWinningsModal'\nimport { getAllV1History } from './helpers'\nimport NothingToClaimModal from './NothingToClaimModal'\n\nconst StyledClaimCheck = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.card.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  cursor: pointer;\n  justify-content: space-between;\n  padding: 16px;\n`\n\nconst ClaimCheck = () => {\n  const [isFetching, setIsFetching] = useState(false)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const [onPresentCollectWinningsModal] = useModal(<CollectRoundWinningsModal />, false)\n\n  const [onPresentNothingToClaimModal] = useModal(<NothingToClaimModal />)\n\n  const handleClick = async () => {\n    try {\n      setIsFetching(true)\n      const betHistory = await getAllV1History({ user: account.toLowerCase(), claimed: false })\n\n      // Filter out bets that can be claimed\n      const unclaimedBets = betHistory.filter((bet) => {\n        return bet.round.position === bet.position || bet.round.failed === true\n      })\n\n      if (unclaimedBets.length > 0) {\n        onPresentCollectWinningsModal()\n      } else {\n        onPresentNothingToClaimModal()\n      }\n    } catch (error) {\n      console.error('Unable to check v1 history', error)\n    } finally {\n      setIsFetching(false)\n    }\n  }\n\n  return (\n    <StyledClaimCheck onClick={account ? handleClick : undefined}>\n      <Box style={{ flex: 1 }}>\n        <Text>{t('Showing history for Prediction v0.2')}</Text>\n        <Flex alignItems=\"center\">\n          <Text color=\"primary\">{t('Check for unclaimed v0.1 winnings')}</Text>\n          <ChevronRightIcon color=\"primary\" width=\"24px\" />\n        </Flex>\n      </Box>\n      {isFetching && (\n        <Box px=\"16px\">\n          <Loading />\n        </Box>\n      )}\n    </StyledClaimCheck>\n  )\n}\n\nexport default ClaimCheck\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { orderBy } from 'lodash'\nimport { Box, Button, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { Bet } from 'state/types'\nimport { fetchNodeHistory } from 'state/predictions'\nimport { useGetCurrentHistoryPage, useGetHasHistoryLoaded, useGetIsFetchingHistory } from 'state/predictions/hooks'\nimport HistoricalBet from './HistoricalBet'\nimport V1ClaimCheck from '../v1/V1ClaimCheck'\n\ninterface RoundsTabProps {\n  hasBetHistory: boolean\n  bets: Bet[]\n}\n\nconst RoundsTab: React.FC<RoundsTabProps> = ({ hasBetHistory, bets }) => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const hasHistoryLoaded = useGetHasHistoryLoaded()\n  const currentHistoryPage = useGetCurrentHistoryPage()\n  const isFetchingHistory = useGetIsFetchingHistory()\n\n  const handleClick = () => {\n    dispatch(fetchNodeHistory({ account, page: currentHistoryPage + 1 }))\n  }\n\n  return hasBetHistory ? (\n    <>\n      <V1ClaimCheck />\n      {orderBy(bets, ['round.epoch'], ['desc']).map((bet) => (\n        <HistoricalBet key={bet.round.epoch} bet={bet} />\n      ))}\n      {hasBetHistory && !hasHistoryLoaded && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" py=\"24px\">\n          <Button variant=\"secondary\" scale=\"sm\" onClick={handleClick} disabled={isFetchingHistory}>\n            {t('View More')}\n          </Button>\n        </Flex>\n      )}\n    </>\n  ) : (\n    <>\n      <V1ClaimCheck />\n      <Box p=\"24px\">\n        <Heading size=\"lg\" textAlign=\"center\" mb=\"8px\">\n          {t('No prediction history available')}\n        </Heading>\n        <Text as=\"p\" textAlign=\"center\">\n          {t(\n            'If you are sure you should see history here, make sure you’re connected to the correct wallet and try again.',\n          )}\n        </Text>\n      </Box>\n    </>\n  )\n}\n\nexport default RoundsTab\n","// @ts-nocheck\n/**\n * There is ts-nocheck at the top of this file for the following reasons:\n * 1. You can't ignore block in TS at the moment https://stackoverflow.com/questions/51145180/how-to-use-ts-ignore-for-a-block\n * 2. Interpolations in keyframes are indeed supported and work fine https://github.com/styled-components/styled-components/issues/2263\n * But TypeScript definitions are not updated to reflect that - https://github.com/DefinitelyTyped/DefinitelyTyped/issues/48907\n * 3. Since this error is in the middle of a template string there is no way to add @ts-ignore on just that one line\n * without also messing prettier.\n *\n * I'll leave TODO: comment here to check back later if there is update to types\n *\n */\nimport styled, { keyframes } from 'styled-components'\n\ninterface SliceProps {\n  length: number\n  offset?: number\n}\n\nexport const DrawAnimation = keyframes`\n  from {\n    stroke-dasharray: 0, 339.292\n  }\n  to {\n    stroke-dasharray: ${({ length }: SliceProps) => length} 339.292;\n  }\n`\n\nexport const OffsetAnimation = keyframes`\n  from {\n    stroke-dashoffset: 0\n  }\n  to {\n    stroke-dashoffset: ${(props) => -props.offset};\n  }\n`\n\nexport const SVG = styled.svg`\n  width: 128px;\n  height: 128px;\n  transform: rotate(-90deg);\n`\n\nconst DefaultSlice = styled.circle<SliceProps>`\n  fill: none;\n  stroke-width: 16;\n  stroke-dasharray: ${(props) => `${props.length} 339.292`};\n`\n\nexport const LostSlice = styled(DefaultSlice)`\n  stroke: #ed4b9e;\n  animation: ${DrawAnimation} 1s ease;\n`\n\nexport const WonSlice = styled(DefaultSlice)`\n  stroke: #31d0aa;\n  stroke-dashoffset: ${(props) => -props.offset};\n  animation: ${DrawAnimation} 1s ease, ${OffsetAnimation} 1s ease;\n`\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 128px;\n  height: 128px;\n`\n\nexport const Info = styled.div`\n  width: 128px;\n  height: 128px;\n  border-radius: 50%;\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 2;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\nimport { SVG, WonSlice, LostSlice, Wrapper, Info } from './PnlChartStyles'\n\n/**\n * Bare minimum chart that doesn't require any external dependencies\n * For details read here - https://www.smashingmagazine.com/2015/07/designing-simple-pie-charts-with-css/\n */\n\ninterface PnlChartProps {\n  won: number\n  lost: number\n}\n\n// 2 * Pi * R\nconst CIRCUMFERENCE = 339.292\n\nconst PnlChart: React.FC<PnlChartProps> = ({ lost, won }) => {\n  const { t } = useTranslation()\n  const percentageWon = ((won * 100) / (lost + won)).toFixed(2)\n  const paintLost = (lost / (won + lost)) * CIRCUMFERENCE\n  const paintWon = CIRCUMFERENCE - paintLost\n  return (\n    <Wrapper>\n      <SVG viewBox=\"0 0 128 128\">\n        <LostSlice r=\"54\" cx=\"64\" cy=\"64\" length={paintLost} />\n        <WonSlice r=\"54\" cx=\"64\" cy=\"64\" length={paintWon} offset={paintLost} />\n      </SVG>\n      <Info>\n        <Text small lineHeight=\"1\">\n          {t('Won')}\n        </Text>\n        <Text bold fontSize=\"20px\" lineHeight=\"1\">\n          {won}/{won + lost}\n        </Text>\n        <Text small lineHeight=\"1\" color=\"textSubtle\">\n          {percentageWon}%\n        </Text>\n      </Info>\n    </Wrapper>\n  )\n}\n\nexport default PnlChart\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { multiplyPriceByAmount } from 'utils/prices'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatBnb } from '../helpers'\n\ntype SummaryType = 'won' | 'lost' | 'entered'\n\ninterface SummaryRowProps {\n  type: SummaryType\n  summary: any\n  bnbBusdPrice: Price\n}\n\nconst summaryTypeColors = {\n  won: 'success',\n  lost: 'failure',\n  entered: 'text',\n}\n\nconst summaryTypeSigns = {\n  won: '+',\n  lost: '-',\n  entered: '',\n}\n\nconst SummaryRow: React.FC<SummaryRowProps> = ({ type, summary, bnbBusdPrice }) => {\n  const { t } = useTranslation()\n\n  const color = summaryTypeColors[type]\n  const { rounds, amount } = summary[type]\n  const totalRounds = summary.entered.rounds\n  const roundsInPercents = ((rounds * 100) / totalRounds).toFixed(2)\n  const typeTranslationKey = type.charAt(0).toUpperCase() + type.slice(1)\n  const displayAmount = type === 'won' ? summary[type].payout : amount\n  const amountInUsd = multiplyPriceByAmount(bnbBusdPrice, displayAmount)\n\n  return (\n    <>\n      <Text mt=\"16px\" bold color=\"textSubtle\">\n        {t(typeTranslationKey)}\n      </Text>\n      <Flex>\n        <Flex flex=\"2\" flexDirection=\"column\">\n          <Text bold fontSize=\"20px\" color={color}>\n            {rounds} {t('Rounds').toLocaleLowerCase()}\n          </Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {type === 'entered' ? t('Total').toLocaleLowerCase() : `${roundsInPercents}%`}\n          </Text>\n        </Flex>\n        <Flex flex=\"3\" flexDirection=\"column\">\n          <Text bold fontSize=\"20px\" color={color}>\n            {`${summaryTypeSigns[type]}${formatBnb(displayAmount)} BNB`}\n          </Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {`~$${amountInUsd.toFixed(2)}`}\n          </Text>\n        </Flex>\n      </Flex>\n    </>\n  )\n}\n\nexport default SummaryRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Box, Flex, Heading, Text, Button, Link, OpenNewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getRoundResult, Result } from 'state/predictions/helpers'\nimport { REWARD_RATE } from 'state/predictions/config'\nimport { getBscScanLink } from 'utils'\nimport { multiplyPriceByAmount } from 'utils/prices'\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\nimport { useGetCurrentEpoch } from 'state/predictions/hooks'\nimport { Bet, BetPosition } from 'state/types'\nimport { formatBnb, getMultiplier, getNetPayout } from '../helpers'\nimport PnlChart from './PnlChart'\nimport SummaryRow from './SummaryRow'\n\ninterface PnlTabProps {\n  hasBetHistory: boolean\n  bets: Bet[]\n}\n\ninterface PnlCategory {\n  rounds: number\n  amount: number\n}\n\ninterface PnlSummary {\n  won: PnlCategory & { payout: number; bestRound: { id: string; payout: number; multiplier: number } }\n  lost: PnlCategory\n  entered: PnlCategory\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 24px auto;\n  width: 100%;\n`\n\nconst initialPnlSummary: PnlSummary = {\n  won: {\n    rounds: 0,\n    amount: 0,\n    payout: 0, // net payout after all deductions\n    bestRound: {\n      id: '0',\n      payout: 0, // net payout after all deductions\n      multiplier: 0,\n    },\n  },\n  lost: {\n    rounds: 0,\n    amount: 0,\n  },\n  entered: {\n    rounds: 0,\n    amount: 0,\n  },\n}\n\nconst getPnlSummary = (bets: Bet[], currentEpoch: number): PnlSummary => {\n  return bets.reduce((summary: PnlSummary, bet) => {\n    const roundResult = getRoundResult(bet, currentEpoch)\n    if (roundResult === Result.WIN) {\n      const payout = getNetPayout(bet, REWARD_RATE)\n      let { bestRound } = summary.won\n      if (payout > bestRound.payout) {\n        const { bullAmount, bearAmount, totalAmount } = bet.round\n        const multiplier = getMultiplier(totalAmount, bet.position === BetPosition.BULL ? bullAmount : bearAmount)\n        bestRound = { id: bet.round.epoch.toString(), payout, multiplier }\n      }\n      return {\n        won: {\n          rounds: summary.won.rounds + 1,\n          amount: summary.won.amount + bet.amount,\n          payout: summary.won.payout + payout,\n          bestRound,\n        },\n        entered: {\n          rounds: summary.entered.rounds + 1,\n          amount: summary.entered.amount + bet.amount,\n        },\n        lost: summary.lost,\n      }\n    }\n    if (roundResult === Result.LOSE || roundResult === Result.HOUSE) {\n      return {\n        lost: {\n          rounds: summary.lost.rounds + 1,\n          amount: summary.lost.amount + bet.amount,\n        },\n        entered: {\n          rounds: summary.entered.rounds + 1,\n          amount: summary.entered.amount + bet.amount,\n        },\n        won: summary.won,\n      }\n    }\n    // Ignore Canceled and Live rounds\n    return summary\n  }, initialPnlSummary)\n}\n\nconst PnlTab: React.FC<PnlTabProps> = ({ hasBetHistory, bets }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const currentEpoch = useGetCurrentEpoch()\n  const bnbBusdPrice = useBNBBusdPrice()\n\n  const summary = getPnlSummary(bets, currentEpoch)\n\n  const netResultAmount = summary.won.payout - summary.lost.amount\n  const netResultIsPositive = netResultAmount > 0\n  const avgPositionEntered = summary.entered.amount / summary.entered.rounds\n  const avgBnbWonPerRound = netResultAmount / summary.entered.rounds\n  const avgBnbWonIsPositive = avgBnbWonPerRound > 0\n\n  // Guard in case user has only lost rounds\n  const hasBestRound = summary.won.bestRound.payout !== 0\n\n  const netResultInUsd = multiplyPriceByAmount(bnbBusdPrice, netResultAmount)\n  const avgBnbWonInUsd = multiplyPriceByAmount(bnbBusdPrice, avgBnbWonPerRound)\n  const betRoundInUsd = multiplyPriceByAmount(bnbBusdPrice, summary.won.bestRound.payout)\n  const avgPositionEnteredInUsd = multiplyPriceByAmount(bnbBusdPrice, avgPositionEntered)\n\n  return hasBetHistory ? (\n    <Box p=\"16px\">\n      <Text bold fontSize=\"24px\" color=\"secondary\" pb=\"24px\">\n        {t('Your history')}\n      </Text>\n      <Flex>\n        <PnlChart lost={summary.lost.rounds} won={summary.won.rounds} />\n        <Flex flexDirection=\"column\" justifyContent=\"center\" pl=\"24px\">\n          <Text bold color=\"textSubtle\">\n            {t('Net results')}\n          </Text>\n          <Text bold fontSize=\"24px\" lineHeight=\"1\" color={netResultIsPositive ? 'success' : 'failure'}>\n            {`${netResultIsPositive ? '+' : ''}${formatBnb(netResultAmount)} BNB`}\n          </Text>\n          <Text small color=\"textSubtle\">\n            {`~$${netResultInUsd.toFixed(2)}`}\n          </Text>\n        </Flex>\n      </Flex>\n      <Box pl=\"8px\">\n        <Text mt=\"24px\" bold color=\"textSubtle\">\n          {t('Average return / round')}\n        </Text>\n        <Text bold color={avgBnbWonIsPositive ? 'success' : 'failure'}>\n          {`${avgBnbWonIsPositive ? '+' : ''}${formatBnb(avgBnbWonPerRound)} BNB`}\n        </Text>\n        <Text small color=\"textSubtle\">\n          {`~$${avgBnbWonInUsd.toFixed(2)}`}\n        </Text>\n\n        {hasBestRound && (\n          <>\n            <Text mt=\"16px\" bold color=\"textSubtle\">\n              {t('Best round: #%roundId%', { roundId: summary.won.bestRound.id })}\n            </Text>\n            <Flex alignItems=\"flex-end\">\n              <Text bold color=\"success\">{`+${formatBnb(summary.won.bestRound.payout)} BNB`}</Text>\n              <Text ml=\"4px\" small color=\"textSubtle\">\n                ({summary.won.bestRound.multiplier.toFixed(2)}x)\n              </Text>\n            </Flex>\n            <Text small color=\"textSubtle\">\n              {`~$${betRoundInUsd.toFixed(2)}`}\n            </Text>\n          </>\n        )}\n\n        <Text mt=\"16px\" bold color=\"textSubtle\">\n          {t('Average position entered / round')}\n        </Text>\n        <Text bold>{`${formatBnb(avgPositionEntered)} BNB`}</Text>\n        <Text small color=\"textSubtle\">\n          {`~$${avgPositionEnteredInUsd.toFixed(2)}`}\n        </Text>\n\n        <Divider />\n\n        <SummaryRow type=\"won\" summary={summary} bnbBusdPrice={bnbBusdPrice} />\n        <SummaryRow type=\"lost\" summary={summary} bnbBusdPrice={bnbBusdPrice} />\n        <SummaryRow type=\"entered\" summary={summary} bnbBusdPrice={bnbBusdPrice} />\n\n        <Flex justifyContent=\"center\" mt=\"24px\">\n          <Link href={`${getBscScanLink(account, 'address')}#internaltx`} mb=\"16px\" external>\n            <Button mt=\"8px\" width=\"100%\">\n              {t('View Reclaimed & Won')}\n              <OpenNewIcon color=\"white\" ml=\"4px\" />\n            </Button>\n          </Link>\n        </Flex>\n      </Box>\n    </Box>\n  ) : (\n    <Box p=\"24px\">\n      <Heading size=\"lg\" textAlign=\"center\" mb=\"8px\">\n        {t('No prediction history available')}\n      </Heading>\n      <Text as=\"p\" textAlign=\"center\">\n        {t(\n          'If you are sure you should see history here, make sure you’re connected to the correct wallet and try again.',\n        )}\n      </Text>\n    </Box>\n  )\n}\n\nexport default PnlTab\n","import React, { useEffect, useState } from 'react'\nimport { Flex, Spinner, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { fetchNodeHistory } from 'state/predictions'\nimport { getFilteredBets } from 'state/predictions/helpers'\nimport { useAppDispatch } from 'state'\nimport {\n  useGetCurrentEpoch,\n  useGetCurrentHistoryPage,\n  useGetHistory,\n  useGetHistoryFilter,\n  useGetIsFetchingHistory,\n  useIsHistoryPaneOpen,\n} from 'state/predictions/hooks'\nimport { Header, HistoryTabs } from './components/History'\nimport RoundsTab from './components/History/RoundsTab'\nimport PnlTab from './components/History/PnlTab/PnlTab'\n\nconst StyledHistory = styled.div`\n  background-color: ${({ theme }) => theme.card.background};\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n\nconst BetWrapper = styled.div`\n  flex: 1;\n  height: 100%;\n  overflow-y: auto;\n  position: relative;\n`\n\nconst SpinnerWrapper = styled.div`\n  align-items: center;\n  background-color: ${({ theme }) => theme.card.background};\n  display: flex;\n  left: 0;\n  height: 100%;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  width: 100%;\n`\n\nconst History = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const isHistoryPaneOpen = useIsHistoryPaneOpen()\n  const isFetchingHistory = useGetIsFetchingHistory()\n  const historyFilter = useGetHistoryFilter()\n  const currentEpoch = useGetCurrentEpoch()\n  const currentHistoryPage = useGetCurrentHistoryPage()\n  const { t } = useTranslation()\n  const bets = useGetHistory()\n  const [activeTab, setActiveTab] = useState(HistoryTabs.ROUNDS)\n\n  useEffect(() => {\n    if (account && isHistoryPaneOpen) {\n      dispatch(fetchNodeHistory({ account }))\n    }\n  }, [account, currentEpoch, isHistoryPaneOpen, dispatch])\n\n  const results = getFilteredBets(bets, historyFilter)\n  const hasBetHistory = results && results.length > 0\n\n  let activeTabComponent = null\n\n  switch (activeTab) {\n    case HistoryTabs.PNL:\n      activeTabComponent = <PnlTab hasBetHistory={hasBetHistory} bets={results} />\n      break\n    case HistoryTabs.ROUNDS:\n    default:\n      activeTabComponent = <RoundsTab hasBetHistory={hasBetHistory} bets={results} />\n      break\n  }\n\n  if (!account) {\n    activeTabComponent = (\n      <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" mt=\"32px\">\n        <ConnectWalletButton />\n        <Text mt=\"8px\">{t('Connect your wallet to view your prediction history')}</Text>\n      </Flex>\n    )\n  }\n\n  return (\n    <StyledHistory>\n      <Header activeTab={activeTab} setActiveTab={setActiveTab} />\n      <BetWrapper>\n        {isFetchingHistory && currentHistoryPage === 1 ? (\n          <SpinnerWrapper>\n            <Spinner size={72} />\n          </SpinnerWrapper>\n        ) : (\n          activeTabComponent\n        )}\n      </BetWrapper>\n    </StyledHistory>\n  )\n}\n\nexport default History\n","import { useCallback, useEffect, useState } from 'react'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\n\nconst getNow = () => Math.floor(Date.now() / 1000)\n\n/**\n * Consider this moving up to the global level\n */\nconst useCountdown = (timestamp: number) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(() => {\n    return timestamp - getNow()\n  })\n  const [isPaused, setIsPaused] = useState(false)\n  const isWindowVisible = useIsWindowVisible()\n\n  const pause = useCallback(() => setIsPaused(true), [setIsPaused])\n  const unpause = useCallback(() => setIsPaused(false), [setIsPaused])\n\n  useEffect(() => {\n    let timer: ReturnType<typeof setTimeout>\n\n    if (!isPaused && secondsRemaining > 0) {\n      timer = setTimeout(() => {\n        setSecondsRemaining((prevSecondsRemaining) => prevSecondsRemaining - 1)\n      }, 1000)\n    }\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [secondsRemaining, isPaused, setSecondsRemaining])\n\n  useEffect(() => {\n    setSecondsRemaining(timestamp - getNow())\n  }, [timestamp, setSecondsRemaining])\n\n  // Pause the timer if the tab becomes inactive to avoid it becoming out of sync\n  useEffect(() => {\n    if (isWindowVisible) {\n      setSecondsRemaining(timestamp - getNow())\n      unpause()\n    } else {\n      pause()\n    }\n  }, [pause, unpause, timestamp, setSecondsRemaining, isWindowVisible])\n\n  return { secondsRemaining, pause, unpause }\n}\n\nexport default useCountdown\n","import React, {useEffect} from 'react'\nimport { Progress, ProgressProps } from '@pancakeswap/uikit'\nimport useCountdown from 'views/Predictions/hooks/useCountdown'\nimport { formatRoundTime } from 'views/Predictions/helpers'\n\ninterface RoundProgressProps extends ProgressProps {\n  lockTimestamp: number\n  closeTimestamp: number\n  remainingTime?: number\n  openCalculatingModal?: any\n}\n\nconst RoundProgress: React.FC<RoundProgressProps> = ({ lockTimestamp, closeTimestamp,remainingTime, openCalculatingModal, ...props }) => {\n  // const startMs = lockTimestamp * 1000\n  // const endMs = closeTimestamp * 1000\n  // const now = Date.now()\n  // const rawProgress = ((now - startMs) / (endMs - startMs)) * 100\n  // const progress = rawProgress <= 100 ? rawProgress : 100\n  const { secondsRemaining } = useCountdown(remainingTime)\n// console.log(\"remainingTime\", secondsRemaining)\nuseEffect(() => {\n  if(secondsRemaining<12){\n    openCalculatingModal(true)\n  }else {\n    openCalculatingModal(false)\n  }\n},[secondsRemaining])\n  return <Progress primaryStep={100 - secondsRemaining/3} {...props} />\n}\n\nexport default RoundProgress\n","import React, { ReactElement } from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport styled, { DefaultTheme } from 'styled-components'\n\ntype Status = 'expired' | 'live' | 'next' | 'soon' | 'canceled' | 'calculating'\n\ninterface CardHeaderProps {\n  status: Status\n  title: string\n  epoch: number\n  icon?: ReactElement\n}\n\nconst HEADER_HEIGHT = '37px'\n\n// Used to get the gradient for the card border, which depends on the header color to create the illusion\n// that header is overlapping the 1px card border.\n// 'live' is not included into the switch case because it has isActive border style\nexport const getBorderBackground = (theme: DefaultTheme, status: Status) => {\n  const gradientStopPoint = `calc(${HEADER_HEIGHT} + 1px)`\n  switch (status) {\n    case 'calculating':\n      return `linear-gradient(transparent ${gradientStopPoint}, ${theme.colors.cardBorder} ${gradientStopPoint}), ${theme.colors.gradients.cardHeader}`\n    case 'canceled':\n      return `linear-gradient(${theme.colors.warning} ${gradientStopPoint}, ${theme.colors.cardBorder} ${gradientStopPoint})`\n    case 'next':\n      return `linear-gradient(${theme.colors.secondary} ${gradientStopPoint}, ${theme.colors.cardBorder} ${gradientStopPoint})`\n    case 'expired':\n    case 'soon':\n    default:\n      return theme.colors.cardBorder\n  }\n}\n\nconst getBackgroundColor = (theme: DefaultTheme, status: Status) => {\n  switch (status) {\n    case 'calculating':\n      return theme.colors.gradients.cardHeader\n    case 'live':\n      return 'transparent'\n    case 'canceled':\n      return theme.colors.warning\n    case 'next':\n      return theme.colors.secondary\n    case 'expired':\n    case 'soon':\n    default:\n      return theme.colors.cardBorder\n  }\n}\n\ntype TextColor = 'textDisabled' | 'white' | 'secondary' | 'text' | 'textSubtle'\ntype FallbackColor = 'text' | 'textSubtle'\n\nconst getTextColorByStatus = (status: Status, fallback: FallbackColor): TextColor => {\n  switch (status) {\n    case 'expired':\n      return 'textDisabled'\n    case 'next':\n      return 'white'\n    case 'live':\n      return 'secondary'\n    case 'canceled':\n    case 'calculating':\n      return 'text'\n    default:\n      return fallback\n  }\n}\n\nconst StyledCardHeader = styled.div<{ status: Status }>`\n  align-items: center;\n  background: ${({ theme, status }) => getBackgroundColor(theme, status)};\n  display: flex;\n  justify-content: space-between;\n  height: ${HEADER_HEIGHT};\n  padding: ${({ status }) => (status === 'live' ? '16px' : '8px')};\n`\n\nconst Round = styled.div`\n  justify-self: center;\n`\n\nconst CardHeader: React.FC<CardHeaderProps> = ({ status, title, epoch, icon }) => {\n  const textColor = getTextColorByStatus(status, 'text')\n  const isLive = status === 'live'\n\n  return (\n    <StyledCardHeader status={status}>\n      <Flex alignItems=\"center\">\n        {icon}\n        <Text color={textColor} bold={isLive} textTransform={isLive ? 'uppercase' : 'capitalize'} lineHeight=\"21px\">\n          {title}\n        </Text>\n      </Flex>\n      <Round>\n        <Text fontSize={isLive ? '14px' : '12px'} color={getTextColorByStatus(status, 'textSubtle')} textAlign=\"center\">\n          {`#${epoch}`}\n        </Text>\n      </Round>\n    </StyledCardHeader>\n  )\n}\n\nexport default CardHeader\n","import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport {\n\n    useTooltip,\n  } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst GladiatorAttributes = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px 16px 0px 6px;\n`\nconst LeftValues = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: space-between;\n  color: #7D91AD;\n  font-size: 16px;\n`\nconst RightValues = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: end;\n  justify-content: space-between;\n  color: #7D91AD;\n  font-size: 16px;\n  white-space: nowrap;\n`\nconst IconImage = styled.img`\n  width: 24px;\n`\nconst GladiatorAttributesRow = ({attacker, defender, image, tooltipValue}) => {\n    const {t} = useTranslation()\n    const [tooltipName, setTooltipName] = useState(\"\")\n\n    const { targetRef, tooltip, tooltipVisible } = useTooltip(t(tooltipName), {\n      placement: 'top',\n    })\n  return (\n    <GladiatorAttributes>\n    {tooltipVisible && tooltip}\n    <LeftValues>{attacker || 0}</LeftValues>\n    <div ref={targetRef} onMouseEnter={() => { setTooltipName(tooltipValue) }} >\n      <IconImage src={image} />\n    </div>\n    <RightValues>{defender}</RightValues>\n  </GladiatorAttributes>  )\n}\n\nexport default GladiatorAttributesRow","import React, { useState, useEffect } from 'react'\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\n// import { Equip } from 'config/constants/battleJoin/types'\n\ninterface EquipmentModalProps {\n    onDismiss?: () => void\n    data: any,\n}\n\nconst NewModal = styled(Modal)`\n  width: 480px !important;\n  min-width: 480px !important;\n`\nconst StyledMain = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: space-around;\n  width: 100%;\n`\nconst EquipmentsList = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 10px;\n`\nconst Equipment = styled.div`\n  margin: 0px 12px;\n  // margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\nconst EquipmentImage = styled.div`\n  display: flex;\n  width: 250px;\n`\nconst AttackBackground = styled.div`\n  background-image: url(/images/battles/1.png);\n  width: 250px;\n  height: 250px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 16px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`\nconst DefenseBackground = styled.div`\n  background-image: url(/images/battles/2.png);\n  width: 250px;\n  height: 250px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 16px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`\nconst AnimalBackground = styled.div`\n  background-image: url(/images/battles/3.png);\n  width: 250px;\n  height: 250px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 16px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`\nconst EquipButton = styled.div`\n  padding: 4px 10px;\n  background-image: url(/images/battles/buttons-bg.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  color: #552216;   \n  width: 200px;\n  height: 66px;\n  font-size: 24px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.8;\n  }\n`\nconst EquipmentAttributes = styled.div`\n  max-height: 200px;\n  width: 350px !important;\n  overflow: scroll;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  margin-top: 20px;\n`\n\n\nconst EquipmentModal: React.FC<EquipmentModalProps> = ({ onDismiss, data }) => {\n\n    const { t } = useTranslation()\n\n    return (\n        <NewModal title={data.name} onDismiss={onDismiss} minWidth=\"1200px\">\n            <StyledMain>\n                <EquipmentsList>\n                    <Equipment>\n                        <EquipmentImage>\n                            {\n                                (data.type === \"battle\") ?\n                                    <AttackBackground>\n                                        <img src={data.image} alt=\"Equipment\" />\n                                    </AttackBackground>\n                                    : (data.type === \"defense\") ?\n                                        <DefenseBackground>\n                                            <img src={data.image} alt=\"Equipment\" />\n                                        </DefenseBackground>\n                                        : (data.type === \"animal\") ?\n                                            <AnimalBackground>\n                                                <img src={data.image} alt=\"Equipment\" />\n                                            </AnimalBackground>\n                                            : null\n                            }\n                        </EquipmentImage>\n                        <EquipmentAttributes>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Strength')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.strength}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Endurance')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.endurance}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Agility')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.agility}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Precision')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.precision}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Intelligence')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.intelligance}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Will Power')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.willpower}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('One-Handed')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.onehand}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Two-Handed')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.twohand}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Shield')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.shield}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Ranged')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.range}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Dual')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.dual}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Polearms')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.polearms}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Leadership')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.leadership}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Coach')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.coach}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Cook')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.cook}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Medical')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.medical}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Smith')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.smith}</Text>\n                            </Flex>\n                            <Flex justifyContent=\"space-between\" width=\"100%\" mt=\"5px\">\n                                <Text color=\"secondary\" ml=\"10px\" fontSize=\"18px\">{t('Torture')}</Text>\n                                <Text color=\"textSubtle\" mr=\"10px\">{data.torture}</Text>\n                            </Flex>\n                        </EquipmentAttributes>\n                    </Equipment>\n                </EquipmentsList>\n            </StyledMain>\n        </NewModal>\n    )\n\n}\n\nexport default EquipmentModal","import React from 'react'\nimport styled from 'styled-components'\nimport { useModal } from '@pancakeswap/uikit'\nimport EquipmentModal from './EquipmentModal'\n\ninterface EquipmentProps {\n  data: any,\n}\n\nconst Equipmentt = styled.div`\n  cursor: pointer;\n`\nconst AttackBackground = styled.div`\n  background-image: url(/images/battles/1.png);\n  width: 50px;\n  height: 50px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 4px;\n  margin: 2px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  & img {\n    width: 35px !important;\n    height: 35px !important;\n    margin: 5px !important;\n  }\n  transition: all .2s ease-in-out;\n  &:hover {\n    transform: scale(1.1);\n  }\n`\nconst DefenseBackground = styled.div`\n  background-image: url(/images/battles/2.png);\n  width: 50px;\n  height: 50px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 4px;\n  margin: 2px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  & img {\n    width: 35px !important;\n    height: 35px !important;\n    margin: 5px !important;\n  }\n  transition: all .2s ease-in-out;\n  &:hover {\n    transform: scale(1.1);\n  }\n`\nconst AnimalBackground = styled.div`\n  background-image: url(/images/battles/3.png);\n  width: 50px;\n  height: 50px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 4px;\n  margin: 2px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  & img {\n    width: 35px !important;\n    height: 35px !important;\n    margin: 5px !important;\n  }\n  transition: all .2s ease-in-out;\n  &:hover {\n    transform: scale(1.1);\n  }\n`\n\nconst Equipment: React.FC<EquipmentProps> = ({ data }) => {\n  const [onEquipmentClick] = useModal(<EquipmentModal data={data} />)\n\n  return (\n    <>\n      {\n        (data.type === \"battle\") ?\n          <Equipmentt onClick={onEquipmentClick}>\n            <AttackBackground>\n              <img src={data.image} alt=\"Equipment\" />\n            </AttackBackground>\n          </Equipmentt>\n          : (data.type === \"defense\") ?\n            <Equipmentt onClick={onEquipmentClick}>\n              <DefenseBackground>\n                <img src={data.image} alt=\"Equipment\" />\n              </DefenseBackground>\n            </Equipmentt>\n            : (data.type === \"animal\") ?\n              <Equipmentt onClick={onEquipmentClick}>\n                <AnimalBackground>\n                  <img src={data.image} alt=\"Equipment\" />\n                </AnimalBackground>\n              </Equipmentt>\n              : null\n      }\n    </>\n\n  )\n}\n\nexport default Equipment","import React from 'react'\nimport Equipment from './Equipment'\n\ninterface EquipmentImagesProps {\n    data: any,\n}\n\n\nconst EquipmentImages: React.FC<EquipmentImagesProps> = ({ data }) => {\n\n    return (\n        <>\n            {\n                data?.map(element => {\n                    if (element.type === \"battle\") {\n                        return (\n                            <Equipment data={element} />\n                        )\n                    }\n                    if (element.type === \"defense\") {\n                        return (\n                            <Equipment data={element} />\n                        )\n                    }\n                    if (element.type === \"animal\") {\n                        return (\n                            <Equipment data={element} />\n                        )\n                    }\n                })\n            }\n        </>\n\n    )\n}\n\nexport default EquipmentImages","import create from 'zustand';\n\nexport const useImageStore = create((set, get) => ({\n\timage: \"arles arena\",\n\tsetImage: ( value ) => {\n        // console.log(\"valueeeeeeee\", value)\n\t\tset({ image: value });\n\t}\n}))\n\nexport default useImageStore;","import React from 'react'\nimport { Flex, Spinner, Text, TooltipText, useTooltip, InfoIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled, { keyframes } from 'styled-components'\nimport { NodeRound, BetPosition } from 'state/types'\nimport useTheme from 'hooks/useTheme'\nimport { RoundResultBox } from '../RoundResult'\nimport MultiplierArrow from './MultiplierArrow'\nimport CardHeader, { getBorderBackground } from './CardHeader'\n\nconst Card = styled.div`\n  position: absolute;\n  background-color: rgba(0, 0, 0, .15);  \n  backdrop-filter: blur(5px);\n  top: 0;\n  bottom: 0;\n  left: 0; \n  right: 0; \n  margin: auto; \n  width: 460px;\n  height: 280px;\n  border-radius: 16px;\n  border: 2px solid #D9AB3A;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst CalculatingCard = () => {\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('This round’s closing transaction has been submitted to the blockchain, and is awaiting confirmation.'),\n    { placement: 'bottom' },\n  )\n\n  return (\n    <>\n      <Card>\n        <Spinner />\n        <Flex mt=\"12px\" ref={targetRef}>\n          <Text>{t('Calculating Results')}</Text>\n          <InfoIcon ml=\"4px\" />\n        </Flex>\n      </Card>\n      {tooltipVisible && tooltip}\n    </>\n  )\n}\n\nexport default CalculatingCard\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useCountUp } from 'react-countup'\nimport {\n  Card,\n  CardBody,\n  Flex,\n  PlayCircleOutlineIcon,\n  InfoIcon,\n  Text,\n  TooltipText,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled, { keyframes } from 'styled-components'\nimport RoundProgress from 'components/RoundProgress'\nimport CardHeader from './CardHeader'\nimport { getSpecificGladiators2 } from \"state/nftMarket/helpers\"\nimport galleryNfts from \"config/constants/gallery/gallery\"\nimport { useBattleNft, usePredictionNft } from 'hooks/useContract'\nimport { getSpecificJoinPageNfts } from \"state/nftMarket/helpers\"\nimport { ethers } from \"ethers\"\nimport GladiatorAttributesRow from './GladiatorAttributesRow'\nimport EquipmentModal from './EquipmentModal'\nimport { useModal } from '@pancakeswap/uikit'\nimport EquipmentImages from './EquipmentImages'\nimport useStore from \"../../store\"\nimport Loader from 'components/Loader/CircleLoader'\nimport { Spinner } from '@pancakeswap/uikit'\nimport CalculatingCard from './CalculatingCard'\n\n\n\nconst NewCard = styled(Card)`\n  width: 700px;\n  margin-right: 20px;\n`\nconst CardInner = styled.div`\n  padding: 0px 12px 0px 12px;\n  background-image: url(/images/battles/card-bg.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n`\nconst GladiatorBattle = styled.div<{ loading: boolean }>`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n//   align-items: center;\n  opacity: ${({ loading }) => (loading ? '0.5' : '1')};\n`\nconst GladiatorWar = styled.div`\n  width: 340px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-image: url(/images/battles/center-ngg.png);\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n`\nconst GladiatorRight = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 30px;\n  & img {\n    height: 200px;\n    margin-top: 30px;\n  }\n`\nconst GladiatorLeft = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 30px;\n  & img {\n    height: 200px;\n    margin-top: 30px;\n  }\n`\nconst Bet = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  background-image: url(/images/battles/button-bg2.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  width: 175px;\n  height: 36px;\n  font-size: 20px;\n  margin-top: 12px;\n  color: #fff;\n`\nconst BetValue = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  margin: 0px 10px 0px 10px;\n`\nconst TokenImage = styled.img`\n  width: 32px;\n  margin-left: 10px\n`\nconst Statistics = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: start;\n  width: 100%;\n  color: #fff;\n  font-size: 18px;\n  font-weight: bold;\n  margin-top: 20px;\n  margin-left: 40px\n`\nconst Heading = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  color: #fff;\n  font-size: 16px;\n  font-weight: bold;\n  margin: 20px 0px 0px 0px;\n`\nconst ArenaTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: start;\n  // width: 100%;\n  color: #fff;\n  font-size: 16px;\n  font-weight: bold;\n  margin: 0px 20px 10px 20px;\n`\nconst Time = styled.div`\n  color: #7D91AD;\n  font-size: 18px;\n  font-weight: bold;\n  margin-left: 30px;\n`\nconst GladiatorsStats = styled.div`\n  margin-top: 12px;\n  width: 85%;\n  height: 200px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n`\nconst Attribute = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  color: #c09451;\n  font-size: 20px;\n  font-weight: bold;\n  text-align: center;\n`\nconst Value = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  color: #7D91AD;\n  font-size: 24px;\n  font-weight: bold;\n  margin-top: 20px;\n  &:first-child {\n      margin-top: 0;\n  }\n`\nconst GladiatorAttributes = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px 16px 0px 6px;\n`\nconst RightValues = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: end;\n  justify-content: space-between;\n  color: #7D91AD;\n  font-size: 16px;\n  white-space: nowrap;\n`\nconst LeftValues = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: space-between;\n  color: #7D91AD;\n  font-size: 16px;\n`\nconst Gladiators = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n//   margin-top: 20px;\n`\nconst OpponentGladiator = styled.div`\n  color: #7D91AD;\n  font-size: 26px;\n  font-weight: bold;\n//   width: 30%;\n  white-space: nowrap;\n`\nconst VsImage = styled.div`\n  width: 50px;\n`\nconst MyGladiator = styled.div`\n  color: #7D91AD;\n  font-size: 26px;\n  font-weight: bold;\n//   width: 30%;\n  display: flex;\n  justify-content: end;\n  white-space: nowrap;\n`\nconst GladiatorArena = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 10px;\n`\nconst ArenaHeading = styled.div`\n  color: #7D91AD;\n  font-size: 32px;\n  font-weight: bold;\n`\nconst ArenaImage = styled.div`\n  width: 280px;\n  height: auto;\n  margin-top: 10px;\n  position: relative;\n\n  & img:nth-child(1) {\n    position: absolute;\n    top: -45px;\n    right: -30px;\n  }\n\n  & img:nth-child(2) {\n    padding: 0px 0px 0px 15px;\n    height: 120px !important;\n    width: 100%;\n    object-fit: cover;\n  }\n`\nconst IconImage = styled.img`\n  width: 24px;\n`\n\nconst GladiatorEquipments = styled.div`\n  margin-top: 15px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  // flex-wrap: wrap;\n  & img {\n    width: 50px;\n    height: 50px;\n    margin: 5px;\n  }\n  &::-webkit-scrollbar {\n    background: : #7D91AD !important;\n    height: 5px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #7D91AD;\n  }\n`\nconst AttackLable = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background-image: url(/images/battles/red.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  width: 120px;\n  height: 27px;\n  font-size: 20px;\n  margin-top: 12px;\n  color: #fff;\n`\nconst DefenseLable = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background-image: url(/images/battles/blue.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  width: 120px;\n  height: 27px;\n  font-size: 20px;\n  margin-top: 12px;\n  color: #fff;\n`\nconst AttackBackground = styled.div`\n  background-image: url(/images/battles/1.png);\n  width: 50px;\n  height: 50px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 4px;\n  margin: 2px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  & img {\n    width: 35px;\n    height: 35px;\n    margin: 5px;\n  }\n`\nconst DefenseBackground = styled.div`\n  background-image: url(/images/battles/2.png);\n  width: 50px;\n  height: 50px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 4px;\n  margin: 2px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  & img {\n    width: 35px;\n    height: 35px;\n    margin: 5px;\n  }\n`\nconst AnimalBackground = styled.div`\n  background-image: url(/images/battles/3.png);\n  width: 50px;\n  height: 50px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 4px;\n  margin: 2px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  & img {\n    width: 35px;\n    height: 35px;\n    margin: 5px;\n  }\n`\nconst ArenaPrize = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: start;\n  color: #fff;\n  font-size: 16px;\n  margin: 0px 10px 30px 20px;\n`\n\ninterface LiveBattleProps {\n  currentBattle?: any\n  remainingTime: any\n}\nconst LiveBattle: React.FC<LiveBattleProps> = ({ currentBattle, remainingTime }) => {\n  // console.log(\"currentBattlecurrentBattle\", currentBattle)\n\n  const [loading, setLoading] = useState(false)\n\n\n  const [attackerNft, setAttackerNft] = useState(null)\n  const [defenderNft, setDefenderNft] = useState(null)\n  const [areena, setAreena] = useState<string>(\"\")\n  const [attackerEquipmentsImages, setAttackerEquipmentsImages] = useState([])\n  const [defenderEquipmentsImages, setDefenderEquipmentsImages] = useState([])\n  const [totalRewardAmount, setTotalRewardAmount] = useState<number | string>(0)\n  const { t } = useTranslation()\n  const battleContract = useBattleNft()\n  const predictionNft = usePredictionNft()\n  const getGladiatorsFromDb = async () => {\n    try {\n      findAmount()\n      const attackerId = parseInt(currentBattle?.attackerId._hex, 16)\n      const defenderId = parseInt(currentBattle?.defenderId._hex, 16)\n      const gladiators = await getSpecificGladiators2([attackerId, defenderId])\n      const attackerGladiator = gladiators.find(nft => nft.tokenId == attackerId)\n      const defenderGladiator = gladiators.find(nft => nft.tokenId == defenderId)\n      // get gladiator form config file\n      const attackerFromConfig = galleryNfts.find(nft => nft.name === attackerGladiator?.ipfsJson?.nft?.name)\n      const defenderFromConfig = galleryNfts.find(nft => nft.name === defenderGladiator?.ipfsJson?.nft?.name)\n      setAttackerNft(attackerFromConfig)\n      setDefenderNft(defenderFromConfig)\n      const attackerPlayer = await battleContract.playerInfo(currentBattle.attacker.toString())\n      const attackerAttackId = parseInt(attackerPlayer?.attackEqId?._hex, 16)\n      const attackerDefenseId = parseInt(attackerPlayer?.defenceEqId?._hex, 16)\n      const attackerAnimalId = parseInt(attackerPlayer?.animalId?._hex, 16)\n      // console.log(\"attackerPlayerattackerPlayerattackerPlayer\", attackerPlayer);\n      const attackerEquipments = await getSpecificJoinPageNfts([attackerAttackId, attackerDefenseId, attackerAnimalId])\n      setAttackerEquipmentsImages(attackerEquipments.map(eq => {\n        return {\n          image: eq?.ipfsJson?.imagePath,\n          type: eq?.ipfsJson?.type,\n          name: eq?.ipfsJson?.name,\n          agility: eq?.ipfsJson?.agility,\n          coach: eq?.ipfsJson?.coach,\n          cook: eq?.ipfsJson?.cook,\n          dual: eq?.ipfsJson?.dual,\n          endurance: eq?.ipfsJson?.endurance,\n          intelligance: eq?.ipfsJson?.intelligance,\n          leadership: eq?.ipfsJson?.leadership,\n          level: eq?.ipfsJson?.level,\n          medical: eq?.ipfsJson?.medical,\n          onehand: eq?.ipfsJson?.onehand,\n          polearms: eq?.ipfsJson?.polearms,\n          precision: eq?.ipfsJson?.precision,\n          range: eq?.ipfsJson?.range,\n          shield: eq?.ipfsJson?.shield,\n          smith: eq?.ipfsJson?.smith,\n          strength: eq?.ipfsJson?.strength,\n          torture: eq?.ipfsJson?.torture,\n          twohand: eq?.ipfsJson?.twohand,\n          willpower: eq?.ipfsJson?.willpower,\n        }\n      }))\n      // console.log(\"attackerEquipmentsattackerEquipments\", attackerEquipments);\n      const defenderPlayer = await battleContract.playerInfo(currentBattle.defender.toString())\n      // console.log(\"defenderPlayerdefenderPlayerdefenderPlayer\", defenderPlayer);\n\n      const defenderAttackId = parseInt(defenderPlayer?.attackEqId?._hex, 16)\n      const defenderdefenseId = parseInt(defenderPlayer?.defenceEqId?._hex, 16)\n      const defenderAnimalId = parseInt(defenderPlayer?.animalId?._hex, 16)\n      const defenderEquipments = await getSpecificJoinPageNfts([defenderAttackId, defenderdefenseId, defenderAnimalId])\n      // console.log(\"defenderEquipmentsdefenderEquipments\", defenderEquipments);\n      setDefenderEquipmentsImages(defenderEquipments.map(eq => {\n        return {\n          image: eq?.ipfsJson?.imagePath,\n          type: eq?.ipfsJson?.type,\n          name: eq?.ipfsJson?.name,\n          agility: eq?.ipfsJson?.agility,\n          coach: eq?.ipfsJson?.coach,\n          cook: eq?.ipfsJson?.cook,\n          dual: eq?.ipfsJson?.dual,\n          endurance: eq?.ipfsJson?.endurance,\n          intelligance: eq?.ipfsJson?.intelligance,\n          leadership: eq?.ipfsJson?.leadership,\n          level: eq?.ipfsJson?.level,\n          medical: eq?.ipfsJson?.medical,\n          onehand: eq?.ipfsJson?.onehand,\n          polearms: eq?.ipfsJson?.polearms,\n          precision: eq?.ipfsJson?.precision,\n          range: eq?.ipfsJson?.range,\n          shield: eq?.ipfsJson?.shield,\n          smith: eq?.ipfsJson?.smith,\n          strength: eq?.ipfsJson?.strength,\n          torture: eq?.ipfsJson?.torture,\n          twohand: eq?.ipfsJson?.twohand,\n          willpower: eq?.ipfsJson?.willpower,\n        }\n      }))\n\n\n    } catch (error) {\n      console.log(\"errorrrr\", error);\n    }\n\n  }\n  const { image } = useStore(state => state)\n\n  // console.log(\"firstfirstfirstfirst\", image)\n\n  // const newImage1 = image.replaceAll('_', ' ');\n\n  // const image2 = newImage1.charAt(0).toUpperCase() + newImage1.slice(1).charAt(0).toUpperCase()\n\n  // console.log(\"secondsecondsecondsecondsecond\", image2)\n\n\n\n  // console.log(\"attackerEquipmentsImagesattackerEquipmentsImages\", attackerEquipmentsImages);\n  // console.log(\"defenderEquipmentsImagesdefenderEquipmentsImages\", defenderEquipmentsImages);\n  useEffect(() => {\n    if (currentBattle) {\n      getGladiatorsFromDb()\n    }\n  }, [currentBattle])\n  // useEffect(() => {\n  //   if(attackerNft && defenderNft){\n  //     console.log(\"attackerNftattackerNft\", attackerNft);\n  //     console.log(\"defenderNftdefenderNft\", defenderNft);\n  //   }\n  // }, [attackerNft, defenderNft])\n  const findAmount = async () => {\n    const totalReward = await predictionNft.rounds(currentBattle.round.toString())\n    const ethValue1 = ethers.utils.formatEther(totalReward.attackerAmount);\n    const ethValue2 = ethers.utils.formatEther(totalReward.defenderAmount);\n    setTotalRewardAmount(String(Number(ethValue1) + Number(ethValue2)))\n  }\n  const [tooltipName, setTooltipName] = useState(\"\")\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(t(tooltipName), {\n    placement: 'bottom',\n  })\n\n  const { targetRef: left, tooltip: leftTooltip, tooltipVisible: leftTooltipVisible } = useTooltip(t(tooltipName), {\n    placement: 'right',\n  })\n\n  const { targetRef: right, tooltip: rightTooltip, tooltipVisible: rightTooltipVisible } = useTooltip(t(tooltipName), {\n    placement: 'bottom',\n  })\n\n  // console.log(\"remainingTime remainingTime remainingTime \", remainingTime)\n  const openCalculatingModal = (value) => {\n    setLoading(value)\n  }\n  useEffect(() => {\n    if (currentBattle) {\n      // console.log(\"currentBattlecurrentBattle\", currentBattle)\n      if (currentBattle.arena === \"Arles Arena\") {\n        setAreena(\"arles_arena\")\n      } else if (currentBattle.arena === \"Ateia Trebellia\") {\n        setAreena(\"ateia_trebellia\")\n      } else if (currentBattle.arena === \"Gladiator Arena\") {\n        setAreena(\"gladiator_arena\")\n      } else if (currentBattle.arena === \"Matia Piso\") {\n        setAreena(\"matia_piso\")\n      } else if (currentBattle.arena === \"Nimes Amphitheatre\") {\n        setAreena(\"nimes_amphitheatre\")\n      } else if (currentBattle.arena === \"Nimes Amphitheatre\") {\n        setAreena(\"nimes_amphitheatre\")\n      }\n      else {\n        setAreena(currentBattle.arena)\n      }\n\n\n    }\n  }, [currentBattle])\n  return (\n    <NewCard isActive>\n      {tooltipVisible && tooltip}\n      {leftTooltipVisible && leftTooltip}\n      {rightTooltipVisible && rightTooltip}\n      <CardHeader\n        status=\"live\"\n        icon={<PlayCircleOutlineIcon mr=\"4px\" width=\"24px\" color=\"secondary\" />}\n        title={t('Live')}\n        epoch={Number(currentBattle.round)}\n      />\n      <RoundProgress\n        variant=\"flat\"\n        scale=\"sm\"\n        lockTimestamp={10}\n        closeTimestamp={25}\n        remainingTime={remainingTime}\n        openCalculatingModal={openCalculatingModal}\n      />\n      <CardInner>\n        <GladiatorBattle loading={loading}>\n          <GladiatorLeft>\n            <AttackLable>\n              {t('Attack')}\n            </AttackLable>\n            <img src={attackerNft?.glTFPath ? attackerNft?.glTFPath.replace(\"scene.gltf\", \"preview.png\") : \"/images/battles/left.png\"} alt=\"Gladiator\" />\n            <GladiatorEquipments>\n              {/* {console.log(\"attackerEquipmentsImagesattackerEquipmentsImages\", attackerEquipmentsImages)} */}\n              <EquipmentImages data={attackerEquipmentsImages} />\n            </GladiatorEquipments>\n            <div ref={targetRef} onMouseEnter={() => { setTooltipName(\"Best terrain is \" + (attackerNft?.bestTerrain)) }}>\n              <img\n                src={`/images/battles/${attackerNft?.bestTerrain === \"Polar\" ? \"glacial\".toLowerCase() : attackerNft?.bestTerrain.toLowerCase()}.png`}\n                alt=\"Arena\"\n                style={{ height: \"80px\" }}\n              />\n            </div>\n          </GladiatorLeft>\n          <GladiatorWar>\n            <Bet>\n              <BetValue>{t('Bet')}</BetValue>\n              <BetValue>{totalRewardAmount} DENA</BetValue>\n            </Bet>\n            <Statistics>\n              {t('Statistics:')}\n            </Statistics>\n            <GladiatorsStats>\n              <Text color=\"#7d91ad\" fontWeight=\"bold\" mx=\"15px\" style={{ borderBottom: '1px solid #7d91ad' }}>{t('Attributes')}</Text>\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.attributes?.strength || 0}\n                defender={defenderNft?.attributes?.strength || 0}\n                image=\"/images/battles/icons/strength.png\"\n                tooltipValue=\"Strength\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.attributes?.endurance || 0}\n                defender={defenderNft?.attributes?.endurance || 0}\n                image=\"/images/battles/icons/endurance.png\"\n                tooltipValue=\"Endurance\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.attributes?.agility || 0}\n                defender={defenderNft?.attributes?.agility || 0}\n                image=\"/images/battles/icons/agility.png\"\n                tooltipValue=\"Agility\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.attributes?.precision || 0}\n                defender={defenderNft?.attributes?.precision || 0}\n                image=\"/images/battles/icons/precision.png\"\n                tooltipValue=\"Precision\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.attributes?.intelligance || 0}\n                defender={defenderNft?.attributes?.intelligance || 0}\n                image=\"/images/battles/icons/intelligence.png\"\n                tooltipValue=\"Intelligance\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.attributes?.willpower || 0}\n                defender={defenderNft?.attributes?.willpower || 0}\n                image=\"/images/battles/icons/willpower.png\"\n                tooltipValue=\"Willpower\"\n              />\n\n              <Text color=\"#7d91ad\" fontWeight=\"bold\" mx=\"15px\" mt=\"8px\" mb=\"4px\" style={{ borderBottom: '1px solid #7d91ad' }}>{t('Weapon Mastery')}</Text>\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.weapons?.oneHand || 0}\n                defender={defenderNft?.weapons?.oneHand || 0}\n                image=\"/images/battles/icons/one-handed.png\"\n                tooltipValue=\"One Hand\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.weapons?.twoHand || 0}\n                defender={defenderNft?.weapons?.twoHand || 0}\n                image=\"/images/battles/icons/two-handed.png\"\n                tooltipValue=\"Two Hand\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.weapons?.shield || 0}\n                defender={defenderNft?.weapons?.shield || 0}\n                image=\"/images/battles/icons/shield.png\"\n                tooltipValue=\"Shield\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.weapons?.ranged || 0}\n                defender={defenderNft?.weapons?.ranged || 0}\n                image=\"/images/battles/icons/ranged.png\"\n                tooltipValue=\"Ranged\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.weapons?.dual || 0}\n                defender={defenderNft?.weapons?.dual || 0}\n                image=\"/images/battles/icons/dual.png\"\n                tooltipValue=\"Dual\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.weapons?.polearms || 0}\n                defender={defenderNft?.weapons?.polearms || 0}\n                image=\"/images/battles/icons/polearms.png\"\n                tooltipValue=\"Polearms\"\n              />\n\n              <Text color=\"#7d91ad\" fontWeight=\"bold\" mx=\"15px\" mt=\"8px\" mb=\"4px\" style={{ borderBottom: '1px solid #7d91ad' }}>{t('Abilities')}</Text>\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.abilities?.leadership || 0}\n                defender={defenderNft?.abilities?.leadership || 0}\n                image=\"/images/battles/icons/leadership.png\"\n                tooltipValue=\"Leadership\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.abilities?.coach || 0}\n                defender={defenderNft?.abilities?.coach || 0}\n                image=\"/images/battles/icons/coach.png\"\n                tooltipValue=\"Coach\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.abilities?.cook || 0}\n                defender={defenderNft?.abilities?.cook || 0}\n                image=\"/images/battles/icons/cook.png\"\n                tooltipValue=\"Cook\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.abilities?.medical || 0}\n                defender={defenderNft?.abilities?.medical || 0}\n                image=\"/images/battles/icons/medical.png\"\n                tooltipValue=\"Medical\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.abilities?.smith || 0}\n                defender={defenderNft?.abilities?.smith || 0}\n                image=\"/images/battles/icons/smith.png\"\n                tooltipValue=\"Smith\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.abilities?.torture || 0}\n                defender={defenderNft?.abilities?.torture || 0}\n                image=\"/images/battles/icons/torture.png\"\n                tooltipValue=\"Torture\"\n              />\n\n            </GladiatorsStats>\n            <Statistics>\n              {t('Trophies:')}\n            </Statistics>\n            <GladiatorEquipments>\n              <img src=\"/images/battles/gladiator-equipment.png\" alt=\"Equipment\" />\n              <img src=\"/images/battles/gladiator-equipment.png\" alt=\"Equipment\" />\n              <img src=\"/images/battles/gladiator-equipment.png\" alt=\"Equipment\" />\n              <img src=\"/images/battles/gladiator-equipment.png\" alt=\"Equipment\" />\n            </GladiatorEquipments>\n            <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\" width=\"80%\">\n              <Heading>\n                {t('Enroll Timer: 1')}\n              </Heading>\n              <Heading>\n                {t('Attraction: 257')}\n              </Heading>\n            </Flex>\n            <GladiatorArena>\n              <ArenaImage>\n                <ArenaTitle>\n                  {t(`Arena: ${currentBattle.arena.charAt(0).toUpperCase().replaceAll('_', ' ') + currentBattle.arena.slice(1)}`)}\n                </ArenaTitle>\n                <ArenaPrize>{t('Arena Incentive Prize: 100 DENA')}</ArenaPrize>\n                <ArenaImage>\n                  <div ref={left} onMouseEnter={() => { setTooltipName(\"Terrain is \" + (currentBattle?.terrain)) }}>\n                    <img\n                      src={`/images/battles/${currentBattle?.terrain === \"Polar\" ? \"glacial\".toLowerCase() : currentBattle?.terrain.toLowerCase()}.png`}\n                      alt=\"Arena\"\n                      style={{ height: \"80px\", marginLeft: \"50px\" }}\n                    />\n                  </div>\n                  <img src={`/images/arenas/${areena.toLowerCase()}.jpg`} alt=\"Arena\" />\n                </ArenaImage>\n              </ArenaImage>\n            </GladiatorArena>\n          </GladiatorWar>\n          <GladiatorRight>\n            <DefenseLable>\n              {t('Defense')}\n            </DefenseLable>\n            <img src={defenderNft?.glTFPath ? defenderNft?.glTFPath.replace(\"scene.gltf\", \"preview.png\") : \"/images/battles/right.png\"} alt=\"Gladiator\" />\n            <GladiatorEquipments>\n              <EquipmentImages data={defenderEquipmentsImages} />\n            </GladiatorEquipments>\n            <div ref={right} onMouseEnter={() => { setTooltipName(\"Best terrain is \" + (defenderNft?.bestTerrain)) }}>\n              <img\n                src={`/images/battles/${defenderNft?.bestTerrain === \"Polar\" ? \"glacial\".toLowerCase() : defenderNft?.bestTerrain.toLowerCase()}.png`}\n                alt=\"Arena\"\n                style={{ height: \"80px\" }}\n              />\n            </div>\n          </GladiatorRight>\n        </GladiatorBattle>\n        {\n          loading ?\n            <CalculatingCard />\n            : <></>\n        }\n      </CardInner>\n\n    </NewCard>\n  )\n}\n\nexport default LiveBattle\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useCountUp } from 'react-countup'\nimport {\n  Card,\n  CardBody,\n  Flex,\n  PlayCircleOutlineIcon,\n  Skeleton,\n  Text,\n  TooltipText,\n  useTooltip,\n  BlockIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled, { keyframes } from 'styled-components'\nimport RoundProgress from 'components/RoundProgress'\nimport CardHeader from './CardHeader'\nimport { getSpecificJoinPageNfts, getSpecificGladiators2 } from 'state/nftMarket/helpers'\nimport { useBattleNft, usePredictionNft } from 'hooks/useContract'\nimport galleryNfts from 'config/constants/gallery/gallery'\nimport { current } from '@reduxjs/toolkit'\nimport { ethers } from \"ethers\"\n\nimport GladiatorAttributesRow from './GladiatorAttributesRow'\nimport EquipmentImages from './EquipmentImages'\n\nconst NewCard = styled(Card)`\n  opacity: 0.8;\n  width: 700px;\n  height: auto;\n  margin-right: 20px;\n`\nconst CardInner = styled.div`\n  padding: 0px 12px 0px 12px;\n  background-image: url(/images/battles/card-bg.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n`\nconst GladiatorBattle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  //   align-items: center;\n`\nconst GladiatorWar = styled.div`\n  width: 340px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-image: url(/images/battles/center-ngg.png);\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n`\nconst GladiatorRight = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 30px;\n  & img {\n    height: 200px;\n    margin-top: 30px;\n  }\n`\nconst GladiatorLeft = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 30px;\n  & img {\n    height: 200px;\n    margin-top: 30px;\n  }\n`\nconst Bet = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  background-image: url(/images/battles/button-bg2.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  width: 175px;\n  height: 36px;\n  font-size: 20px;\n  margin-top: 12px;\n  color: #fff;\n`\nconst BetValue = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  margin: 0px 10px 0px 10px;\n`\nconst TokenImage = styled.img`\n  width: 32px;\n  margin-left: 10px;\n`\nconst Statistics = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: start;\n  width: 100%;\n  color: #fff;\n  font-size: 18px;\n  font-weight: bold;\n  margin-top: 12px;\n  margin-left: 40px;\n`\nconst Heading1 = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: start;\n  width: 100%;\n  color: #fff;\n  font-size: 16px;\n  font-weight: bold;\n  margin: 15px 0px 0px 25px;\n  white-space: nowrap;\n`\nconst Heading2 = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: end;\n  width: 100%;\n  color: #fff;\n  font-size: 16px;\n  font-weight: bold;\n  margin: 15px 15px 0px 0px;\n  white-space: nowrap;\n`\nconst ArenaTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: start;\n  // width: 100%;\n  color: #fff;\n  font-size: 16px;\n  font-weight: bold;\n  margin: 0px 20px 10px 25px;\n`\nconst Time = styled.div`\n  color: #7d91ad;\n  font-size: 18px;\n  font-weight: bold;\n  margin-left: 30px;\n`\nconst GladiatorsStats = styled.div`\n  margin-top: 12px;\n  width: 85%;\n  height: 200px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n`\nconst Attribute = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  color: #c09451;\n  font-size: 20px;\n  font-weight: bold;\n  text-align: center;\n`\nconst Value = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  color: #7d91ad;\n  font-size: 24px;\n  font-weight: bold;\n  margin-top: 20px;\n  &:first-child {\n    margin-top: 0;\n  }\n`\nconst GladiatorAttributes = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px 16px 0px 6px;\n`\nconst RightValues = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: end;\n  justify-content: space-between;\n  color: #7d91ad;\n  font-size: 16px;\n  white-space: nowrap;\n`\nconst LeftValues = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: space-between;\n  color: #7d91ad;\n  font-size: 16px;\n`\nconst Gladiators = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  //   margin-top: 20px;\n`\nconst OpponentGladiator = styled.div`\n  color: #7d91ad;\n  font-size: 26px;\n  font-weight: bold;\n  //   width: 30%;\n  white-space: nowrap;\n`\nconst VsImage = styled.div`\n  width: 50px;\n`\nconst MyGladiator = styled.div`\n  color: #7d91ad;\n  font-size: 26px;\n  font-weight: bold;\n  //   width: 30%;\n  display: flex;\n  justify-content: end;\n  white-space: nowrap;\n`\nconst GladiatorArena = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 10px;\n`\nconst ArenaHeading = styled.div`\n  color: #7d91ad;\n  font-size: 32px;\n  font-weight: bold;\n`\nconst ArenaImage = styled.div`\n  width: 280px;\n  height: auto;\n  margin-top: 0px;\n  position: relative;\n\n  & img:nth-child(1) {\n    position: absolute;\n    top: -45px;\n    right: -30px;\n  }\n\n  & img:nth-child(2) {\n    padding: 0px 0px 0px 15px;\n    height: 120px !important;\n    width: 100%;\n    object-fit: cover;\n  }\n`\nconst IconImage = styled.img`\n  width: 24px;\n`\n\nconst GladiatorEquipments = styled.div`\n  margin-top: 15px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  // flex-wrap: wrap;\n  & img {\n    width: 50px;\n    height: 50px;\n    margin: 5px;\n  }\n  &::-webkit-scrollbar {\n    background: : #7D91AD !important;\n    height: 5px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #7D91AD;\n  }\n`\nconst AttackLable = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background-image: url(/images/battles/red.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  width: 120px;\n  height: 27px;\n  font-size: 20px;\n  margin-top: 12px;\n  color: #fff;\n`\nconst DefenseLable = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background-image: url(/images/battles/blue.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  width: 120px;\n  height: 27px;\n  font-size: 20px;\n  margin-top: 12px;\n  color: #fff;\n`\nconst Progress = styled.div`\n  height: 8px;\n  width: 100%;\n  background-color: #000;\n`\nconst AttackWinner = styled.div`\n  & img:nth-child(1) {\n    position: relative;\n    top: 0;\n    left: 0;\n  }\n  & img:nth-child(2) {\n    width: 150px;\n    height: auto;\n    position: absolute;\n    top: 200px;\n    left: 40px;\n    opacity: 1 !important;\n  }\n`\n\n\nconst DefenceWinner = styled.div`\n  & img:nth-child(1) {\n    position: relative;\n    top: 0;\n    left: 0;\n  }\n  & img:nth-child(2) {\n    width: 150px;\n    height: auto;\n    position: absolute;\n    top: 200px;\n    right: 15px;\n    opacity: 1 !important;\n  }\n`\n\nconst AttackBackground = styled.div`\n  background-image: url(/images/battles/1.png);\n  width: 50px;\n  height: 50px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 4px;\n  margin: 2px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  & img {\n    width: 35px;\n    height: 35px;\n    margin: 5px;\n  }\n`\nconst DefenseBackground = styled.div`\n  background-image: url(/images/battles/2.png);\n  width: 50px;\n  height: 50px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 4px;\n  margin: 2px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  & img {\n    width: 35px;\n    height: 35px;\n    margin: 5px;\n  }\n`\nconst AnimalBackground = styled.div`\n  background-image: url(/images/battles/3.png);\n  width: 50px;\n  height: 50px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 4px;\n  margin: 2px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  & img {\n    width: 35px;\n    height: 35px;\n    margin: 5px;\n  }\n`\nconst ResultsCard = styled.div`\n  position: absolute;\n  background-color: rgba(0, 0, 0, .15);  \n  backdrop-filter: blur(4px);\n  top: 0;\n  bottom: 0;\n  left: 0; \n  right: 0; \n  margin: auto; \n  width: 330px;\n  height: 185px;\n  border-radius: 16px;\n  border: 2px solid #D9AB3A;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 24px;\n`\n\nconst ArenaPrize = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: start;\n  color: #fff;\n  font-size: 16px;\n  margin: 0px 10px 30px 20px;\n`\n\ninterface ExpiredBattleProps {\n  currentBattle?: any\n  remainingTime: any\n\n}\nconst ExpiredBattle: React.FC<ExpiredBattleProps> = ({ currentBattle, remainingTime }) => {\n  const { t } = useTranslation()\n  // console.log(\"currentBattlecurrentBattle\", currentBattle)\n  const [attackerNft, setAttackerNft] = useState(null)\n  const [defenderNft, setDefenderNft] = useState(null)\n  const [areena, setAreena] = useState<string>(\"\")\n  const [winner, setWinner] = useState<string>(\"\")\n  const [attacker, setAttacker] = useState<string>(\"\")\n  const [defender, setDefender] = useState<string>(\"\")\n  const [attackerEquipmentsImages, setAttackerEquipmentsImages] = useState([])\n  const [defenderEquipmentsImages, setDefenderEquipmentsImages] = useState([])\n  const [totalRewardAmount, setTotalRewardAmount] = useState<string | number>(0)\n\n  const battleContract = useBattleNft()\n  const predictionNft = usePredictionNft()\n  const getGladiatorsFromDb = async () => {\n    try {\n      findAmount()\n      const attackerId = parseInt(currentBattle?.attackerId?._hex, 16)\n      const defenderId = parseInt(currentBattle?.defenderId?._hex, 16)\n      const gladiators = await getSpecificGladiators2([attackerId, defenderId])\n      const attackerGladiator = gladiators.find((nft) => nft.tokenId == attackerId)\n      const defenderGladiator = gladiators.find((nft) => nft.tokenId == defenderId)\n      // get gladiator form config file\n      const attackerFromConfig = galleryNfts.find((nft) => nft.name === attackerGladiator?.ipfsJson?.nft?.name)\n      const defenderFromConfig = galleryNfts.find((nft) => nft.name === defenderGladiator?.ipfsJson?.nft?.name)\n      setAttackerNft(attackerFromConfig)\n      setDefenderNft(defenderFromConfig)\n      const attackerPlayer = await battleContract.playerInfo(currentBattle.attacker.toString())\n      const attackerAttackId = parseInt(attackerPlayer?.attackEqId?._hex, 16)\n      const attackerDefenseId = parseInt(attackerPlayer?.defenceEqId?._hex, 16)\n      const attackerAnimalId = parseInt(attackerPlayer?.animalId?._hex, 16)\n      // console.log(\"attackerPlayerattackerPlayerattackerPlayer\", attackerPlayer);\n      const attackerEquipments = await getSpecificJoinPageNfts([attackerAttackId, attackerDefenseId, attackerAnimalId])\n      setAttackerEquipmentsImages(\n        attackerEquipments.map((eq) => {\n          return {\n            image: eq?.ipfsJson?.imagePath,\n            type: eq?.ipfsJson?.type,\n            name: eq?.ipfsJson?.name,\n            agility: eq?.ipfsJson?.agility,\n            coach: eq?.ipfsJson?.coach,\n            cook: eq?.ipfsJson?.cook,\n            dual: eq?.ipfsJson?.dual,\n            endurance: eq?.ipfsJson?.endurance,\n            intelligance: eq?.ipfsJson?.intelligance,\n            leadership: eq?.ipfsJson?.leadership,\n            level: eq?.ipfsJson?.level,\n            medical: eq?.ipfsJson?.medical,\n            onehand: eq?.ipfsJson?.onehand,\n            polearms: eq?.ipfsJson?.polearms,\n            precision: eq?.ipfsJson?.precision,\n            range: eq?.ipfsJson?.range,\n            shield: eq?.ipfsJson?.shield,\n            smith: eq?.ipfsJson?.smith,\n            strength: eq?.ipfsJson?.strength,\n            torture: eq?.ipfsJson?.torture,\n            twohand: eq?.ipfsJson?.twohand,\n            willpower: eq?.ipfsJson?.willpower,\n          }\n        }),\n      )\n      // console.log(\"attackerEquipmentsattackerEquipments\", attackerEquipments);\n      const defenderPlayer = await battleContract.playerInfo(currentBattle.defender.toString())\n      // console.log(\"defenderPlayerdefenderPlayerdefenderPlayer\", defenderPlayer);\n\n      const defenderAttackId = parseInt(defenderPlayer?.attackEqId?._hex, 16)\n      const defenderdefenseId = parseInt(defenderPlayer?.defenceEqId?._hex, 16)\n      const defenderAnimalId = parseInt(defenderPlayer?.animalId?._hex, 16)\n      const defenderEquipments = await getSpecificJoinPageNfts([defenderAttackId, defenderdefenseId, defenderAnimalId])\n      // console.log(\"defenderEquipmentsdefenderEquipments\", defenderEquipments);\n      setDefenderEquipmentsImages(\n        defenderEquipments.map((eq) => {\n          return {\n            image: eq?.ipfsJson?.imagePath,\n            type: eq?.ipfsJson?.type,\n            name: eq?.ipfsJson?.name,\n            agility: eq?.ipfsJson?.agility,\n            coach: eq?.ipfsJson?.coach,\n            cook: eq?.ipfsJson?.cook,\n            dual: eq?.ipfsJson?.dual,\n            endurance: eq?.ipfsJson?.endurance,\n            intelligance: eq?.ipfsJson?.intelligance,\n            leadership: eq?.ipfsJson?.leadership,\n            level: eq?.ipfsJson?.level,\n            medical: eq?.ipfsJson?.medical,\n            onehand: eq?.ipfsJson?.onehand,\n            polearms: eq?.ipfsJson?.polearms,\n            precision: eq?.ipfsJson?.precision,\n            range: eq?.ipfsJson?.range,\n            shield: eq?.ipfsJson?.shield,\n            smith: eq?.ipfsJson?.smith,\n            strength: eq?.ipfsJson?.strength,\n            torture: eq?.ipfsJson?.torture,\n            twohand: eq?.ipfsJson?.twohand,\n            willpower: eq?.ipfsJson?.willpower,\n          }\n        }),\n      )\n    } catch (error) {\n      console.log('errorrrr', error)\n    }\n  }\n  // console.log(\"attackerEquipmentsImagesattackerEquipmentsImages\", attackerEquipmentsImages);\n  // console.log(\"defenderEquipmentsImagesdefenderEquipmentsImages\", defenderEquipmentsImages);\n  useEffect(() => {\n    if (currentBattle) {\n      getGladiatorsFromDb()\n    }\n  }, [currentBattle])\n  // useEffect(() => {\n  //   if(attackerNft && defenderNft){\n  //     console.log(\"attackerNftattackerNft\", attackerNft);\n  //     console.log(\"defenderNftdefenderNft\", defenderNft);\n  //   }\n  // }, [attackerNft, defenderNft])\n\n  const findAmount = async () => {\n    const totalReward = await predictionNft.rounds(currentBattle.round.toString())\n    // console.log(\"totalReward\", totalReward)\n    const ethValue1 = ethers.utils.formatEther(totalReward.attackerAmount);\n    const ethValue2 = ethers.utils.formatEther(totalReward.defenderAmount);\n    setTotalRewardAmount(String(Number(ethValue1) + Number(ethValue2)))\n  }\n  const [tooltipName, setTooltipName] = useState(\"\")\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(t(tooltipName), {\n    placement: 'bottom',\n  })\n\n  const { targetRef: left, tooltip: leftTooltip, tooltipVisible: leftTooltipVisible } = useTooltip(t(tooltipName), {\n    placement: 'right',\n  })\n\n  const { targetRef: right, tooltip: rightTooltip, tooltipVisible: rightTooltipVisible } = useTooltip(t(tooltipName), {\n    placement: 'bottom',\n  })\n\n  useEffect(() => {\n    if (currentBattle) {\n      setWinner(currentBattle?.winner || \"\")\n      setDefender(currentBattle?.defender || \"\")\n      setAttacker(currentBattle?.attacker || \"\")\n    }\n  }, [currentBattle])\n\n  useEffect(() => {\n    if (currentBattle) {\n      if (currentBattle.arena === \"Arles Arena\") {\n        setAreena(\"arles_arena\")\n      } else if (currentBattle.arena === \"Ateia Trebellia\") {\n        setAreena(\"ateia_trebellia\")\n      } else if (currentBattle.arena === \"Gladiator Arena\") {\n        setAreena(\"gladiator_arena\")\n      } else if (currentBattle.arena === \"Matia Piso\") {\n        setAreena(\"matia_piso\")\n      } else if (currentBattle.arena === \"Nimes Amphitheatre\") {\n        setAreena(\"nimes_amphitheatre\")\n      } else if (currentBattle.arena === \"Nimes Amphitheatre\") {\n        setAreena(\"nimes_amphitheatre\")\n      }\n      else {\n        setAreena(currentBattle.arena)\n      }\n\n\n    }\n  }, [currentBattle])\n  return (\n    <NewCard isActive>\n      {tooltipVisible && tooltip}\n      {leftTooltipVisible && leftTooltip}\n      {rightTooltipVisible && rightTooltip}\n      <CardHeader\n        status=\"expired\"\n        icon={<BlockIcon mr=\"4px\" width=\"21px\" color=\"textDisabled\" />}\n        title={t('Expired')}\n        epoch={Number(currentBattle.round)}\n      />\n      {/* <RoundProgress variant=\"flat\" scale=\"sm\" lockTimestamp={20} closeTimestamp={25} /> */}\n      <CardInner>\n        <GladiatorBattle>\n          <GladiatorLeft>\n            <AttackLable>{t('Attack')}</AttackLable>\n            <AttackWinner>\n              <img\n                src={\n                  attackerNft?.glTFPath\n                    ? attackerNft?.glTFPath.replace('scene.gltf', 'preview.png')\n                    : '/images/battles/left.png'\n                }\n                alt=\"Gladiator\"\n              />\n              {\n                attacker === winner ?\n                  <img src=\"/images/battles/winner.png\" alt=\"Gladiator\" /> : null\n              }\n            </AttackWinner>\n\n            <GladiatorEquipments>\n              {/* {console.log(\"attackerEquipmentsImagesattackerEquipmentsImages\", attackerEquipmentsImages)} */}\n              <EquipmentImages data={attackerEquipmentsImages} />\n            </GladiatorEquipments>\n            <div ref={targetRef} onMouseEnter={() => { setTooltipName(\"Best terrain is \" + (attackerNft?.bestTerrain)) }}>\n              <img\n                src={`/images/battles/${attackerNft?.bestTerrain === \"Polar\" ? \"glacial\".toLowerCase() : attackerNft?.bestTerrain.toLowerCase()}.png`}\n                alt=\"Arena\"\n                style={{ height: \"80px\" }}\n              />\n            </div>\n          </GladiatorLeft>\n          <GladiatorWar>\n            <Bet>\n              <BetValue>{t('Bet')}</BetValue>\n              <BetValue>{totalRewardAmount} DENA</BetValue>\n            </Bet>\n            <Statistics>{t('Statistics:')}</Statistics>\n            <GladiatorsStats>\n              <Text color=\"subtle\" fontWeight=\"bold\" ml=\"15px\">{t('Attributes')}</Text>\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.attributes?.strength || 0}\n                defender={defenderNft?.attributes?.strength || 0}\n                image=\"/images/battles/icons/strength.png\"\n                tooltipValue=\"Strength\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.attributes?.endurance || 0}\n                defender={defenderNft?.attributes?.endurance || 0}\n                image=\"/images/battles/icons/endurance.png\"\n                tooltipValue=\"Endurance\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.attributes?.agility || 0}\n                defender={defenderNft?.attributes?.agility || 0}\n                image=\"/images/battles/icons/agility.png\"\n                tooltipValue=\"Agility\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.attributes?.precision || 0}\n                defender={defenderNft?.attributes?.precision || 0}\n                image=\"/images/battles/icons/precision.png\"\n                tooltipValue=\"Precision\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.attributes?.intelligance || 0}\n                defender={defenderNft?.attributes?.intelligance || 0}\n                image=\"/images/battles/icons/intelligence.png\"\n                tooltipValue=\"Intelligance\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.attributes?.willpower || 0}\n                defender={defenderNft?.attributes?.willpower || 0}\n                image=\"/images/battles/icons/willpower.png\"\n                tooltipValue=\"Willpower\"\n              />\n\n              <Text color=\"subtle\" fontWeight=\"bold\" ml=\"15px\" mt=\"8px\" mb=\"4px\">{t('Weapon Mastery')}</Text>\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.weapons?.oneHand || 0}\n                defender={defenderNft?.weapons?.oneHand || 0}\n                image=\"/images/battles/icons/one-handed.png\"\n                tooltipValue=\"One Hand\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.weapons?.twoHand || 0}\n                defender={defenderNft?.weapons?.twoHand || 0}\n                image=\"/images/battles/icons/two-handed.png\"\n                tooltipValue=\"Two Hand\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.weapons?.shield || 0}\n                defender={defenderNft?.weapons?.shield || 0}\n                image=\"/images/battles/icons/shield.png\"\n                tooltipValue=\"Shield\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.weapons?.ranged || 0}\n                defender={defenderNft?.weapons?.ranged || 0}\n                image=\"/images/battles/icons/ranged.png\"\n                tooltipValue=\"Ranged\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.weapons?.dual || 0}\n                defender={defenderNft?.weapons?.dual || 0}\n                image=\"/images/battles/icons/dual.png\"\n                tooltipValue=\"Dual\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.weapons?.polearms || 0}\n                defender={defenderNft?.weapons?.polearms || 0}\n                image=\"/images/battles/icons/polearms.png\"\n                tooltipValue=\"Polearms\"\n              />\n\n              <Text color=\"subtle\" fontWeight=\"bold\" ml=\"15px\" mt=\"8px\" mb=\"4px\">{t('Abilities')}</Text>\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.abilities?.leadership || 0}\n                defender={defenderNft?.abilities?.leadership || 0}\n                image=\"/images/battles/icons/leadership.png\"\n                tooltipValue=\"Leadership\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.abilities?.coach || 0}\n                defender={defenderNft?.abilities?.coach || 0}\n                image=\"/images/battles/icons/coach.png\"\n                tooltipValue=\"Coach\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.abilities?.cook || 0}\n                defender={defenderNft?.abilities?.cook || 0}\n                image=\"/images/battles/icons/cook.png\"\n                tooltipValue=\"Cook\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.abilities?.medical || 0}\n                defender={defenderNft?.abilities?.medical || 0}\n                image=\"/images/battles/icons/medical.png\"\n                tooltipValue=\"Medical\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.abilities?.smith || 0}\n                defender={defenderNft?.abilities?.smith || 0}\n                image=\"/images/battles/icons/smith.png\"\n                tooltipValue=\"Smith\"\n              />\n\n              <GladiatorAttributesRow\n                attacker={attackerNft?.abilities?.torture || 0}\n                defender={defenderNft?.abilities?.torture || 0}\n                image=\"/images/battles/icons/torture.png\"\n                tooltipValue=\"Torture\"\n              />\n\n            </GladiatorsStats>\n            <Statistics>{t('Trophies:')}</Statistics>\n            <GladiatorEquipments>\n              <img src=\"/images/battles/gladiator-equipment.png\" alt=\"Equipment\" />\n              <img src=\"/images/battles/gladiator-equipment.png\" alt=\"Equipment\" />\n              <img src=\"/images/battles/gladiator-equipment.png\" alt=\"Equipment\" />\n              <img src=\"/images/battles/gladiator-equipment.png\" alt=\"Equipment\" />\n            </GladiatorEquipments>\n            <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n              {/* <Heading>\n              {t('Enroll Timer: 1')}\n            </Heading>\n            <Heading>\n              {t('Attraction: 257')}\n            </Heading> */}\n            </Flex>\n            <GladiatorArena>\n              <ArenaImage>\n                <ArenaTitle>{t(`Arena: ${currentBattle.arena.charAt(0).toUpperCase().replaceAll('_', ' ') + currentBattle.arena.slice(1)}`)}</ArenaTitle>\n                <ArenaPrize>{t('Arena Incentive Prize: 100 DENA')}</ArenaPrize>\n                <ArenaImage>\n                  <div ref={left} onMouseEnter={() => { setTooltipName(\"Terrain is \" + (currentBattle?.terrain)) }}>\n                    <img\n                      src={`/images/battles/${currentBattle?.terrain === \"Polar\" ? \"glacial\".toLowerCase() : currentBattle?.terrain?.toLowerCase()}.png`}\n                      alt=\"Arena\"\n                      style={{ height: \"80px\", marginLeft: \"50px\" }}\n                    />\n                  </div>\n                  <img src={`/images/arenas/${areena.toLowerCase()}.jpg`} alt=\"Arena\" />\n                </ArenaImage>\n              </ArenaImage>\n            </GladiatorArena>\n          </GladiatorWar>\n          <GladiatorRight>\n            <DefenseLable>{t('Defense')}</DefenseLable>\n\n            <DefenceWinner>\n              <img\n                src={\n                  defenderNft?.glTFPath\n                    ? defenderNft?.glTFPath.replace('scene.gltf', 'preview.png')\n                    : '/images/battles/right.png'\n                }\n                alt=\"Gladiator\"\n              />\n              {\n                defender == winner ?\n                  <img src=\"/images/battles/winner.png\" alt=\"Gladiator\" /> : null\n\n              }\n            </DefenceWinner>\n            <GladiatorEquipments>\n              <EquipmentImages data={defenderEquipmentsImages} />\n            </GladiatorEquipments>\n            <div ref={right} onMouseEnter={() => { setTooltipName(\"Best terrain is \" + (defenderNft?.bestTerrain)) }}>\n              <img\n                src={`/images/battles/${defenderNft?.bestTerrain === \"Polar\" ? \"glacial\".toLowerCase() : defenderNft?.bestTerrain.toLowerCase()}.png`}\n                alt=\"Arena\"\n                style={{ height: \"80px\" }}\n              />\n            </div>\n          </GladiatorRight>\n        </GladiatorBattle>\n        <ResultsCard>\n          <Text textAlign=\"left\" fontWeight=\"bold\" fontSize=\"20px\" width=\"100%\" color=\"#D9AB3A\">{t('Closed Price')}</Text>\n          <Flex width=\"100%\" justifyContent=\"space-between\" mt=\"15px\">\n            <Text fontSize=\"18px\">{t('Locked Price:')}</Text>\n            <Text fontSize=\"18px\">455.67 DENA</Text>\n          </Flex>\n          <Flex width=\"100%\" justifyContent=\"space-between\" mt=\"8px\">\n            <Text fontWeight=\"bold\" fontSize=\"18px\">{t('Prize Pool:')}</Text>\n            <Text fontWeight=\"bold\" fontSize=\"18px\">75.34 DENA</Text>\n          </Flex>\n        </ResultsCard>\n      </CardInner>\n    </NewCard >\n  )\n}\n\nexport default ExpiredBattle\n","import React, { useState, useEffect } from 'react'\nimport {\n  Card,\n  CardBody,\n  Flex,\n  PlayCircleOutlineIcon,\n  Skeleton,\n  Text,\n  TooltipText,\n  useTooltip,\n  WaitIcon,\n  useModal,\n  Modal,\n  Button,\n  ArrowBackIcon,\n  IconButton,\n  BinanceIcon,\n  BalanceInput,\n  Slider,\n  Box,\n  AutoRenewIcon,\n} from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useBattleNft, usePredictionNft, useCake } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport { parseUnits } from '@ethersproject/units'\nimport { ethersToBigNumber } from 'utils/bigNumber'\n3\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { MaxUint256 } from '@ethersproject/constants'\nimport { ethers } from \"ethers\"\n\ninterface ModalComponentProps {\n  onDismiss?: () => void\n  currentBattle: any\n  findAmount: any\n  totalRewardAmount: string | number\n  secondsRemaining?: number\n\n}\n\n\n\n\nconst NewModal = styled(Modal)`\n  height: 440px;\n  width: 420px;\n  overflow-x: hidden;\n`\nconst CardFlip = styled.div`\n  background-color: transparent;\n  width: 100%;\n  height: 300px;\n  // cursor: pointer;\n  perspective: 1000px;\n`\nconst InnerCard = styled.div<{ clicked: boolean }>`\n  // position: relative;\n  // width: 100%;\n  // height: 100%;\n  // text-align: center;\n  // transition: transform 1s;\n  // transform-style: preserve-3d;\n  // box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  \n  // &:hover {\n  //     transform: rotateY(180deg);\n  // }\n\n  height: 100%;\n  position: relative;\n  transform-style: preserve-3d;\n  transition: transform 600ms;\n`\nconst CardFront = styled.div`\n  // position: absolute;\n  // width: 100%;\n  // height: 100%;\n  // backface-visibility: hidden;\n  // color: black;\n  // z-index: 2;\n  // border-radius: 5px;\n  // padding: 5px;\n\n  align-items: center;\n  backface-visibility: hidden;\n  display: flex;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  transition: z-index 600ms;\n  width: 100%;\n\n  & > div {\n    flex: 1;\n  }\n`\nconst PrizeCard = styled.div`\n  background-color: rgba(0, 0, 0, 0.8);\n  // opacity: 0.8;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 24px;\n  border: 2px solid #D9AB3A;\n  padding: 32px;\n`\nconst PrizeHeading = styled.div`\n  color: #fff;\n  font-size: 28px;\n  font-weight: 500;\n`\nconst EnterAttack = styled.div`\n  background-image: url(/images/battles/red.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  width: 320px;\n  height: 72px;\n  opacity: 1 !important;\n  margin-top: 25px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 28px;\n  &:hover {\n    cursor: pointer;\n  }\n`\nconst EnterDefense = styled.div`\n  background-image: url(/images/battles/blue.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  width: 320px;\n  height: 72px;\n  opacity: 1 !important;\n  margin-top: 25px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 28px;\n  &:hover {\n    cursor: pointer;\n  }\n`\nconst CardBack = styled(CardFront)`\n  // position: absolute;\n  // width: 100%;\n  // height: 100%;\n  // backface-visibility: hidden;\n  // color: white;\n  \n  // transform: rotateY(180deg);\n  // z-index: 1;\n  // border-radius: 5px;\n\n  transform: rotateY(180deg);\n`\n\nconst BetInput = styled(BalanceInput)`\n  input {\n    color: white !important;\n  }\n`\n\nconst ModalComponent: React.FC<ModalComponentProps> = ({ onDismiss, currentBattle, findAmount, totalRewardAmount, secondsRemaining }) => {\n  const [amount, setAmount] = useState<string>(\"\")\n  const [denaBalance, setDenaBalance] = useState<number>(0)\n\n  const { t } = useTranslation()\n  const [flip, setFlip] = useState(false);\n  const [hide, setHide] = useState(false);\n  const battleContract = useBattleNft()\n  const predictionContract = usePredictionNft()\n  const cakeContract = useCake()\n  const { account } = useWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { toastInfo, toastSuccess, toastError } = useToast()\n  const [selectedType, setSelectedType] = useState(\"\")\n  const handleClick = (value1) => {\n    // setFlip(!flip);\n    const card = document.getElementById(\"card\")\n    if (value1 === \"backAttack\") {\n      card.style.transform = \"rotateY(180deg)\"\n      setSelectedType(\"Attack\")\n    } else if (value1 === \"backDefense\") {\n      card.style.transform = \"rotateY(180deg)\"\n      setSelectedType(\"Defense\")\n    } else if (value1 === \"front\") {\n      card.style.transform = \"rotateY(0deg)\"\n    }\n    setAmount(\"\")\n  }\n  const {\n    isApproving: isAttackerApproving,\n    isApproved: isAttackerApproved,\n    isConfirmed: isAttackerConfirmed,\n    isConfirming: isAttackerConfirming,\n    handleApprove: attackerHandleApprove,\n    handleConfirm: attackerHandleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.allowance(account, predictionContract.address)\n        const currentAllowance = ethersToBigNumber(response)\n        return currentAllowance.gt(0)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return callWithGasPrice(cakeContract, 'approve', [predictionContract.address, MaxUint256.toString()])\n    },\n    onApproveSuccess: async ({ receipt }) => {\n      toastSuccess(t('Contract approved'))\n    },\n    onConfirm: async () => {\n      // console.log(\" parseUnits((selectedRounds * totalRounds).toString() )\",  parseUnits((selectedRounds * totalRounds).toString() ));\n      try {\n        // console.log(\"amountttttttttttttttttttttttttttttttt\", amount)\n        const ethToWei = ethers.utils.parseEther(amount)\n        const data = await callWithGasPrice(predictionContract, 'betAttacker', [\n          currentBattle.round.toString(),\n          // value.toString() ,\n          parseInt(ethToWei._hex, 16).toString()\n        ])\n        return data\n      } catch (error: any) {\n        console.log(\"errorrrrrrrrrrrrrr\", error)\n        throw new Error(error)\n      }\n    },\n    onSuccess: async ({ receipt }) => {\n      toastSuccess(t(`You have bet on ${selectedType} successfully`))\n      onDismiss()\n    },\n  })\n  // const ethToWei = ethers.utils.parseEther('0.00000123')\n  // console.log(\"ethToWeiethToWeiethToWeiethToWei\", parseInt(ethToWei._hex, 16).toString())\n\n  const {\n    isApproving: isDefenderApproving,\n    isApproved: isDefenderApproved,\n    isConfirmed: isDefenderConfirmed,\n    isConfirming: isDefenderConfirming,\n    handleApprove: defenderHandleApprove,\n    handleConfirm: defenderHandleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.allowance(account, predictionContract.address)\n        const currentAllowance = ethersToBigNumber(response)\n        return currentAllowance.gt(0)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return callWithGasPrice(cakeContract, 'approve', [predictionContract.address, MaxUint256.toString()])\n    },\n    onApproveSuccess: async ({ receipt }) => {\n      toastSuccess(t('Contract approved'))\n    },\n    onConfirm: async () => {\n      // console.log(\" parseUnits((selectedRounds * totalRounds).toString() )\",  parseUnits((selectedRounds * totalRounds).toString() ));\n\n      try {\n\n        const ethToWei = ethers.utils.parseEther(amount.toString())\n        const data = await callWithGasPrice(predictionContract, 'betDefender', [\n          currentBattle.round.toString(),\n          parseInt(ethToWei._hex, 16).toString()\n\n        ])\n        return data\n      } catch (error: any) {\n        throw new Error(error)\n      }\n    },\n    onSuccess: async ({ receipt }) => {\n      toastSuccess(t(`You have bet on ${selectedType} successfully`))\n      onDismiss()\n    },\n  })\n\n  const handleInputChange = (e) => {\n    setAmount(e)\n  }\n  const handleBet = () => {\n    // console.log(\"selectedType\", selectedType)\n    // console.log(\"input\", input)\n    payBitAmount({ type: selectedType })\n  }\n\n  const handleClickOnAttackBtn = () => {\n    if (!isAttackerApproved) {\n      attackerHandleApprove()\n    } else {\n      attackerHandleConfirm()\n      findAmount()\n    }\n  }\n  const handleClickOnDefenseBtn = () => {\n\n    if (!isDefenderApproved) {\n      defenderHandleApprove()\n    } else {\n      defenderHandleConfirm()\n      findAmount()\n\n    }\n  }\n  const payBitAmount = ({ type }) => {\n    if (type === \"Attack\") {\n      handleClickOnAttackBtn()\n    } else if (type === \"Defense\") {\n      handleClickOnDefenseBtn()\n    }\n  }\n  useEffect(() => {\n    if (secondsRemaining <= 12) {\n      // console.log(\"onDismissonDismissonDismiss\")\n      onDismiss()\n    }\n  }, [secondsRemaining])\n\n  useEffect(() => {\n    if (account) {\n      (async () => {\n        const amount = await cakeContract?.balanceOf(account)\n        const ethValue = ethers.utils.formatEther(amount);\n        setDenaBalance(Number(ethValue))\n      })()\n    }\n  }, [account])\n// console.log(\"denaBalancedenaBalancedenaBalancedenaBalance\", denaBalance)\n  return (\n    <NewModal title=\"Place a bet\" onDismiss={onDismiss}>\n      <CardFlip>\n        <InnerCard clicked={flip} id=\"card\">\n          <CardFront>\n            <PrizeCard >\n              <Flex justifyContent=\"center\" width=\"100%\">\n                <PrizeHeading>Prize Poll: {totalRewardAmount} DENA</PrizeHeading>\n              </Flex>\n              <EnterAttack onClick={() => handleClick(\"backAttack\")}>Enter Attack</EnterAttack>\n              <EnterDefense onClick={() => handleClick(\"backDefense\")}>Enter Defense</EnterDefense>\n            </PrizeCard>\n          </CardFront>\n          <CardBack>\n            <PrizeCard >\n              <div style={{ width: '100%' }}>\n                <Button scale=\"sm\" mb=\"15px\" onClick={() => handleClick(\"front\")}>\n                  <ArrowBackIcon color=\"textSubtle\" width=\"24px\" mr=\"4px\" />Back</Button>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n                  <Text textAlign=\"right\" color=\"textSubtle\">\n                    {t('Bet Amount')}:\n                  </Text>\n                  <Flex alignItems=\"center\">\n                    {/* <BinanceIcon mr=\"4px  \" /> */}\n                    <Text bold textTransform=\"uppercase\">\n                      DENA\n                    </Text>\n                  </Flex>\n                </Flex>\n                <BetInput\n                  value={amount}\n                  onUserInput={handleInputChange}\n                // isWarning={showFieldWarning}\n                // inputProps={{ disabled: !account || isTxPending }}\n                />\n                {/* <input type='text' value={amount} onChange={handleInputChange} /> */}\n                <Text\n                  // value=\"12\"\n                  // onChange={e => setAmount(e.target.value)}\n                  textAlign=\"right\" mb=\"16px\" color=\"textSubtle\" fontSize=\"12px\" style={{ height: '18px' }}>\n                  {/* {account && t('Balance: %balance%', { balance: balanceDisplay })} */}\n                  Account Balance: {denaBalance}\n                </Text>\n                <Box mb=\"8px\">\n                  {/* {account ? ( */}\n                  <Button\n                    width=\"100%\"\n                    disabled={amount ?\n                      isAttackerApproving ||\n                      isAttackerConfirming ||\n                      isDefenderApproving ||\n                      isDefenderConfirming :\n                      true}\n                    onClick={handleBet}\n                  // isLoading={isTxPending}\n                  // endIcon={isTxPending ? <AutoRenewIcon color=\"currentColor\" spin /> : null}\n                  >\n                    {t(`Enter Amount ${selectedType}`)}\n                  </Button>\n                  {/* // ) : (\n                //   <ConnectWalletButton width=\"100%\" />\n                // )} */}\n                </Box>\n              </div>\n            </PrizeCard>\n          </CardBack>\n        </InnerCard>\n      </CardFlip>\n    </NewModal>\n  )\n}\n\nexport default ModalComponent","import React, { useEffect, useState } from 'react'\nimport { useCountUp } from 'react-countup'\nimport {\n  Card,\n  CardBody,\n  Flex,\n  PlayCircleOutlineIcon,\n  Skeleton,\n  Text,\n  TooltipText,\n  useTooltip,\n  WaitIcon,\n  useModal,\n  Modal,\n  Button,\n  ArrowBackIcon,\n  IconButton,\n  BinanceIcon,\n  BalanceInput,\n  Slider,\n  Box,\n  AutoRenewIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled, { keyframes } from 'styled-components'\nimport RoundProgress from 'components/RoundProgress'\nimport CardHeader from './CardHeader'\nimport { getSpecificJoinPageNfts, getSpecificGladiators2 } from 'state/nftMarket/helpers'\nimport { useBattleNft, usePredictionNft, useCake } from 'hooks/useContract'\nimport galleryNfts from 'config/constants/gallery/gallery'\n\nimport { ethers } from \"ethers\"\nimport ModalComponent from './ModalComponent'\nimport GladiatorAttributesRow from './GladiatorAttributesRow'\nimport EquipmentImages from './EquipmentImages'\nimport useCountdown from 'views/Predictions/hooks/useCountdown'\n\n\n\n\n\n\n\n\nconst NewCard = styled(Card)`\n  width: 700px;\n  position: relative;\n  margin-right: 20px;\n`\nconst CardInner = styled.div`\n  padding: 0px 12px 0px 12px;\n  background-image: url(/images/battles/card-bg.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n`\nconst GladiatorBattle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  //   align-items: center;\n`\nconst GladiatorWar = styled.div`\n  width: 340px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-image: url(/images/battles/center-ngg.png);\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n`\nconst GladiatorRight = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 30px;\n  & img {\n    height: 200px;\n    margin-top: 30px;\n  }\n`\nconst GladiatorLeft = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 30px;\n  & img {\n    height: 200px;\n    margin-top: 30px;\n  }\n`\nconst Bet = styled.button<{ disable: boolean }>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  background-image: url(/images/battles/button-bg2.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  width: 175px;\n  height: 36px;\n  font-size: 20px;\n  margin-top: 12px;\n  color: #fff;\n  opacity: ${({ disable }) => (disable ? '0.5' : '1')};\n  background-color: transparent;\n  border: none;\n  :hover {\n    cursor: pointer;\n  }\n`\nconst BetValue = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  margin: 0px 10px 0px 10px;\n`\nconst TokenImage = styled.img`\n  width: 32px;\n  margin-left: 10px;\n`\nconst Statistics = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: start;\n  width: 100%;\n  color: #fff;\n  font-size: 18px;\n  font-weight: bold;\n  margin-top: 20px;\n  margin-left: 40px;\n`\nconst Heading = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  color: #fff;\n  font-size: 16px;\n  font-weight: bold;\n  margin: 20px 0px 0px 0px;\n`\nconst ArenaTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: start;\n  // width: 100%;\n  color: #fff;\n  font-size: 16px;\n  font-weight: bold;\n  margin: 0px 20px 10px 20px;\n`\nconst Time = styled.div`\n  color: #7d91ad;\n  font-size: 18px;\n  font-weight: bold;\n  margin-left: 30px;\n`\nconst GladiatorsStats = styled.div`\n  margin-top: 12px;\n  width: 85%;\n  height: 200px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n`\nconst Attribute = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  color: #c09451;\n  font-size: 20px;\n  font-weight: bold;\n  text-align: center;\n`\nconst Value = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  color: #7d91ad;\n  font-size: 24px;\n  font-weight: bold;\n  margin-top: 20px;\n  &:first-child {\n    margin-top: 0;\n  }\n`\nconst GladiatorAttributes = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px 16px 0px 6px;\n`\nconst RightValues = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: end;\n  justify-content: space-between;\n  color: #7d91ad;\n  font-size: 16px;\n  white-space: nowrap;\n`\nconst LeftValues = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: space-between;\n  color: #7d91ad;\n  font-size: 16px;\n`\nconst Gladiators = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  //   margin-top: 20px;\n`\nconst OpponentGladiator = styled.div`\n  color: #7d91ad;\n  font-size: 26px;\n  font-weight: bold;\n  //   width: 30%;\n  white-space: nowrap;\n`\nconst VsImage = styled.div`\n  width: 50px;\n`\nconst MyGladiator = styled.div`\n  color: #7d91ad;\n  font-size: 26px;\n  font-weight: bold;\n  //   width: 30%;\n  display: flex;\n  justify-content: end;\n  white-space: nowrap;\n`\nconst GladiatorArena = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 10px;\n`\nconst ArenaHeading = styled.div`\n  color: #7d91ad;\n  font-size: 32px;\n  font-weight: bold;\n`\nconst ArenaImage = styled.div`\n  width: 280px;\n  height: auto;\n  margin-top: 10px;\n  position: relative;\n\n  & img:nth-child(1) {\n    position: absolute;\n    top: -45px;\n    right: -30px;\n  }\n\n  & img:nth-child(2) {\n    padding: 0px 0px 0px 15px;\n    height: 120px !important;\n    width: 100%;\n    object-fit: cover;\n  }\n`\nconst IconImage = styled.img`\n  width: 24px;\n`\n\nconst GladiatorEquipments = styled.div`\n  margin-top: 15px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  // flex-wrap: wrap;\n  & img {\n    width: 50px;\n    height: 50px;\n    margin: 5px;\n  }\n  &::-webkit-scrollbar {\n    background: : #7D91AD !important;\n    height: 5px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #7D91AD;\n  }\n`\nconst AttackLable = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background-image: url(/images/battles/red.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  width: 120px;\n  height: 27px;\n  font-size: 20px;\n  margin-top: 12px;\n  color: #fff;\n`\nconst DefenseLable = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background-image: url(/images/battles/blue.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  width: 120px;\n  height: 27px;\n  font-size: 20px;\n  margin-top: 12px;\n  color: #fff;\n`\nconst PoolPrizes = styled.div`\n  // position: absolute;\n  // top: 170px;\n  // left: 140px;\n  // width: 100%;\n  // height: 70%;\n`\nconst PrizeCard = styled.div`\n  background-color: rgba(0, 0, 0, 0.8);\n  // opacity: 0.8;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 24px;\n  border: 2px solid #D9AB3A;\n  padding: 32px;\n`\nconst PrizeHeading = styled.div`\n  color: #fff;\n  font-size: 28px;\n  font-weight: 500;\n`\nconst EnterAttack = styled.div`\n  background-image: url(/images/battles/red.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  width: 320px;\n  height: 72px;\n  opacity: 1 !important;\n  margin-top: 25px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 28px;\n  &:hover {\n    cursor: pointer;\n  }\n`\nconst EnterDefense = styled.div`\n  background-image: url(/images/battles/blue.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  width: 320px;\n  height: 72px;\n  opacity: 1 !important;\n  margin-top: 25px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 28px;\n  &:hover {\n    cursor: pointer;\n  }\n`\nconst AttackBackground = styled.div`\n  background-image: url(/images/battles/1.png);\n  width: 50px;\n  height: 50px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 4px;\n  margin: 2px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  & img {\n    width: 35px;\n    height: 35px;\n    margin: 5px;\n  }\n`\nconst DefenseBackground = styled.div`\n  background-image: url(/images/battles/2.png);\n  width: 50px;\n  height: 50px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 4px;\n  margin: 2px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  & img {\n    width: 35px;\n    height: 35px;\n    margin: 5px;\n  }\n`\nconst AnimalBackground = styled.div`\n  background-image: url(/images/battles/3.png);\n  width: 50px;\n  height: 50px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 4px;\n  margin: 2px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  & img {\n    width: 35px;\n    height: 35px;\n    margin: 5px;\n  }\n`\nconst CardFlip = styled.div`\n  background-color: transparent;\n  width: 100%;\n  height: 300px;\n  // cursor: pointer;\n  perspective: 1000px;\n`\nconst CardFront = styled.div`\n  // position: absolute;\n  // width: 100%;\n  // height: 100%;\n  // backface-visibility: hidden;\n  // color: black;\n  // z-index: 2;\n  // border-radius: 5px;\n  // padding: 5px;\n\n  align-items: center;\n  backface-visibility: hidden;\n  display: flex;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  transition: z-index 600ms;\n  width: 100%;\n\n  & > div {\n    flex: 1;\n  }\n`\n\nconst CardBack = styled(CardFront)`\n  // position: absolute;\n  // width: 100%;\n  // height: 100%;\n  // backface-visibility: hidden;\n  // color: white;\n  \n  // transform: rotateY(180deg);\n  // z-index: 1;\n  // border-radius: 5px;\n\n  transform: rotateY(180deg);\n`\nconst InnerCard = styled.div<{ clicked: boolean }>`\n  // position: relative;\n  // width: 100%;\n  // height: 100%;\n  // text-align: center;\n  // transition: transform 1s;\n  // transform-style: preserve-3d;\n  // box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  \n  // &:hover {\n  //     transform: rotateY(180deg);\n  // }\n\n  height: 100%;\n  position: relative;\n  transform-style: preserve-3d;\n  transition: transform 600ms;\n`\n\nconst ArenaPrize = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: start;\n  color: #fff;\n  font-size: 16px;\n  margin: 0px 10px 30px 20px;\n`\n// transform: rotateY(${({ clicked }) => (clicked ? 180 : 0)}deg);\n// ${CardFront} {\n//   z-index: ${({ clicked }) => (clicked ? 5 : 10)};\n// }\n\n// ${CardBack} {\n//   z-index: ${({ clicked }) => (clicked ? 10 : 5)};\n// }\nconst NewModal = styled(Modal)`\n  height: 440px;\n  width: 420px;\n  overflow-x: hidden;\n`\ninterface SoonBattleProps {\n  currentBattle?: any\n  remainingTime: any\n}\nconst SoonBattle: React.FC<SoonBattleProps> = ({ currentBattle, remainingTime }) => {\n  // console.log(\"currentBattlecurrentBattle\", currentBattle)\n  const { secondsRemaining } = useCountdown(remainingTime)\n  const [disable, setDisable] = useState(false);\n  console.log(disable)\n\n  const [areena, setAreena] = useState<string>(\"\")\n  const [attackerNft, setAttackerNft] = useState(null)\n  const [defenderNft, setDefenderNft] = useState(null)\n  const [attackerEquipmentsImages, setAttackerEquipmentsImages] = useState([])\n  const [defenderEquipmentsImages, setDefenderEquipmentsImages] = useState([])\n  const [totalRewardAmount, setTotalRewardAmount] = useState<number | string>(0)\n  const { t } = useTranslation()\n  const battleContract = useBattleNft()\n  const predictionContract = usePredictionNft()\n  const getGladiatorsFromDb = async () => {\n    try {\n      findAmount()\n      const attackerId = parseInt(currentBattle?.attackerId._hex, 16)\n      const defenderId = parseInt(currentBattle?.defenderId._hex, 16)\n      const gladiators = await getSpecificGladiators2([attackerId, defenderId])\n      const attackerGladiator = gladiators.find((nft) => nft.tokenId == attackerId)\n      const defenderGladiator = gladiators.find((nft) => nft.tokenId == defenderId)\n      // get gladiator form config file\n      const attackerFromConfig = galleryNfts.find((nft) => nft.name === attackerGladiator?.ipfsJson?.nft?.name)\n      const defenderFromConfig = galleryNfts.find((nft) => nft.name === defenderGladiator?.ipfsJson?.nft?.name)\n      setAttackerNft(attackerFromConfig)\n      setDefenderNft(defenderFromConfig)\n      const attackerPlayer = await battleContract.playerInfo(currentBattle.attacker.toString())\n      const attackerAttackId = parseInt(attackerPlayer?.attackEqId?._hex, 16)\n      const attackerDefenseId = parseInt(attackerPlayer?.defenceEqId?._hex, 16)\n      const attackerAnimalId = parseInt(attackerPlayer?.animalId?._hex, 16)\n      // console.log(\"attackerPlayerattackerPlayerattackerPlayer\", attackerPlayer);\n      const attackerEquipments = await getSpecificJoinPageNfts([attackerAttackId, attackerDefenseId, attackerAnimalId])\n      setAttackerEquipmentsImages(\n        attackerEquipments.map((eq) => {\n          return {\n            image: eq?.ipfsJson?.imagePath,\n            type: eq?.ipfsJson?.type,\n            name: eq?.ipfsJson?.name,\n            agility: eq?.ipfsJson?.agility,\n            coach: eq?.ipfsJson?.coach,\n            cook: eq?.ipfsJson?.cook,\n            dual: eq?.ipfsJson?.dual,\n            endurance: eq?.ipfsJson?.endurance,\n            intelligance: eq?.ipfsJson?.intelligance,\n            leadership: eq?.ipfsJson?.leadership,\n            level: eq?.ipfsJson?.level,\n            medical: eq?.ipfsJson?.medical,\n            onehand: eq?.ipfsJson?.onehand,\n            polearms: eq?.ipfsJson?.polearms,\n            precision: eq?.ipfsJson?.precision,\n            range: eq?.ipfsJson?.range,\n            shield: eq?.ipfsJson?.shield,\n            smith: eq?.ipfsJson?.smith,\n            strength: eq?.ipfsJson?.strength,\n            torture: eq?.ipfsJson?.torture,\n            twohand: eq?.ipfsJson?.twohand,\n            willpower: eq?.ipfsJson?.willpower,\n          }\n        }),\n      )\n      // console.log(\"attackerEquipmentsattackerEquipments\", attackerEquipments);\n      const defenderPlayer = await battleContract.playerInfo(currentBattle.defender.toString())\n      // console.log(\"defenderPlayerdefenderPlayerdefenderPlayer\", defenderPlayer);\n\n      const defenderAttackId = parseInt(defenderPlayer?.attackEqId?._hex, 16)\n      const defenderdefenseId = parseInt(defenderPlayer?.defenceEqId?._hex, 16)\n      const defenderAnimalId = parseInt(defenderPlayer?.animalId?._hex, 16)\n      const defenderEquipments = await getSpecificJoinPageNfts([defenderAttackId, defenderdefenseId, defenderAnimalId])\n      // console.log(\"defenderEquipmentsdefenderEquipments\", defenderEquipments);\n      setDefenderEquipmentsImages(\n        defenderEquipments.map((eq) => {\n          return {\n            image: eq?.ipfsJson?.imagePath,\n            type: eq?.ipfsJson?.type,\n            name: eq?.ipfsJson?.name,\n            agility: eq?.ipfsJson?.agility,\n            coach: eq?.ipfsJson?.coach,\n            cook: eq?.ipfsJson?.cook,\n            dual: eq?.ipfsJson?.dual,\n            endurance: eq?.ipfsJson?.endurance,\n            intelligance: eq?.ipfsJson?.intelligance,\n            leadership: eq?.ipfsJson?.leadership,\n            level: eq?.ipfsJson?.level,\n            medical: eq?.ipfsJson?.medical,\n            onehand: eq?.ipfsJson?.onehand,\n            polearms: eq?.ipfsJson?.polearms,\n            precision: eq?.ipfsJson?.precision,\n            range: eq?.ipfsJson?.range,\n            shield: eq?.ipfsJson?.shield,\n            smith: eq?.ipfsJson?.smith,\n            strength: eq?.ipfsJson?.strength,\n            torture: eq?.ipfsJson?.torture,\n            twohand: eq?.ipfsJson?.twohand,\n            willpower: eq?.ipfsJson?.willpower,\n          }\n        }),\n      )\n    } catch (error) {\n      console.log('errorrrr', error)\n    }\n  }\n\n  // console.log(\"attackerEquipmentsImagesattackerEquipmentsImages\", attackerEquipmentsImages);\n  // console.log(\"defenderEquipmentsImagesdefenderEquipmentsImages\", defenderEquipmentsImages);\n  useEffect(() => {\n    if (currentBattle) {\n      getGladiatorsFromDb()\n    }\n    // eslint-disable-next-line\n  }, [currentBattle])\n  // useEffect(() => {\n  //   if(attackerNft && defenderNft){\n  //     console.log(\"attackerNftattackerNft\", attackerNft);\n  //     console.log(\"defenderNftdefenderNft\", defenderNft);\n  //   }\n  // }, [attackerNft, defenderNft])\n\n\n\n  // // const ethToWei = ethers.utils.parseEther(\"0.000000234\")\n  // // console.log(\"ethToWeiethToWeiethToWeiethToWei\", parseInt(ethToWei._hex, 16).toString())\n\n\n  const findAmount = async () => {\n    const totalReward = await predictionContract.rounds(currentBattle.round.toString())\n    const ethValue1 = ethers.utils.formatEther(totalReward.attackerAmount);\n    const ethValue2 = ethers.utils.formatEther(totalReward.defenderAmount);\n    setTotalRewardAmount(String(Number(ethValue1) + Number(ethValue2)))\n  }\n\n  const [onBet] = useModal(<ModalComponent totalRewardAmount={totalRewardAmount} currentBattle={currentBattle} findAmount={findAmount} secondsRemaining={secondsRemaining} />)\n\n  const [tooltipName, setTooltipName] = useState(\"\")\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(t(tooltipName), {\n    placement: 'bottom',\n  })\n\n  const { targetRef: left, tooltip: leftTooltip, tooltipVisible: leftTooltipVisible } = useTooltip(t(tooltipName), {\n    placement: 'right',\n  })\n\n  const { targetRef: right, tooltip: rightTooltip, tooltipVisible: rightTooltipVisible } = useTooltip(t(tooltipName), {\n    placement: 'bottom',\n  })\n\n  useEffect(() => {\n    if (currentBattle) {\n      // console.log(\"currentBattlecurrentBattle\", currentBattle)\n      if (currentBattle.arena === \"Arles Arena\") {\n        setAreena(\"arles_arena\")\n      } else if (currentBattle.arena === \"Ateia Trebellia\") {\n        setAreena(\"ateia_trebellia\")\n      } else if (currentBattle.arena === \"Gladiator Arena\") {\n        setAreena(\"gladiator_arena\")\n      } else if (currentBattle.arena === \"Matia Piso\") {\n        setAreena(\"matia_piso\")\n      } else if (currentBattle.arena === \"Nimes Amphitheatre\") {\n        setAreena(\"nimes_amphitheatre\")\n      } else if (currentBattle.arena === \"Nimes Amphitheatre\") {\n        setAreena(\"nimes_amphitheatre\")\n      }\n      else {\n        setAreena(currentBattle.arena)\n      }\n    }\n\n  }, [currentBattle])\n\n  useEffect(() => {\n    if (secondsRemaining < 13) {\n      setDisable(true)\n      console.log(disable)\n    } else {\n      setDisable(false)\n    }\n  }, [secondsRemaining])\n  return (\n    <>\n      <NewCard isActive>\n        {tooltipVisible && tooltip}\n        {leftTooltipVisible && leftTooltip}\n        {rightTooltipVisible && rightTooltip}\n        <CardHeader\n          status=\"soon\"\n          icon={<WaitIcon mr=\"4px\" width=\"21px\" color=\"secondary\" />}\n          title={t('Next')}\n          epoch={Number(currentBattle.round)}\n        />\n        {/* <RoundProgress variant=\"flat\" scale=\"sm\" lockTimestamp={20} closeTimestamp={25} /> */}\n        <CardInner>\n          <GladiatorBattle>\n            <GladiatorLeft>\n              <AttackLable>{t('Attack')}</AttackLable>\n              <img\n                src={\n                  attackerNft?.glTFPath\n                    ? attackerNft?.glTFPath.replace('scene.gltf', 'preview.png')\n                    : '/images/battles/left.png'\n                }\n                alt=\"Gladiator\"\n              />\n              <GladiatorEquipments>\n                <EquipmentImages data={attackerEquipmentsImages} />\n              </GladiatorEquipments>\n              <div ref={targetRef} onMouseEnter={() => { setTooltipName(\"Best terrain is \" + (attackerNft?.bestTerrain)) }}>\n                <img\n                  src={`/images/battles/${attackerNft?.bestTerrain === \"Polar\" ? \"glacial\".toLowerCase() : attackerNft?.bestTerrain.toLowerCase()}.png`}\n                  alt=\"Arena\"\n                  style={{ height: \"80px\" }}\n                />\n              </div>\n            </GladiatorLeft>\n            <GladiatorWar>\n              <Bet onClick={secondsRemaining >= 12 && onBet} disable={disable}>\n                <BetValue>{t('Bet')}</BetValue>\n                <BetValue>{totalRewardAmount} DENA</BetValue>\n              </Bet>\n              <Statistics>{t('Statistics:')}</Statistics>\n              <GladiatorsStats>\n                <Text color=\"subtle\" fontWeight=\"bold\" ml=\"15px\">{t('Attributes')}</Text>\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.attributes?.strength || 0}\n                  defender={defenderNft?.attributes?.strength || 0}\n                  image=\"/images/battles/icons/strength.png\"\n                  tooltipValue=\"Strength\"\n                />\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.attributes?.endurance || 0}\n                  defender={defenderNft?.attributes?.endurance || 0}\n                  image=\"/images/battles/icons/endurance.png\"\n                  tooltipValue=\"Endurance\"\n                />\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.attributes?.agility || 0}\n                  defender={defenderNft?.attributes?.agility || 0}\n                  image=\"/images/battles/icons/agility.png\"\n                  tooltipValue=\"Agility\"\n                />\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.attributes?.precision || 0}\n                  defender={defenderNft?.attributes?.precision || 0}\n                  image=\"/images/battles/icons/precision.png\"\n                  tooltipValue=\"Precision\"\n                />\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.attributes?.intelligance || 0}\n                  defender={defenderNft?.attributes?.intelligance || 0}\n                  image=\"/images/battles/icons/intelligence.png\"\n                  tooltipValue=\"Intelligance\"\n                />\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.attributes?.willpower || 0}\n                  defender={defenderNft?.attributes?.willpower || 0}\n                  image=\"/images/battles/icons/willpower.png\"\n                  tooltipValue=\"Willpower\"\n                />\n\n                <Text color=\"subtle\" fontWeight=\"bold\" ml=\"15px\" mt=\"8px\" mb=\"4px\">{t('Weapon Mastery')}</Text>\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.weapons?.oneHand || 0}\n                  defender={defenderNft?.weapons?.oneHand || 0}\n                  image=\"/images/battles/icons/one-handed.png\"\n                  tooltipValue=\"One Hand\"\n                />\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.weapons?.twoHand || 0}\n                  defender={defenderNft?.weapons?.twoHand || 0}\n                  image=\"/images/battles/icons/two-handed.png\"\n                  tooltipValue=\"Two Hand\"\n                />\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.weapons?.shield || 0}\n                  defender={defenderNft?.weapons?.shield || 0}\n                  image=\"/images/battles/icons/shield.png\"\n                  tooltipValue=\"Shield\"\n                />\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.weapons?.ranged || 0}\n                  defender={defenderNft?.weapons?.ranged || 0}\n                  image=\"/images/battles/icons/ranged.png\"\n                  tooltipValue=\"Ranged\"\n                />\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.weapons?.dual || 0}\n                  defender={defenderNft?.weapons?.dual || 0}\n                  image=\"/images/battles/icons/dual.png\"\n                  tooltipValue=\"Dual\"\n                />\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.weapons?.polearms || 0}\n                  defender={defenderNft?.weapons?.polearms || 0}\n                  image=\"/images/battles/icons/polearms.png\"\n                  tooltipValue=\"Polearms\"\n                />\n\n                <Text color=\"subtle\" fontWeight=\"bold\" ml=\"15px\" mt=\"8px\" mb=\"4px\">{t('Abilities')}</Text>\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.abilities?.leadership || 0}\n                  defender={defenderNft?.abilities?.leadership || 0}\n                  image=\"/images/battles/icons/leadership.png\"\n                  tooltipValue=\"Leadership\"\n                />\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.abilities?.coach || 0}\n                  defender={defenderNft?.abilities?.coach || 0}\n                  image=\"/images/battles/icons/coach.png\"\n                  tooltipValue=\"Coach\"\n                />\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.abilities?.cook || 0}\n                  defender={defenderNft?.abilities?.cook || 0}\n                  image=\"/images/battles/icons/cook.png\"\n                  tooltipValue=\"Cook\"\n                />\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.abilities?.medical || 0}\n                  defender={defenderNft?.abilities?.medical || 0}\n                  image=\"/images/battles/icons/medical.png\"\n                  tooltipValue=\"Medical\"\n                />\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.abilities?.smith || 0}\n                  defender={defenderNft?.abilities?.smith || 0}\n                  image=\"/images/battles/icons/smith.png\"\n                  tooltipValue=\"Smith\"\n                />\n\n                <GladiatorAttributesRow\n                  attacker={attackerNft?.abilities?.torture || 0}\n                  defender={defenderNft?.abilities?.torture || 0}\n                  image=\"/images/battles/icons/torture.png\"\n                  tooltipValue=\"Torture\"\n                />\n\n              </GladiatorsStats>\n              <Statistics>{t('Trophies:')}</Statistics>\n              <GladiatorEquipments>\n                <img src=\"/images/battles/gladiator-equipment.png\" alt=\"Equipment\" />\n                <img src=\"/images/battles/gladiator-equipment.png\" alt=\"Equipment\" />\n                <img src=\"/images/battles/gladiator-equipment.png\" alt=\"Equipment\" />\n                <img src=\"/images/battles/gladiator-equipment.png\" alt=\"Equipment\" />\n              </GladiatorEquipments>\n              <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\" width=\"80%\">\n                <Heading>{t('Enroll Timer: 1')}</Heading>\n                <Heading>{t('Attraction: 257')}</Heading>\n              </Flex>\n              <GladiatorArena>\n                <ArenaImage>\n                  <ArenaTitle>{t(`Arena: ${currentBattle.arena.charAt(0).toUpperCase().replaceAll('_', ' ') + currentBattle.arena.slice(1)}`)}</ArenaTitle>\n                  <ArenaPrize>{t('Arena Incentive Prize: 100 DENA')}</ArenaPrize>\n                  <ArenaImage>\n                    <div ref={left} onMouseEnter={() => { setTooltipName(\"Terrain is \" + (currentBattle?.terrain)) }}>\n                      <img\n                        src={`/images/battles/${currentBattle?.terrain === \"Polar\" ? \"glacial\".toLowerCase() : currentBattle?.terrain.toLowerCase()}.png`}\n                        alt=\"Arena\"\n                        style={{ height: \"80px\", marginLeft: \"50px\" }}\n                      />\n                    </div>\n                    <img src={`/images/arenas/${areena.toLowerCase()}.jpg`} alt=\"Arena\" />\n                  </ArenaImage >\n                </ArenaImage >\n              </GladiatorArena >\n            </GladiatorWar >\n            <GladiatorRight>\n              <DefenseLable>{t('Defense')}</DefenseLable>\n              <img\n                src={\n                  defenderNft?.glTFPath\n                    ? defenderNft?.glTFPath.replace('scene.gltf', 'preview.png')\n                    : '/images/battles/right.png'\n                }\n                alt=\"Gladiator\"\n              />\n              <GladiatorEquipments>\n                <EquipmentImages data={defenderEquipmentsImages} />\n              </GladiatorEquipments>\n              <div ref={right} onMouseEnter={() => { setTooltipName(\"Best terrain is \" + (defenderNft?.bestTerrain)) }}>\n                <img\n                  src={`/images/battles/${defenderNft?.bestTerrain === \"Polar\" ? \"glacial\".toLowerCase() : defenderNft?.bestTerrain.toLowerCase()}.png`}\n                  alt=\"Arena\"\n                  style={{ height: \"80px\" }}\n                />\n              </div>\n            </GladiatorRight>\n          </GladiatorBattle >\n        </CardInner >\n      </NewCard >\n    </>)\n}\n\nexport default SoonBattle\n","import React, { useEffect, useState } from 'react'\nimport { useCountUp } from 'react-countup'\nimport {\n    Card,\n    CardBody,\n    Flex,\n    PlayCircleOutlineIcon,\n    Skeleton,\n    Text,\n    TooltipText,\n    useTooltip,\n    WaitIcon,\n    useModal,\n    Modal,\n    Button,\n    ArrowBackIcon,\n    IconButton,\n    BinanceIcon,\n    BalanceInput,\n    Slider,\n    Box,\n    AutoRenewIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled, { keyframes } from 'styled-components'\nimport RoundProgress from 'components/RoundProgress'\nimport CardHeader from './CardHeader'\nimport { getSpecificJoinPageNfts, getSpecificGladiators2 } from 'state/nftMarket/helpers'\nimport { useBattleNft, usePredictionNft, useCake } from 'hooks/useContract'\nimport galleryNfts from 'config/constants/gallery/gallery'\n\nimport { ethers } from \"ethers\"\nimport ModalComponent from './ModalComponent'\nimport GladiatorAttributesRow from './GladiatorAttributesRow'\nimport EquipmentImages from './EquipmentImages'\nimport useCountdown from '../../hooks/useCountdown'\nimport { formatRoundTime } from '../../helpers'\n\n\n\n\n\n\n\n\nconst NewCard = styled(Card)`\n  width: 700px;\n  position: relative;\n  margin-right: 20px;\n`\nconst CardInner = styled.div`\n  padding: 0px 12px 0px 12px;\n  background-image: url(/images/battles/card-bg.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n`\nconst GladiatorBattle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 420px;\n`\n\nconst Heading = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  color: #fff;\n  font-size: 16px;\n  font-weight: bold;\n  margin: 20px 0px 0px 0px;\n`\n\nconst CalculatingCard = styled.div`\n  position: absolute;\n  background-color: rgba(0, 0, 0, .15);  \n  backdrop-filter: blur(5px);\n  top: 0;\n  bottom: 0;\n  left: 0; \n  right: 0; \n  margin: auto; \n  width: 320px;\n  height: 180px;\n  border-radius: 16px;\n  border: 2px solid #D9AB3A;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\n\ninterface LaterBattleProps {\n    laterBattle?: any\n    remainingTime: any\n    index: number | string\n\n}\nconst LaterBattle: React.FC<LaterBattleProps> = ({ laterBattle, remainingTime, index }) => {\n    const { t } = useTranslation()\nconst { secondsRemaining } = useCountdown(remainingTime)\nconst countdown = formatRoundTime(secondsRemaining)\n// console.log(\"countdowncountdowncountdowncountdowncountdown\", countdown)\n\n    return (\n        <>\n            <NewCard isActive>\n                <CardHeader\n                    status=\"soon\"\n                    icon={<WaitIcon mr=\"4px\" width=\"21px\" color=\"secondary\" />}\n                    title={t('Later')}\n                    epoch={Number(laterBattle)}\n                />\n                <CardInner>\n                    <GladiatorBattle>\n                        <CalculatingCard>\n                            <Heading>Entry Starts</Heading>\n                            <Text fontSize=\"32px\" fontWeight=\"bold\">~{countdown}</Text>\n                        </CalculatingCard>\n                    </GladiatorBattle >\n                </CardInner >\n            </NewCard >\n        </>)\n}\n\nexport default LaterBattle\n","import React, { useEffect, useState, useReducer } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useGetBetByEpoch, useGetCurrentEpoch } from 'state/predictions/hooks'\nimport { BetPosition, NodeRound } from 'state/types'\nimport { getMultiplierV2 } from '../../helpers'\nimport ExpiredRoundCard from './ExpiredRoundCard'\nimport LiveRoundCard from './LiveRoundCard'\nimport OpenRoundCard from './OpenRoundCard'\nimport SoonRoundCard from './SoonRoundCard'\nimport LiveBattle from './LiveBattle'\nimport ExpiredBattle from './ExpiredBattle'\nimport SoonBattle from './SoonBattle'\nimport LaterBattle from './LaterBattle'\nimport { useBattleNft } from 'hooks/useContract'\nimport { useHistory } from 'react-router-dom'\ninterface RoundCardProps {\n  // round?: NodeRound\n  type?: any\n  battles?: any\n  remainingTime: any\n  index?: number | string\n}\n\nconst RoundCard: React.FC<RoundCardProps> = ({ type, battles, remainingTime, index }) => {\n  // const history= useHistory()\n  // const battlaContract = useBattleNft()\n\n  // const initialState = {\n  //   currentBattle: null,\n  //   upcomingBattlee: null,\n  //   previousBattles: [],\n  // }\n  // function reducer(state, action) {\n  //   switch (action.type) {\n  //     case 'current':\n  //       return {\n  //         ...state,\n  //         currentBattle: action.payload,\n  //       }\n  //     case 'upcoming':\n  //       return {\n  //         ...state,\n  //         upcomingBattlee: action.payload,\n  //       }\n  //     case 'previous':\n  //       return {\n  //         ...state,\n  //         previousBattles: action.payload,\n  //       }\n  //     default:\n  //       return\n  //   }\n  // }\n  // const [state, dispatch] = useReducer(reducer, initialState)\n  // const { epoch, lockPrice, closePrice, totalAmount, bullAmount, bearAmount } = round\n  // const currentEpoch = useGetCurrentEpoch()\n  // const { account } = useWeb3React()\n  // const ledger = useGetBetByEpoch(account, epoch)\n  // const hasEntered = ledger ? ledger.amount.gt(0) : false\n  // const hasEnteredUp = hasEntered && ledger.position === BetPosition.BULL\n  // const hasEnteredDown = hasEntered && ledger.position === BetPosition.BEAR\n  // const hasClaimedUp = hasEntered && ledger.claimed && ledger.position === BetPosition.BULL\n  // const hasClaimedDown = hasEntered && ledger.claimed && ledger.position === BetPosition.BEAR\n\n  // const bullMultiplier = getMultiplierV2(totalAmount, bullAmount)\n  // const bearMultiplier = getMultiplierV2(totalAmount, bearAmount)\n\n  // const formattedBullMultiplier = bullMultiplier.toUnsafeFloat().toFixed(bullMultiplier.isZero() ? 0 : 2)\n  // const formattedBearMultiplier = bearMultiplier.toUnsafeFloat().toFixed(bearMultiplier.isZero() ? 0 : 2)\n\n  // Fake future rounds\n  // if (epoch > currentEpoch) {\n  //   return <SoonRoundCard round={round} />\n  // }\n\n  // Past rounds\n  // const getCurrentBattleCount = async () => {\n  //   try {\n  //     // console.log(\"battlaContract.currentBattleCount()\", battlaContract);\n  //     const data = await battlaContract.currentBattleCount()\n  //     const currentBattle = await battlaContract.battles((parseInt(data._hex, 16) - 1).toString())\n  //     const upcomingBattle = await battlaContract.battles(parseInt(data._hex, 16).toString())\n  //     const previousBattle1 = await battlaContract.battles((parseInt(data._hex, 16) - 2).toString())\n  //     const previousBattle2 = await battlaContract.battles((parseInt(data._hex, 16) - 3).toString())\n  //     dispatch({type: \"current\", payload: { ...currentBattle, round: parseInt(data._hex, 16) - 1 }})\n  //     dispatch({type: \"upcoming\", payload: { ...upcomingBattle, round: parseInt(data._hex, 16) }})\n  //     dispatch({type: \"previous\", payload: [\n  //       { ...previousBattle1, round: parseInt(data._hex, 16) - 2 },\n  //       { ...previousBattle2, round: parseInt(data._hex, 16) - 3 },\n  //     ]})\n  //   } catch (error) {\n  //     history.push(\"/\")\n  //     // console.log(\"data._hexdata._hex error\");\n  //   }\n  // }\n  // useEffect(() => {\n  //   if(account){\n  //     getCurrentBattleCount()\n  //     // console.log(\"accountaccountaccount\", account);\n  //   }\n\n  // }, [account])\n  // const myInterval = setInterval(() => {\n  //   getCurrentBattleCount()\n  // }, 5000)\n  // useEffect(() => {\n  //   return () => {\n  //     clearInterval(myInterval)\n  //   }\n  // }, [])\n  // Next (open) round\n  if (type === 'expired') {\n    return (\n      <>\n          <ExpiredBattle \n          currentBattle={battles} \n          remainingTime={remainingTime} \n          />\n      </>\n    )\n  }\n\n  // Live round\n  if (type === 'live') {\n    return <LiveBattle  \n    currentBattle={battles} \n    remainingTime={remainingTime}\n    />\n  }\n  // Live round\n  if (type === 'soon') {\n    return (\n      <SoonBattle \n      currentBattle={battles} \n      remainingTime={remainingTime} \n      />\n    )\n  }\n\n    // Later round\n    if (type === 'later') {\n      return (\n        <LaterBattle \n        index={5}\n        laterBattle={battles}\n        remainingTime={remainingTime} \n        />\n      )\n    }\n  \n\n  // return (\n  //   // <ExpiredRoundCard\n  //   //   round={round}\n  //   //   hasEnteredDown={hasEnteredDown}\n  //   //   hasEnteredUp={hasEnteredUp}\n  //   //   hasClaimedDown={hasClaimedDown}\n  //   //   hasClaimedUp={hasClaimedUp}\n  //   //   betAmount={ledger?.amount}\n  //   //   bullMultiplier={formattedBullMultiplier}\n  //   //   bearMultiplier={formattedBearMultiplier}\n  //   // />\n  //   <div style={{ display: 'flex', alignItems: 'center' }}>\n  //     {/* <ExpiredBattle /> */}\n  //     {/* <SoonBattle /> */}\n  //   </div>\n  // )\n}\n\nexport default RoundCard\n","import styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\n\nconst FlexRow = styled(Flex).attrs({ alignItems: 'center' })`\n  flex: 1;\n`\n\nexport default FlexRow\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport styled from 'styled-components'\nimport { BnbUsdtPairTokenIcon, Box, Flex, PocketWatchIcon, Text } from '@pancakeswap/uikit'\nimport { ROUND_BUFFER } from 'state/predictions/config'\nimport { formatBigNumberToFixed } from 'utils/formatBalance'\nimport { useGetCurrentRoundLockTimestamp, useGetLastOraclePrice } from 'state/predictions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatRoundTime } from '../helpers'\nimport useCountdown from '../hooks/useCountdown'\n\nconst Token = styled(Box)`\n  margin-top: -24px;\n  position: absolute;\n  top: 50%;\n  z-index: 30;\n\n  & > svg {\n    height: 48px;\n    width: 48px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-top: -32px;\n\n    & > svg {\n      height: 64px;\n      width: 64px;\n    }\n  }\n`\n\nconst Title = styled(Text)`\n  font-size: 16px;\n  line-height: 21px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    font-size: 20px;\n    line-height: 22px;\n  }\n`\n\nconst ClosingTitle = styled(Text)`\n  font-size: 9px;\n  line-height: 21px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    font-size: 20px;\n    line-height: 22px;\n  }\n`\n\nconst Price = styled(Text)`\n  height: 18px;\n  justify-self: start;\n  width: 70px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: center;\n  }\n`\n\nconst Interval = styled(Text)`\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: center;\n    width: 32px;\n  }\n`\n\nconst Label = styled(Flex) <{ dir: 'left' | 'right' }>`\n  // background-color: #007587;\n  background-image: url(/images/battles/clock01.png);\n  width: 180px;\n  height: 48px;\n  background-repeat: no-repeat;\n  box-shadow: ${({ theme }) => theme.shadows.level1};\n  align-items: ${({ dir }) => (dir === 'right' ? 'flex-end' : 'flex-start')};\n  border-radius: ${({ dir }) => (dir === 'right' ? '8px 8px 8px 24px' : '8px 8px 24px 8px')};\n  flex-direction: column;\n  overflow: initial;\n  padding: ${({ dir }) => (dir === 'right' ? '0 28px 0 8px' : '0 8px 0 24px')};\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    align-items: center;\n    border-radius: ${({ theme }) => theme.radii.card};\n    flex-direction: row;\n    padding: ${({ dir }) => (dir === 'right' ? '8px 40px 8px 8px' : '8px 8px 8px 40px')};\n  }\n`\n\nexport const PricePairLabel: React.FC = () => {\n  const price = useGetLastOraclePrice()\n  const priceAsNumber = parseFloat(formatBigNumberToFixed(price, 3, 8))\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: priceAsNumber,\n    duration: 1,\n    decimals: 3,\n  })\n\n  const updateRef = useRef(update)\n\n  useEffect(() => {\n    updateRef.current(priceAsNumber)\n  }, [priceAsNumber, updateRef])\n\n  return (\n    <Box pl=\"24px\" position=\"relative\" display=\"inline-block\">\n      <Token left={0}>\n        <BnbUsdtPairTokenIcon />\n      </Token>\n      <Label dir=\"left\">\n        <Title bold textTransform=\"uppercase\">\n          DENA\n        </Title>\n        <Price fontSize=\"12px\">{`$${countUp}`}</Price>\n      </Label>\n    </Box>\n  )\n}\n\ninterface TimerLabelProps {\n  interval: string\n  unit: 'm' | 'h' | 'd'\n  remainingTime: number\n}\n\nexport const TimerLabel: React.FC<TimerLabelProps> = ({ interval, unit, remainingTime }) => {\n  // const currentRoundLockTimestamp = useGetCurrentRoundLockTimestamp()\n  // console.log(\"remainingTimeremainingTime\", remainingTime)\n  const { secondsRemaining } = useCountdown(remainingTime)\n  const countdown = formatRoundTime(secondsRemaining)\n  const { t } = useTranslation()\n  // console.log(\"secondsRemainingsecondsRemaining\", secondsRemaining)\n  // console.log(\"ROUND_BUFFERROUND_BUFFERROUND_BUFFER\", secondsRemaining - ROUND_BUFFER)\n  return (\n    <Box pr=\"4px\" position=\"relative\">\n      <Label dir=\"right\">\n        {secondsRemaining > 0 ? (\n          <Title bold color=\"secondary\">\n            {countdown}\n          </Title>\n        ) : (\n          <ClosingTitle bold color=\"secondary\">\n            {t('Closing')}\n          </ClosingTitle>\n        )}\n        <Interval fontSize=\"12px\">{`${interval}${t(unit)}`}</Interval>\n      </Label>\n      <Token right={0}>\n        {/* <PocketWatchIcon /> */}\n      </Token>\n    </Box>\n  )\n}\n","import { useContext } from 'react'\nimport { SwiperContext } from '../context/SwiperProvider'\n\nconst useSwiper = () => {\n  const swiperContext = useContext(SwiperContext)\n\n  if (swiperContext === undefined) {\n    throw new Error('Swiper not found')\n  }\n\n  return swiperContext\n}\n\nexport default useSwiper\n","import React,{useEffect} from 'react'\nimport { ArrowBackIcon, ArrowForwardIcon, BunnyCardsIcon, Flex, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useGetCurrentEpoch, useGetSortedRounds } from 'state/predictions/hooks'\nimport useSwiper from '../hooks/useSwiper'\n\nconst StyledPrevNextNav = styled(Flex)`\n  align-items: center;\n  display: none;\n  justify-content: space-between;\n  overflow: initial;\n  position: relative;\n  width: 300px;\n  height: 40px;\n\n  box-shadow: ${({ theme }) => theme.shadows.level1};\n  // border-radius: ${({ theme }) => theme.radii.default};\n  border-radius: 50px;\n  // background-color: ${({ theme }) => theme.card.background};\n  background-color: #D9AB3A;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: flex;\n  }\n`\n\nconst Icon = styled.div`\n  cursor: pointer;\n  left: 50%;\n  margin-left: -32px;\n  position: absolute;\n`\nconst GladiatorImage = styled.img`\n  width: 64px;\n`\nconst PrevNextButton = styled.div`\n  color: #000;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst PrevNextNav = ({liveCard}) => {\n  const { swiper } = useSwiper()\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n\n  const handlePrevSlide = () => {\n    swiper.slidePrev()\n  }\n\n  const handleNextSlide = () => {\n    swiper.slideNext()\n  }\n\n  const handleSlideToLive = () => {\n    swiper.slideTo(liveCard)\n    swiper.update()\n  }\n\n  useEffect(() => {\n    if(swiper && liveCard){\n      setTimeout(() => {\n        swiper.slideTo(liveCard)\n        swiper.update() \n      }, 100);\n    }\n  }, [swiper, liveCard])\n  return (\n    <StyledPrevNextNav>\n      <PrevNextButton onClick={handlePrevSlide}>\n        {/* <ArrowBackIcon color=\"textSubtle\" width=\"24px\" /> */}\n        <img src=\"/images/battles/prev-button.png\" alt=\"Previous Button\" style={{ marginRight: \"10px\", height: \"30px\" }} />\n        Expired\n      </PrevNextButton>\n      <Icon onClick={handleSlideToLive}>\n        {/* <BunnyCardsIcon width=\"64px\" /> */}\n        <GladiatorImage src=\"/images/tokens/dena.svg\" alt=\"Gladiator\" />\n      </Icon>\n      <PrevNextButton onClick={handleNextSlide}>\n        {/* <ArrowForwardIcon color=\"textSubtle\" width=\"24px\" /> */}\n        Next\n        <img src=\"/images/battles/next-button.png\" alt=\"Next Button\" style={{ marginLeft: \"10px\", height: \"30px\" }} />\n      </PrevNextButton>\n    </StyledPrevNextNav>\n  )\n}\n\nexport default PrevNextNav\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { AutoRenewIcon, HistoryIcon, IconButton } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport { setHistoryPaneState } from 'state/predictions'\nimport { useGetIsFetchingHistory } from 'state/predictions/hooks'\nimport styled from 'styled-components'\n\nconst NewIconButton = styled(IconButton)`\nbackground-color: #007587;\n`\n\nconst HistoryButton = () => {\n  const isFetchingHistory = useGetIsFetchingHistory()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  const handleClick = () => {\n    dispatch(setHistoryPaneState(true))\n  }\n\n  return (\n    <NewIconButton\n      id=\"prediction-history-button\"\n      // variant=\"light\"\n      onClick={handleClick}\n      isLoading={isFetchingHistory}\n      disabled={!account}\n    >\n      {isFetchingHistory ? <AutoRenewIcon spin color=\"white\" /> : <HistoryIcon width=\"24px\" color=\"white\" />}\n    </NewIconButton>\n  )\n}\n\nexport default HistoryButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Flex, HelpIcon, Button, PrizeIcon } from '@pancakeswap/uikit'\nimport FlexRow from './FlexRow'\nimport { PricePairLabel, TimerLabel } from './Label'\nimport PrevNextNav from './PrevNextNav'\nimport HistoryButton from './HistoryButton'\n\nconst SetCol = styled.div`\n  flex: none;\n  width: auto;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    width: 270px;\n  }\n`\n\nconst HelpButtonWrapper = styled.div`\n  order: 1;\n  margin: 0 2px 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    order: 2;\n    margin: 0 0 0 8px;\n  }\n`\n\nconst TimerLabelWrapper = styled.div`\n  order: 3;\n  width: 100px;\n  \n  ${({ theme }) => theme.mediaQueries.sm} {\n    order: 1;\n    width: auto;\n  }\n`\n\nconst LeaderboardButtonWrapper = styled.div`\n  display: block;\n\n  order: 2;\n  margin: 0 8px 0 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    order: 3;\n    margin: 0 0 0 8px;\n  }\n`\nconst BackgroundButton = styled(Button)`\n  background-color: #007587;\n`\n\nconst ButtonWrapper = styled.div`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n    margin-left: 8px;\n  }\n`\n\nconst Menu = ({liveCard, remainingTime}) => {\n  // console.log(\"liveCardliveCard\", liveCard)\n  return (\n    <FlexRow alignItems=\"center\" p=\"12px\">\n      {/* <SetCol>\n        <PricePairLabel />\n      </SetCol> */}\n      <FlexRow justifyContent=\"center\" ml=\"270px\">\n        <PrevNextNav liveCard={liveCard}/>\n      </FlexRow>\n      <SetCol>\n        <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n          <TimerLabelWrapper>\n            <TimerLabel interval=\"5\" unit=\"m\" remainingTime={remainingTime}/>\n          </TimerLabelWrapper>\n          <HelpButtonWrapper>\n            <Button\n              variant=\"light\"\n              as=\"a\"\n              href=\"https://docs.gladiators.finance/monetize-ways-to-earn/battles-prediction\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n              width=\"48px\"\n              style={{ backgroundColor: \"#007587\" }}\n            >\n              <HelpIcon width=\"24px\" color=\"white\" />\n            </Button>\n          </HelpButtonWrapper>\n          {/* <LeaderboardButtonWrapper>\n            <Button as={Link} variant=\"light\" to=\"/prediction/leaderboard\" width=\"48px\" style={{ backgroundColor: \"#007587\" }}>\n              <PrizeIcon color=\"white\" />\n            </Button>\n          </LeaderboardButtonWrapper> */}\n          <ButtonWrapper style={{ order: 4 }}>\n            <HistoryButton />\n          </ButtonWrapper>\n        </Flex>\n      </SetCol>\n    </FlexRow>\n  )\n}\n\nexport default Menu\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport usePreviousValue from 'hooks/usePreviousValue'\nimport { useAppDispatch } from 'state'\nimport { useGetCurrentEpoch, useGetSortedRounds } from 'state/predictions/hooks'\nimport useSwiper from './useSwiper'\n\n/**\n * Hooks for actions to be performed when the round changes\n */\nconst useOnNextRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  const { account } = useWeb3React()\n  const previousEpoch = usePreviousValue(currentEpoch)\n  const { swiper } = useSwiper()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (swiper && currentEpoch !== undefined && previousEpoch !== undefined && currentEpoch !== previousEpoch) {\n      const currentEpochIndex = rounds.findIndex((round) => round.epoch === currentEpoch)\n\n      // Slide to the current LIVE round which is always the one before the current round\n      // swiper.slideTo(currentEpochIndex - 1)\n      swiper.update()\n    }\n  }, [previousEpoch, currentEpoch, rounds, swiper, account, dispatch])\n}\n\nexport default useOnNextRound\n","import { useEffect } from 'react'\nimport usePrevious from 'hooks/usePreviousValue'\nimport useSwiper from './useSwiper'\nimport { PageView } from '../types'\n\n/**\n * Hooks for actions to be performed when the view changes (mobile)\n */\nconst useOnViewChange = (liveSwiperIndex: number, view?: PageView) => {\n  const { swiper } = useSwiper()\n  const prevView = usePrevious(view)\n\n  useEffect(() => {\n    if (swiper && view !== prevView && swiper.activeIndex !== liveSwiperIndex) {\n      // swiper.slideTo(liveSwiperIndex, 0.1)\n    }\n  }, [swiper, prevView, view, liveSwiperIndex])\n}\n\nexport default useOnViewChange\n","import React, { useEffect, useState, useReducer } from 'react'\nimport styled from 'styled-components'\nimport SwiperCore, { Keyboard, Mousewheel } from 'swiper'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { Box, Flex } from '@pancakeswap/uikit'\nimport { useGetCurrentEpoch, useGetSortedRounds } from 'state/predictions/hooks'\nimport 'swiper/swiper.min.css'\nimport RoundCard from './components/RoundCard'\nimport Menu from './components/Menu'\nimport useSwiper from './hooks/useSwiper'\nimport useOnNextRound from './hooks/useOnNextRound'\nimport useOnViewChange from './hooks/useOnViewChange'\nimport { PageView } from './types'\nimport { useBattleNft } from 'hooks/useContract'\nimport { useHistory } from \"react-router-dom\"\nimport { useWeb3React } from '@web3-react/core'\nimport PageLoader from 'components/Loader/PageLoader'\nimport useStore from \"./store\"\n\nSwiperCore.use([Keyboard, Mousewheel])\n\nconst StyledSwiper = styled.div`\n  .swiper-wrapper {\n    align-items: center;\n    display: flex;\n  }\n\n  .swiper-slide {\n    width: auto;\n    margin-top: 20px;\n  }\n`\nconst BattleHeading = styled.div`\n  background-image: url(/images/battles/heading2-bg.png);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  width: 400px;\n  height: 68px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 28px;\n  color: #7d91ad;\n`\n\nconst Positions: React.FC<{ view?: PageView }> = ({ view }) => {\n  const { setSwiper } = useSwiper()\n  const { setImage } = useStore(state => state)\n  const rounds = useGetSortedRounds()\n  const currentEpoch = useGetCurrentEpoch()\n  const previousEpoch = currentEpoch > 0 ? currentEpoch - 1 : currentEpoch\n  const previousRound = rounds.find((round) => round.epoch === previousEpoch)\n  const swiperIndex = rounds.indexOf(previousRound)\n\n  useOnNextRound()\n  useOnViewChange(7, view)\n  const history = useHistory()\n  const battlaContract = useBattleNft()\n  const { account } = useWeb3React()\n\n  const initialState = {\n    currentBattle: null,\n    upcomingBattlee: null,\n    previousBattles: [],\n  }\n  function reducer(state, action) {\n    switch (action.type) {\n      case 'current':\n        return {\n          ...state,\n          currentBattle: action.payload,\n        }\n      case 'upcoming':\n        return {\n          ...state,\n          upcomingBattlee: action.payload,\n        }\n      case 'previous':\n        return {\n          ...state,\n          previousBattles: action.payload,\n        }\n      default:\n        return\n    }\n  }\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const timerState = {\n    remainingTime: 0\n  }\n  function timerReducer(state, action) {\n    switch (action.type) {\n      case 'change':\n        return {\n          ...state,\n          remainingTime: action.payload,\n        }\n      default:\n        return\n    }\n  }\n  const [state2, dispatch1] = useReducer(timerReducer, timerState)\n  const [bgImage, setBgImage] = useState(\"\")\n  const [preBattlesCount, setPreBattleCount] = useState<number>(0)\n  // console.log(\"state<><><><><><>\", state)\n  const getCurrentBattleCount = async () => {\n    try {\n      // console.log(\"battlaContract.currentBattleCount()\", battlaContract);\n      const data = await battlaContract.currentBattleCount()\n      // console.log('dataaaaaaaa', parseInt(data._hex, 16))\n      \n      if (parseInt(data._hex, 16) - 1 > 1) {\n\n        const currentBattle = await battlaContract.battles((parseInt(data._hex, 16) - 1).toString())\n        // console.log(\"currentBattlecurrentBattlecurrentBattle\", currentBattle)\n        if(currentBattle.arena === \"Arles Arena\"){\n          setBgImage(\"arles_arena\")\n        } else if(currentBattle.arena === \"Ateia Trebellia\"){\n          setBgImage(\"ateia_trebellia\")\n        } else if(currentBattle.arena === \"Gladiator Arena\"){\n          setBgImage(\"gladiator_arena\")\n        } else if(currentBattle.arena === \"Matia Piso\"){\n          setBgImage(\"matia_piso\")\n        } else if(currentBattle.arena === \"Nimes Amphitheatre\"){\n          setBgImage(\"nimes_amphitheatre\")\n        } else if(currentBattle.arena === \"Nimes Amphitheatre\"){\n          setBgImage(\"nimes_amphitheatre\")\n        }\n        else {\n          setBgImage(currentBattle.arena.toLowerCase())\n        }\n\n        // setBgImage(currentBattle.arena.toLowerCase())\n        dispatch1({ type: \"change\", payload: parseInt(currentBattle.closeTimestamp._hex, 16) + 300 + 12 })\n        dispatch({ type: 'current', payload: { ...currentBattle, round: parseInt(data._hex, 16) - 1 } })\n      }\n      // console.log(\"currentBattlecurrentBattle\", currentBattle)\n\n      const upcomingBattle = await battlaContract.battles(parseInt(data._hex, 16).toString())\n      // console.log(\"upcomingBattleupcomingBattle\", parseInt(upcomingBattle.startTimestamp._hex, 16)+300)\n      dispatch({ type: 'upcoming', payload: { ...upcomingBattle, round: parseInt(data._hex, 16) } })\n\n      let previousBattle1, previousBattle2, previousBattle3, previousBattle4, previousBattle5;\n      if (parseInt(data._hex, 16) - 1 >= 3) {\n        // console.log(\"33333333333333333333\")\n        previousBattle1 = await battlaContract.battles((parseInt(data._hex, 16) - 2).toString())\n\n      }\n      if (parseInt(data._hex, 16) - 1 >= 4) {\n        // console.log(\"4444444444444444444\")\n        previousBattle2 = await battlaContract.battles((parseInt(data._hex, 16) - 3).toString())\n      }\n      if (parseInt(data._hex, 16) - 1 >= 5) {\n        // console.log(\"555555555555555555555555\")\n        previousBattle3 = await battlaContract.battles((parseInt(data._hex, 16) - 4).toString())\n      }\n      if (parseInt(data._hex, 16) - 1 >= 6) {\n        // console.log(\"6666666666666666666666666\")\n        previousBattle4 = await battlaContract.battles((parseInt(data._hex, 16) - 5).toString())\n      }\n      if (parseInt(data._hex, 16) - 1 >= 7) {\n        // console.log(\"77777777777777777777777777\")\n        previousBattle5 = await battlaContract.battles((parseInt(data._hex, 16) - 6).toString())\n      }\n      // console.log(\"previousBattle1, previousBattle2, previousBattle3, previousBattle4, previousBattle5;\", previousBattle1, previousBattle2, previousBattle3, previousBattle4, previousBattle5);\n      dispatch({\n        type: 'previous',\n        payload: [\n          { ...previousBattle5, round: parseInt(data._hex, 16) - 6 },\n          { ...previousBattle4, round: parseInt(data._hex, 16) - 5 },\n          { ...previousBattle3, round: parseInt(data._hex, 16) - 4 },\n          { ...previousBattle2, round: parseInt(data._hex, 16) - 3 },\n          { ...previousBattle1, round: parseInt(data._hex, 16) - 2 },\n\n        ],\n      })\n\n    } catch (error) {\n      history.push('/')\n      // getCurrentBattleCount()\n      // console.log(\"data._hexdata._hex error\");\n    }\n  }\n  // console.log(\"stateeeeeeeee\", state)\n  useEffect(() => {\n    if (account) {\n      getCurrentBattleCount()\n      // console.log(\"accountaccountaccount\", account);\n    }\n  }, [account])\n  useEffect(() => {\n    const stateCopy = { ...state }\n    const count = stateCopy.previousBattles.filter(battle => battle.round >= 0)\n    if (count.length) {\n      setPreBattleCount(count.length)\n    }\n  }, [state])\n  useEffect(() => {\n    const interval = setInterval(() => {\n\n      getCurrentBattleCount()\n    }, 10000)\n    return () => clearInterval(interval)\n  }, [])\n  useEffect(() => {\n    setImage(bgImage)\n  }, [bgImage])\n  // console.log(\"stateeeeeeeee\", state)\n  if (!state.currentBattle &&\n    !state.upcomingBattlee &&\n    !state.previousBattles.length) {\n    return <PageLoader />\n  }\n\n  // console.log(\"state3state3state3state3state3\", state3);\n  return (\n    <Box overflow=\"hidden\">\n      <Menu\n        // liveCard={state?.previousBattles?.length} \n        liveCard={preBattlesCount}\n        remainingTime={Number(state2.remainingTime)}\n      />\n      <StyledSwiper>\n        <Flex justifyContent=\"center\" pt=\"15px\" pb=\"15px\">\n          {/* <BattleHeading>\n            Battle\n          </BattleHeading> */}\n        </Flex>\n        {/* <Swiper initialSlide={0}\n          onSwiper={setSwiper}\n          spaceBetween={20}\n          slidesPerView=\"auto\"\n          freeMode\n          freeModeSticky\n          centeredSlides\n          freeModeMomentumRatio={0.25}\n          freeModeMomentumVelocityRatio={0.5}\n          mousewheel\n          keyboard\n          resizeObserver\n        >\n          <SwiperSlide>\n            <RoundCard />\n          </SwiperSlide>\n        </Swiper> */}\n        <Swiper\n          initialSlide={swiperIndex}\n          onSwiper={setSwiper}\n          spaceBetween={20}\n          slidesPerView=\"auto\"\n          freeMode\n          freeModeSticky\n          centeredSlides\n          freeModeMomentumRatio={0.25}\n          freeModeMomentumVelocityRatio={0.5}\n          mousewheel\n          keyboard\n          resizeObserver\n        >\n          {/* {rounds.map((round) => (\n            <SwiperSlide key={round.epoch}>\n              <RoundCard round={round} />\n            </SwiperSlide>\n          ))} */}\n          {state?.previousBattles.length > 0 &&\n            state?.previousBattles.map((battle, index) => {\n              if (battle?.round >= 0) {\n                return (\n                  <SwiperSlide key={index}>\n                    <RoundCard\n                      type=\"expired\"\n                      battles={battle}\n                      remainingTime={state2.remainingTime}\n                    />\n                  </SwiperSlide>\n                )\n              }\n            })}\n          {state?.currentBattle && (\n            <SwiperSlide>\n              <RoundCard\n                type=\"live\"\n                battles={state?.currentBattle}\n                remainingTime={state2.remainingTime}\n              // index={state?.previousBattles.length+1}\n              />\n            </SwiperSlide>\n          )}\n          {state?.upcomingBattlee && (\n            <SwiperSlide>\n              <RoundCard\n                type=\"soon\"\n                battles={state?.upcomingBattlee}\n                remainingTime={state2.remainingTime}\n              />\n            </SwiperSlide>\n          )}\n          <SwiperSlide>\n            <RoundCard\n              type=\"later\"\n              battles={state?.currentBattle?.round + 2}\n              remainingTime={state2.remainingTime + 320}\n              // index={preBattlesCount + 2}\n            />\n          </SwiperSlide>\n          <SwiperSlide>\n            <RoundCard\n              type=\"later\"\n              battles={state?.currentBattle?.round + 3}\n              remainingTime={state2.remainingTime + 620}\n              // index={preBattlesCount + 2}\n            />\n          </SwiperSlide>\n          {/* <SwiperSlide>\n            <RoundCard />\n          </SwiperSlide>\n          <SwiperSlide>\n            <RoundCard />\n          </SwiperSlide> */}\n        </Swiper>\n        {/* <Swiper\n      spaceBetween={50}\n      slidesPerView={3}\n      onSlideChange={() => console.log('slide change')}\n      onSwiper={(swiper) => console.log(swiper)}\n    >\n      <SwiperSlide>Slide 1</SwiperSlide>\n      <SwiperSlide>Slide 2</SwiperSlide>\n      <SwiperSlide>Slide 3</SwiperSlide>\n      <SwiperSlide>Slide 4</SwiperSlide>\n      ...\n    </Swiper> */}\n      </StyledSwiper>\n    </Box>\n  )\n}\n\nexport default Positions\n","export enum PageView {\n  POSITIONS = 'positions',\n  HISTORY = 'history',\n  CHART = 'chart',\n}\n","import React, { useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport Split from 'split-grid'\nimport { ArrowDownIcon, Button, ChartIcon } from '@pancakeswap/uikit'\nimport debounce from 'lodash/debounce'\nimport delay from 'lodash/delay'\nimport { useAppDispatch } from 'state'\nimport { useGetPredictionsStatus, useIsChartPaneOpen, useIsHistoryPaneOpen } from 'state/predictions/hooks'\nimport { setChartPaneState } from 'state/predictions'\nimport { PredictionStatus } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { TradingViewLabel } from 'components/TradingView'\nimport TradingView from './components/TradingView'\nimport { ErrorNotification, PauseNotification } from './components/Notification'\nimport History from './History'\nimport Positions from './Positions'\n\n// The value to set the chart when the user clicks the chart tab at the bottom\nconst GRID_TEMPLATE_ROW = '1.2fr 24px .8fr'\n\nconst ExpandChartButton = styled(Button)`\n  background-color: ${({ theme }) => theme.card.background};\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n  bottom: 24px;\n  color: ${({ theme }) => theme.colors.text};\n  display: none;\n  left: 32px;\n  position: absolute;\n  z-index: 50;\n\n  &:hover:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled):not(:active) {\n    background-color: ${({ theme }) => theme.card.background};\n    opacity: 1;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: inline-flex;\n  }\n`\n\nconst SplitWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr 24px 0;\n  flex: 1;\n  overflow: hidden;\n`\n\nconst ChartPane = styled.div`\n  overflow: hidden;\n  position: relative;\n`\n\nconst HistoryPane = styled.div<{ isHistoryPaneOpen: boolean }>`\n  flex: none;\n  overflow: hidden;\n  transition: width 200ms ease-in-out;\n  width: ${({ isHistoryPaneOpen }) => (isHistoryPaneOpen ? '384px' : 0)};\n`\n\nconst StyledDesktop = styled.div`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: flex;\n    // height: calc(100vh - 100px);\n  }\n`\n\nconst PositionPane = styled.div`\n  display: flex;\n  max-width: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  & > div {\n    flex: 1;\n    overflow: hidden;\n    padding-top: 30px;\n  }\n`\n\nconst Gutter = styled.div`\n  background: ${({ theme }) => theme.colors.dropdown};\n  cursor: row-resize;\n  height: 24px;\n  position: relative;\n\n  &:before {\n    background-color: ${({ theme }) => theme.colors.textSubtle};\n    border-radius: 8px;\n    content: '';\n    height: 4px;\n    left: 50%;\n    margin-left: -32px;\n    position: absolute;\n    top: 10px;\n    width: 64px;\n  }\n`\n\nconst Desktop: React.FC = () => {\n  const splitWrapperRef = useRef<HTMLDivElement>()\n  const chartRef = useRef<HTMLDivElement>()\n  const gutterRef = useRef<HTMLDivElement>()\n  const isHistoryPaneOpen = useIsHistoryPaneOpen()\n  const isChartPaneOpen = useIsChartPaneOpen()\n  const dispatch = useAppDispatch()\n  const { t } = useTranslation()\n  const status = useGetPredictionsStatus()\n\n  const toggleChartPane = () => {\n    const newChartPaneState = !isChartPaneOpen\n\n    if (newChartPaneState) {\n      splitWrapperRef.current.style.transition = 'grid-template-rows 150ms'\n      splitWrapperRef.current.style.gridTemplateRows = GRID_TEMPLATE_ROW\n\n      // Purely comedic: We only want to animate if we are clicking the open chart button\n      // If we keep the transition on the resizing becomes very choppy\n      delay(() => {\n        splitWrapperRef.current.style.transition = ''\n      }, 150)\n    }\n\n    dispatch(setChartPaneState(newChartPaneState))\n  }\n\n  useEffect(() => {\n    const threshold = 100\n    const handleDrag = debounce(() => {\n      const { height } = chartRef.current.getBoundingClientRect()\n\n      // If the height of the chart pane goes below the \"snapOffset\" threshold mark the chart pane as closed\n      dispatch(setChartPaneState(height > threshold))\n    }, 50)\n\n    const split = Split({\n      dragInterval: 1,\n      snapOffset: threshold,\n      onDrag: handleDrag,\n      rowGutters: [\n        {\n          track: 1,\n          element: gutterRef.current,\n        },\n      ],\n    })\n\n    return () => {\n      split.destroy()\n    }\n  }, [gutterRef, chartRef, dispatch])\n  // console.log(\"Statuss\", status)\n  return (\n    <>\n      {/* {!isChartPaneOpen && (\n        <ExpandChartButton\n          variant=\"tertiary\"\n          scale=\"sm\"\n          startIcon={isChartPaneOpen ? <ArrowDownIcon /> : <ChartIcon />}\n          onClick={toggleChartPane}\n        >\n          {isChartPaneOpen ? t('Close') : t('Charts')}\n        </ExpandChartButton>\n      )} */}\n      <StyledDesktop>\n        <SplitWrapper ref={splitWrapperRef}>\n          <PositionPane>\n            {/* {status === PredictionStatus.ERROR && <ErrorNotification />}\n            {status === PredictionStatus.PAUSED && <PauseNotification />}\n            {status === PredictionStatus.LIVE && <Positions />} */}\n            <Positions />\n          </PositionPane>\n          {/* <Gutter ref={gutterRef}>\n            <TradingViewLabel justifyContent=\"flex-end\" symbol=\"BNBUSDT\" />\n          </Gutter> */}\n          {/* <ChartPane ref={chartRef}>\n            <TradingView />\n          </ChartPane> */}\n        </SplitWrapper>\n        <HistoryPane isHistoryPaneOpen={isHistoryPaneOpen}>\n          <History />\n        </HistoryPane>\n      </StyledDesktop>\n    </>\n  )\n}\n\nexport default Desktop\n","import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { getChainlinkOracleContract } from 'utils/contractHelpers'\n\nconst useGetLatestOraclePrice = () => {\n  const [price, setPrice] = useState(ethers.BigNumber.from(0))\n  const { lastUpdated, setLastUpdated: refresh } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchPrice = async () => {\n      const contract = getChainlinkOracleContract()\n      const response = await contract.latestAnswer()\n      setPrice(response)\n    }\n\n    fetchPrice()\n  }, [lastUpdated, setPrice])\n\n  return { price, lastUpdated, refresh }\n}\n\nexport default useGetLatestOraclePrice\n","import { useEffect } from 'react'\nimport { useAppDispatch } from 'state'\nimport { setLastOraclePrice } from 'state/predictions'\nimport useGetLatestOraclePrice from './useGetLatestOraclePrice'\n\nconst usePollOraclePrice = (seconds = 10) => {\n  const { price, refresh } = useGetLatestOraclePrice()\n  const dispatch = useAppDispatch()\n\n  // Poll for the oracle price\n  useEffect(() => {\n    refresh()\n    const timer = setInterval(() => {\n      refresh()\n    }, seconds * 1000)\n\n    return () => {\n      clearInterval(timer)\n    }\n  }, [seconds, refresh])\n\n  // If the price changed update global state\n  useEffect(() => {\n    dispatch(setLastOraclePrice(price.toJSON()))\n  }, [price, dispatch])\n}\n\nexport default usePollOraclePrice\n","import { useEffect, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { useGetCurrentEpoch, useGetEarliestEpoch, useGetPredictionsStatus } from 'state/predictions/hooks'\nimport { fetchClaimableStatuses, fetchLedgerData, fetchMarketData, fetchRounds } from 'state/predictions'\nimport { PredictionStatus } from 'state/types'\nimport { range } from 'lodash'\n\nconst POLL_TIME_IN_SECONDS = 10\n\nconst usePollPredictions = () => {\n  const timer = useRef<NodeJS.Timeout>(null)\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const currentEpoch = useGetCurrentEpoch()\n  const earliestEpoch = useGetEarliestEpoch()\n  const status = useGetPredictionsStatus()\n\n  useEffect(() => {\n    // Clear old timer\n    if (timer.current) {\n      clearInterval(timer.current)\n    }\n\n    if (status !== PredictionStatus.INITIAL) {\n      timer.current = setInterval(async () => {\n        const liveCurrentAndRecent = [currentEpoch, currentEpoch - 1, currentEpoch - 2]\n\n        dispatch(fetchRounds(liveCurrentAndRecent))\n        dispatch(fetchMarketData())\n\n        if (account) {\n          const epochRange = range(earliestEpoch, currentEpoch + 1)\n          dispatch(fetchLedgerData({ account, epochs: epochRange }))\n          dispatch(fetchClaimableStatuses({ account, epochs: epochRange }))\n        }\n      }, POLL_TIME_IN_SECONDS * 1000)\n    }\n\n    return () => {\n      if (timer.current) {\n        clearInterval(timer.current)\n      }\n    }\n  }, [timer, account, status, currentEpoch, earliestEpoch, dispatch])\n}\n\nexport default usePollPredictions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  ArrowBackIcon,\n  ArrowForwardIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  Cards,\n  ChartIcon,\n  HistoryIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport { PredictionStatus } from 'state/types'\nimport { useGetPredictionsStatus, useIsChartPaneOpen, useIsHistoryPaneOpen } from 'state/predictions/hooks'\nimport { setChartPaneState, setHistoryPaneState } from 'state/predictions'\nimport useSwiper from '../hooks/useSwiper'\n\nconst ButtonNav = styled.div`\n  flex: none;\n`\n\nconst TabNav = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nconst StyledMobileMenu = styled.div`\n  align-items: center;\n  background-color: ${({ theme }) => theme.card.background};\n  display: flex;\n  flex: none;\n  height: 64px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst getActiveIndex = (isHistoryOpen: boolean, isChartOpen: boolean) => {\n  if (isHistoryOpen) {\n    return 2\n  }\n\n  if (isChartOpen) {\n    return 1\n  }\n\n  return 0\n}\n\nconst MobileMenu = () => {\n  const { swiper } = useSwiper()\n  const isHistoryOpen = useIsHistoryPaneOpen()\n  const isChartOpen = useIsChartPaneOpen()\n  const status = useGetPredictionsStatus()\n  const activeIndex = getActiveIndex(isHistoryOpen, isChartOpen)\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  const handleItemClick = (index: number) => {\n    switch (index) {\n      case 2:\n        dispatch(setHistoryPaneState(true))\n        break\n      case 1:\n        dispatch(setChartPaneState(true))\n        dispatch(setHistoryPaneState(false))\n        break\n      case 0:\n      default:\n        dispatch(setHistoryPaneState(false))\n        dispatch(setChartPaneState(false))\n    }\n  }\n\n  return (\n    <StyledMobileMenu>\n      <ButtonNav>\n        <IconButton variant=\"text\" onClick={() => swiper.slidePrev()} disabled={status !== PredictionStatus.LIVE}>\n          <ArrowBackIcon width=\"24px\" color=\"primary\" />\n        </IconButton>\n      </ButtonNav>\n      <TabNav>\n        <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\" onItemClick={handleItemClick}>\n          <ButtonMenuItem>\n            <Cards color=\"currentColor\" />\n          </ButtonMenuItem>\n          <ButtonMenuItem>\n            <ChartIcon color=\"currentColor\" />\n          </ButtonMenuItem>\n          <ButtonMenuItem disabled={!account}>\n            <HistoryIcon color=\"currentColor\" />\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </TabNav>\n      <ButtonNav>\n        <IconButton variant=\"text\" onClick={() => swiper.slideNext()} disabled={status !== PredictionStatus.LIVE}>\n          <ArrowForwardIcon width=\"24px\" color=\"primary\" />\n        </IconButton>\n      </ButtonNav>\n    </StyledMobileMenu>\n  )\n}\n\nexport default MobileMenu\n","import TradingViewChart from 'components/TradingView'\nimport React from 'react'\n\nconst TRADING_VIEW_COMPONENT_ID = 'tradingview_b239c'\n\nconst TradingView = () => {\n  return <TradingViewChart id={TRADING_VIEW_COMPONENT_ID} symbol=\"BINANCE:BNBUSDT\" />\n}\n\nexport default TradingView\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Menu from './components/Menu'\nimport TradingView from './components/TradingView'\n\nconst MenuWrapper = styled.div`\n  flex: none;\n`\n\nconst ChartWrapper = styled.div`\n  flex: 1;\n  height: 100%;\n`\n\nconst Chart = () => {\n  return (\n    <Flex flexDirection=\"column\" height=\"100%\">\n      <MenuWrapper>\n        {/* <Menu /> */}\n      </MenuWrapper>\n      <ChartWrapper>\n        <TradingView />\n      </ChartWrapper>\n    </Flex>\n  )\n}\n\nexport default Chart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading } from '@pancakeswap/uikit'\n\ninterface NotificationProps {\n  title: string\n}\n\n// const BunnyDecoration = styled.div`\n//   position: absolute;\n//   top: -130px; // line up bunny at the top of the modal\n//   left: 0px;\n//   text-align: center;\n//   width: 100%;\n// `\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  height: 100%;\n  justify-content: center;\n`\n\nconst CardWrapper = styled.div`\n  position: relative;\n  width: 320px;\n`\n\nconst BunnyDecoration = styled.div`\n  position: absolute;\n  top: -130px;\n  left: 0px;\n  text-align: center;\n  width: 100%;\n  z-index: 5;\n`\n\nconst Notification: React.FC<NotificationProps> = ({ title, children }) => {\n  return (\n    <Wrapper>\n      <CardWrapper>\n        <BunnyDecoration>\n          <img src=\"/images/decorations/hiccup-bunny.png\" alt=\"bunny decoration\" height=\"121px\" width=\"130px\" />\n        </BunnyDecoration>\n        <Card>\n          <CardBody>\n            <Heading mb=\"24px\">{title}</Heading>\n            {children}\n          </CardBody>\n        </Card>\n      </CardWrapper>\n    </Wrapper>\n  )\n}\n\nexport default Notification\n","import React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { setHistoryPaneState } from 'state/predictions'\nimport Notification from './Notification'\n\nconst ErrorNotification = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n\n  const handleOpenHistory = () => {\n    dispatch(setHistoryPaneState(true))\n  }\n  return (\n    <Notification title={t('Error')}>\n      <Text as=\"p\" mb=\"24px\">\n        {t('This page can’t be displayed right now due to an error. Please check back soon.')}\n      </Text>\n      <Button variant=\"primary\" width=\"100%\" onClick={handleOpenHistory}>\n        {t('Show History')}\n      </Button>\n    </Notification>\n  )\n}\n\nexport default ErrorNotification\n","import React from 'react'\nimport { Box, Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { setHistoryPaneState } from 'state/predictions'\nimport Notification from './Notification'\n\nconst PauseNotification = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n\n  const handleOpenHistory = () => {\n    dispatch(setHistoryPaneState(true))\n  }\n\n  return (\n    <Notification title={t('Markets Paused')}>\n      <Box mb=\"24px\">\n        <Text as=\"p\">{t('Prediction markets have been paused due to an error.')}</Text>\n        <Text as=\"p\">{t('All open positions have been canceled.')}</Text>\n        <Text as=\"p\">\n          {t('You can reclaim any funds entered into existing positions via the History tab on this page.')}\n        </Text>\n      </Box>\n      <Button variant=\"primary\" width=\"100%\" onClick={handleOpenHistory}>\n        {t('Show History')}\n      </Button>\n    </Notification>\n  )\n}\n\nexport default PauseNotification\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex } from '@pancakeswap/uikit'\nimport { useGetPredictionsStatus, useIsChartPaneOpen, useIsHistoryPaneOpen } from 'state/predictions/hooks'\nimport { PredictionStatus } from 'state/types'\nimport MobileMenu from './components/MobileMenu'\nimport History from './History'\nimport Positions from './Positions'\nimport Chart from './Chart'\nimport { ErrorNotification, PauseNotification } from './components/Notification'\nimport { PageView } from './types'\n\nconst StyledMobile = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  max-height: 100%;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    display: none;\n  }\n`\n\nconst View = styled.div<{ isVisible: boolean }>`\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  visibility: ${({ isVisible }) => (isVisible ? 'visible' : 'hidden')};\n`\n\nconst getView = (isHistoryPaneOpen: boolean, isChartPaneOpen: boolean): PageView => {\n  if (isHistoryPaneOpen) {\n    return PageView.HISTORY\n  }\n\n  if (isChartPaneOpen) {\n    return PageView.CHART\n  }\n\n  return PageView.POSITIONS\n}\n\nconst Mobile: React.FC = () => {\n  const isHistoryPaneOpen = useIsHistoryPaneOpen()\n  const isChartPaneOpen = useIsChartPaneOpen()\n  const view = getView(isHistoryPaneOpen, isChartPaneOpen)\n  const status = useGetPredictionsStatus()\n\n  return (\n    <StyledMobile>\n      <Box height=\"100%\" overflow=\"hidden\" position=\"relative\">\n        <View isVisible={view === PageView.POSITIONS}>\n          <Flex alignItems=\"center\" height=\"100%\">\n            {status === PredictionStatus.ERROR && <ErrorNotification />}\n            {status === PredictionStatus.PAUSED && <PauseNotification />}\n            {status === PredictionStatus.LIVE && <Positions view={view} />}\n          </Flex>\n        </View>\n        <View isVisible={view === PageView.CHART}>\n          <Chart />\n        </View>\n        <View isVisible={view === PageView.HISTORY}>\n          <History />\n        </View>\n      </Box>\n      <MobileMenu />\n    </StyledMobile>\n  )\n}\n\nexport default Mobile\n","import { useState } from \"react\"\nimport { useMatchBreakpoints, useModal } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { PageMeta } from 'components/Layout/Page'\nimport PageLoader from 'components/Loader/PageLoader'\nimport React, { useEffect, useRef } from 'react'\nimport { useAppDispatch } from 'state'\nimport { useInitialBlock } from 'state/block/hooks'\nimport { initializePredictions } from 'state/predictions'\nimport { useGetPredictionsStatus, useIsChartPaneOpen } from 'state/predictions/hooks'\nimport { PredictionStatus } from 'state/types'\nimport { useUserPredictionAcceptedRisk, useUserPredictionChartDisclaimerShow } from 'state/user/hooks'\nimport ChartDisclaimer from './components/ChartDisclaimer'\nimport CollectWinningsPopup from './components/CollectWinningsPopup'\nimport Container from './components/Container'\nimport RiskDisclaimer from './components/RiskDisclaimer'\nimport SwiperProvider from './context/SwiperProvider'\nimport Desktop from './Desktop'\nimport usePollOraclePrice from './hooks/usePollOraclePrice'\nimport usePollPredictions from './hooks/usePollPredictions'\nimport Mobile from './Mobile'\nimport useStore from \"./store\"\n\nconst Predictions = () => {\n  const {image} = useStore(state => state)\n  // console.log(\"imageeeeeeeeeeeeeeee\", `/images/arenas/${image||\"arles\"}.jpg`)\n\n  const { isDesktop } = useMatchBreakpoints()\n  // console.log(\"isDesktopisDesktop\", isDesktop)\n  const [hasAcceptedRisk, setHasAcceptedRisk] = useUserPredictionAcceptedRisk()\n  const [showDisclaimer] = useUserPredictionChartDisclaimerShow()\n  const { account } = useWeb3React()\n  const status = useGetPredictionsStatus()\n  const isChartPaneOpen = useIsChartPaneOpen()\n  const dispatch = useAppDispatch()\n  const initialBlock = useInitialBlock()\n  const handleAcceptRiskSuccess = () => setHasAcceptedRisk(true)\n  const [onPresentRiskDisclaimer] = useModal(<RiskDisclaimer onSuccess={handleAcceptRiskSuccess} />, false)\n  const [onPresentChartDisclaimer] = useModal(<ChartDisclaimer />, false)\n\n  // TODO: memoize modal's handlers\n  const onPresentRiskDisclaimerRef = useRef(onPresentRiskDisclaimer)\n  const onPresentChartDisclaimerRef = useRef(onPresentChartDisclaimer)\n\n  // Disclaimer\n  useEffect(() => {\n    if (!hasAcceptedRisk) {\n      onPresentRiskDisclaimerRef.current()\n    }\n  }, [hasAcceptedRisk, onPresentRiskDisclaimerRef])\n\n  // Chart Disclaimer\n  useEffect(() => {\n    if (isChartPaneOpen && showDisclaimer) {\n      onPresentChartDisclaimerRef.current()\n    }\n  }, [onPresentChartDisclaimerRef, isChartPaneOpen, showDisclaimer])\n\n  useEffect(() => {\n    if (initialBlock > 0) {\n      // Do not start initialization until the first block has been retrieved\n      dispatch(initializePredictions(account))\n      // console.log(\"initializePredictionsinitializePredictionsinitializePredictionsinitializePredictions\", initializePredictions(account))\n    }\n  }, [initialBlock, dispatch, account])\n\n  usePollPredictions()\n  usePollOraclePrice()\n  // console.log(\"statussssssss index\", status)\n  // console.log(\"PredictionStatus.INITIAL\", PredictionStatus)\n  // if (status === PredictionStatus.INITIAL) {\n  //   return <PageLoader />\n  // }\n\n  return (\n    <>\n      <PageMeta />\n      <SwiperProvider>\n        <Container style={{ backgroundImage: `url(/images/arenas/${image.toLowerCase()}.jpg)`, backgroundRepeat: \"no-repeat\", backgroundSize: \"cover\" }}>\n          {isDesktop ? <Desktop /> : <Mobile />}\n          <CollectWinningsPopup />\n        </Container>\n      </SwiperProvider>\n    </>\n  )\n}\n\nexport default Predictions\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ethers } from 'ethers'\nimport { minBy, orderBy } from 'lodash'\nimport { isAddress } from 'utils'\nimport { useAppDispatch } from 'state'\nimport { State, NodeRound, ReduxNodeLedger, NodeLedger, ReduxNodeRound } from '../types'\nimport { parseBigNumberObj } from './helpers'\nimport { fetchAddressResult } from '.'\n\nexport const useGetRounds = () => {\n  const rounds = useSelector((state: State) => state.predictions.rounds)\n  // console.log(\"roundsroundsrounds11111\", rounds)\n  return Object.keys(rounds).reduce((accum, epoch) => {\n    return {\n      ...accum,\n      [epoch]: parseBigNumberObj<ReduxNodeRound, NodeRound>(rounds[epoch]),\n    }\n  }, {}) as { [key: string]: NodeRound }\n}\n\nexport const useGetRound = (epoch: number) => {\n  const round = useSelector((state: State) => state.predictions.rounds[epoch])\n  return parseBigNumberObj<ReduxNodeRound, NodeRound>(round)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  // console.log(\"roundDataroundDataroundData\", roundData)\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetBetByEpoch = (account: string, epoch: number) => {\n  const bets = useSelector((state: State) => state.predictions.ledgers)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][epoch]) {\n    return null\n  }\n\n  return parseBigNumberObj<ReduxNodeLedger, NodeLedger>(bets[account][epoch])\n}\n\nexport const useGetIsClaimable = (epoch) => {\n  const claimableStatuses = useSelector((state: State) => state.predictions.claimableStatuses)\n  return claimableStatuses[epoch] || false\n}\n\n/**\n * Used to get the range of rounds to poll for\n */\nexport const useGetEarliestEpoch = () => {\n  return useSelector((state: State) => {\n    const earliestRound = minBy(Object.values(state.predictions.rounds), 'epoch')\n    return earliestRound?.epoch\n  })\n}\n\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalSeconds = () => {\n  return useSelector((state: State) => state.predictions.intervalSeconds)\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetRounds()\n  return rounds[currentEpoch]\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetHasHistoryLoaded = () => {\n  return useSelector((state: State) => state.predictions.hasHistoryLoaded)\n}\n\nexport const useGetCurrentHistoryPage = () => {\n  return useSelector((state: State) => state.predictions.currentHistoryPage)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => ethers.BigNumber.from(minBetAmount), [minBetAmount])\n}\n\nexport const useGetBufferSeconds = () => {\n  return useSelector((state: State) => state.predictions.bufferSeconds)\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetLastOraclePrice = () => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return useMemo(() => {\n    return ethers.BigNumber.from(lastOraclePrice)\n  }, [lastOraclePrice])\n}\n\n/**\n * The current round's lock timestamp will not be set immediately so we return an estimate until then\n */\nexport const useGetCurrentRoundLockTimestamp = () => {\n  const currentRound = useGetCurrentRound()\n  const intervalSeconds = useGetIntervalSeconds()\n\n  if (!currentRound.lockTimestamp) {\n    return currentRound.startTimestamp + intervalSeconds\n  }\n\n  return currentRound.lockTimestamp\n}\n\n// Leaderboard\nexport const useGetLeaderboardLoadingState = () => {\n  return useSelector((state: State) => state.predictions.leaderboard.loadingState)\n}\n\nexport const useGetLeaderboardResults = () => {\n  return useSelector((state: State) => state.predictions.leaderboard.results)\n}\n\nexport const useGetLeaderboardFilters = () => {\n  return useSelector((state: State) => state.predictions.leaderboard.filters)\n}\n\nexport const useGetLeaderboardSkip = () => {\n  return useSelector((state: State) => state.predictions.leaderboard.skip)\n}\n\nexport const useGetLeaderboardHasMoreResults = () => {\n  return useSelector((state: State) => state.predictions.leaderboard.hasMoreResults)\n}\n\nexport const useGetAddressResult = (account: string) => {\n  return useSelector((state: State) => state.predictions.leaderboard.addressResults[account])\n}\n\nexport const useGetOrFetchLeaderboardAddressResult = (account: string) => {\n  const addressResult = useGetAddressResult(account)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    // If address result is null it means we already tried fetching the results and none came back\n    if (!addressResult && addressResult !== null && address) {\n      dispatch(fetchAddressResult(account))\n    }\n  }, [dispatch, account, addressResult])\n\n  return addressResult\n}\n\nexport const useGetSelectedAddress = () => {\n  return useSelector((state: State) => state.predictions.leaderboard.selectedAddress)\n}\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt' }\n  | { type: 'approve_error' }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt' }\n  | { type: 'confirm_error' }\n\ninterface State {\n  approvalState: LoadingState\n  confirmState: LoadingState\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  confirmState: 'idle',\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n      }\n    default:\n      return state\n  }\n}\n\ninterface OnSuccessProps {\n  state: State\n  receipt: ethers.providers.TransactionReceipt\n}\n\ninterface ApproveConfirmTransaction {\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\n  onConfirm: () => Promise<ethers.providers.TransactionResponse>\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: ({ state, receipt }: OnSuccessProps) => void\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n  onApproveSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    handleApprove: async () => {\n      try {\n        const tx = await onApprove()\n        dispatch({ type: 'approve_sending' })\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt' })\n          onApproveSuccess({ state, receipt })\n        }\n      } catch (error) {\n        // console.log(\"eeerrrrrrroooooorrrrrrr\", error)\n        dispatch({ type: 'approve_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handleConfirm: async () => {\n      dispatch({ type: 'confirm_sending' })\n      // console.log(\"hiiiiiiiiiii\")\n      try {\n        const tx = await onConfirm()\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'confirm_receipt' })\n          onSuccess({ state, receipt })\n        }\n      } catch (error: any) {\n        console.log(\"erorrrrrrrrrrrrrrrrrrrrrrr\", error)\n        dispatch({ type: 'confirm_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction"],"sourceRoot":""}