{"version":3,"sources":["../node_modules/date-fns/esm/add/index.js","../node_modules/date-fns/esm/differenceInHours/index.js","../../src/hooks/useEventCallback.ts","../../src/utils/clamp.ts","../../src/components/common/Interactive.tsx","../../src/utils/format.ts","../../src/components/common/Pointer.tsx","../../src/utils/round.ts","../../src/utils/convert.ts","../../src/components/common/Hue.tsx","../../src/components/common/Saturation.tsx","../../src/utils/compare.ts","../../src/hooks/useColorManipulation.ts","../../src/utils/nonce.ts","../../src/hooks/useStyleSheet.ts","../../src/hooks/useIsomorphicLayoutEffect.ts","../../src/components/common/ColorPicker.tsx","../../src/components/HexColorPicker.tsx","../node_modules/three/examples/jsm/exporters/GLTFExporter.js","../node_modules/lodash/isEqual.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js"],"names":["add","dirtyDate","duration","requiredArgs","arguments","Date","NaN","years","toInteger","months","weeks","days","hours","minutes","seconds","date","toDate","dateWithMonths","addMonths","dateWithDays","addDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","getTime","MILLISECONDS_IN_HOUR","differenceInHours","dirtyDateLeft","dirtyDateRight","diff","differenceInMilliseconds","Math","floor","ceil","useEventCallback","handler","callbackRef","useRef","fn","value","current","clamp","number","min","max","isTouch","event","getRelativePosition","node","rect","getBoundingClientRect","pointer","touches","left","pageX","window","pageXOffset","width","top","pageY","pageYOffset","height","preventDefaultMove","preventDefault","Interactive","React","memo","onMove","onKey","rest","container","onMoveCallback","onKeyCallback","hasTouch","useMemo","handleMove","length","buttons","toggleDocumentEvents","handleMoveEnd","state","touch","toggleEvent","self","addEventListener","removeEventListener","nativeEvent","el","focus","keyCode","which","handleMoveStart","handleKeyDown","useEffect","onTouchStart","onMouseDown","className","ref","onKeyDown","tabIndex","role","formatClassName","names","filter","Boolean","join","Pointer","color","nodeClassName","style","backgroundColor","round","digits","base","pow","hexToRgba","PI","hex","substr","r","parseInt","g","b","a","hsvaToHsla","s","v","hh","h","l","hsvaToHslString","hsva","hsvaToRgba","c","d","module","format","toString","rgbaToHsva","delta","Hue","hue","onChange","interaction","offset","aria-label","aria-valuetext","Saturation","containerStyle","equalColorObjects","first","second","prop","useColorManipulation","colorModel","onChangeCallback","useState","toHsva","updateHsva","cache","equal","newHsva","newColor","fromHsva","handleChange","useCallback","params","Object","assign","nonce","styleElement","useIsomorphicLayoutEffect","useLayoutEffect","useStyleSheet","document","createElement","innerHTML","__webpack_nonce__","setAttribute","head","appendChild","ColorPicker","defaultColor","toLowerCase","HexColorPicker","props","GLTFExporter","this","pluginCallbacks","register","writer","GLTFLightExtension","GLTFMaterialsUnlitExtension","GLTFMaterialsPBRSpecularGlossiness","GLTFMaterialsTransmissionExtension","GLTFMaterialsVolumeExtension","callback","indexOf","push","splice","input","onDone","options","GLTFWriter","plugins","i","il","setPlugins","write","WEBGL_CONSTANTS","THREE_TO_WEBGL","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","ClampToEdgeWrapping","RepeatWrapping","MirroredRepeatWrapping","PATH_PROPERTIES","scale","position","quaternion","morphTargetInfluences","equalArray","array1","array2","every","element","index","getPaddedBufferSize","bufferSize","getPaddedArrayBuffer","arrayBuffer","paddingByte","paddedLength","byteLength","array","Uint8Array","set","buffer","cachedCanvas","pending","buffers","byteOffset","nodeMap","Map","skins","extensionsUsed","uids","uid","json","asset","version","generator","meshes","attributes","attributesNormalized","materials","textures","images","binary","trs","onlyVisible","truncateDrawRange","embedImages","maxTextureSize","Infinity","animations","includeCustomExtensions","processInput","Promise","all","then","blob","Blob","type","extensionsUsedList","keys","size","reader","FileReader","readAsArrayBuffer","onloadend","binaryChunk","result","binaryChunkPrefix","DataView","ArrayBuffer","setUint32","jsonChunk","text","undefined","TextEncoder","encode","charCodeAt","stringToArrayBuffer","JSON","stringify","jsonChunkPrefix","header","headerView","totalByteLength","glbBlob","glbReader","readAsDataURL","base64data","uri","object","objectDef","userData","parse","gltfExtensions","extensionName","extensions","extras","error","console","warn","name","message","has","get","normal","Vector3","count","abs","fromBufferAttribute","attribute","clone","x","y","z","setX","normalize","setXYZ","mapDef","texture","didTransform","transformDef","toArray","rotation","repeat","componentType","start","target","componentSize","bufferViews","itemSize","dataView","getX","getY","getZ","getW","setFloat32","setUint16","setUint8","bufferViewDef","processBuffer","byteStride","id","resolve","geometry","constructor","Float32Array","Uint32Array","Uint16Array","Error","end","end2","drawRange","bufferViewTarget","minMax","output","Array","fill","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","getMinMax","bufferView","processBufferView","accessorDef","normalized","accessors","image","flipY","cachedImages","mimeType","RGBAFormat","key","imageDef","canvas","ctx","getContext","translate","HTMLImageElement","HTMLCanvasElement","OffscreenCanvas","ImageBitmap","drawImage","RGBFormat","data","Uint8ClampedArray","j","putImageData","ImageData","toBlob","processBufferViewImage","bufferViewIndex","toDataURL","src","map","samplers","samplerDef","magFilter","minFilter","wrapS","wrapT","textureDef","sampler","processSampler","source","processImage","_invokeAll","ext","writeTexture","material","isShaderMaterial","materialDef","pbrMetallicRoughness","isMeshStandardMaterial","isMeshBasicMaterial","concat","opacity","baseColorFactor","metallicFactor","metalness","roughnessFactor","roughness","metalnessMap","roughnessMap","metalRoughMapDef","processTexture","applyTextureTransform","metallicRoughnessTexture","baseColorMapDef","baseColorTexture","emissive","multiplyScalar","emissiveIntensity","maxEmissiveComponent","emissiveFactor","emissiveMap","emissiveMapDef","emissiveTexture","normalMap","normalMapDef","normalScale","normalTexture","aoMap","occlusionMapDef","texCoord","aoMapIntensity","strength","occlusionTexture","transparent","alphaMode","alphaTest","alphaCutoff","side","DoubleSide","doubleSided","serializeUserData","writeMaterial","mesh","meshCacheKeyParts","uuid","isArray","meshCacheKey","mode","isLineSegments","isLineLoop","isLine","isPoints","wireframe","isBufferGeometry","meshDef","primitives","targets","nameConversion","uv","uv2","skinWeight","skinIndex","originalNormal","getAttribute","isNormalizedNormalAttribute","createNormalizedNormalAttribute","modifiedAttribute","attributeName","toUpperCase","test","getUID","BufferAttribute","accessor","processAccessor","weights","targetNames","reverseDictionary","morphTargetDictionary","warned","morphAttributes","gltfAttributeName","baseAttribute","relativeAttribute","morphTargetsRelative","jl","isMultiMaterial","groups","materialIndex","primitive","cacheKey","indices","processMaterial","writeMesh","camera","cameras","isOrtho","isOrthographicCamera","cameraDef","orthographic","xmag","right","ymag","zfar","far","znear","near","perspective","aspectRatio","aspect","yfov","MathUtils","degToRad","fov","clip","root","tracks","Utils","mergeMorphTargetTracks","channels","track","trackBinding","PropertyBinding","parseTrackName","trackNode","findNode","nodeName","trackProperty","propertyName","objectName","isSkinnedMesh","skeleton","getBoneByName","objectIndex","outputItemSize","values","times","interpolation","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","getInterpolation","InterpolateDiscrete","path","nodes","rootJoint","bones","joints","inverseBindMatrices","temporaryBoneInverse","Matrix4","copy","boneInverses","multiply","bindMatrix","skin","nodeDef","translation","matrixAutoUpdate","updateMatrix","matrix","elements","String","isMesh","meshIndex","processMesh","isCamera","processCamera","children","child","visible","nodeIndex","processNode","writeNode","scene","scenes","sceneDef","objects","Scene","processScene","beforeParse","objectsWithoutScene","processObjects","processSkin","processAnimation","afterParse","func","light","isLight","isDirectionalLight","isPointLight","isSpotLight","lightDef","intensity","distance","range","spot","innerConeAngle","penumbra","angle","outerConeAngle","decay","parent","lights","isGLTFSpecularGlossinessMaterial","extensionDef","diffuseFactor","specularFactor","specular","glossinessFactor","glossiness","diffuseTexture","specularMap","specularMapDef","specularGlossinessTexture","isMeshPhysicalMaterial","transmission","transmissionFactor","transmissionMap","transmissionMapDef","transmissionTexture","thickness","thicknessFactor","thicknessMap","thicknessMapDef","thicknessTexture","attenuationDistance","attenuationColor","attenuationTint","insertKeyframe","time","tolerance","valueSize","getValueSize","TimeBufferType","ValueBufferType","interpolant","evaluate","slice","mergedTracks","sourceTracks","sourceTrack","sourceTrackBinding","sourceTrackNode","propertyIndex","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","setInterpolation","InterpolateLinear","targetCount","targetIndex","mergedTrack","sourceInterpolant","keyframeIndex","baseIsEqual","require","exports","other","dateLeft","dateRight"],"mappings":"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","file":"static/js/34.37b0edb8.chunk.js","sourcesContent":["import addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added       |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date; // Add weeks and days\n\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import { useRef } from \"react\";\n\n// Saves incoming handler to the ref in order to avoid \"useCallback hell\"\nexport function useEventCallback<T>(handler?: (value: T) => void): (value: T) => void {\n  const callbackRef = useRef(handler);\n  const fn = useRef((value: T) => {\n    callbackRef.current && callbackRef.current(value);\n  });\n  callbackRef.current = handler;\n\n  return fn.current;\n}\n","// Clamps a value between an upper and lower bound.\n// We use ternary operators because it makes the minified code\n// 2 times shorter then `Math.min(Math.max(a,b),c)`\nexport const clamp = (number: number, min = 0, max = 1): number => {\n  return number > max ? max : number < min ? min : number;\n};\n","import React, { useRef, useMemo, useEffect } from \"react\";\n\nimport { useEventCallback } from \"../../hooks/useEventCallback\";\nimport { clamp } from \"../../utils/clamp\";\nexport interface Interaction {\n  left: number;\n  top: number;\n}\n\n// Check if an event was triggered by touch\nconst isTouch = (event: MouseEvent | TouchEvent): event is TouchEvent => \"touches\" in event;\n\n// Returns a relative position of the pointer inside the node's bounding box\nconst getRelativePosition = (node: HTMLDivElement, event: MouseEvent | TouchEvent): Interaction => {\n  const rect = node.getBoundingClientRect();\n\n  // Get user's pointer position from `touches` array if it's a `TouchEvent`\n  const pointer = isTouch(event) ? event.touches[0] : (event as MouseEvent);\n\n  return {\n    left: clamp((pointer.pageX - (rect.left + window.pageXOffset)) / rect.width),\n    top: clamp((pointer.pageY - (rect.top + window.pageYOffset)) / rect.height),\n  };\n};\n\n// Browsers introduced an intervention, making touch events passive by default.\n// This workaround removes `preventDefault` call from the touch handlers.\n// https://github.com/facebook/react/issues/19651\nconst preventDefaultMove = (event: MouseEvent | TouchEvent): void => {\n  !isTouch(event) && event.preventDefault();\n};\n\n// Prevent mobile browsers from handling mouse events (conflicting with touch ones).\n// If we detected a touch interaction before, we prefer reacting to touch events only.\nconst isInvalid = (event: MouseEvent | TouchEvent, hasTouch: boolean): boolean => {\n  return hasTouch && !isTouch(event);\n};\n\ninterface Props {\n  onMove: (interaction: Interaction) => void;\n  onKey: (offset: Interaction) => void;\n  children: React.ReactNode;\n}\n\nconst InteractiveBase = ({ onMove, onKey, ...rest }: Props) => {\n  const container = useRef<HTMLDivElement>(null);\n  const onMoveCallback = useEventCallback<Interaction>(onMove);\n  const onKeyCallback = useEventCallback<Interaction>(onKey);\n  const hasTouch = useRef(false);\n\n  const [handleMoveStart, handleKeyDown, toggleDocumentEvents] = useMemo(() => {\n    const handleMoveStart = ({ nativeEvent }: React.MouseEvent | React.TouchEvent) => {\n      const el = container.current;\n      if (!el) return;\n\n      // Prevent text selection\n      preventDefaultMove(nativeEvent);\n\n      if (isInvalid(nativeEvent, hasTouch.current) || !el) return;\n      hasTouch.current = isTouch(nativeEvent);\n\n      // The node/ref must actually exist when user start an interaction.\n      // We won't suppress the ESLint warning though, as it should probably be something to be aware of.\n      el.focus();\n      onMoveCallback(getRelativePosition(el, nativeEvent));\n      toggleDocumentEvents(true);\n    };\n\n    const handleMove = (event: MouseEvent | TouchEvent) => {\n      // Prevent text selection\n      preventDefaultMove(event);\n\n      // If user moves the pointer outside of the window or iframe bounds and release it there,\n      // `mouseup`/`touchend` won't be fired. In order to stop the picker from following the cursor\n      // after the user has moved the mouse/finger back to the document, we check `event.buttons`\n      // and `event.touches`. It allows us to detect that the user is just moving his pointer\n      // without pressing it down\n      const isDown = isTouch(event) ? event.touches.length > 0 : event.buttons > 0;\n\n      if (isDown && container.current) {\n        onMoveCallback(getRelativePosition(container.current, event));\n      } else {\n        toggleDocumentEvents(false);\n      }\n    };\n\n    const handleMoveEnd = () => toggleDocumentEvents(false);\n\n    const handleKeyDown = (event: React.KeyboardEvent) => {\n      const keyCode = event.which || event.keyCode;\n\n      // Ignore all keys except arrow ones\n      if (keyCode < 37 || keyCode > 40) return;\n      // Do not scroll page by arrow keys when document is focused on the element\n      event.preventDefault();\n      // Send relative offset to the parent component.\n      // We use codes (37←, 38↑, 39→, 40↓) instead of keys ('ArrowRight', 'ArrowDown', etc)\n      // to reduce the size of the library\n      onKeyCallback({\n        left: keyCode === 39 ? 0.05 : keyCode === 37 ? -0.05 : 0,\n        top: keyCode === 40 ? 0.05 : keyCode === 38 ? -0.05 : 0,\n      });\n    };\n\n    function toggleDocumentEvents(state?: boolean) {\n      const touch = hasTouch.current;\n      // add or remove additional pointer event listeners\n      const toggleEvent = state ? self.addEventListener : self.removeEventListener;\n      toggleEvent(touch ? \"touchmove\" : \"mousemove\", handleMove);\n      toggleEvent(touch ? \"touchend\" : \"mouseup\", handleMoveEnd);\n    }\n\n    return [handleMoveStart, handleKeyDown, toggleDocumentEvents];\n  }, [onKeyCallback, onMoveCallback]);\n\n  // Remove window event listeners before unmounting\n  useEffect(() => toggleDocumentEvents, [toggleDocumentEvents]);\n\n  return (\n    <div\n      {...rest}\n      onTouchStart={handleMoveStart}\n      onMouseDown={handleMoveStart}\n      className=\"react-colorful__interactive\"\n      ref={container}\n      onKeyDown={handleKeyDown}\n      tabIndex={0}\n      role=\"slider\"\n    />\n  );\n};\n\nexport const Interactive = React.memo(InteractiveBase);\n","export const formatClassName = (names: unknown[]): string => names.filter(Boolean).join(\" \");\n","import React from \"react\";\nimport { formatClassName } from \"../../utils/format\";\n\ninterface Props {\n  className?: string;\n  top?: number;\n  left: number;\n  color: string;\n}\n\nexport const Pointer = ({ className, color, left, top = 0.5 }: Props): JSX.Element => {\n  const nodeClassName = formatClassName([\"react-colorful__pointer\", className]);\n\n  const style = {\n    top: `${top * 100}%`,\n    left: `${left * 100}%`,\n  };\n\n  return (\n    <div className={nodeClassName} style={style}>\n      <div className=\"react-colorful__pointer-fill\" style={{ backgroundColor: color }} />\n    </div>\n  );\n};\n","export const round = (number: number, digits = 0, base = Math.pow(10, digits)): number => {\n  return Math.round(base * number) / base;\n};\n","import { round } from \"./round\";\nimport { RgbaColor, RgbColor, HslaColor, HslColor, HsvaColor, HsvColor } from \"../types\";\n\n/**\n * Valid CSS <angle> units.\n * https://developer.mozilla.org/en-US/docs/Web/CSS/angle\n */\nconst angleUnits: Record<string, number> = {\n  grad: 360 / 400,\n  turn: 360,\n  rad: 360 / (Math.PI * 2),\n};\n\nexport const hexToHsva = (hex: string): HsvaColor => rgbaToHsva(hexToRgba(hex));\n\nexport const hexToRgba = (hex: string): RgbaColor => {\n  if (hex[0] === \"#\") hex = hex.substr(1);\n\n  if (hex.length < 6) {\n    return {\n      r: parseInt(hex[0] + hex[0], 16),\n      g: parseInt(hex[1] + hex[1], 16),\n      b: parseInt(hex[2] + hex[2], 16),\n      a: 1,\n    };\n  }\n\n  return {\n    r: parseInt(hex.substr(0, 2), 16),\n    g: parseInt(hex.substr(2, 2), 16),\n    b: parseInt(hex.substr(4, 2), 16),\n    a: 1,\n  };\n};\n\nexport const parseHue = (value: string, unit = \"deg\"): number => {\n  return Number(value) * (angleUnits[unit] || 1);\n};\n\nexport const hslaStringToHsva = (hslString: string): HsvaColor => {\n  const matcher = /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hslString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hslStringToHsva = hslaStringToHsva;\n\nexport const hslaToHsva = ({ h, s, l, a }: HslaColor): HsvaColor => {\n  s *= (l < 50 ? l : 100 - l) / 100;\n\n  return {\n    h: h,\n    s: s > 0 ? ((2 * s) / (l + s)) * 100 : 0,\n    v: l + s,\n    a,\n  };\n};\n\nexport const hsvaToHex = (hsva: HsvaColor): string => rgbaToHex(hsvaToRgba(hsva));\n\nexport const hsvaToHsla = ({ h, s, v, a }: HsvaColor): HslaColor => {\n  const hh = ((200 - s) * v) / 100;\n\n  return {\n    h: round(h),\n    s: round(hh > 0 && hh < 200 ? ((s * v) / 100 / (hh <= 100 ? hh : 200 - hh)) * 100 : 0),\n    l: round(hh / 2),\n    a: round(a, 2),\n  };\n};\n\nexport const hsvaToHslString = (hsva: HsvaColor): string => {\n  const { h, s, l } = hsvaToHsla(hsva);\n  return `hsl(${h}, ${s}%, ${l}%)`;\n};\n\nexport const hsvaToHsvString = (hsva: HsvaColor): string => {\n  const { h, s, v } = roundHsva(hsva);\n  return `hsv(${h}, ${s}%, ${v}%)`;\n};\n\nexport const hsvaToHsvaString = (hsva: HsvaColor): string => {\n  const { h, s, v, a } = roundHsva(hsva);\n  return `hsva(${h}, ${s}%, ${v}%, ${a})`;\n};\n\nexport const hsvaToHslaString = (hsva: HsvaColor): string => {\n  const { h, s, l, a } = hsvaToHsla(hsva);\n  return `hsla(${h}, ${s}%, ${l}%, ${a})`;\n};\n\nexport const hsvaToRgba = ({ h, s, v, a }: HsvaColor): RgbaColor => {\n  h = (h / 360) * 6;\n  s = s / 100;\n  v = v / 100;\n\n  const hh = Math.floor(h),\n    b = v * (1 - s),\n    c = v * (1 - (h - hh) * s),\n    d = v * (1 - (1 - h + hh) * s),\n    module = hh % 6;\n\n  return {\n    r: round([v, c, b, b, d, v][module] * 255),\n    g: round([d, v, v, c, b, b][module] * 255),\n    b: round([b, b, d, v, v, c][module] * 255),\n    a: round(a, 2),\n  };\n};\n\nexport const hsvaToRgbString = (hsva: HsvaColor): string => {\n  const { r, g, b } = hsvaToRgba(hsva);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nexport const hsvaToRgbaString = (hsva: HsvaColor): string => {\n  const { r, g, b, a } = hsvaToRgba(hsva);\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n};\n\nexport const hsvaStringToHsva = (hsvString: string): HsvaColor => {\n  const matcher = /hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hsvString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return roundHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    v: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hsvStringToHsva = hsvaStringToHsva;\n\nexport const rgbaStringToHsva = (rgbaString: string): HsvaColor => {\n  const matcher = /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(rgbaString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? 100 / 255 : 1),\n    g: Number(match[3]) / (match[4] ? 100 / 255 : 1),\n    b: Number(match[5]) / (match[6] ? 100 / 255 : 1),\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? 100 : 1),\n  });\n};\n\nexport const rgbStringToHsva = rgbaStringToHsva;\n\nconst format = (number: number) => {\n  const hex = number.toString(16);\n  return hex.length < 2 ? \"0\" + hex : hex;\n};\n\nexport const rgbaToHex = ({ r, g, b }: RgbaColor): string => {\n  return \"#\" + format(r) + format(g) + format(b);\n};\n\nexport const rgbaToHsva = ({ r, g, b, a }: RgbaColor): HsvaColor => {\n  const max = Math.max(r, g, b);\n  const delta = max - Math.min(r, g, b);\n\n  // prettier-ignore\n  const hh = delta\n    ? max === r\n      ? (g - b) / delta\n      : max === g\n        ? 2 + (b - r) / delta\n        : 4 + (r - g) / delta\n    : 0;\n\n  return {\n    h: round(60 * (hh < 0 ? hh + 6 : hh)),\n    s: round(max ? (delta / max) * 100 : 0),\n    v: round((max / 255) * 100),\n    a,\n  };\n};\n\nexport const roundHsva = (hsva: HsvaColor): HsvaColor => ({\n  h: round(hsva.h),\n  s: round(hsva.s),\n  v: round(hsva.v),\n  a: round(hsva.a, 2),\n});\n\nexport const rgbaToRgb = ({ r, g, b }: RgbaColor): RgbColor => ({ r, g, b });\n\nexport const hslaToHsl = ({ h, s, l }: HslaColor): HslColor => ({ h, s, l });\n\nexport const hsvaToHsv = (hsva: HsvaColor): HsvColor => {\n  const { h, s, v } = roundHsva(hsva);\n  return { h, s, v };\n};\n","import React from \"react\";\n\nimport { Interactive, Interaction } from \"./Interactive\";\nimport { Pointer } from \"./Pointer\";\n\nimport { hsvaToHslString } from \"../../utils/convert\";\nimport { formatClassName } from \"../../utils/format\";\nimport { clamp } from \"../../utils/clamp\";\nimport { round } from \"../../utils/round\";\n\ninterface Props {\n  className?: string;\n  hue: number;\n  onChange: (newHue: { h: number }) => void;\n}\n\nconst HueBase = ({ className, hue, onChange }: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({ h: 360 * interaction.left });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Hue measured in degrees of the color circle ranging from 0 to 360\n    onChange({\n      h: clamp(hue + offset.left * 360, 0, 360),\n    });\n  };\n\n  const nodeClassName = formatClassName([\"react-colorful__hue\", className]);\n\n  return (\n    <div className={nodeClassName}>\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Hue\"\n        aria-valuetext={round(hue)}\n      >\n        <Pointer\n          className=\"react-colorful__hue-pointer\"\n          left={hue / 360}\n          color={hsvaToHslString({ h: hue, s: 100, v: 100, a: 1 })}\n        />\n      </Interactive>\n    </div>\n  );\n};\n\nexport const Hue = React.memo(HueBase);\n","import React from \"react\";\nimport { Interactive, Interaction } from \"./Interactive\";\nimport { Pointer } from \"./Pointer\";\nimport { HsvaColor } from \"../../types\";\nimport { hsvaToHslString } from \"../../utils/convert\";\nimport { clamp } from \"../../utils/clamp\";\nimport { round } from \"../../utils/round\";\n\ninterface Props {\n  hsva: HsvaColor;\n  onChange: (newColor: { s: number; v: number }) => void;\n}\n\nconst SaturationBase = ({ hsva, onChange }: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({\n      s: interaction.left * 100,\n      v: 100 - interaction.top * 100,\n    });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Saturation and brightness always fit into [0, 100] range\n    onChange({\n      s: clamp(hsva.s + offset.left * 100, 0, 100),\n      v: clamp(hsva.v - offset.top * 100, 0, 100),\n    });\n  };\n\n  const containerStyle = {\n    backgroundColor: hsvaToHslString({ h: hsva.h, s: 100, v: 100, a: 1 }),\n  };\n\n  return (\n    <div className=\"react-colorful__saturation\" style={containerStyle}>\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Color\"\n        aria-valuetext={`Saturation ${round(hsva.s)}%, Brightness ${round(hsva.v)}%`}\n      >\n        <Pointer\n          className=\"react-colorful__saturation-pointer\"\n          top={1 - hsva.v / 100}\n          left={hsva.s / 100}\n          color={hsvaToHslString(hsva)}\n        />\n      </Interactive>\n    </div>\n  );\n};\n\nexport const Saturation = React.memo(SaturationBase);\n","import { hexToRgba } from \"./convert\";\nimport { ObjectColor } from \"../types\";\n\nexport const equalColorObjects = (first: ObjectColor, second: ObjectColor): boolean => {\n  if (first === second) return true;\n\n  for (const prop in first) {\n    // The following allows for a type-safe calling of this function (first & second have to be HSL, HSV, or RGB)\n    // with type-unsafe iterating over object keys. TS does not allow this without an index (`[key: string]: number`)\n    // on an object to define how iteration is normally done. To ensure extra keys are not allowed on our types,\n    // we must cast our object to unknown (as RGB demands `r` be a key, while `Record<string, x>` does not care if\n    // there is or not), and then as a type TS can iterate over.\n    if (\n      ((first as unknown) as Record<string, number>)[prop] !==\n      ((second as unknown) as Record<string, number>)[prop]\n    )\n      return false;\n  }\n\n  return true;\n};\n\nexport const equalColorString = (first: string, second: string): boolean => {\n  return first.replace(/\\s/g, \"\") === second.replace(/\\s/g, \"\");\n};\n\nexport const equalHex = (first: string, second: string): boolean => {\n  if (first.toLowerCase() === second.toLowerCase()) return true;\n\n  // To compare colors like `#FFF` and `ffffff` we convert them into RGB objects\n  return equalColorObjects(hexToRgba(first), hexToRgba(second));\n};\n","import { useState, useEffect, useCallback, useRef } from \"react\";\nimport { ColorModel, AnyColor, HsvaColor } from \"../types\";\nimport { equalColorObjects } from \"../utils/compare\";\nimport { useEventCallback } from \"./useEventCallback\";\n\nexport function useColorManipulation<T extends AnyColor>(\n  colorModel: ColorModel<T>,\n  color: T,\n  onChange?: (color: T) => void\n): [HsvaColor, (color: Partial<HsvaColor>) => void] {\n  // Save onChange callback in the ref for avoiding \"useCallback hell\"\n  const onChangeCallback = useEventCallback<T>(onChange);\n\n  // No matter which color model is used (HEX, RGB(A) or HSL(A)),\n  // all internal calculations are based on HSVA model\n  const [hsva, updateHsva] = useState<HsvaColor>(() => colorModel.toHsva(color));\n\n  // By using this ref we're able to prevent extra updates\n  // and the effects recursion during the color conversion\n  const cache = useRef({ color, hsva });\n\n  // Update local HSVA-value if `color` property value is changed,\n  // but only if that's not the same color that we just sent to the parent\n  useEffect(() => {\n    if (!colorModel.equal(color, cache.current.color)) {\n      const newHsva = colorModel.toHsva(color);\n      cache.current = { hsva: newHsva, color };\n      updateHsva(newHsva);\n    }\n  }, [color, colorModel]);\n\n  // Trigger `onChange` callback only if an updated color is different from cached one;\n  // save the new color to the ref to prevent unnecessary updates\n  useEffect(() => {\n    let newColor;\n    if (\n      !equalColorObjects(hsva, cache.current.hsva) &&\n      !colorModel.equal((newColor = colorModel.fromHsva(hsva)), cache.current.color)\n    ) {\n      cache.current = { hsva, color: newColor };\n      onChangeCallback(newColor);\n    }\n  }, [hsva, colorModel, onChangeCallback]);\n\n  // Merge the current HSVA color object with updated params.\n  // For example, when a child component sends `h` or `s` only\n  const handleChange = useCallback((params: Partial<HsvaColor>) => {\n    updateHsva((current) => Object.assign({}, current, params));\n  }, []);\n\n  return [hsva, handleChange];\n}\n","declare const __webpack_nonce__: string | undefined;\nlet nonce: string | undefined;\n\n/**\n * Returns a nonce hash included by Webpack or the one defined manually by developer.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n * https://webpack.js.org/guides/csp/\n */\nexport const getNonce = (): string | undefined => {\n  if (nonce) return nonce;\n  if (typeof __webpack_nonce__ !== \"undefined\") return __webpack_nonce__;\n  return undefined;\n};\n\n/**\n * Signs the style tag with a base64-encoded string (nonce) to conforms to Content Security Policies.\n * This function has to be invoked before any picker is rendered if you aren't using Webpack for CSP.\n */\nexport const setNonce = (hash: string): void => {\n  nonce = hash;\n};\n","import { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport { getNonce } from \"../utils/nonce\";\n\n// Bundler is configured to load this as a processed minified CSS-string\nimport styles from \"../css/styles.css\";\n\nlet styleElement: HTMLStyleElement | undefined;\n\n/**\n * Injects CSS code into the document's <head>\n */\nexport const useStyleSheet = (): void => {\n  useIsomorphicLayoutEffect(() => {\n    if (typeof document !== \"undefined\" && !styleElement) {\n      styleElement = document.createElement(\"style\");\n      styleElement.innerHTML = styles;\n\n      // Conform to CSP rules by setting `nonce` attribute to the inline styles\n      const nonce = getNonce();\n      if (nonce) styleElement.setAttribute(\"nonce\", nonce);\n\n      document.head.appendChild(styleElement);\n    }\n  }, []);\n};\n","import { useLayoutEffect, useEffect } from \"react\";\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n","import React from \"react\";\n\nimport { Hue } from \"./Hue\";\nimport { Saturation } from \"./Saturation\";\n\nimport { ColorModel, ColorPickerBaseProps, AnyColor } from \"../../types\";\nimport { useColorManipulation } from \"../../hooks/useColorManipulation\";\nimport { useStyleSheet } from \"../../hooks/useStyleSheet\";\nimport { formatClassName } from \"../../utils/format\";\n\ninterface Props<T extends AnyColor> extends Partial<ColorPickerBaseProps<T>> {\n  colorModel: ColorModel<T>;\n}\n\nexport const ColorPicker = <T extends AnyColor>({\n  className,\n  colorModel,\n  color = colorModel.defaultColor,\n  onChange,\n  ...rest\n}: Props<T>): JSX.Element => {\n  useStyleSheet();\n\n  const [hsva, updateHsva] = useColorManipulation<T>(colorModel, color, onChange);\n\n  const nodeClassName = formatClassName([\"react-colorful\", className]);\n\n  return (\n    <div {...rest} className={nodeClassName}>\n      <Saturation hsva={hsva} onChange={updateHsva} />\n      <Hue hue={hsva.h} onChange={updateHsva} className=\"react-colorful__last-control\" />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { ColorPicker } from \"./common/ColorPicker\";\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\nimport { equalHex } from \"../utils/compare\";\nimport { hexToHsva, hsvaToHex } from \"../utils/convert\";\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"000\",\n  toHsva: hexToHsva,\n  fromHsva: hsvaToHex,\n  equal: equalHex,\n};\n\nexport const HexColorPicker = (props: Partial<ColorPickerBaseProps<string>>): JSX.Element => (\n  <ColorPicker {...props} colorModel={colorModel} />\n);\n","import {\n\tBufferAttribute,\n\tClampToEdgeWrapping,\n\tDoubleSide,\n\tInterpolateDiscrete,\n\tInterpolateLinear,\n\tLinearFilter,\n\tLinearMipmapLinearFilter,\n\tLinearMipmapNearestFilter,\n\tMathUtils,\n\tMatrix4,\n\tMirroredRepeatWrapping,\n\tNearestFilter,\n\tNearestMipmapLinearFilter,\n\tNearestMipmapNearestFilter,\n\tPropertyBinding,\n\tRGBAFormat,\n\tRGBFormat,\n\tRepeatWrapping,\n\tScene,\n\tVector3\n} from 'three';\n\n\nclass GLTFExporter {\n\n\tconstructor() {\n\n\t\tthis.pluginCallbacks = [];\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFLightExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsUnlitExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsPBRSpecularGlossiness( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsTransmissionExtension( writer );\n\n\t\t} );\n\n\t\tthis.register( function ( writer ) {\n\n\t\t\treturn new GLTFMaterialsVolumeExtension( writer );\n\n\t\t} );\n\n\t}\n\n\tregister( callback ) {\n\n\t\tif ( this.pluginCallbacks.indexOf( callback ) === - 1 ) {\n\n\t\t\tthis.pluginCallbacks.push( callback );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunregister( callback ) {\n\n\t\tif ( this.pluginCallbacks.indexOf( callback ) !== - 1 ) {\n\n\t\t\tthis.pluginCallbacks.splice( this.pluginCallbacks.indexOf( callback ), 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Parse scenes and generate GLTF output\n\t * @param  {Scene or [THREE.Scenes]} input   Scene or Array of THREE.Scenes\n\t * @param  {Function} onDone  Callback on completed\n\t * @param  {Object} options options\n\t */\n\tparse( input, onDone, options ) {\n\n\t\tconst writer = new GLTFWriter();\n\t\tconst plugins = [];\n\n\t\tfor ( let i = 0, il = this.pluginCallbacks.length; i < il; i ++ ) {\n\n\t\t\tplugins.push( this.pluginCallbacks[ i ]( writer ) );\n\n\t\t}\n\n\t\twriter.setPlugins( plugins );\n\t\twriter.write( input, onDone, options );\n\n\t}\n\n}\n\n//------------------------------------------------------------------------------\n// Constants\n//------------------------------------------------------------------------------\n\nconst WEBGL_CONSTANTS = {\n\tPOINTS: 0x0000,\n\tLINES: 0x0001,\n\tLINE_LOOP: 0x0002,\n\tLINE_STRIP: 0x0003,\n\tTRIANGLES: 0x0004,\n\tTRIANGLE_STRIP: 0x0005,\n\tTRIANGLE_FAN: 0x0006,\n\n\tUNSIGNED_BYTE: 0x1401,\n\tUNSIGNED_SHORT: 0x1403,\n\tFLOAT: 0x1406,\n\tUNSIGNED_INT: 0x1405,\n\tARRAY_BUFFER: 0x8892,\n\tELEMENT_ARRAY_BUFFER: 0x8893,\n\n\tNEAREST: 0x2600,\n\tLINEAR: 0x2601,\n\tNEAREST_MIPMAP_NEAREST: 0x2700,\n\tLINEAR_MIPMAP_NEAREST: 0x2701,\n\tNEAREST_MIPMAP_LINEAR: 0x2702,\n\tLINEAR_MIPMAP_LINEAR: 0x2703,\n\n\tCLAMP_TO_EDGE: 33071,\n\tMIRRORED_REPEAT: 33648,\n\tREPEAT: 10497\n};\n\nconst THREE_TO_WEBGL = {};\n\nTHREE_TO_WEBGL[ NearestFilter ] = WEBGL_CONSTANTS.NEAREST;\nTHREE_TO_WEBGL[ NearestMipmapNearestFilter ] = WEBGL_CONSTANTS.NEAREST_MIPMAP_NEAREST;\nTHREE_TO_WEBGL[ NearestMipmapLinearFilter ] = WEBGL_CONSTANTS.NEAREST_MIPMAP_LINEAR;\nTHREE_TO_WEBGL[ LinearFilter ] = WEBGL_CONSTANTS.LINEAR;\nTHREE_TO_WEBGL[ LinearMipmapNearestFilter ] = WEBGL_CONSTANTS.LINEAR_MIPMAP_NEAREST;\nTHREE_TO_WEBGL[ LinearMipmapLinearFilter ] = WEBGL_CONSTANTS.LINEAR_MIPMAP_LINEAR;\n\nTHREE_TO_WEBGL[ ClampToEdgeWrapping ] = WEBGL_CONSTANTS.CLAMP_TO_EDGE;\nTHREE_TO_WEBGL[ RepeatWrapping ] = WEBGL_CONSTANTS.REPEAT;\nTHREE_TO_WEBGL[ MirroredRepeatWrapping ] = WEBGL_CONSTANTS.MIRRORED_REPEAT;\n\nconst PATH_PROPERTIES = {\n\tscale: 'scale',\n\tposition: 'translation',\n\tquaternion: 'rotation',\n\tmorphTargetInfluences: 'weights'\n};\n\n// GLB constants\n// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#glb-file-format-specification\n\nconst GLB_HEADER_BYTES = 12;\nconst GLB_HEADER_MAGIC = 0x46546C67;\nconst GLB_VERSION = 2;\n\nconst GLB_CHUNK_PREFIX_BYTES = 8;\nconst GLB_CHUNK_TYPE_JSON = 0x4E4F534A;\nconst GLB_CHUNK_TYPE_BIN = 0x004E4942;\n\n//------------------------------------------------------------------------------\n// Utility functions\n//------------------------------------------------------------------------------\n\n/**\n * Compare two arrays\n * @param  {Array} array1 Array 1 to compare\n * @param  {Array} array2 Array 2 to compare\n * @return {Boolean}        Returns true if both arrays are equal\n */\nfunction equalArray( array1, array2 ) {\n\n\treturn ( array1.length === array2.length ) && array1.every( function ( element, index ) {\n\n\t\treturn element === array2[ index ];\n\n\t} );\n\n}\n\n/**\n * Converts a string to an ArrayBuffer.\n * @param  {string} text\n * @return {ArrayBuffer}\n */\nfunction stringToArrayBuffer( text ) {\n\n\tif ( window.TextEncoder !== undefined ) {\n\n\t\treturn new TextEncoder().encode( text ).buffer;\n\n\t}\n\n\tconst array = new Uint8Array( new ArrayBuffer( text.length ) );\n\n\tfor ( let i = 0, il = text.length; i < il; i ++ ) {\n\n\t\tconst value = text.charCodeAt( i );\n\n\t\t// Replacing multi-byte character with space(0x20).\n\t\tarray[ i ] = value > 0xFF ? 0x20 : value;\n\n\t}\n\n\treturn array.buffer;\n\n}\n\n/**\n * Is identity matrix\n *\n * @param {Matrix4} matrix\n * @returns {Boolean} Returns true, if parameter is identity matrix\n */\nfunction isIdentityMatrix( matrix ) {\n\n\treturn equalArray( matrix.elements, [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ] );\n\n}\n\n/**\n * Get the min and max vectors from the given attribute\n * @param  {BufferAttribute} attribute Attribute to find the min/max in range from start to start + count\n * @param  {Integer} start\n * @param  {Integer} count\n * @return {Object} Object containing the `min` and `max` values (As an array of attribute.itemSize components)\n */\nfunction getMinMax( attribute, start, count ) {\n\n\tconst output = {\n\n\t\tmin: new Array( attribute.itemSize ).fill( Number.POSITIVE_INFINITY ),\n\t\tmax: new Array( attribute.itemSize ).fill( Number.NEGATIVE_INFINITY )\n\n\t};\n\n\tfor ( let i = start; i < start + count; i ++ ) {\n\n\t\tfor ( let a = 0; a < attribute.itemSize; a ++ ) {\n\n\t\t\tlet value;\n\n\t\t\tif ( attribute.itemSize > 4 ) {\n\n\t\t\t\t // no support for interleaved data for itemSize > 4\n\n\t\t\t\tvalue = attribute.array[ i * attribute.itemSize + a ];\n\n\t\t\t} else {\n\n\t\t\t\tif ( a === 0 ) value = attribute.getX( i );\n\t\t\t\telse if ( a === 1 ) value = attribute.getY( i );\n\t\t\t\telse if ( a === 2 ) value = attribute.getZ( i );\n\t\t\t\telse if ( a === 3 ) value = attribute.getW( i );\n\n\t\t\t}\n\n\t\t\toutput.min[ a ] = Math.min( output.min[ a ], value );\n\t\t\toutput.max[ a ] = Math.max( output.max[ a ], value );\n\n\t\t}\n\n\t}\n\n\treturn output;\n\n}\n\n/**\n * Get the required size + padding for a buffer, rounded to the next 4-byte boundary.\n * https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#data-alignment\n *\n * @param {Integer} bufferSize The size the original buffer.\n * @returns {Integer} new buffer size with required padding.\n *\n */\nfunction getPaddedBufferSize( bufferSize ) {\n\n\treturn Math.ceil( bufferSize / 4 ) * 4;\n\n}\n\n/**\n * Returns a buffer aligned to 4-byte boundary.\n *\n * @param {ArrayBuffer} arrayBuffer Buffer to pad\n * @param {Integer} paddingByte (Optional)\n * @returns {ArrayBuffer} The same buffer if it's already aligned to 4-byte boundary or a new buffer\n */\nfunction getPaddedArrayBuffer( arrayBuffer, paddingByte = 0 ) {\n\n\tconst paddedLength = getPaddedBufferSize( arrayBuffer.byteLength );\n\n\tif ( paddedLength !== arrayBuffer.byteLength ) {\n\n\t\tconst array = new Uint8Array( paddedLength );\n\t\tarray.set( new Uint8Array( arrayBuffer ) );\n\n\t\tif ( paddingByte !== 0 ) {\n\n\t\t\tfor ( let i = arrayBuffer.byteLength; i < paddedLength; i ++ ) {\n\n\t\t\t\tarray[ i ] = paddingByte;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn array.buffer;\n\n\t}\n\n\treturn arrayBuffer;\n\n}\n\nlet cachedCanvas = null;\n\n/**\n * Writer\n */\nclass GLTFWriter {\n\n\tconstructor() {\n\n\t\tthis.plugins = [];\n\n\t\tthis.options = {};\n\t\tthis.pending = [];\n\t\tthis.buffers = [];\n\n\t\tthis.byteOffset = 0;\n\t\tthis.buffers = [];\n\t\tthis.nodeMap = new Map();\n\t\tthis.skins = [];\n\t\tthis.extensionsUsed = {};\n\n\t\tthis.uids = new Map();\n\t\tthis.uid = 0;\n\n\t\tthis.json = {\n\t\t\tasset: {\n\t\t\t\tversion: '2.0',\n\t\t\t\tgenerator: 'THREE.GLTFExporter'\n\t\t\t}\n\t\t};\n\n\t\tthis.cache = {\n\t\t\tmeshes: new Map(),\n\t\t\tattributes: new Map(),\n\t\t\tattributesNormalized: new Map(),\n\t\t\tmaterials: new Map(),\n\t\t\ttextures: new Map(),\n\t\t\timages: new Map()\n\t\t};\n\n\t}\n\n\tsetPlugins( plugins ) {\n\n\t\tthis.plugins = plugins;\n\n\t}\n\n\t/**\n\t * Parse scenes and generate GLTF output\n\t * @param  {Scene or [THREE.Scenes]} input   Scene or Array of THREE.Scenes\n\t * @param  {Function} onDone  Callback on completed\n\t * @param  {Object} options options\n\t */\n\twrite( input, onDone, options ) {\n\n\t\tthis.options = Object.assign( {}, {\n\t\t\t// default options\n\t\t\tbinary: false,\n\t\t\ttrs: false,\n\t\t\tonlyVisible: true,\n\t\t\ttruncateDrawRange: true,\n\t\t\tembedImages: true,\n\t\t\tmaxTextureSize: Infinity,\n\t\t\tanimations: [],\n\t\t\tincludeCustomExtensions: false\n\t\t}, options );\n\n\t\tif ( this.options.animations.length > 0 ) {\n\n\t\t\t// Only TRS properties, and not matrices, may be targeted by animation.\n\t\t\tthis.options.trs = true;\n\n\t\t}\n\n\t\tthis.processInput( input );\n\n\t\tconst writer = this;\n\n\t\tPromise.all( this.pending ).then( function () {\n\n\t\t\tconst buffers = writer.buffers;\n\t\t\tconst json = writer.json;\n\t\t\tconst options = writer.options;\n\t\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\t\t// Merge buffers.\n\t\t\tconst blob = new Blob( buffers, { type: 'application/octet-stream' } );\n\n\t\t\t// Declare extensions.\n\t\t\tconst extensionsUsedList = Object.keys( extensionsUsed );\n\n\t\t\tif ( extensionsUsedList.length > 0 ) json.extensionsUsed = extensionsUsedList;\n\n\t\t\t// Update bytelength of the single buffer.\n\t\t\tif ( json.buffers && json.buffers.length > 0 ) json.buffers[ 0 ].byteLength = blob.size;\n\n\t\t\tif ( options.binary === true ) {\n\n\t\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#glb-file-format-specification\n\n\t\t\t\tconst reader = new window.FileReader();\n\t\t\t\treader.readAsArrayBuffer( blob );\n\t\t\t\treader.onloadend = function () {\n\n\t\t\t\t\t// Binary chunk.\n\t\t\t\t\tconst binaryChunk = getPaddedArrayBuffer( reader.result );\n\t\t\t\t\tconst binaryChunkPrefix = new DataView( new ArrayBuffer( GLB_CHUNK_PREFIX_BYTES ) );\n\t\t\t\t\tbinaryChunkPrefix.setUint32( 0, binaryChunk.byteLength, true );\n\t\t\t\t\tbinaryChunkPrefix.setUint32( 4, GLB_CHUNK_TYPE_BIN, true );\n\n\t\t\t\t\t// JSON chunk.\n\t\t\t\t\tconst jsonChunk = getPaddedArrayBuffer( stringToArrayBuffer( JSON.stringify( json ) ), 0x20 );\n\t\t\t\t\tconst jsonChunkPrefix = new DataView( new ArrayBuffer( GLB_CHUNK_PREFIX_BYTES ) );\n\t\t\t\t\tjsonChunkPrefix.setUint32( 0, jsonChunk.byteLength, true );\n\t\t\t\t\tjsonChunkPrefix.setUint32( 4, GLB_CHUNK_TYPE_JSON, true );\n\n\t\t\t\t\t// GLB header.\n\t\t\t\t\tconst header = new ArrayBuffer( GLB_HEADER_BYTES );\n\t\t\t\t\tconst headerView = new DataView( header );\n\t\t\t\t\theaderView.setUint32( 0, GLB_HEADER_MAGIC, true );\n\t\t\t\t\theaderView.setUint32( 4, GLB_VERSION, true );\n\t\t\t\t\tconst totalByteLength = GLB_HEADER_BYTES\n\t\t\t\t\t\t+ jsonChunkPrefix.byteLength + jsonChunk.byteLength\n\t\t\t\t\t\t+ binaryChunkPrefix.byteLength + binaryChunk.byteLength;\n\t\t\t\t\theaderView.setUint32( 8, totalByteLength, true );\n\n\t\t\t\t\tconst glbBlob = new Blob( [\n\t\t\t\t\t\theader,\n\t\t\t\t\t\tjsonChunkPrefix,\n\t\t\t\t\t\tjsonChunk,\n\t\t\t\t\t\tbinaryChunkPrefix,\n\t\t\t\t\t\tbinaryChunk\n\t\t\t\t\t], { type: 'application/octet-stream' } );\n\n\t\t\t\t\tconst glbReader = new window.FileReader();\n\t\t\t\t\tglbReader.readAsArrayBuffer( glbBlob );\n\t\t\t\t\tglbReader.onloadend = function () {\n\n\t\t\t\t\t\tonDone( glbReader.result );\n\n\t\t\t\t\t};\n\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tif ( json.buffers && json.buffers.length > 0 ) {\n\n\t\t\t\t\tconst reader = new window.FileReader();\n\t\t\t\t\treader.readAsDataURL( blob );\n\t\t\t\t\treader.onloadend = function () {\n\n\t\t\t\t\t\tconst base64data = reader.result;\n\t\t\t\t\t\tjson.buffers[ 0 ].uri = base64data;\n\t\t\t\t\t\tonDone( json );\n\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\tonDone( json );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Serializes a userData.\n\t *\n\t * @param {THREE.Object3D|THREE.Material} object\n\t * @param {Object} objectDef\n\t */\n\tserializeUserData( object, objectDef ) {\n\n\t\tif ( Object.keys( object.userData ).length === 0 ) return;\n\n\t\tconst options = this.options;\n\t\tconst extensionsUsed = this.extensionsUsed;\n\n\t\ttry {\n\n\t\t\tconst json = JSON.parse( JSON.stringify( object.userData ) );\n\n\t\t\tif ( options.includeCustomExtensions && json.gltfExtensions ) {\n\n\t\t\t\tif ( objectDef.extensions === undefined ) objectDef.extensions = {};\n\n\t\t\t\tfor ( const extensionName in json.gltfExtensions ) {\n\n\t\t\t\t\tobjectDef.extensions[ extensionName ] = json.gltfExtensions[ extensionName ];\n\t\t\t\t\textensionsUsed[ extensionName ] = true;\n\n\t\t\t\t}\n\n\t\t\t\tdelete json.gltfExtensions;\n\n\t\t\t}\n\n\t\t\tif ( Object.keys( json ).length > 0 ) objectDef.extras = json;\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: userData of \\'' + object.name + '\\' ' +\n\t\t\t\t'won\\'t be serialized because of JSON.stringify error - ' + error.message );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Assign and return a temporal unique id for an object\n\t * especially which doesn't have .uuid\n\t * @param  {Object} object\n\t * @return {Integer}\n\t */\n\tgetUID( object ) {\n\n\t\tif ( ! this.uids.has( object ) ) this.uids.set( object, this.uid ++ );\n\n\t\treturn this.uids.get( object );\n\n\t}\n\n\t/**\n\t * Checks if normal attribute values are normalized.\n\t *\n\t * @param {BufferAttribute} normal\n\t * @returns {Boolean}\n\t */\n\tisNormalizedNormalAttribute( normal ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( cache.attributesNormalized.has( normal ) ) return false;\n\n\t\tconst v = new Vector3();\n\n\t\tfor ( let i = 0, il = normal.count; i < il; i ++ ) {\n\n\t\t\t// 0.0005 is from glTF-validator\n\t\t\tif ( Math.abs( v.fromBufferAttribute( normal, i ).length() - 1.0 ) > 0.0005 ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t/**\n\t * Creates normalized normal buffer attribute.\n\t *\n\t * @param {BufferAttribute} normal\n\t * @returns {BufferAttribute}\n\t *\n\t */\n\tcreateNormalizedNormalAttribute( normal ) {\n\n\t\tconst cache = this.cache;\n\n\t\tif ( cache.attributesNormalized.has( normal ) )\treturn cache.attributesNormalized.get( normal );\n\n\t\tconst attribute = normal.clone();\n\t\tconst v = new Vector3();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tv.fromBufferAttribute( attribute, i );\n\n\t\t\tif ( v.x === 0 && v.y === 0 && v.z === 0 ) {\n\n\t\t\t\t// if values can't be normalized set (1, 0, 0)\n\t\t\t\tv.setX( 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\tv.normalize();\n\n\t\t\t}\n\n\t\t\tattribute.setXYZ( i, v.x, v.y, v.z );\n\n\t\t}\n\n\t\tcache.attributesNormalized.set( normal, attribute );\n\n\t\treturn attribute;\n\n\t}\n\n\t/**\n\t * Applies a texture transform, if present, to the map definition. Requires\n\t * the KHR_texture_transform extension.\n\t *\n\t * @param {Object} mapDef\n\t * @param {THREE.Texture} texture\n\t */\n\tapplyTextureTransform( mapDef, texture ) {\n\n\t\tlet didTransform = false;\n\t\tconst transformDef = {};\n\n\t\tif ( texture.offset.x !== 0 || texture.offset.y !== 0 ) {\n\n\t\t\ttransformDef.offset = texture.offset.toArray();\n\t\t\tdidTransform = true;\n\n\t\t}\n\n\t\tif ( texture.rotation !== 0 ) {\n\n\t\t\ttransformDef.rotation = texture.rotation;\n\t\t\tdidTransform = true;\n\n\t\t}\n\n\t\tif ( texture.repeat.x !== 1 || texture.repeat.y !== 1 ) {\n\n\t\t\ttransformDef.scale = texture.repeat.toArray();\n\t\t\tdidTransform = true;\n\n\t\t}\n\n\t\tif ( didTransform ) {\n\n\t\t\tmapDef.extensions = mapDef.extensions || {};\n\t\t\tmapDef.extensions[ 'KHR_texture_transform' ] = transformDef;\n\t\t\tthis.extensionsUsed[ 'KHR_texture_transform' ] = true;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Process a buffer to append to the default one.\n\t * @param  {ArrayBuffer} buffer\n\t * @return {Integer}\n\t */\n\tprocessBuffer( buffer ) {\n\n\t\tconst json = this.json;\n\t\tconst buffers = this.buffers;\n\n\t\tif ( ! json.buffers ) json.buffers = [ { byteLength: 0 } ];\n\n\t\t// All buffers are merged before export.\n\t\tbuffers.push( buffer );\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Process and generate a BufferView\n\t * @param  {BufferAttribute} attribute\n\t * @param  {number} componentType\n\t * @param  {number} start\n\t * @param  {number} count\n\t * @param  {number} target (Optional) Target usage of the BufferView\n\t * @return {Object}\n\t */\n\tprocessBufferView( attribute, componentType, start, count, target ) {\n\n\t\tconst json = this.json;\n\n\t\tif ( ! json.bufferViews ) json.bufferViews = [];\n\n\t\t// Create a new dataview and dump the attribute's array into it\n\n\t\tlet componentSize;\n\n\t\tif ( componentType === WEBGL_CONSTANTS.UNSIGNED_BYTE ) {\n\n\t\t\tcomponentSize = 1;\n\n\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_SHORT ) {\n\n\t\t\tcomponentSize = 2;\n\n\t\t} else {\n\n\t\t\tcomponentSize = 4;\n\n\t\t}\n\n\t\tconst byteLength = getPaddedBufferSize( count * attribute.itemSize * componentSize );\n\t\tconst dataView = new DataView( new ArrayBuffer( byteLength ) );\n\t\tlet offset = 0;\n\n\t\tfor ( let i = start; i < start + count; i ++ ) {\n\n\t\t\tfor ( let a = 0; a < attribute.itemSize; a ++ ) {\n\n\t\t\t\tlet value;\n\n\t\t\t\tif ( attribute.itemSize > 4 ) {\n\n\t\t\t\t\t // no support for interleaved data for itemSize > 4\n\n\t\t\t\t\tvalue = attribute.array[ i * attribute.itemSize + a ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( a === 0 ) value = attribute.getX( i );\n\t\t\t\t\telse if ( a === 1 ) value = attribute.getY( i );\n\t\t\t\t\telse if ( a === 2 ) value = attribute.getZ( i );\n\t\t\t\t\telse if ( a === 3 ) value = attribute.getW( i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( componentType === WEBGL_CONSTANTS.FLOAT ) {\n\n\t\t\t\t\tdataView.setFloat32( offset, value, true );\n\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_INT ) {\n\n\t\t\t\t\tdataView.setUint32( offset, value, true );\n\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_SHORT ) {\n\n\t\t\t\t\tdataView.setUint16( offset, value, true );\n\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_BYTE ) {\n\n\t\t\t\t\tdataView.setUint8( offset, value );\n\n\t\t\t\t}\n\n\t\t\t\toffset += componentSize;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bufferViewDef = {\n\n\t\t\tbuffer: this.processBuffer( dataView.buffer ),\n\t\t\tbyteOffset: this.byteOffset,\n\t\t\tbyteLength: byteLength\n\n\t\t};\n\n\t\tif ( target !== undefined ) bufferViewDef.target = target;\n\n\t\tif ( target === WEBGL_CONSTANTS.ARRAY_BUFFER ) {\n\n\t\t\t// Only define byteStride for vertex attributes.\n\t\t\tbufferViewDef.byteStride = attribute.itemSize * componentSize;\n\n\t\t}\n\n\t\tthis.byteOffset += byteLength;\n\n\t\tjson.bufferViews.push( bufferViewDef );\n\n\t\t// @TODO Merge bufferViews where possible.\n\t\tconst output = {\n\n\t\t\tid: json.bufferViews.length - 1,\n\t\t\tbyteLength: 0\n\n\t\t};\n\n\t\treturn output;\n\n\t}\n\n\t/**\n\t * Process and generate a BufferView from an image Blob.\n\t * @param {Blob} blob\n\t * @return {Promise<Integer>}\n\t */\n\tprocessBufferViewImage( blob ) {\n\n\t\tconst writer = this;\n\t\tconst json = writer.json;\n\n\t\tif ( ! json.bufferViews ) json.bufferViews = [];\n\n\t\treturn new Promise( function ( resolve ) {\n\n\t\t\tconst reader = new window.FileReader();\n\t\t\treader.readAsArrayBuffer( blob );\n\t\t\treader.onloadend = function () {\n\n\t\t\t\tconst buffer = getPaddedArrayBuffer( reader.result );\n\n\t\t\t\tconst bufferViewDef = {\n\t\t\t\t\tbuffer: writer.processBuffer( buffer ),\n\t\t\t\t\tbyteOffset: writer.byteOffset,\n\t\t\t\t\tbyteLength: buffer.byteLength\n\t\t\t\t};\n\n\t\t\t\twriter.byteOffset += buffer.byteLength;\n\t\t\t\tresolve( json.bufferViews.push( bufferViewDef ) - 1 );\n\n\t\t\t};\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Process attribute to generate an accessor\n\t * @param  {BufferAttribute} attribute Attribute to process\n\t * @param  {THREE.BufferGeometry} geometry (Optional) Geometry used for truncated draw range\n\t * @param  {Integer} start (Optional)\n\t * @param  {Integer} count (Optional)\n\t * @return {Integer|null} Index of the processed accessor on the \"accessors\" array\n\t */\n\tprocessAccessor( attribute, geometry, start, count ) {\n\n\t\tconst options = this.options;\n\t\tconst json = this.json;\n\n\t\tconst types = {\n\n\t\t\t1: 'SCALAR',\n\t\t\t2: 'VEC2',\n\t\t\t3: 'VEC3',\n\t\t\t4: 'VEC4',\n\t\t\t16: 'MAT4'\n\n\t\t};\n\n\t\tlet componentType;\n\n\t\t// Detect the component type of the attribute array (float, uint or ushort)\n\t\tif ( attribute.array.constructor === Float32Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.FLOAT;\n\n\t\t} else if ( attribute.array.constructor === Uint32Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_INT;\n\n\t\t} else if ( attribute.array.constructor === Uint16Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_SHORT;\n\n\t\t} else if ( attribute.array.constructor === Uint8Array ) {\n\n\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.GLTFExporter: Unsupported bufferAttribute component type.' );\n\n\t\t}\n\n\t\tif ( start === undefined ) start = 0;\n\t\tif ( count === undefined ) count = attribute.count;\n\n\t\t// @TODO Indexed buffer geometry with drawRange not supported yet\n\t\tif ( options.truncateDrawRange && geometry !== undefined && geometry.index === null ) {\n\n\t\t\tconst end = start + count;\n\t\t\tconst end2 = geometry.drawRange.count === Infinity\n\t\t\t\t? attribute.count\n\t\t\t\t: geometry.drawRange.start + geometry.drawRange.count;\n\n\t\t\tstart = Math.max( start, geometry.drawRange.start );\n\t\t\tcount = Math.min( end, end2 ) - start;\n\n\t\t\tif ( count < 0 ) count = 0;\n\n\t\t}\n\n\t\t// Skip creating an accessor if the attribute doesn't have data to export\n\t\tif ( count === 0 ) return null;\n\n\t\tconst minMax = getMinMax( attribute, start, count );\n\t\tlet bufferViewTarget;\n\n\t\t// If geometry isn't provided, don't infer the target usage of the bufferView. For\n\t\t// animation samplers, target must not be set.\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tbufferViewTarget = attribute === geometry.index ? WEBGL_CONSTANTS.ELEMENT_ARRAY_BUFFER : WEBGL_CONSTANTS.ARRAY_BUFFER;\n\n\t\t}\n\n\t\tconst bufferView = this.processBufferView( attribute, componentType, start, count, bufferViewTarget );\n\n\t\tconst accessorDef = {\n\n\t\t\tbufferView: bufferView.id,\n\t\t\tbyteOffset: bufferView.byteOffset,\n\t\t\tcomponentType: componentType,\n\t\t\tcount: count,\n\t\t\tmax: minMax.max,\n\t\t\tmin: minMax.min,\n\t\t\ttype: types[ attribute.itemSize ]\n\n\t\t};\n\n\t\tif ( attribute.normalized === true ) accessorDef.normalized = true;\n\t\tif ( ! json.accessors ) json.accessors = [];\n\n\t\treturn json.accessors.push( accessorDef ) - 1;\n\n\t}\n\n\t/**\n\t * Process image\n\t * @param  {Image} image to process\n\t * @param  {Integer} format of the image (e.g. RGBFormat, RGBAFormat etc)\n\t * @param  {Boolean} flipY before writing out the image\n\t * @return {Integer}     Index of the processed texture in the \"images\" array\n\t */\n\tprocessImage( image, format, flipY ) {\n\n\t\tconst writer = this;\n\t\tconst cache = writer.cache;\n\t\tconst json = writer.json;\n\t\tconst options = writer.options;\n\t\tconst pending = writer.pending;\n\n\t\tif ( ! cache.images.has( image ) ) cache.images.set( image, {} );\n\n\t\tconst cachedImages = cache.images.get( image );\n\t\tconst mimeType = format === RGBAFormat ? 'image/png' : 'image/jpeg';\n\t\tconst key = mimeType + ':flipY/' + flipY.toString();\n\n\t\tif ( cachedImages[ key ] !== undefined ) return cachedImages[ key ];\n\n\t\tif ( ! json.images ) json.images = [];\n\n\t\tconst imageDef = { mimeType: mimeType };\n\n\t\tif ( options.embedImages ) {\n\n\t\t\tconst canvas = cachedCanvas = cachedCanvas || document.createElement( 'canvas' );\n\n\t\t\tcanvas.width = Math.min( image.width, options.maxTextureSize );\n\t\t\tcanvas.height = Math.min( image.height, options.maxTextureSize );\n\n\t\t\tconst ctx = canvas.getContext( '2d' );\n\n\t\t\tif ( flipY === true ) {\n\n\t\t\t\tctx.translate( 0, canvas.height );\n\t\t\t\tctx.scale( 1, - 1 );\n\n\t\t\t}\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof OffscreenCanvas !== 'undefined' && image instanceof OffscreenCanvas ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tctx.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\t} else {\n\n\t\t\t\tif ( format !== RGBAFormat && format !== RGBFormat ) {\n\n\t\t\t\t\tconsole.error( 'GLTFExporter: Only RGB and RGBA formats are supported.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( image.width > options.maxTextureSize || image.height > options.maxTextureSize ) {\n\n\t\t\t\t\tconsole.warn( 'GLTFExporter: Image size is bigger than maxTextureSize', image );\n\n\t\t\t\t}\n\n\t\t\t\tconst data = new Uint8ClampedArray( image.height * image.width * 4 );\n\n\t\t\t\tif ( format === RGBAFormat ) {\n\n\t\t\t\t\tfor ( let i = 0; i < data.length; i += 4 ) {\n\n\t\t\t\t\t\tdata[ i + 0 ] = image.data[ i + 0 ];\n\t\t\t\t\t\tdata[ i + 1 ] = image.data[ i + 1 ];\n\t\t\t\t\t\tdata[ i + 2 ] = image.data[ i + 2 ];\n\t\t\t\t\t\tdata[ i + 3 ] = image.data[ i + 3 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let i = 0, j = 0; i < data.length; i += 4, j += 3 ) {\n\n\t\t\t\t\t\tdata[ i + 0 ] = image.data[ j + 0 ];\n\t\t\t\t\t\tdata[ i + 1 ] = image.data[ j + 1 ];\n\t\t\t\t\t\tdata[ i + 2 ] = image.data[ j + 2 ];\n\t\t\t\t\t\tdata[ i + 3 ] = 255;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tctx.putImageData( new ImageData( data, image.width, image.height ), 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( options.binary === true ) {\n\n\t\t\t\tpending.push( new Promise( function ( resolve ) {\n\n\t\t\t\t\tcanvas.toBlob( function ( blob ) {\n\n\t\t\t\t\t\twriter.processBufferViewImage( blob ).then( function ( bufferViewIndex ) {\n\n\t\t\t\t\t\t\timageDef.bufferView = bufferViewIndex;\n\t\t\t\t\t\t\tresolve();\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}, mimeType );\n\n\t\t\t\t} ) );\n\n\t\t\t} else {\n\n\t\t\t\timageDef.uri = canvas.toDataURL( mimeType );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\timageDef.uri = image.src;\n\n\t\t}\n\n\t\tconst index = json.images.push( imageDef ) - 1;\n\t\tcachedImages[ key ] = index;\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Process sampler\n\t * @param  {Texture} map Texture to process\n\t * @return {Integer}     Index of the processed texture in the \"samplers\" array\n\t */\n\tprocessSampler( map ) {\n\n\t\tconst json = this.json;\n\n\t\tif ( ! json.samplers ) json.samplers = [];\n\n\t\tconst samplerDef = {\n\t\t\tmagFilter: THREE_TO_WEBGL[ map.magFilter ],\n\t\t\tminFilter: THREE_TO_WEBGL[ map.minFilter ],\n\t\t\twrapS: THREE_TO_WEBGL[ map.wrapS ],\n\t\t\twrapT: THREE_TO_WEBGL[ map.wrapT ]\n\t\t};\n\n\t\treturn json.samplers.push( samplerDef ) - 1;\n\n\t}\n\n\t/**\n\t * Process texture\n\t * @param  {Texture} map Map to process\n\t * @return {Integer} Index of the processed texture in the \"textures\" array\n\t */\n\tprocessTexture( map ) {\n\n\t\tconst cache = this.cache;\n\t\tconst json = this.json;\n\n\t\tif ( cache.textures.has( map ) ) return cache.textures.get( map );\n\n\t\tif ( ! json.textures ) json.textures = [];\n\n\t\tconst textureDef = {\n\t\t\tsampler: this.processSampler( map ),\n\t\t\tsource: this.processImage( map.image, map.format, map.flipY )\n\t\t};\n\n\t\tif ( map.name ) textureDef.name = map.name;\n\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\text.writeTexture && ext.writeTexture( map, textureDef );\n\n\t\t} );\n\n\t\tconst index = json.textures.push( textureDef ) - 1;\n\t\tcache.textures.set( map, index );\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Process material\n\t * @param  {THREE.Material} material Material to process\n\t * @return {Integer|null} Index of the processed material in the \"materials\" array\n\t */\n\tprocessMaterial( material ) {\n\n\t\tconst cache = this.cache;\n\t\tconst json = this.json;\n\n\t\tif ( cache.materials.has( material ) ) return cache.materials.get( material );\n\n\t\tif ( material.isShaderMaterial ) {\n\n\t\t\tconsole.warn( 'GLTFExporter: THREE.ShaderMaterial not supported.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( ! json.materials ) json.materials = [];\n\n\t\t// @QUESTION Should we avoid including any attribute that has the default value?\n\t\tconst materialDef = {\tpbrMetallicRoughness: {} };\n\n\t\tif ( material.isMeshStandardMaterial !== true && material.isMeshBasicMaterial !== true ) {\n\n\t\t\tconsole.warn( 'GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.' );\n\n\t\t}\n\n\t\t// pbrMetallicRoughness.baseColorFactor\n\t\tconst color = material.color.toArray().concat( [ material.opacity ] );\n\n\t\tif ( ! equalArray( color, [ 1, 1, 1, 1 ] ) ) {\n\n\t\t\tmaterialDef.pbrMetallicRoughness.baseColorFactor = color;\n\n\t\t}\n\n\t\tif ( material.isMeshStandardMaterial ) {\n\n\t\t\tmaterialDef.pbrMetallicRoughness.metallicFactor = material.metalness;\n\t\t\tmaterialDef.pbrMetallicRoughness.roughnessFactor = material.roughness;\n\n\t\t} else {\n\n\t\t\tmaterialDef.pbrMetallicRoughness.metallicFactor = 0.5;\n\t\t\tmaterialDef.pbrMetallicRoughness.roughnessFactor = 0.5;\n\n\t\t}\n\n\t\t// pbrMetallicRoughness.metallicRoughnessTexture\n\t\tif ( material.metalnessMap || material.roughnessMap ) {\n\n\t\t\tif ( material.metalnessMap === material.roughnessMap ) {\n\n\t\t\t\tconst metalRoughMapDef = { index: this.processTexture( material.metalnessMap ) };\n\t\t\t\tthis.applyTextureTransform( metalRoughMapDef, material.metalnessMap );\n\t\t\t\tmaterialDef.pbrMetallicRoughness.metallicRoughnessTexture = metalRoughMapDef;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Ignoring metalnessMap and roughnessMap because they are not the same Texture.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// pbrMetallicRoughness.baseColorTexture or pbrSpecularGlossiness diffuseTexture\n\t\tif ( material.map ) {\n\n\t\t\tconst baseColorMapDef = { index: this.processTexture( material.map ) };\n\t\t\tthis.applyTextureTransform( baseColorMapDef, material.map );\n\t\t\tmaterialDef.pbrMetallicRoughness.baseColorTexture = baseColorMapDef;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\t// note: emissive components are limited to stay within the 0 - 1 range to accommodate glTF spec. see #21849 and #22000.\n\t\t\tconst emissive = material.emissive.clone().multiplyScalar( material.emissiveIntensity );\n\t\t\tconst maxEmissiveComponent = Math.max( emissive.r, emissive.g, emissive.b );\n\n\t\t\tif ( maxEmissiveComponent > 1 ) {\n\n\t\t\t\temissive.multiplyScalar( 1 / maxEmissiveComponent );\n\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Some emissive components exceed 1; emissive has been limited' );\n\n\t\t\t}\n\n\t\t\tif ( maxEmissiveComponent > 0 ) {\n\n\t\t\t\tmaterialDef.emissiveFactor = emissive.toArray();\n\n\t\t\t}\n\n\t\t\t// emissiveTexture\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tconst emissiveMapDef = { index: this.processTexture( material.emissiveMap ) };\n\t\t\t\tthis.applyTextureTransform( emissiveMapDef, material.emissiveMap );\n\t\t\t\tmaterialDef.emissiveTexture = emissiveMapDef;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// normalTexture\n\t\tif ( material.normalMap ) {\n\n\t\t\tconst normalMapDef = { index: this.processTexture( material.normalMap ) };\n\n\t\t\tif ( material.normalScale && material.normalScale.x !== 1 ) {\n\n\t\t\t\t// glTF normal scale is univariate. Ignore `y`, which may be flipped.\n\t\t\t\t// Context: https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\t\t\tnormalMapDef.scale = material.normalScale.x;\n\n\t\t\t}\n\n\t\t\tthis.applyTextureTransform( normalMapDef, material.normalMap );\n\t\t\tmaterialDef.normalTexture = normalMapDef;\n\n\t\t}\n\n\t\t// occlusionTexture\n\t\tif ( material.aoMap ) {\n\n\t\t\tconst occlusionMapDef = {\n\t\t\t\tindex: this.processTexture( material.aoMap ),\n\t\t\t\ttexCoord: 1\n\t\t\t};\n\n\t\t\tif ( material.aoMapIntensity !== 1.0 ) {\n\n\t\t\t\tocclusionMapDef.strength = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\tthis.applyTextureTransform( occlusionMapDef, material.aoMap );\n\t\t\tmaterialDef.occlusionTexture = occlusionMapDef;\n\n\t\t}\n\n\t\t// alphaMode\n\t\tif ( material.transparent ) {\n\n\t\t\tmaterialDef.alphaMode = 'BLEND';\n\n\t\t} else {\n\n\t\t\tif ( material.alphaTest > 0.0 ) {\n\n\t\t\t\tmaterialDef.alphaMode = 'MASK';\n\t\t\t\tmaterialDef.alphaCutoff = material.alphaTest;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// doubleSided\n\t\tif ( material.side === DoubleSide ) materialDef.doubleSided = true;\n\t\tif ( material.name !== '' ) materialDef.name = material.name;\n\n\t\tthis.serializeUserData( material, materialDef );\n\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\text.writeMaterial && ext.writeMaterial( material, materialDef );\n\n\t\t} );\n\n\t\tconst index = json.materials.push( materialDef ) - 1;\n\t\tcache.materials.set( material, index );\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Process mesh\n\t * @param  {THREE.Mesh} mesh Mesh to process\n\t * @return {Integer|null} Index of the processed mesh in the \"meshes\" array\n\t */\n\tprocessMesh( mesh ) {\n\n\t\tconst cache = this.cache;\n\t\tconst json = this.json;\n\n\t\tconst meshCacheKeyParts = [ mesh.geometry.uuid ];\n\n\t\tif ( Array.isArray( mesh.material ) ) {\n\n\t\t\tfor ( let i = 0, l = mesh.material.length; i < l; i ++ ) {\n\n\t\t\t\tmeshCacheKeyParts.push( mesh.material[ i ].uuid\t);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tmeshCacheKeyParts.push( mesh.material.uuid );\n\n\t\t}\n\n\t\tconst meshCacheKey = meshCacheKeyParts.join( ':' );\n\n\t\tif ( cache.meshes.has( meshCacheKey ) ) return cache.meshes.get( meshCacheKey );\n\n\t\tconst geometry = mesh.geometry;\n\t\tlet mode;\n\n\t\t// Use the correct mode\n\t\tif ( mesh.isLineSegments ) {\n\n\t\t\tmode = WEBGL_CONSTANTS.LINES;\n\n\t\t} else if ( mesh.isLineLoop ) {\n\n\t\t\tmode = WEBGL_CONSTANTS.LINE_LOOP;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tmode = WEBGL_CONSTANTS.LINE_STRIP;\n\n\t\t} else if ( mesh.isPoints ) {\n\n\t\t\tmode = WEBGL_CONSTANTS.POINTS;\n\n\t\t} else {\n\n\t\t\tmode = mesh.material.wireframe ? WEBGL_CONSTANTS.LINES : WEBGL_CONSTANTS.TRIANGLES;\n\n\t\t}\n\n\t\tif ( geometry.isBufferGeometry !== true ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFExporter: Geometry is not of type THREE.BufferGeometry.' );\n\n\t\t}\n\n\t\tconst meshDef = {};\n\t\tconst attributes = {};\n\t\tconst primitives = [];\n\t\tconst targets = [];\n\n\t\t// Conversion between attributes names in threejs and gltf spec\n\t\tconst nameConversion = {\n\t\t\tuv: 'TEXCOORD_0',\n\t\t\tuv2: 'TEXCOORD_1',\n\t\t\tcolor: 'COLOR_0',\n\t\t\tskinWeight: 'WEIGHTS_0',\n\t\t\tskinIndex: 'JOINTS_0'\n\t\t};\n\n\t\tconst originalNormal = geometry.getAttribute( 'normal' );\n\n\t\tif ( originalNormal !== undefined && ! this.isNormalizedNormalAttribute( originalNormal ) ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one.' );\n\n\t\t\tgeometry.setAttribute( 'normal', this.createNormalizedNormalAttribute( originalNormal ) );\n\n\t\t}\n\n\t\t// @QUESTION Detect if .vertexColors = true?\n\t\t// For every attribute create an accessor\n\t\tlet modifiedAttribute = null;\n\n\t\tfor ( let attributeName in geometry.attributes ) {\n\n\t\t\t// Ignore morph target attributes, which are exported later.\n\t\t\tif ( attributeName.substr( 0, 5 ) === 'morph' ) continue;\n\n\t\t\tconst attribute = geometry.attributes[ attributeName ];\n\t\t\tattributeName = nameConversion[ attributeName ] || attributeName.toUpperCase();\n\n\t\t\t// Prefix all geometry attributes except the ones specifically\n\t\t\t// listed in the spec; non-spec attributes are considered custom.\n\t\t\tconst validVertexAttributes =\n\t\t\t\t\t/^(POSITION|NORMAL|TANGENT|TEXCOORD_\\d+|COLOR_\\d+|JOINTS_\\d+|WEIGHTS_\\d+)$/;\n\n\t\t\tif ( ! validVertexAttributes.test( attributeName ) ) attributeName = '_' + attributeName;\n\n\t\t\tif ( cache.attributes.has( this.getUID( attribute ) ) ) {\n\n\t\t\t\tattributes[ attributeName ] = cache.attributes.get( this.getUID( attribute ) );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// JOINTS_0 must be UNSIGNED_BYTE or UNSIGNED_SHORT.\n\t\t\tmodifiedAttribute = null;\n\t\t\tconst array = attribute.array;\n\n\t\t\tif ( attributeName === 'JOINTS_0' &&\n\t\t\t\t! ( array instanceof Uint16Array ) &&\n\t\t\t\t! ( array instanceof Uint8Array ) ) {\n\n\t\t\t\tconsole.warn( 'GLTFExporter: Attribute \"skinIndex\" converted to type UNSIGNED_SHORT.' );\n\t\t\t\tmodifiedAttribute = new BufferAttribute( new Uint16Array( array ), attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tconst accessor = this.processAccessor( modifiedAttribute || attribute, geometry );\n\n\t\t\tif ( accessor !== null ) {\n\n\t\t\t\tattributes[ attributeName ] = accessor;\n\t\t\t\tcache.attributes.set( this.getUID( attribute ), accessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( originalNormal !== undefined ) geometry.setAttribute( 'normal', originalNormal );\n\n\t\t// Skip if no exportable attributes found\n\t\tif ( Object.keys( attributes ).length === 0 ) return null;\n\n\t\t// Morph targets\n\t\tif ( mesh.morphTargetInfluences !== undefined && mesh.morphTargetInfluences.length > 0 ) {\n\n\t\t\tconst weights = [];\n\t\t\tconst targetNames = [];\n\t\t\tconst reverseDictionary = {};\n\n\t\t\tif ( mesh.morphTargetDictionary !== undefined ) {\n\n\t\t\t\tfor ( const key in mesh.morphTargetDictionary ) {\n\n\t\t\t\t\treverseDictionary[ mesh.morphTargetDictionary[ key ] ] = key;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < mesh.morphTargetInfluences.length; ++ i ) {\n\n\t\t\t\tconst target = {};\n\t\t\t\tlet warned = false;\n\n\t\t\t\tfor ( const attributeName in geometry.morphAttributes ) {\n\n\t\t\t\t\t// glTF 2.0 morph supports only POSITION/NORMAL/TANGENT.\n\t\t\t\t\t// Three.js doesn't support TANGENT yet.\n\n\t\t\t\t\tif ( attributeName !== 'position' && attributeName !== 'normal' ) {\n\n\t\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'GLTFExporter: Only POSITION and NORMAL morph are supported.' );\n\t\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst attribute = geometry.morphAttributes[ attributeName ][ i ];\n\t\t\t\t\tconst gltfAttributeName = attributeName.toUpperCase();\n\n\t\t\t\t\t// Three.js morph attribute has absolute values while the one of glTF has relative values.\n\t\t\t\t\t//\n\t\t\t\t\t// glTF 2.0 Specification:\n\t\t\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#morph-targets\n\n\t\t\t\t\tconst baseAttribute = geometry.attributes[ attributeName ];\n\n\t\t\t\t\tif ( cache.attributes.has( this.getUID( attribute ) ) ) {\n\n\t\t\t\t\t\ttarget[ gltfAttributeName ] = cache.attributes.get( this.getUID( attribute ) );\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Clones attribute not to override\n\t\t\t\t\tconst relativeAttribute = attribute.clone();\n\n\t\t\t\t\tif ( ! geometry.morphTargetsRelative ) {\n\n\t\t\t\t\t\tfor ( let j = 0, jl = attribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\trelativeAttribute.setXYZ(\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tattribute.getX( j ) - baseAttribute.getX( j ),\n\t\t\t\t\t\t\t\tattribute.getY( j ) - baseAttribute.getY( j ),\n\t\t\t\t\t\t\t\tattribute.getZ( j ) - baseAttribute.getZ( j )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttarget[ gltfAttributeName ] = this.processAccessor( relativeAttribute, geometry );\n\t\t\t\t\tcache.attributes.set( this.getUID( baseAttribute ), target[ gltfAttributeName ] );\n\n\t\t\t\t}\n\n\t\t\t\ttargets.push( target );\n\n\t\t\t\tweights.push( mesh.morphTargetInfluences[ i ] );\n\n\t\t\t\tif ( mesh.morphTargetDictionary !== undefined ) targetNames.push( reverseDictionary[ i ] );\n\n\t\t\t}\n\n\t\t\tmeshDef.weights = weights;\n\n\t\t\tif ( targetNames.length > 0 ) {\n\n\t\t\t\tmeshDef.extras = {};\n\t\t\t\tmeshDef.extras.targetNames = targetNames;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst isMultiMaterial = Array.isArray( mesh.material );\n\n\t\tif ( isMultiMaterial && geometry.groups.length === 0 ) return null;\n\n\t\tconst materials = isMultiMaterial ? mesh.material : [ mesh.material ];\n\t\tconst groups = isMultiMaterial ? geometry.groups : [ { materialIndex: 0, start: undefined, count: undefined } ];\n\n\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\tconst primitive = {\n\t\t\t\tmode: mode,\n\t\t\t\tattributes: attributes,\n\t\t\t};\n\n\t\t\tthis.serializeUserData( geometry, primitive );\n\n\t\t\tif ( targets.length > 0 ) primitive.targets = targets;\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\tlet cacheKey = this.getUID( geometry.index );\n\n\t\t\t\tif ( groups[ i ].start !== undefined || groups[ i ].count !== undefined ) {\n\n\t\t\t\t\tcacheKey += ':' + groups[ i ].start + ':' + groups[ i ].count;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cache.attributes.has( cacheKey ) ) {\n\n\t\t\t\t\tprimitive.indices = cache.attributes.get( cacheKey );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tprimitive.indices = this.processAccessor( geometry.index, geometry, groups[ i ].start, groups[ i ].count );\n\t\t\t\t\tcache.attributes.set( cacheKey, primitive.indices );\n\n\t\t\t\t}\n\n\t\t\t\tif ( primitive.indices === null ) delete primitive.indices;\n\n\t\t\t}\n\n\t\t\tconst material = this.processMaterial( materials[ groups[ i ].materialIndex ] );\n\n\t\t\tif ( material !== null ) primitive.material = material;\n\n\t\t\tprimitives.push( primitive );\n\n\t\t}\n\n\t\tmeshDef.primitives = primitives;\n\n\t\tif ( ! json.meshes ) json.meshes = [];\n\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\text.writeMesh && ext.writeMesh( mesh, meshDef );\n\n\t\t} );\n\n\t\tconst index = json.meshes.push( meshDef ) - 1;\n\t\tcache.meshes.set( meshCacheKey, index );\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Process camera\n\t * @param  {THREE.Camera} camera Camera to process\n\t * @return {Integer}      Index of the processed mesh in the \"camera\" array\n\t */\n\tprocessCamera( camera ) {\n\n\t\tconst json = this.json;\n\n\t\tif ( ! json.cameras ) json.cameras = [];\n\n\t\tconst isOrtho = camera.isOrthographicCamera;\n\n\t\tconst cameraDef = {\n\t\t\ttype: isOrtho ? 'orthographic' : 'perspective'\n\t\t};\n\n\t\tif ( isOrtho ) {\n\n\t\t\tcameraDef.orthographic = {\n\t\t\t\txmag: camera.right * 2,\n\t\t\t\tymag: camera.top * 2,\n\t\t\t\tzfar: camera.far <= 0 ? 0.001 : camera.far,\n\t\t\t\tznear: camera.near < 0 ? 0 : camera.near\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tcameraDef.perspective = {\n\t\t\t\taspectRatio: camera.aspect,\n\t\t\t\tyfov: MathUtils.degToRad( camera.fov ),\n\t\t\t\tzfar: camera.far <= 0 ? 0.001 : camera.far,\n\t\t\t\tznear: camera.near < 0 ? 0 : camera.near\n\t\t\t};\n\n\t\t}\n\n\t\t// Question: Is saving \"type\" as name intentional?\n\t\tif ( camera.name !== '' ) cameraDef.name = camera.type;\n\n\t\treturn json.cameras.push( cameraDef ) - 1;\n\n\t}\n\n\t/**\n\t * Creates glTF animation entry from AnimationClip object.\n\t *\n\t * Status:\n\t * - Only properties listed in PATH_PROPERTIES may be animated.\n\t *\n\t * @param {THREE.AnimationClip} clip\n\t * @param {THREE.Object3D} root\n\t * @return {number|null}\n\t */\n\tprocessAnimation( clip, root ) {\n\n\t\tconst json = this.json;\n\t\tconst nodeMap = this.nodeMap;\n\n\t\tif ( ! json.animations ) json.animations = [];\n\n\t\tclip = GLTFExporter.Utils.mergeMorphTargetTracks( clip.clone(), root );\n\n\t\tconst tracks = clip.tracks;\n\t\tconst channels = [];\n\t\tconst samplers = [];\n\n\t\tfor ( let i = 0; i < tracks.length; ++ i ) {\n\n\t\t\tconst track = tracks[ i ];\n\t\t\tconst trackBinding = PropertyBinding.parseTrackName( track.name );\n\t\t\tlet trackNode = PropertyBinding.findNode( root, trackBinding.nodeName );\n\t\t\tconst trackProperty = PATH_PROPERTIES[ trackBinding.propertyName ];\n\n\t\t\tif ( trackBinding.objectName === 'bones' ) {\n\n\t\t\t\tif ( trackNode.isSkinnedMesh === true ) {\n\n\t\t\t\t\ttrackNode = trackNode.skeleton.getBoneByName( trackBinding.objectIndex );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttrackNode = undefined;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ! trackNode || ! trackProperty ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Could not export animation track \"%s\".', track.name );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tconst inputItemSize = 1;\n\t\t\tlet outputItemSize = track.values.length / track.times.length;\n\n\t\t\tif ( trackProperty === PATH_PROPERTIES.morphTargetInfluences ) {\n\n\t\t\t\toutputItemSize /= trackNode.morphTargetInfluences.length;\n\n\t\t\t}\n\n\t\t\tlet interpolation;\n\n\t\t\t// @TODO export CubicInterpolant(InterpolateSmooth) as CUBICSPLINE\n\n\t\t\t// Detecting glTF cubic spline interpolant by checking factory method's special property\n\t\t\t// GLTFCubicSplineInterpolant is a custom interpolant and track doesn't return\n\t\t\t// valid value from .getInterpolation().\n\t\t\tif ( track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline === true ) {\n\n\t\t\t\tinterpolation = 'CUBICSPLINE';\n\n\t\t\t\t// itemSize of CUBICSPLINE keyframe is 9\n\t\t\t\t// (VEC3 * 3: inTangent, splineVertex, and outTangent)\n\t\t\t\t// but needs to be stored as VEC3 so dividing by 3 here.\n\t\t\t\toutputItemSize /= 3;\n\n\t\t\t} else if ( track.getInterpolation() === InterpolateDiscrete ) {\n\n\t\t\t\tinterpolation = 'STEP';\n\n\t\t\t} else {\n\n\t\t\t\tinterpolation = 'LINEAR';\n\n\t\t\t}\n\n\t\t\tsamplers.push( {\n\t\t\t\tinput: this.processAccessor( new BufferAttribute( track.times, inputItemSize ) ),\n\t\t\t\toutput: this.processAccessor( new BufferAttribute( track.values, outputItemSize ) ),\n\t\t\t\tinterpolation: interpolation\n\t\t\t} );\n\n\t\t\tchannels.push( {\n\t\t\t\tsampler: samplers.length - 1,\n\t\t\t\ttarget: {\n\t\t\t\t\tnode: nodeMap.get( trackNode ),\n\t\t\t\t\tpath: trackProperty\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t\tjson.animations.push( {\n\t\t\tname: clip.name || 'clip_' + json.animations.length,\n\t\t\tsamplers: samplers,\n\t\t\tchannels: channels\n\t\t} );\n\n\t\treturn json.animations.length - 1;\n\n\t}\n\n\t/**\n\t * @param {THREE.Object3D} object\n\t * @return {number|null}\n\t */\n\t processSkin( object ) {\n\n\t\tconst json = this.json;\n\t\tconst nodeMap = this.nodeMap;\n\n\t\tconst node = json.nodes[ nodeMap.get( object ) ];\n\n\t\tconst skeleton = object.skeleton;\n\n\t\tif ( skeleton === undefined ) return null;\n\n\t\tconst rootJoint = object.skeleton.bones[ 0 ];\n\n\t\tif ( rootJoint === undefined ) return null;\n\n\t\tconst joints = [];\n\t\tconst inverseBindMatrices = new Float32Array( skeleton.bones.length * 16 );\n\t\tconst temporaryBoneInverse = new Matrix4();\n\n\t\tfor ( let i = 0; i < skeleton.bones.length; ++ i ) {\n\n\t\t\tjoints.push( nodeMap.get( skeleton.bones[ i ] ) );\n\t\t\ttemporaryBoneInverse.copy( skeleton.boneInverses[ i ] );\n\t\t\ttemporaryBoneInverse.multiply( object.bindMatrix ).toArray( inverseBindMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( json.skins === undefined ) json.skins = [];\n\n\t\tjson.skins.push( {\n\t\t\tinverseBindMatrices: this.processAccessor( new BufferAttribute( inverseBindMatrices, 16 ) ),\n\t\t\tjoints: joints,\n\t\t\tskeleton: nodeMap.get( rootJoint )\n\t\t} );\n\n\t\tconst skinIndex = node.skin = json.skins.length - 1;\n\n\t\treturn skinIndex;\n\n\t}\n\n\t/**\n\t * Process Object3D node\n\t * @param  {THREE.Object3D} node Object3D to processNode\n\t * @return {Integer} Index of the node in the nodes list\n\t */\n\tprocessNode( object ) {\n\n\t\tconst json = this.json;\n\t\tconst options = this.options;\n\t\tconst nodeMap = this.nodeMap;\n\n\t\tif ( ! json.nodes ) json.nodes = [];\n\n\t\tconst nodeDef = {};\n\n\t\tif ( options.trs ) {\n\n\t\t\tconst rotation = object.quaternion.toArray();\n\t\t\tconst position = object.position.toArray();\n\t\t\tconst scale = object.scale.toArray();\n\n\t\t\tif ( ! equalArray( rotation, [ 0, 0, 0, 1 ] ) ) {\n\n\t\t\t\tnodeDef.rotation = rotation;\n\n\t\t\t}\n\n\t\t\tif ( ! equalArray( position, [ 0, 0, 0 ] ) ) {\n\n\t\t\t\tnodeDef.translation = position;\n\n\t\t\t}\n\n\t\t\tif ( ! equalArray( scale, [ 1, 1, 1 ] ) ) {\n\n\t\t\t\tnodeDef.scale = scale;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( object.matrixAutoUpdate ) {\n\n\t\t\t\tobject.updateMatrix();\n\n\t\t\t}\n\n\t\t\tif ( isIdentityMatrix( object.matrix ) === false ) {\n\n\t\t\t\tnodeDef.matrix = object.matrix.elements;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// We don't export empty strings name because it represents no-name in Three.js.\n\t\tif ( object.name !== '' ) nodeDef.name = String( object.name );\n\n\t\tthis.serializeUserData( object, nodeDef );\n\n\t\tif ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\tconst meshIndex = this.processMesh( object );\n\n\t\t\tif ( meshIndex !== null ) nodeDef.mesh = meshIndex;\n\n\t\t} else if ( object.isCamera ) {\n\n\t\t\tnodeDef.camera = this.processCamera( object );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) this.skins.push( object );\n\n\t\tif ( object.children.length > 0 ) {\n\n\t\t\tconst children = [];\n\n\t\t\tfor ( let i = 0, l = object.children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = object.children[ i ];\n\n\t\t\t\tif ( child.visible || options.onlyVisible === false ) {\n\n\t\t\t\t\tconst nodeIndex = this.processNode( child );\n\n\t\t\t\t\tif ( nodeIndex !== null ) children.push( nodeIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( children.length > 0 ) nodeDef.children = children;\n\n\t\t}\n\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\text.writeNode && ext.writeNode( object, nodeDef );\n\n\t\t} );\n\n\t\tconst nodeIndex = json.nodes.push( nodeDef ) - 1;\n\t\tnodeMap.set( object, nodeIndex );\n\t\treturn nodeIndex;\n\n\t}\n\n\t/**\n\t * Process Scene\n\t * @param  {Scene} node Scene to process\n\t */\n\tprocessScene( scene ) {\n\n\t\tconst json = this.json;\n\t\tconst options = this.options;\n\n\t\tif ( ! json.scenes ) {\n\n\t\t\tjson.scenes = [];\n\t\t\tjson.scene = 0;\n\n\t\t}\n\n\t\tconst sceneDef = {};\n\n\t\tif ( scene.name !== '' ) sceneDef.name = scene.name;\n\n\t\tjson.scenes.push( sceneDef );\n\n\t\tconst nodes = [];\n\n\t\tfor ( let i = 0, l = scene.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = scene.children[ i ];\n\n\t\t\tif ( child.visible || options.onlyVisible === false ) {\n\n\t\t\t\tconst nodeIndex = this.processNode( child );\n\n\t\t\t\tif ( nodeIndex !== null ) nodes.push( nodeIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( nodes.length > 0 ) sceneDef.nodes = nodes;\n\n\t\tthis.serializeUserData( scene, sceneDef );\n\n\t}\n\n\t/**\n\t * Creates a Scene to hold a list of objects and parse it\n\t * @param  {Array} objects List of objects to process\n\t */\n\tprocessObjects( objects ) {\n\n\t\tconst scene = new Scene();\n\t\tscene.name = 'AuxScene';\n\n\t\tfor ( let i = 0; i < objects.length; i ++ ) {\n\n\t\t\t// We push directly to children instead of calling `add` to prevent\n\t\t\t// modify the .parent and break its original scene and hierarchy\n\t\t\tscene.children.push( objects[ i ] );\n\n\t\t}\n\n\t\tthis.processScene( scene );\n\n\t}\n\n\t/**\n\t * @param {THREE.Object3D|Array<THREE.Object3D>} input\n\t */\n\tprocessInput( input ) {\n\n\t\tconst options = this.options;\n\n\t\tinput = input instanceof Array ? input : [ input ];\n\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\text.beforeParse && ext.beforeParse( input );\n\n\t\t} );\n\n\t\tconst objectsWithoutScene = [];\n\n\t\tfor ( let i = 0; i < input.length; i ++ ) {\n\n\t\t\tif ( input[ i ] instanceof Scene ) {\n\n\t\t\t\tthis.processScene( input[ i ] );\n\n\t\t\t} else {\n\n\t\t\t\tobjectsWithoutScene.push( input[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( objectsWithoutScene.length > 0 ) this.processObjects( objectsWithoutScene );\n\n\t\tfor ( let i = 0; i < this.skins.length; ++ i ) {\n\n\t\t\tthis.processSkin( this.skins[ i ] );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < options.animations.length; ++ i ) {\n\n\t\t\tthis.processAnimation( options.animations[ i ], input[ 0 ] );\n\n\t\t}\n\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\text.afterParse && ext.afterParse( input );\n\n\t\t} );\n\n\t}\n\n\t_invokeAll( func ) {\n\n\t\tfor ( let i = 0, il = this.plugins.length; i < il; i ++ ) {\n\n\t\t\tfunc( this.plugins[ i ] );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Punctual Lights Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n */\nclass GLTFLightExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_lights_punctual';\n\n\t}\n\n\twriteNode( light, nodeDef ) {\n\n\t\tif ( ! light.isLight ) return;\n\n\t\tif ( ! light.isDirectionalLight && ! light.isPointLight && ! light.isSpotLight ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Only directional, point, and spot lights are supported.', light );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst writer = this.writer;\n\t\tconst json = writer.json;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst lightDef = {};\n\n\t\tif ( light.name ) lightDef.name = light.name;\n\n\t\tlightDef.color = light.color.toArray();\n\n\t\tlightDef.intensity = light.intensity;\n\n\t\tif ( light.isDirectionalLight ) {\n\n\t\t\tlightDef.type = 'directional';\n\n\t\t} else if ( light.isPointLight ) {\n\n\t\t\tlightDef.type = 'point';\n\n\t\t\tif ( light.distance > 0 ) lightDef.range = light.distance;\n\n\t\t} else if ( light.isSpotLight ) {\n\n\t\t\tlightDef.type = 'spot';\n\n\t\t\tif ( light.distance > 0 ) lightDef.range = light.distance;\n\n\t\t\tlightDef.spot = {};\n\t\t\tlightDef.spot.innerConeAngle = ( light.penumbra - 1.0 ) * light.angle * - 1.0;\n\t\t\tlightDef.spot.outerConeAngle = light.angle;\n\n\t\t}\n\n\t\tif ( light.decay !== undefined && light.decay !== 2 ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, '\n\t\t\t\t+ 'and expects light.decay=2.' );\n\n\t\t}\n\n\t\tif ( light.target\n\t\t\t\t&& ( light.target.parent !== light\n\t\t\t\t|| light.target.position.x !== 0\n\t\t\t\t|| light.target.position.y !== 0\n\t\t\t\t|| light.target.position.z !== - 1 ) ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Light direction may be lost. For best results, '\n\t\t\t\t+ 'make light.target a child of the light with position 0,0,-1.' );\n\n\t\t}\n\n\t\tif ( ! extensionsUsed[ this.name ] ) {\n\n\t\t\tjson.extensions = json.extensions || {};\n\t\t\tjson.extensions[ this.name ] = { lights: [] };\n\t\t\textensionsUsed[ this.name ] = true;\n\n\t\t}\n\n\t\tconst lights = json.extensions[ this.name ].lights;\n\t\tlights.push( lightDef );\n\n\t\tnodeDef.extensions = nodeDef.extensions || {};\n\t\tnodeDef.extensions[ this.name ] = { light: lights.length - 1 };\n\n\t}\n\n}\n\n/**\n * Unlit Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n */\nclass GLTFMaterialsUnlitExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_unlit';\n\n\t}\n\n\twriteMaterial( material, materialDef ) {\n\n\t\tif ( ! material.isMeshBasicMaterial ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = {};\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t\tmaterialDef.pbrMetallicRoughness.metallicFactor = 0.0;\n\t\tmaterialDef.pbrMetallicRoughness.roughnessFactor = 0.9;\n\n\t}\n\n}\n\n/**\n * Specular-Glossiness Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n */\nclass GLTFMaterialsPBRSpecularGlossiness {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_pbrSpecularGlossiness';\n\n\t}\n\n\twriteMaterial( material, materialDef ) {\n\n\t\tif ( ! material.isGLTFSpecularGlossinessMaterial ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\tif ( materialDef.pbrMetallicRoughness.baseColorFactor ) {\n\n\t\t\textensionDef.diffuseFactor = materialDef.pbrMetallicRoughness.baseColorFactor;\n\n\t\t}\n\n\t\tconst specularFactor = [ 1, 1, 1 ];\n\t\tmaterial.specular.toArray( specularFactor, 0 );\n\t\textensionDef.specularFactor = specularFactor;\n\t\textensionDef.glossinessFactor = material.glossiness;\n\n\t\tif ( materialDef.pbrMetallicRoughness.baseColorTexture ) {\n\n\t\t\textensionDef.diffuseTexture = materialDef.pbrMetallicRoughness.baseColorTexture;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tconst specularMapDef = { index: writer.processTexture( material.specularMap ) };\n\t\t\twriter.applyTextureTransform( specularMapDef, material.specularMap );\n\t\t\textensionDef.specularGlossinessTexture = specularMapDef;\n\n\t\t}\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Transmission Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_transmission\n */\nclass GLTFMaterialsTransmissionExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_transmission';\n\n\t}\n\n\twriteMaterial( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.transmission === 0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\textensionDef.transmissionFactor = material.transmission;\n\n\t\tif ( material.transmissionMap ) {\n\n\t\t\tconst transmissionMapDef = { index: writer.processTexture( material.transmissionMap ) };\n\t\t\twriter.applyTextureTransform( transmissionMapDef, material.transmissionMap );\n\t\t\textensionDef.transmissionTexture = transmissionMapDef;\n\n\t\t}\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Materials Volume Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_volume\n */\nclass GLTFMaterialsVolumeExtension {\n\n\tconstructor( writer ) {\n\n\t\tthis.writer = writer;\n\t\tthis.name = 'KHR_materials_volume';\n\n\t}\n\n\twriteMaterial( material, materialDef ) {\n\n\t\tif ( ! material.isMeshPhysicalMaterial || material.thickness === 0 ) return;\n\n\t\tconst writer = this.writer;\n\t\tconst extensionsUsed = writer.extensionsUsed;\n\n\t\tconst extensionDef = {};\n\n\t\textensionDef.thicknessFactor = material.thickness;\n\n\t\tif ( material.thicknessMap ) {\n\n\t\t\tconst thicknessMapDef = { index: writer.processTexture( material.thicknessMap ) };\n\t\t\twriter.applyTextureTransform( thicknessMapDef, material.thicknessMap );\n\t\t\textensionDef.thicknessTexture = thicknessMapDef;\n\n\t\t}\n\n\t\textensionDef.attenuationDistance = material.attenuationDistance;\n\t\textensionDef.attenuationColor = material.attenuationTint.toArray();\n\n\t\tmaterialDef.extensions = materialDef.extensions || {};\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\n\n\t\textensionsUsed[ this.name ] = true;\n\n\t}\n\n}\n\n/**\n * Static utility functions\n */\nGLTFExporter.Utils = {\n\n\tinsertKeyframe: function ( track, time ) {\n\n\t\tconst tolerance = 0.001; // 1ms\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = new track.TimeBufferType( track.times.length + 1 );\n\t\tconst values = new track.ValueBufferType( track.values.length + valueSize );\n\t\tconst interpolant = track.createInterpolant( new track.ValueBufferType( valueSize ) );\n\n\t\tlet index;\n\n\t\tif ( track.times.length === 0 ) {\n\n\t\t\ttimes[ 0 ] = time;\n\n\t\t\tfor ( let i = 0; i < valueSize; i ++ ) {\n\n\t\t\t\tvalues[ i ] = 0;\n\n\t\t\t}\n\n\t\t\tindex = 0;\n\n\t\t} else if ( time < track.times[ 0 ] ) {\n\n\t\t\tif ( Math.abs( track.times[ 0 ] - time ) < tolerance ) return 0;\n\n\t\t\ttimes[ 0 ] = time;\n\t\t\ttimes.set( track.times, 1 );\n\n\t\t\tvalues.set( interpolant.evaluate( time ), 0 );\n\t\t\tvalues.set( track.values, valueSize );\n\n\t\t\tindex = 0;\n\n\t\t} else if ( time > track.times[ track.times.length - 1 ] ) {\n\n\t\t\tif ( Math.abs( track.times[ track.times.length - 1 ] - time ) < tolerance ) {\n\n\t\t\t\treturn track.times.length - 1;\n\n\t\t\t}\n\n\t\t\ttimes[ times.length - 1 ] = time;\n\t\t\ttimes.set( track.times, 0 );\n\n\t\t\tvalues.set( track.values, 0 );\n\t\t\tvalues.set( interpolant.evaluate( time ), track.values.length );\n\n\t\t\tindex = times.length - 1;\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < track.times.length; i ++ ) {\n\n\t\t\t\tif ( Math.abs( track.times[ i ] - time ) < tolerance ) return i;\n\n\t\t\t\tif ( track.times[ i ] < time && track.times[ i + 1 ] > time ) {\n\n\t\t\t\t\ttimes.set( track.times.slice( 0, i + 1 ), 0 );\n\t\t\t\t\ttimes[ i + 1 ] = time;\n\t\t\t\t\ttimes.set( track.times.slice( i + 1 ), i + 2 );\n\n\t\t\t\t\tvalues.set( track.values.slice( 0, ( i + 1 ) * valueSize ), 0 );\n\t\t\t\t\tvalues.set( interpolant.evaluate( time ), ( i + 1 ) * valueSize );\n\t\t\t\t\tvalues.set( track.values.slice( ( i + 1 ) * valueSize ), ( i + 2 ) * valueSize );\n\n\t\t\t\t\tindex = i + 1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttrack.times = times;\n\t\ttrack.values = values;\n\n\t\treturn index;\n\n\t},\n\n\tmergeMorphTargetTracks: function ( clip, root ) {\n\n\t\tconst tracks = [];\n\t\tconst mergedTracks = {};\n\t\tconst sourceTracks = clip.tracks;\n\n\t\tfor ( let i = 0; i < sourceTracks.length; ++ i ) {\n\n\t\t\tlet sourceTrack = sourceTracks[ i ];\n\t\t\tconst sourceTrackBinding = PropertyBinding.parseTrackName( sourceTrack.name );\n\t\t\tconst sourceTrackNode = PropertyBinding.findNode( root, sourceTrackBinding.nodeName );\n\n\t\t\tif ( sourceTrackBinding.propertyName !== 'morphTargetInfluences' || sourceTrackBinding.propertyIndex === undefined ) {\n\n\t\t\t\t// Tracks that don't affect morph targets, or that affect all morph targets together, can be left as-is.\n\t\t\t\ttracks.push( sourceTrack );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( sourceTrack.createInterpolant !== sourceTrack.InterpolantFactoryMethodDiscrete\n\t\t\t\t&& sourceTrack.createInterpolant !== sourceTrack.InterpolantFactoryMethodLinear ) {\n\n\t\t\t\tif ( sourceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\t\t// This should never happen, because glTF morph target animations\n\t\t\t\t\t// affect all targets already.\n\t\t\t\t\tthrow new Error( 'THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.' );\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead.' );\n\n\t\t\t\tsourceTrack = sourceTrack.clone();\n\t\t\t\tsourceTrack.setInterpolation( InterpolateLinear );\n\n\t\t\t}\n\n\t\t\tconst targetCount = sourceTrackNode.morphTargetInfluences.length;\n\t\t\tconst targetIndex = sourceTrackNode.morphTargetDictionary[ sourceTrackBinding.propertyIndex ];\n\n\t\t\tif ( targetIndex === undefined ) {\n\n\t\t\t\tthrow new Error( 'THREE.GLTFExporter: Morph target name not found: ' + sourceTrackBinding.propertyIndex );\n\n\t\t\t}\n\n\t\t\tlet mergedTrack;\n\n\t\t\t// If this is the first time we've seen this object, create a new\n\t\t\t// track to store merged keyframe data for each morph target.\n\t\t\tif ( mergedTracks[ sourceTrackNode.uuid ] === undefined ) {\n\n\t\t\t\tmergedTrack = sourceTrack.clone();\n\n\t\t\t\tconst values = new mergedTrack.ValueBufferType( targetCount * mergedTrack.times.length );\n\n\t\t\t\tfor ( let j = 0; j < mergedTrack.times.length; j ++ ) {\n\n\t\t\t\t\tvalues[ j * targetCount + targetIndex ] = mergedTrack.values[ j ];\n\n\t\t\t\t}\n\n\t\t\t\t// We need to take into consideration the intended target node\n\t\t\t\t// of our original un-merged morphTarget animation.\n\t\t\t\tmergedTrack.name = ( sourceTrackBinding.nodeName || '' ) + '.morphTargetInfluences';\n\t\t\t\tmergedTrack.values = values;\n\n\t\t\t\tmergedTracks[ sourceTrackNode.uuid ] = mergedTrack;\n\t\t\t\ttracks.push( mergedTrack );\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst sourceInterpolant = sourceTrack.createInterpolant( new sourceTrack.ValueBufferType( 1 ) );\n\n\t\t\tmergedTrack = mergedTracks[ sourceTrackNode.uuid ];\n\n\t\t\t// For every existing keyframe of the merged track, write a (possibly\n\t\t\t// interpolated) value from the source track.\n\t\t\tfor ( let j = 0; j < mergedTrack.times.length; j ++ ) {\n\n\t\t\t\tmergedTrack.values[ j * targetCount + targetIndex ] = sourceInterpolant.evaluate( mergedTrack.times[ j ] );\n\n\t\t\t}\n\n\t\t\t// For every existing keyframe of the source track, write a (possibly\n\t\t\t// new) keyframe to the merged track. Values from the previous loop may\n\t\t\t// be written again, but keyframes are de-duplicated.\n\t\t\tfor ( let j = 0; j < sourceTrack.times.length; j ++ ) {\n\n\t\t\t\tconst keyframeIndex = this.insertKeyframe( mergedTrack, sourceTrack.times[ j ] );\n\t\t\t\tmergedTrack.values[ keyframeIndex * targetCount + targetIndex ] = sourceTrack.values[ j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\treturn clip;\n\n\t}\n\n};\n\nexport { GLTFExporter };\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}"],"sourceRoot":""}