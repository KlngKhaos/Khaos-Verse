{"version":3,"sources":["views/Referrals/CopyReferralLink.tsx","views/Referrals/index.tsx","components/Links/index.tsx"],"names":["Wrapper","styled","Flex","theme","colors","dropdown","Tooltip","div","text","background","isTooltipDisplayed","contrast","invertedContrast","CopyReferralLink","account","props","useState","setIsTooltipDisplayed","t","useTranslation","displayTooltip","setTimeout","position","variant","onClick","navigator","clipboard","permissions","writeText","then","document","queryCommandSupported","ele","createElement","value","body","appendChild","select","execCommand","removeChild","color","width","StyledHeader","PageHeader","mediaQueries","md","Left","NewHeading","Heading","NewCardHeader","CardHeader","ReferralCard","Card","ReferralCardLink","ReferralLink","ReferralLinkBonus","Referrals","flexDirection","as","scale","my","textAlign","mb","Page","justifyContent","id","to","StyledInternalLink","Link","primary"],"mappings":"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","file":"static/js/48.2b1c90d0.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyReferralLinkProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 1;\n  width: 100px;\n`\n\nconst CopyReferralLink: React.FC<CopyReferralLinkProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const CopyLink = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <IconButton variant=\"text\" onClick={CopyLink}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyReferralLink\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n    Heading, IconButton, Text, Flex, Card, CardBody, CardHeader, Box\n} from '@pancakeswap/uikit'\nimport PageHeader from 'components/PageHeader'\nimport Page from 'components/Layout/Page'\nimport StyledInternalLink from '../../components/Links'\nimport CopyReferralLink from './CopyReferralLink'\n\n\n\n\nconst StyledHeader = styled(PageHeader)`\n  max-height: max-content;\n  overflow: hidden;\n  ${({ theme }) => theme.mediaQueries.md} {\n    max-height: 600px;\n  }\n`\nconst Left = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n`\nconst NewHeading = styled(Heading)`\n  color: #D9AB3A;\n`\nconst NewCardHeader = styled(CardHeader)`\n  background: #000 !important;\n  border-bottom: 1px solid #D9AB3A;\n`\nconst ReferralCard = styled(Card)`\n  width: 100%;\n  margin: 0px 20px;\n`\nconst ReferralCardLink = styled(Card)`\n  margin: 40px 20px 0px 20px !important;\n`\nconst ReferralLink = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nconst ReferralLinkBonus = styled.div`\n  margin-top: 15px;\n`\n\nconst Referrals: React.FC = () => {\n    const { t } = useTranslation()\n\n    return (\n        <>\n            <StyledHeader>\n                <Flex flexDirection={['column-reverse', null, 'row']}>\n                    <Left>\n                        <NewHeading as=\"h3\" scale=\"xl\" my=\"24px\" textAlign=\"center\">\n                            {t('Gladiators Finance Referral Program')}\n                        </NewHeading>\n                        <Text color=\"textSubtle\" mb=\"64px\" textAlign=\"center\">\n                            {t(\"Share the referral link below to invite your friends and earn 1% of your friends' earnings FOREVER!\")}\n                        </Text>\n                    </Left>\n                </Flex>\n            </StyledHeader>\n            <Page>\n                <Flex flexDirection={['column', 'row']} justifyContent={['space-between']}>\n                    <ReferralCard id=\"top-traders-card\">\n                        <Box width=\"100%\">\n                            <NewCardHeader>\n                                <Heading color=\"textSubtle\" scale=\"md\">\n                                    {t('Total Referrals')}\n                                </Heading>\n                            </NewCardHeader>\n                            <CardBody>\n                                {t('0')}\n                            </CardBody>\n                        </Box>\n                    </ReferralCard>\n                    <ReferralCard id=\"top-traders-card\">\n                        <Box width=\"100%\">\n                            <NewCardHeader>\n                                <Heading color=\"textSubtle\" scale=\"md\">\n                                    {t('Referral Bonus Rate')}\n                                </Heading>\n                            </NewCardHeader>\n                            <CardBody>\n                                {t('1.0%')}\n                                <ReferralLinkBonus>\n                                    {t('The referral bonus rate will go up occasionally in marketing campaigns.Keep an eye out for our announcement!')}\n                                </ReferralLinkBonus>\n                            </CardBody>\n                        </Box>\n                    </ReferralCard>\n                </Flex>\n                <ReferralCardLink id=\"top-traders-card\">\n                    <Box width=\"100%\">\n                        <NewCardHeader>\n                            <Heading color=\"textSubtle\" scale=\"md\">\n                                {t('Your Referral Link')}\n                            </Heading>\n                        </NewCardHeader>\n                        <CardBody>\n                            <ReferralLink>\n                                <StyledInternalLink to=\"https://gladiators.finance/?ref=jnsjnjdncjd8uhs87efmsjdmnjdend\">\n                                    {t('https://gladiators.finance/?ref=jnsjnjdncjd8uhs87efmsjdmnjdend')}\n                                </StyledInternalLink>\n                                <IconButton variant=\"text\" scale=\"sm\">\n                                    <CopyReferralLink account=\"https://gladiators.finance/?ref=jnsjnjdncjd8uhs87efmsjdmnjdend\" />\n                                </IconButton>\n                            </ReferralLink>\n                        </CardBody>\n                    </Box>\n                </ReferralCardLink>\n            </Page>\n        </>\n    )\n}\n\nexport default Referrals","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\n// An internal link from the react-router-dom library that is correctly styled\nconst StyledInternalLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\nexport default StyledInternalLink\n"],"sourceRoot":""}